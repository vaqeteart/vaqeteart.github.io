<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>QuietHeart&#39;s Site</title>
  
  <subtitle>Find the things you want.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://0.0.0.0:4000/"/>
  <updated>2019-09-18T09:55:19.000Z</updated>
  <id>http://0.0.0.0:4000/</id>
  
  <author>
    <name>Quiet Heart</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hello hexo</title>
    <link href="http://0.0.0.0:4000/2019/09/18/hello-hexo/"/>
    <id>http://0.0.0.0:4000/2019/09/18/hello-hexo/</id>
    <published>2019-09-18T09:55:19.000Z</published>
    <updated>2019-09-18T09:55:19.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
    
  </entry>
  
  <entry>
    <title>时间管理：3.解决问题——第一步，事务分类</title>
    <link href="http://0.0.0.0:4000/2019/04/30/timemanage_3_1_classification/"/>
    <id>http://0.0.0.0:4000/2019/04/30/timemanage_3_1_classification/</id>
    <published>2019-04-29T16:00:00.000Z</published>
    <updated>2019-09-11T08:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">  .title  { text-align: center;             margin-bottom: .2em; }  .subtitle { text-align: center;              font-size: medium;              font-weight: bold;              margin-top:0; }  .todo   { font-family: monospace; color: red; }  .done   { font-family: monospace; color: green; }  .priority { font-family: monospace; color: orange; }  .tag    { background-color: #eee; font-family: monospace;            padding: 2px; font-size: 80%; font-weight: normal; }  .timestamp { color: #bebebe; }  .timestamp-kwd { color: #5f9ea0; }  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }  .org-center { margin-left: auto; margin-right: auto; text-align: center; }  .underline { text-decoration: underline; }  #postamble p, #preamble p { font-size: 90%; margin: .2em; }  p.verse { margin-left: 3%; }  pre {    border: 1px solid #0c0;    box-shadow: 1px 1px 1px #0e0;    padding: 8pt;    font-family: italic monospace;    color: #C7EDCC;    background-color: #111111;    overflow: auto;    margin: 1.2em;  }  pre.src {    position: relative;    overflow: visible;    padding-top: 1.2em;  }  pre.src:before {    display: none;    position: absolute;    background-color: black;    top: -10px;    right: 10px;    padding: 3px;    border: 1px solid black;  }  pre.src:hover:before { display: inline;}  pre.src-sh:before    { content: 'sh'; }  pre.src-bash:before  { content: 'sh'; }  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }  pre.src-R:before     { content: 'R'; }  pre.src-perl:before  { content: 'Perl'; }  pre.src-java:before  { content: 'Java'; }  pre.src-sql:before   { content: 'SQL'; }  table { border-collapse:collapse; }  caption.t-above { caption-side: top; }  caption.t-bottom { caption-side: bottom; }  td, th { vertical-align:top;  }  th.org-right  { text-align: center;  }  th.org-left   { text-align: center;   }  th.org-center { text-align: center; }  td.org-right  { text-align: right;  }  td.org-left   { text-align: left;   }  td.org-center { text-align: center; }  dt { font-weight: bold; }  .footpara { display: inline; }  .footdef  { margin-bottom: 1em; }  .figure { padding: 1em; }  .figure p { text-align: center; }  .inlinetask {    padding: 10px;    border: 2px solid gray;    margin: 10px;    background: #ffffcc;  }  #org-div-home-and-up   { text-align: right; font-size: 70%; white-space: nowrap; }  .linenr { font-size: smaller }  .code-highlighted { background-color: #ffff00; }  .org-info-js_info-navigation { border-style: none; }  #org-info-js_console-label    { font-size: 10px; font-weight: bold; white-space: nowrap; }  .org-info-js_search-highlight    { background-color: #ffff00; color: #000000; font-weight: bold; }    code {        border:groove #555555;border-width:thin;        background-color: #111111;color: #C7EDCC;    }#table-of-contents {    font-size: 9pt;    position: fixed;    right: 10px;    top: 14em;    margin:0;    padding:0;    border-width:1px;    border-style:solid;    background: #000000;    -webkit-box-shadow: 0 0 1em #777777;    -moz-box-shadow: 0 0 1em #777777;    -webkit-border-bottom-left-radius: 5px;    -moz-border-radius-bottomleft: 5px;    text-align: right;    /* ensure doesn't flow off the screen when expanded */    max-height: 60%;    overflow: auto;     z-index: 200;}#table-of-contents h2 {    font-size: 9pt;    max-width: 8em;    font-weight: normal;    padding-left: 0.5em;    padding-top: 0.05em;    padding-bottom: 0.05em; }#table-of-contents ul {    margin-left: 14pt;     margin-bottom: 10pt;    padding: 0}#table-of-contents li {    padding: 0;    margin: 1px;    list-style: none;}#table-of-contents ul>:first-child {    color: blue;}#table-of-contents #text-table-of-contents {    display: none;    text-align: left;}#table-of-contents:hover #text-table-of-contents {    display: block;    padding: 0.5em;    margin-top: -1.5em; }</style><div id="table-of-contents"><h2>Table of Contents</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 空：发现问题——如何分类</a></li><li><a href="#orgheadline2">2. 雨：分析问题——分类策略</a><ul><li><a href="#orgheadline3">2.1. 确定基本策略</a></li><li><a href="#orgheadline4">2.2. 基于 “元” 的分类思想</a><ul><li><a href="#orgheadline5">2.2.1. 固定部分-积累/消耗</a><ul><li><a href="#orgheadline6">2.2.1.1. 积累性的-物质/非物质</a></li><li><a href="#orgheadline7">2.2.1.2. 消耗性的-分类名 <code>生活</code></a></li></ul></li><li><a href="#orgheadline8">2.2.2. 变化部分-分类名 <code>_</code></a></li></ul></li></ul></li><li><a href="#orgheadline9">3. 伞：解决问题——生成策略</a><ul><li><a href="#orgheadline10">3.1. 分类方案</a></li><li><a href="#orgheadline11">3.2. 使用方式</a><ul><li><a href="#orgheadline12">3.2.1. 确定大分类</a></li><li><a href="#orgheadline13">3.2.2. 确认子分类</a><ul><li><a href="#orgheadline14">3.2.2.1. 对于事业</a></li><li><a href="#orgheadline15">3.2.2.2. 对于进修</a></li><li><a href="#orgheadline16">3.2.2.3. 对于生活</a></li></ul></li><li><a href="#orgheadline17">3.2.3. 关于进一步的子分类</a></li></ul></li><li><a href="#orgheadline18">3.3. 举例</a><ul><li><a href="#orgheadline19">3.3.1. 电影</a></li><li><a href="#orgheadline20">3.3.2. 聚餐</a></li><li><a href="#orgheadline21">3.3.3. 图书馆</a></li><li><a href="#orgheadline22">3.3.4. 去药店</a></li><li><a href="#orgheadline23">3.3.5. 看病就医</a></li><li><a href="#orgheadline24">3.3.6. 学习英语</a></li><li><a href="#orgheadline25">3.3.7. 写作</a></li><li><a href="#orgheadline26">3.3.8. 尝试新工具</a></li><li><a href="#orgheadline27">3.3.9. 查找某个好用的软件</a></li><li><a href="#orgheadline28">3.3.10. 了解奇妙的灵修</a></li><li><a href="#orgheadline29">3.3.11. 参与优惠活动</a></li><li><a href="#orgheadline30">3.3.12. 抽奖</a></li><li><a href="#orgheadline31">3.3.13. 有偿调查报告</a></li><li><a href="#orgheadline32">3.3.14. 献血</a></li><li><a href="#orgheadline33">3.3.15. 义工</a></li><li><a href="#orgheadline34">3.3.16. 健康卫生</a></li><li><a href="#orgheadline35">3.3.17. 旅游</a></li><li><a href="#orgheadline36">3.3.18. 购物</a></li><li><a href="#orgheadline37">3.3.19. 外出</a></li><li><a href="#orgheadline38">3.3.20. 出行</a></li><li><a href="#orgheadline39">3.3.21. 中断</a></li><li><a href="#orgheadline40">3.3.22. 无所事事</a></li><li><a href="#orgheadline41">3.3.23. 发呆</a></li><li><a href="#orgheadline42">3.3.24. 状态切换</a></li><li><a href="#orgheadline43">3.3.25. 家务</a></li><li><a href="#orgheadline44">3.3.26. 微信电话</a></li><li><a href="#orgheadline45">3.3.27. 睡前</a></li><li><a href="#orgheadline46">3.3.28. 晨起</a></li><li><a href="#orgheadline47">3.3.29. 餐前</a></li><li><a href="#orgheadline48">3.3.30. 送宝宝上幼儿园</a></li><li><a href="#orgheadline49">3.3.31. 上班</a></li><li><a href="#orgheadline50">3.3.32. 到公司</a></li><li><a href="#orgheadline51">3.3.33. 午休后</a></li><li><a href="#orgheadline52">3.3.34. 撸羊毛</a></li><li><a href="#orgheadline53">3.3.35. 洗漱</a></li><li><a href="#orgheadline54">3.3.36. 杂务</a></li><li><a href="#orgheadline55">3.3.37. 查询信息</a></li><li><a href="#orgheadline56">3.3.38. 查询租房信息</a></li><li><a href="#orgheadline57">3.3.39. 调整时间</a></li><li><a href="#orgheadline58">3.3.40. 上网闲逛</a></li></ul></li></ul></li><li><a href="#orgheadline59">4. 其它</a><ul><li><a href="#orgheadline60">4.1. 整理进度</a></li><li><a href="#orgheadline61">4.2. 分类反思</a><ul><li><a href="#orgheadline62">4.2.1. 方法源于实践</a><ul><li><a href="#orgheadline63">4.2.1.1. 诞生实践的方法</a></li><li><a href="#orgheadline64">4.2.1.2. 用理论改进实践</a></li></ul></li><li><a href="#orgheadline65">4.2.2. 进一步探索</a><ul><li><a href="#orgheadline66">4.2.2.1. 分类的实质是什么</a></li><li><a href="#orgheadline67">4.2.2.2. 如何应对分类体系的不断</a></li></ul></li></ul></li><li><a href="#orgheadline68">4.3. 留给将来的自己</a></li></ul></li></ul></div></div><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><a id="ID-68527af1-bac0-4f8a-a138-cb47a20f9015"></a><span class="section-number-2">1</span> 空：发现问题——如何分类</h2><div class="outline-text-2" id="text-1"><p>在具体开始继续解决之前，我们先回顾一下之前的思路，我们是打算如何开始的呢？</p><p>&#x2013;初步的思路是：</p><ul class="org-ul"><li>先对日常每时每刻发生的事物进行记录；</li><li>再根据所记录内容确认时间的流逝情况；</li><li>最后结合实践探索有效的方式或者出路。</li></ul><p>这个方向不知是否正确，但至少应不会太错，然后我们开始考虑时间记录的问题，而记录的关键是分类。</p><p>但是，相信大多人也认同：每个人的思路是不同的，所以分类的方案也应如此。</p><p>即便这里最终给出了分类方案也并非绝对，因此要明确一点，这里并非只为给出一个分类的方案。</p><p>我觉得知其然、不如知其所以然，所以这里按照个人的思路，给出一个确定分类的过程，</p><p>结果并不重要，重点在于介绍每一个分类过程中，为什么这样分类。</p><p>授人以鱼、不如授人以渔，虽然这个部分仅仅是对分类方式的共享谈不上授人。</p><p>前面说的有点复杂，而且表达与理解方式又因人而异，这里再总结一下要表述的意思：</p><p>简单来说：</p><ul class="org-ul"><li><b>分类方案只是内容组织的策略，分类策略是确定分类方案的策略</b> ；</li><li><b>这里不是为确定分类方案，而是要确定分类策略，即确定组织内容策略的策略</b> 。</li></ul><p>进一步的酝酿如下。</p></div></div><div id="outline-container-orgheadline2" class="outline-2"><h2 id="orgheadline2"><a id="ID-3a366d26-6c94-49ac-935e-fde16af3f249"></a><span class="section-number-2">2</span> 雨：分析问题——分类策略</h2><div class="outline-text-2" id="text-2"></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">2.1</span> 确定基本策略</h3><div class="outline-text-3" id="text-2-1"><p>相信分类的问题对于大多人来说都是一个比较困扰的事情。</p><p>经过长时间的实践（一直在记录日常生活发生的事件）发现，根据按照如下的指导思想确定分类是一个不错的方法：</p><ul class="org-ul"><li>按照自己的生活状况、经历来分类，会更适合你自身；比如你的生活总是周旋于学习、工作、生活之间。</li><li>按照对立统一的二元思想完善分类，会保证考虑全面；比如所有的活动无外乎消耗、积累两者以及维持。</li><li>接受预料外事物的存在来改进分类，有助适应与进化；比如收集所有未知与缺陷，才有机会整理与改进。</li></ul><p>一个具体以我个人为例的直观解释（当然也有别的更好的思路），我认为：</p><ul class="org-ul"><li>首先，人都是要生活的，于是出现了 <code>生活</code> 这个分类；宏观上来看，这是对物质和非物质方面的消耗。</li><li>其次，生活基于现实（即收入），于是出现了 <code>事业</code> 这个分类；宏观上来看，主要是物质方面的积累。</li><li>再者，生活、事业的状态取决于能力，于是有了 <code>进修</code> 这个分类；宏观上来看，主要是非物质方面的积累。</li><li>最后，总是会出现意料之外或无法确定归属的事件，于是有了 <code>_</code> 这个分类。宏观上来看，这有助进化。</li></ul></div></div><div id="outline-container-orgheadline4" class="outline-3"><h3 id="orgheadline4"><a id="ID-0342cb44-c9a6-4c3b-b8dc-3700127b01e8"></a><span class="section-number-3">2.2</span> 基于 “元” 的分类思想</h3><div class="outline-text-3" id="text-2-2"><p>其实我们仔细思考不难发现，前面为大分类划分子分类，不但结合了现状，还借用了二元的思想（阴/阳、正/反、是/非、内/外等等），按照这样的方式，可以想象更进一步的子分类划分，应该也同样可以将“现状”和“二元”方式结合进行下去。这里的二元，比如：内、外。内：内因，如个人、自身、主动、自愿、针对性等；外：外因，如他人、周围、被动、被迫、通用性等。</p><p>我们可以将二元思想应用到分类的策略中，大致的思路是：不断的将事务用二元的思想分类，理论上无限层级分类，但是按照个人情况，分解到一定层级能够使用即可，最后一个层级就按需进行（结合自己的情况）不用一定用二元方式了。个人感觉，层次深度在2-3层即可，层级太多也不易管理。</p><p>当然为了降低层次深度，可以使用其它元数：三元(如高/中/低、上/中/下、过去/现在/未来等等)、四元（如东/南/西/北、衣/食/住/行）、五元（如金/木/水/火/土），等等均可，本质都是为了“平衡”与“全面”或“合适”。</p><p>分类的名称不是重点，重点是划分时的思想，名称一般反映该分类中典型的描述，可以随状况改变，但是划分的思想一般不会变化。</p><p>下面是具体实施的过程。</p><p>从“动/静”的角度来看，分类策略：是变化的（不同时间场景人的方式不同），又是相对不变的（某个阶段主要从事的事情固定）。所以，划分两个部分：</p></div><div id="outline-container-orgheadline5" class="outline-4"><h4 id="orgheadline5"><span class="section-number-4">2.2.1</span> 固定部分-积累/消耗</h4><div class="outline-text-4" id="text-2-2-1"><p>此部分是分类体系相对不变部分的根，是目前所能认识到的事物分类的模型，不对应具体分类名称。</p><p>注意：</p><pre class="example">在后续的持续划分中，每一个具有确定类名的分类下，用二元，或者其它元划分后，也类似 =_= 为该分类预留一个 =_分类名= 的分类。作用是，表示该子分类下未确定的事项堆积处（名字无所谓，只要是能表示是该 =分类名= 下尚未确认事项即可，名字也可以与 =分类名= 同名的子分类）。在有些具有层级结构的软件中（比如文件系统），也可以不用为 =分类名= 额外创建 =_分类名= 的子分类，而是直接将未确定的内容直接置于该 =分类名= 非任何子分类目录下，待日后处理（或者转移到合适的子分类，或者调整整个 =分类名= 分类策略）。不过在这里的描述中，我们假设事项只能添加在叶子分类中，即不能在非叶子分类（整个分类体系是一个树状的结构，顶端是根，最底层的我们称作叶子，中间的是枝干）添加事项，这一点不再后面提及。</pre><p>从“生产/消费”角度来看，该层次主要包括：积累型事物（如创造物质和精神财富），和消耗型事物（如享受生活）。所以划分两个子部分。</p></div><div id="outline-container-orgheadline6" class="outline-5"><h5 id="orgheadline6"><span class="section-number-5">2.2.1.1</span> 积累性的-物质/非物质</h5><div class="outline-text-5" id="text-2-2-1-1"><p>积累性的事物是基础，尽管一般我们都倾向于消耗，但是没有积累便没有消耗，所以必须积累。该层次不对应具体分类名。</p><p>从“物质/非物质”角度看，积累的事物：包含物质方面（如现实的收入，是外因），以及非物质方面（如处理事物的能力，是内因）。所以，划分两个子部分：</p></div><ol class="org-ol"><li><a id="orgheadline72"></a>物质方面-分类名 <code>事业</code><br><div class="outline-text-6" id="text-2-2-1-1-1"><p>此部分直接对应分类名 <code>事业</code> ， 一切从事导致有助于直接增加物质积累的活动被称作 <code>事业</code> 。</p><p>从“主动/被动”角度看，该层次又包含：被动从事的事物（如公司事务，是外因）;主动从事的事物（如个人创业，是内因）。</p><p>另外，此层次分类的子分类不细分，所以子分类相对复杂多变，会有些介于两者之间以及不确定的事物（折中）。</p><p>这样，该分类下有三个子分类的内容：</p></div><ol class="org-ol"><li><a id="orgheadline69"></a>被动接收-分类名 <code>工作</code><br><div class="outline-text-7" id="text-2-2-1-1-1-1"><p>比如公司的事物。</p></div></li><li><a id="orgheadline70"></a>中间状态-分类名 <code>职场</code><br><div class="outline-text-7" id="text-2-2-1-1-1-2"><p>比如寻求下一家公司的活动、参与某项有偿活动、整理简历等、了解行业动态、迫于生活以及也同时想要进行的外快/额外创收。</p></div></li><li><a id="orgheadline71"></a>主动从事-分类名 <code>创业</code><br><div class="outline-text-7" id="text-2-2-1-1-1-3"><p>比如开创自己的事业、从事喜好的项目等等。</p></div></li></ol></li><li><a id="orgheadline76"></a>非物质方面-分类名 <code>进修</code><br><div class="outline-text-6" id="text-2-2-1-1-2"><p>注：进修也是本人价值观的一个缩影，子类大致的情况：理论（对应永无止境-前进）、规整（对应雁过留痕-路过）、探索（对应探索发现-进化)</p><p>此部分直接对应分类名 <code>进修</code> ， 一切从事导致有助于直接增加非物质积累的活动被称作 <code>进修</code> 。</p><p>从“理论/实践”角度看，该层次又包含：知识经验的事物（如阅读记录，是外因）;行为猎奇的事物（如探索实践，是内因）。</p><p>另外，此层次分类的子分类不细分，所以则子分类相对复杂多变，有些介于两者间不确定的事物（如整理消化、计划安排、调整，做为折中平衡两者）。</p><p>这样，该分类下有三个子分类的内容：</p></div><ol class="org-ol"><li><a id="orgheadline73"></a>理论研究-分类名 <code>学习</code><br><div class="outline-text-7" id="text-2-2-1-1-2-1"><p>比如阅读、记录、模仿，偏重从已知的外界“静态”领域，通过积累输入获取知识、经验、技巧等能力，获取只是包含当前进修项目的主要活动（临时性学习/固定理论学习）。</p></div></li><li><a id="orgheadline74"></a>折中归整-分类名 <code>管理</code><br><div class="outline-text-7" id="text-2-2-1-1-2-2"><p>比如思考消化知识组织结构，归纳总结、整理资料、输出文档、计划规划、调整策略等，可巩固当前所有并保证当前进修活动方向不盲目。（整理消化组织/计划规划调整）</p></div></li><li><a id="orgheadline75"></a>实践创新-分类名 <code>探索</code><br><div class="outline-text-7" id="text-2-2-1-1-2-3"><p>比如实践、兴趣、及未知未确定领域的尝试与了解（了解确定了之后可能会转换成 <code>理论</code> 的学习），是进行当前主要进修活动之余拓宽自己的视野，增加选择、便于进化进修。（针对性学习/实践与兴趣）</p></div></li></ol></li></ol></div><div id="outline-container-orgheadline7" class="outline-5"><h5 id="orgheadline7"><span class="section-number-5">2.2.1.2</span> 消耗性的-分类名 <code>生活</code></h5><div class="outline-text-5" id="text-2-2-1-2"><p>此部分直接对应分类名 <code>生活</code> ， 一切从事导致直接物质和精神积累减少或利用到物质和精神积累的活动被称作 <code>生活</code> 。</p><p>注意：此分类，涉及的是我们生活当中的方方面面，因人而异且复杂多变。按照前面的思想，即：上面的层次二元划分，最后底层不用二元划分；会导致分层过多(尝试过使用 “作/息” 的方式划分，但是再往下会导致子分类层次很多)，所以这个分类稍微变通一下。</p><p>分类只做划分两层，并且两层都采用3元的思想进行，最底层可能会随着生活状态的变化，在后面的“其它”中引入额外的分类。</p><p>从生活消耗性质由必要到富足，即 “基本/必要/额外” 的角度来看，该分类包含：必要的活动（如作息规律等“自身先要满足”的必要消耗活动）；基本的活动（如健康、休息、办事等为了更好的处理好相关事项“适当”需要进行的基本消耗活动）；额外的活动（如娱乐、社交、家庭活动等“与周围相互自由和谐”的额外消耗活动，属于辅助、享受、挥霍、向往的事情）。</p><p>这样，该分类下有三个子分类的内容（子分类自上而下，消耗逐渐增多）：</p></div><ol class="org-ol"><li><a id="orgheadline80"></a>必要活动-分类名 <code>作息</code><br><div class="outline-text-6" id="text-2-2-1-2-1"><p>此部分直接对应分类名 <code>作息</code> ， 是生活中比较固定的、必要的、必须的，维持 <b>基本生活</b> 的作息性活动， 这里称作 <code>作息</code> 。</p><p>此层次分类的子分类不细分，所以则子分类相对复杂多变，目前从 “精神/清理/体力” 角度（通俗点说，吃喝拉撒洗睡相关）来看，主要包括以下三个子类。</p></div><ol class="org-ol"><li><a id="orgheadline77"></a>精神-分类名 <code>睡眠</code><br><div class="outline-text-7" id="text-2-2-1-2-1-1"><p>主要是可以睡着的（超过1.5小时）午休、睡眠，助于恢复精力。</p></div></li><li><a id="orgheadline78"></a>清理-分类名 <code>卫生</code><br><div class="outline-text-7" id="text-2-2-1-2-1-2"><p>比如：卫生间、洗漱等必要的清洁事项，助于身体健康。</p></div></li><li><a id="orgheadline79"></a>体力-分类名 <code>饮食</code><br><div class="outline-text-7" id="text-2-2-1-2-1-3"><p>主要是用餐，餐饮相关事项，补充体力和营养。</p></div></li></ol></li><li><a id="orgheadline84"></a>基本活动-分类名 <code>规律</code><br><div class="outline-text-6" id="text-2-2-1-2-2"><p>此部分直接对应分类名 <code>规律</code> ， 是生活中适当进行的、基本的、习惯性的，改善到 <b>小康生活</b> 而做的适当活动， 这里称作 <code>规律</code> 。</p><p>此层次分类的子分类不细分，所以则子分类相对复杂多变，目前从“身体/调节/活动”角度来看（通俗点说，保健居家事务相关），主要包括以下三个子类。</p></div><ol class="org-ol"><li><a id="orgheadline81"></a>身体-分类名 <code>健康</code><br><div class="outline-text-7" id="text-2-2-1-2-2-1"><p>保证自身正常的活动，如：医疗、锻炼等等。</p></div></li><li><a id="orgheadline82"></a>调节-分类名 <code>休息</code><br><div class="outline-text-7" id="text-2-2-1-2-2-2"><p>优化自身状态的活动，比如，1.5小时以内的午休、小憩、发呆、调整状态、有助于恢复些许精力。</p></div></li><li><a id="orgheadline83"></a>活动-分类名 <code>事务</code><br><div class="outline-text-7" id="text-2-2-1-2-2-3"><p>一些相关生活中需要处理和进行的事项，如：办事、查阅信息（办事需要）、一些事务处理；租房、物业、和所处环境相关的事情，内容较多、消耗较高。</p></div></li></ol></li><li><a id="orgheadline88"></a>额外活动-分类名 <code>仪式</code><br><div class="outline-text-6" id="text-2-2-1-2-3"><p>此部分直接对应分类名 <code>仪式</code> ， 是生活中相对随意的、享受的、额外的，为了体现向往的 <b>富足生活</b> 质量相对奢侈的活动， 这里称作 <code>仪式</code> 。</p><p>此层次分类的子分类不细分，所以则子分类相对复杂多变，目前从“个人/亲属/环境”的角度来看（通俗点说娱乐亲友交流相关），主要包括以下三个子类。</p></div><ol class="org-ol"><li><a id="orgheadline85"></a>个人-分类名 <code>休闲</code><br><div class="outline-text-7" id="text-2-2-1-2-3-1"><p>如：游戏、上网、 新闻资讯、无所事事?</p></div></li><li><a id="orgheadline86"></a>亲属-分类名 <code>家庭</code><br><div class="outline-text-7" id="text-2-2-1-2-3-2"><p>如：亲属串门、家庭活动、陪家人、家务（清洁整理、洗完拖地、洗衣收纳、做饭、餐后等等）</p></div></li><li><a id="orgheadline87"></a>环境-分类名 <code>社交</code><br><div class="outline-text-7" id="text-2-2-1-2-3-3"><p>如：访友、人情往来、公益活动、聚会、活动</p></div></li></ol></li></ol></div></div><div id="outline-container-orgheadline8" class="outline-4"><h4 id="orgheadline8"><span class="section-number-4">2.2.2</span> 变化部分-分类名 <code>_</code></h4><div class="outline-text-4" id="text-2-2-2"><p>此部分存放所有不确定的内容，直接对应分类名 <code>_</code> ， 名称可以随意，合适就行，主要用于进化分类体系。</p><p>因为不再继续对变化的部分细分，所以这个分类下的内容不采用二元思想细分。</p><p>首先主要功能是：</p><ul class="org-ul"><li>收集不确定分类归属的内容；</li><li>或者不属于任何现有分类归属的内容；</li><li>或者其它未知功能</li></ul><p>到一定时间之后：</p><ul class="org-ul"><li>将其中不确定分类归属的内容确定其分类归属，整理至合适的分类；</li><li>根据不属于任何分类归属的内容情况，更新固定分类体系（如孵化新分类），使其进化、涵盖到所有的内容。</li></ul></div></div></div></div><div id="outline-container-orgheadline9" class="outline-2"><h2 id="orgheadline9"><a id="ID-038ee913-243f-4903-af6d-4847c381bf61"></a><span class="section-number-2">3</span> 伞：解决问题——生成策略</h2><div class="outline-text-2" id="text-3"></div><div id="outline-container-orgheadline10" class="outline-3"><h3 id="orgheadline10"><span class="section-number-3">3.1</span> 分类方案</h3><div class="outline-text-3" id="text-3-1"><p>经过上述分析，我们得到如下分类方案（使用标号来标记它们的属性结构）:</p><ul class="org-ul"><li>0-_（未知） <b>_</b></li><li>1-（固定）</li><li>1.1-（积累）</li><li>1.1.1-（物质） <b>事业</b></li><li>1.1.1.0-（未定） <b>_事业</b></li><li>1.1.1.1-（被动） <b>工作</b></li><li>1.1.1.2-（折中） <b>职场</b></li><li>1.1.1.3-（主动） <b>创业</b></li><li>1.1.2-（非物质） <b>进修</b></li><li>1.1.2.0-（未定） <b>_进修</b></li><li>1.1.2.1-（理论） <b>学习</b></li><li>1.1.2.2-（归整） <b>管理</b></li><li>1.1.2.3-（实践） <b>探索</b></li><li>1.2-（消耗） <b>生活</b></li><li>1.2.0-（未定） <b>_生活</b></li><li>1.2.1-（必要） <b>作息</b></li><li>1.2.1.0-（未定） <b>_作息</b></li><li>1.2.1.1-（精神） <b>睡眠</b></li><li>1.2.1.2-（清理） <b>卫生</b></li><li>1.2.1.2-（体力） <b>饮食</b></li><li>1.2.2-（基本） <b>规律</b></li><li>1.2.2.0-（未定） <b>_规律</b></li><li>1.2.2.1-（身体） <b>健康</b></li><li>1.2.2.2-（调节） <b>休息</b></li><li>1.2.2.3-（活动） <b>事务</b></li><li>1.2.3-（额外） <b>仪式</b></li><li>1.2.3.0-（未定） <b>_仪式</b></li><li>1.2.3.1-（个人） <b>休闲</b></li><li>1.2.3.2-（亲属） <b>家庭</b></li><li>1.2.3.3-（环境） <b>社交</b></li></ul><p>上述分类中，</p><ul class="org-ul"><li>总共有7个用于分类改进的不确定分类（包含 <code>_</code> 字符），15个确定的分类，总共22个分类（注意，这里指的是叶子分类，因为分支分类不存放事项）。</li><li>括号中的是分类的思想这个是基本的，而分类的名称却因人而异只为直观便于理解。</li><li>如果某阶段不适合了，可以考虑变化分类名称，决定分类体系的思想一般变动不大。</li></ul><p>如果有比较不错的软件，可以将这个分类方案，可以设置到一些比较好用的时间记录工具中，比如 <code>aTimeLogger</code> 。这里就不贴图了。</p></div></div><div id="outline-container-orgheadline11" class="outline-3"><h3 id="orgheadline11"><span class="section-number-3">3.2</span> 使用方式</h3><div class="outline-text-3" id="text-3-2"><p>有了上面的分类方案，在记录的时候就不会盲目，而且在从事任何活动的时候，心中会对此活动有一个比较清晰的认识。</p><p>当你对自己从事的活动有较清晰的认识的前提下，这会有助于你主动对这些活动做时间方面的分析、调整、和管理。</p><p>关于如何确定我们从事的活动是属于什么分类，这里给出一个应用该分类体系的思路，其实最好的表述是用图示。</p><p>考虑到有时，我们会因为某些因素无法使用图示，所以这里给出具体解释，我们可以凭借自己的理解绘制出适合自己的流程图。</p><p>具体过程如下：</p></div><div id="outline-container-orgheadline12" class="outline-4"><h4 id="orgheadline12"><span class="section-number-4">3.2.1</span> 确定大分类</h4><div class="outline-text-4" id="text-3-2-1"><ul class="org-ul"><li>如果是用于物质的积累（外因），则属于事业；</li><li>如果用于非物质的积累（内因），则属于进修；</li><li>如果用于消耗的（目标），则属于生活；</li><li>如果是在范围之外（不确定），则分类暂定为 <b>_</b> 。</li></ul><p>对物质和非物质，可以这样理解</p><ul class="org-ul"><li>物质：可以是如物品、成果（虚拟或者实际）、是存在周期较短，或者可以很明显消失的事物，等等；</li><li>非物质：如知识、方法、经验、原创是存在比较久都并且有效的事物，比如思想中，等等。</li></ul></div></div><div id="outline-container-orgheadline13" class="outline-4"><h4 id="orgheadline13"><span class="section-number-4">3.2.2</span> 确认子分类</h4><div class="outline-text-4" id="text-3-2-2"></div><div id="outline-container-orgheadline14" class="outline-5"><h5 id="orgheadline14"><span class="section-number-5">3.2.2.1</span> 对于事业</h5><div class="outline-text-5" id="text-3-2-2-1"><ul class="org-ul"><li>如果是被动的不得不做的（外因），如公司事务、公司项目等，则分类定为 <b>工作</b> ；</li><li>如果是主动的愿意做的（内因），如自己的兴趣、额外收入活动、开创的事业等，则分类定为 <b>创业</b> ；</li><li>如果是介于两者之间的（折中），如求职、一些调查竞选等，则分类定为 <b>职场</b> ；</li><li>最后，如果实在不确定，那分类暂定为 <b>_工作</b> 。</li></ul></div></div><div id="outline-container-orgheadline15" class="outline-5"><h5 id="orgheadline15"><span class="section-number-5">3.2.2.2</span> 对于进修</h5><div class="outline-text-5" id="text-3-2-2-2"><ul class="org-ul"><li>如果是理论研究方面（外因），如阅读、练习、笔记等，则分类定为 <b>学习</b> ；</li><li>如果是实践创新方面（内因），如写作、实践、实验等，则分类定为 <b>探索</b> ;</li><li>如果是介于两者之间（折中），如调整状态、管理资料、整理资料、计划规划等，则分类定为 <b>管理</b> ；</li><li>最后，如果实在不确定，那分类暂定为 <b>_进修</b> 。</li></ul></div></div><div id="outline-container-orgheadline16" class="outline-5"><h5 id="orgheadline16"><span class="section-number-5">3.2.2.3</span> 对于生活</h5><div class="outline-text-5" id="text-3-2-2-3"><ul class="org-ul"><li>如果是必要的活动（维持基本生活），比如需要恢复体力、精力、以及必须去做以维持基本生活的等，则分类属于 <b>作息</b> ；</li><li>如果是基本的活动（迈向小康生活），比如必要准备事项、不必须但需认真对待可以让生活更好的等，则分类属于 <b>规律</b> ；</li><li>如果是额外的活动（向往富足生活），比如娱乐、与人旅游、是生活已经相对富足享受性质的奢侈等，则分类属于 <b>仪式</b> ；</li><li>最后，如果实在不确定，那分类暂定为 <b>_生活</b> 。</li></ul></div><ol class="org-ol"><li><a id="orgheadline92"></a>对生活进一步的子分类<br><ol class="org-ol"><li><a id="orgheadline89"></a>对于作息<br><div class="outline-text-7" id="text-3-2-2-3-1-1"><ul class="org-ul"><li>如果是恢复精神的活动（减少消耗），主要是超过1个睡眠周期（一般1.5小时）的睡觉，则分类定为 <b>睡眠</b> ；</li><li>如果是补给身体的活动（维持消耗），主要是体力上、营养的补充，则分类定为 <b>饮食</b> ;</li><li>如果是介于两者间的清理（基本消耗），例如卫生洗漱等保证基本的仪态，则分类定为 <b>卫生</b> ;</li><li>如果实在不确定，比如一些生活上有助恢复消耗，或在一些情况下必须去做的事情，那分类暂定为 <b>_作息</b> 。</li></ul></div></li><li><a id="orgheadline90"></a>对于规律<br><div class="outline-text-7" id="text-3-2-2-3-1-2"><ul class="org-ul"><li>如果是和身体相关（消耗的基础），例如身体健康、医疗、洗漱、卫生等直接作用身体的事项，则分类定为 <b>保健</b> ；</li><li>如果是和调节相关（消耗的优化），例如小憩、发呆等短暂的精力体力恢复，则分类定为 <b>休息</b> ;</li><li>如果是和活动相关（消耗的效率），例如居家琐事、事务办理等需要进行和办理的事项，则分类定为 <b>事务</b> ；</li><li>如果实在不确定，比如一些生活上为更好的完成某事，或基本是要做但并不是必须要做的事情，那分类暂定为 <b>_规律</b> 。</li></ul></div></li><li><a id="orgheadline91"></a>对于仪式<br><div class="outline-text-7" id="text-3-2-2-3-1-3"><ul class="org-ul"><li>如果是和个人相关（挥霍的消耗），例如游戏、小说、电影、上网等的个人喜好的活动，则分类定为 <b>休闲</b> ；</li><li>如果是和亲属相关（情愿的消耗），例如家庭旅游、购物、亲子活动等改进亲情的活动，则分类定为 <b>家庭</b> ；</li><li>如果是和周边环境相关（有用的消耗），例如朋友聚餐、访友、聊天等增进社会交际的活动，则分类定为 <b>社交</b> ；</li><li>如果实在不确定，又不是必须或者基本要做的只是体现一些优越的状态的活动等等，那就将分类暂定为 <b>_仪式</b> 。</li></ul></div></li></ol></li></ol></div></div><div id="outline-container-orgheadline17" class="outline-4"><h4 id="orgheadline17"><span class="section-number-4">3.2.3</span> 关于进一步的子分类</h4><div class="outline-text-4" id="text-3-2-3"><p>为避免层次太多，对于进修和事业，只用2级分类，没有再对子分类的子类继续划分了，生活中的各子分类也如此处理。可以在后面的时间分配中，详细了解。</p><p>比如进修-学习，这个子分类：</p><ul class="org-ul"><li>如果是被迫的（外因），包括固定理论、因状况导致的暂时性学习（如查询）等；</li><li>如果是主动的（内因），包括针对性学习、实践学习等。</li></ul><p>其余的子分类的再次划分类似类似。</p><p>实在需要对子分类的内容区分，对其备注即可。日后统计具体时间的话，可以根据备注搜索并统计。</p><p>如果想专门统计某特定分类下的活动的话，那么就给备注添加一些特殊的格式规则，便于搜索统计。</p></div></div></div><div id="outline-container-orgheadline18" class="outline-3"><h3 id="orgheadline18"><span class="section-number-3">3.3</span> 举例</h3><div class="outline-text-3" id="text-3-3"><p>分类确定之后，有些分类名称与实际内容不是特别对应的，可以添加备注来更详细一些注释，注释就是具体描述进行的是什么活动。</p><p>实际中，我们进行一项活动的时候，都是先有这个活动的描述，然后记录的时候，确定将这个描述放在哪个分类中。</p><p>若没有特殊情况，你设置了没有意义的活动描述，想要考验这个分类体系的话，那我们只能将它归为 <b>_</b> 分类。这个分类体系就是为了实用，并且便于调整而设置的，而非理想与测试的目的。其他目的，只能归类为未知的进化（即 <b>_</b> ）</p><p>下面是一些例子：</p></div><div id="outline-container-orgheadline19" class="outline-4"><h4 id="orgheadline19"><span class="section-number-4">3.3.1</span> 电影</h4><div class="outline-text-4" id="text-3-3-1"><p>首先, 是消耗性的活动——生活；</p><p>然后, 是额外的消耗（可有，可无，生活富足的时候可以有）——仪式；</p><p>最后，视“个人/亲属/圈子”情况，可以是 <b>休闲</b>, <b>家庭</b>, <b>社交</b> 分类； 甚至不确定的化属于 <b>_仪式</b> 分类。</p></div></div><div id="outline-container-orgheadline20" class="outline-4"><h4 id="orgheadline20"><span class="section-number-4">3.3.2</span> 聚餐</h4><div class="outline-text-4" id="text-3-3-2"><p>理解为朋友同事的聚餐游玩。</p><p>首先, 是消耗性的活动——生活；</p><p>然后, 是额外的消耗（可有，可无，生活富足的时候可以有）——仪式；</p><p>最后，由于与人交际，是 <b>社交</b> 分类。</p></div></div><div id="outline-container-orgheadline21" class="outline-4"><h4 id="orgheadline21"><span class="section-number-4">3.3.3</span> 图书馆</h4><div class="outline-text-4" id="text-3-3-3"><p>一般理解为看书。</p><p>首先，它属于积累性的事情，因为这样的活动，你是获取了新的知识——进修；</p><p>其次，这样的积累活动是从外界获取已有的只是到自己身上，应该归为 <b>学习</b> 。</p></div></div><div id="outline-container-orgheadline22" class="outline-4"><h4 id="orgheadline22"><span class="section-number-4">3.3.4</span> 去药店</h4><div class="outline-text-4" id="text-3-3-4"><p>首先, 是消耗性的活动（是花钱的）——生活；</p><p>然后, 范畴根据性质是生活基本消耗——规律；</p><p>最后，是有关身体方面的，应该归为 <b>健康</b> 。</p></div></div><div id="outline-container-orgheadline23" class="outline-4"><h4 id="orgheadline23"><span class="section-number-4">3.3.5</span> 看病就医</h4><div class="outline-text-4" id="text-3-3-5"><p>这个和去药店一样，是有关身体方面的，应该归为 <b>健康</b> 。</p></div></div><div id="outline-container-orgheadline24" class="outline-4"><h4 id="orgheadline24"><span class="section-number-4">3.3.6</span> 学习英语</h4><div class="outline-text-4" id="text-3-3-6"><p>首先，它属于积累性的事情，因为这样的活动，明显对你的提升有所帮助——进修；</p><p>其次，英语是一门确定的学科，是已有的学科，这样的积累活动是从外界获取已有的只是到自己身上，应该归为 <b>学习</b> 。</p></div></div><div id="outline-container-orgheadline25" class="outline-4"><h4 id="orgheadline25"><span class="section-number-4">3.3.7</span> 写作</h4><div class="outline-text-4" id="text-3-3-7"><p>这里，如果是写博客那么明显是分享性质而非创作的一个消耗活动，但这里假设的意思是创作新论文、或者著作等等。</p><p>首先，它属于积累性的事情，因为这样的活动，你是创造了新的知识，不仅对于自己，而且是别人——进修；</p><p>其次，这个活动是你主动进行的，是在有了一定知识经验的积累上，生成了一种质变、进化，创造了新的知识（有可能是新兴的），所以归类为 <b>探索</b> 。</p></div></div><div id="outline-container-orgheadline26" class="outline-4"><h4 id="orgheadline26"><span class="section-number-4">3.3.8</span> 尝试新工具</h4><div class="outline-text-4" id="text-3-3-8"><p>这里，因为重在是 “尝试”， 所以正常人的理解就是实践、探索性质的。</p><p>首先，它属于积累性的事情，因为了解这样的事物，你是想有所收获的，收获个人的经验、或者至少知道了一门好用的工具等等——进修；</p><p>其次，在确定有专门的知识可参考去了解这个新工具前，只是通过上网查询，知道它是什么，或尝试怎么使用，这是一种猎奇的新鲜的心理，归为 <b>探索</b> 。</p></div></div><div id="outline-container-orgheadline27" class="outline-4"><h4 id="orgheadline27"><span class="section-number-4">3.3.9</span> 查找某个好用的软件</h4><div class="outline-text-4" id="text-3-3-9"><p>与尝试新工具一样，归为 <b>探索</b> 。</p></div></div><div id="outline-container-orgheadline28" class="outline-4"><h4 id="orgheadline28"><span class="section-number-4">3.3.10</span> 了解奇妙的灵修</h4><div class="outline-text-4" id="text-3-3-10"><p>首先，它属于积累性的事情，因为了解这样的事物，你是想有所收获的，收获个人的经验、调节的能力等等——进修；</p><p>其次：</p><p>如果它可能是属于你处于猎奇的心理，对位置领域的一种探新（单纯的了解什么是灵修，这个几乎没有科学根据的事物），那就归为 <b>探索</b>;</p><p>如果你处于一个非常沮丧的状态，想通过这样一个方式，来舒缓自己的压力，这就属于调节状态的范畴，那就归为 <b>管理</b>;</p><p>如果真的有相应的比较著名的体系的书籍（如心理学），你用它来获取知识，那就归为 <b>学习</b> 。</p></div></div><div id="outline-container-orgheadline29" class="outline-4"><h4 id="orgheadline29"><span class="section-number-4">3.3.11</span> 参与优惠活动</h4><div class="outline-text-4" id="text-3-3-11"><p>理解成一些商家促销或者公益性的活动。</p><p>首先，它属于消耗性（生活）的事情，它们背后的目的更多是为了举办方获利，你即使获得了表面的小利也消耗了自己的精力转化为他人无形的利益——生活；</p><p>其次，它是额外的消耗（休闲性），完全可以不进行，不是必要的活动——仪式；</p><p>视情况（个人/亲属/圈子）分别属于 <b>休闲/家庭/社交</b> 分类，</p><p>如果不确定，则属于未定的，是 <b>_仪式</b> 分类。</p><p>注意：要将这样的活动与真正的积累活动区分开，积累活动是纯粹的为自己积累知识或者财富，即使没有达到，但目标是如此；而这样的活动，除非是为了专门参与这样的活动增长经验的目的（归为 <b>进修-探索</b> ），否则即使获得了短期的利益，但你的目的只是占小便宜，并没有获得什么（即使你中了500万，实质也不变）。</p></div></div><div id="outline-container-orgheadline30" class="outline-4"><h4 id="orgheadline30"><span class="section-number-4">3.3.12</span> 抽奖</h4><div class="outline-text-4" id="text-3-3-12"><p>首先，它属于消耗类的事情，因为它不是确定能一定获取收入，完全凭运气和随机参与的一项看似有所收益实则更多会被消费的活动——生活；</p><p>其次，它是额外的消耗（休闲性），完全可以不进行，不是必要的活动——仪式；</p><p>最后，是个人参与的娱乐性质活动，所以属于 <b>休闲</b> 分类。</p></div></div><div id="outline-container-orgheadline31" class="outline-4"><h4 id="orgheadline31"><span class="section-number-4">3.3.13</span> 有偿调查报告</h4><div class="outline-text-4" id="text-3-3-13"><p>首先，它属于积累性活动，为了物质（钱财）上的积累——事业；</p><p>其次，它不算是被动的事业，</p><p>如果你认为也不算主动的创业，归结为折中的 <b>职场</b> 分类；</p><p>如果你认为是主动的外快性质，就归为 <b>创业</b> 分类；</p><p>实在不确定就视为 <b>_事业</b> （即，不管是哪个子分类，它至少是属于 <b>事业</b> 分类的）。</p></div></div><div id="outline-container-orgheadline32" class="outline-4"><h4 id="orgheadline32"><span class="section-number-4">3.3.14</span> 献血</h4><div class="outline-text-4" id="text-3-3-14"><p>首先，它是一个无偿的活动，属于消耗类——生活；</p><p>再次，它是额外的消耗（你首先有富足的资源，才能奉献）——仪式；</p><p>最后，是公益性质，所以属于 <b>社交</b> 分类。</p></div></div><div id="outline-container-orgheadline33" class="outline-4"><h4 id="orgheadline33"><span class="section-number-4">3.3.15</span> 义工</h4><div class="outline-text-4" id="text-3-3-15"><p>首先，它是一个无偿的活动，属于消耗类——生活；</p><p>再次，它是额外的消耗（你首先有富足的资源，才能奉献）——仪式；</p><p>最后，它是公益性质，不是个人、家庭方面的事情，所以属于 <b>社交</b> 分类。</p><p>当然如果是有偿的，属于积累性活动，为了物质（钱财）上的积累（事业），算是主动从事的外快，所以属于 <b>创业</b> 分类。</p></div></div><div id="outline-container-orgheadline34" class="outline-4"><h4 id="orgheadline34"><span class="section-number-4">3.3.16</span> 健康卫生</h4><div class="outline-text-4" id="text-3-3-16"><p>名字上直接就可以对应到 <b>健康</b> 分类 或 <b>卫生</b> 分类。</p></div></div><div id="outline-container-orgheadline35" class="outline-4"><h4 id="orgheadline35"><span class="section-number-4">3.3.17</span> 旅游</h4><div class="outline-text-4" id="text-3-3-17"><p>首先, 是消耗性的活动——生活；</p><p>然后, 是额外的消耗（可有，可无，生活富足的时候可以有）——仪式；</p><p>最后，视“个人/亲属/圈子”情况，可以是 <b>休闲</b>, <b>家庭</b>, <b>社交</b> 分类； 甚至不确定的化属于 <b>_仪式</b> 分类。</p></div></div><div id="outline-container-orgheadline36" class="outline-4"><h4 id="orgheadline36"><span class="section-number-4">3.3.18</span> 购物</h4><div class="outline-text-4" id="text-3-3-18"><p>首先, 是消耗性的活动（购物是花钱的）——生活；</p><p>然后, 范畴根据性质是额外的消耗（如休闲场所的消费）——仪式，或者生活基本消耗（如柴米油盐）——规律；</p><p>最后，对于仪式，视“个人/亲属/环境”情况，分别是 <b>休闲</b>, <b>家庭</b>, <b>社交</b> 分类； 对于规律，可以是 <b>健康</b> (医院), <b>事务</b> (超市网购、办理公务)</p><p>不确定的话就不细分，直接属于 <b>_仪式</b> 或者 <b>_规律</b>, 甚至 <b>_生活</b> 分类。</p></div></div><div id="outline-container-orgheadline37" class="outline-4"><h4 id="orgheadline37"><span class="section-number-4">3.3.19</span> 外出</h4><div class="outline-text-4" id="text-3-3-19"><p>主要是指路上、以及外出活动。</p><p>首先它是消耗性的活动——生活</p><p>其次，视情况所属范畴可能是属于必要活动——规律，或者额外活动——仪式；</p><p>最后，在进一步视前面给出的子分类情况划分，可能属于 <b>健康*(比如看病的路上，或者锻炼), *事务</b> (比如去租房签约路上、办事情缴纳社保等), <b>休闲</b> （比如娱乐）, <b>家庭</b> （比如家庭旅游）, <b>社交</b> （比如公司组织的旅游、聚餐）。</p><p>如果不想详细划分了就属于 <b>_仪式</b>, <b>_休闲</b>, 日后再仔细思考。</p><p>另外，也可能是积累性质（比如出差），这时应当属于 <b>工作</b>, 或者个人事业定为 <b>创业</b>, 求职属于 <b>职场</b>, 实在没有确定的就是 <b>事业</b> ， 具体需备注。</p><p>其实若没有特殊情况，你可以设置了这样没有意义的活动名称，想要考验这个分类体系的话，那我们只能将它归为 <b>_</b> 分类。这个分类体系就是为了实用，并且便于调整而设置的，而非理想与测试的目的。其他目的，只能归类为未知的进化（即 <b>_</b> ）</p></div></div><div id="outline-container-orgheadline38" class="outline-4"><h4 id="orgheadline38"><span class="section-number-4">3.3.20</span> 出行</h4><div class="outline-text-4" id="text-3-3-20"><p>同前面 <code>外出</code> 。</p></div></div><div id="outline-container-orgheadline39" class="outline-4"><h4 id="orgheadline39"><span class="section-number-4">3.3.21</span> 中断</h4><div class="outline-text-4" id="text-3-3-21"><p>同前面 <code>外出</code> , 这个活动意义不明朗（是由于处理事务中断？还是聊天游戏？还是工作中的事情？）所以视情况而定，实在不行就归为未知的 <b>_</b></p></div></div><div id="outline-container-orgheadline40" class="outline-4"><h4 id="orgheadline40"><span class="section-number-4">3.3.22</span> 无所事事</h4><div class="outline-text-4" id="text-3-3-22"><p>主要是平时，发呆、无聊、无事可做。</p><p>首先，它属于消耗的事情（什么也不做，必然不是积累性质）——生活；</p><p>其次，是额外消耗（人不应当有无所事事的时候，无所事事并不一定有助于恢复精力调整状态，应该是对自己的一种放纵）——仪式；</p><p>最后，看这个无所事事，是自己发呆、上网？还是和身边的亲人闲聊、还是与身边朋友同事等的闲聊，等等都无法确定的话，就定为 <b>_仪式</b> 。</p></div></div><div id="outline-container-orgheadline41" class="outline-4"><h4 id="orgheadline41"><span class="section-number-4">3.3.23</span> 发呆</h4><div class="outline-text-4" id="text-3-3-23"><p>同前面的无所事事，一般而言是自己的状态定为 <b>休闲</b> 。</p></div></div><div id="outline-container-orgheadline42" class="outline-4"><h4 id="orgheadline42"><span class="section-number-4">3.3.24</span> 状态切换</h4><div class="outline-text-4" id="text-3-3-24"><p>主要是做一件事情之前，将状态调整成做这个事情的状态以便于更好的完成此事。</p><p>首先，是属于消耗类的活动（显然它并会积累物质精神财富）——生活；</p><p>其次，是基本的消耗（任何人做事情总是有切换不同状态的时候，无法避免）——规律；</p><p>最后，它其实是具有恢复的性质（调整/恢复自己的状态、精力），所以属于 <b>休息</b> 。</p></div></div><div id="outline-container-orgheadline43" class="outline-4"><h4 id="orgheadline43"><span class="section-number-4">3.3.25</span> 家务</h4><div class="outline-text-4" id="text-3-3-25"><p>理解成家中的事物，清洁整理、洗完拖地、洗衣收纳、做饭、餐后等等。</p><p>首先属于消耗性质（因为它明显不是积累性，不是收获性质）——生活；</p><p>其次，它属于额外的活动（不像吃饭睡觉那么必要，也不是所有人都要做家务）——仪式；</p><p>再者，因为它不是个人的事情，也不是对外的社交，是家中的事情，所以定为 <b>家庭</b> 。</p></div></div><div id="outline-container-orgheadline44" class="outline-4"><h4 id="orgheadline44"><span class="section-number-4">3.3.26</span> 微信电话</h4><div class="outline-text-4" id="text-3-3-26"><p>意义同样不是特别的明朗，可以是打电话、发微信，也可能是办理事情。上网查询，或者和人聊天。</p><p>一般而言，是与人聊天，属于生活中额外的消耗， 属于 <b>社交</b> ；</p><p>如果单单说这个活动，由于意义不明朗，或者时候整理的时候忘记了这个活动是做什么的，那只能归为 <b>_</b> 。</p></div></div><div id="outline-container-orgheadline45" class="outline-4"><h4 id="orgheadline45"><span class="section-number-4">3.3.27</span> 睡前</h4><div class="outline-text-4" id="text-3-3-27"><p>理解成睡觉前的活动，比如上网刷刷微博，或者清理一下被褥等。</p><p>首先，它属于消耗性质(因为它明显不是积累性的，是没有收获的活动)——生活；</p><p>其次，它是额外的活动(不像吃饭睡觉那么必要也不是每个人睡觉前都经历的过程)——仪式；</p><p>再者，如果是上网什么的，就定为 <b>休闲</b> ; 如果其它的子分类都不太符合，那么就当作是 <b>_仪式</b> 即可。</p></div></div><div id="outline-container-orgheadline46" class="outline-4"><h4 id="orgheadline46"><span class="section-number-4">3.3.28</span> 晨起</h4><div class="outline-text-4" id="text-3-3-28"><p>理解成起床前的活动，比如懒床，或者清醒一会。</p><p>首先，它属于消耗性质(因为它明显不是积累性的，是没有收获的活动)——生活；</p><p>其次，它是额外的活动(不像吃饭睡觉那么必要也不是每个人起床前都经历的过程)——仪式；</p><p>再者，再看下面的子分类都不太符合，那么就当作是 <b>_仪式</b> 即可。</p></div></div><div id="outline-container-orgheadline47" class="outline-4"><h4 id="orgheadline47"><span class="section-number-4">3.3.29</span> 餐前</h4><div class="outline-text-4" id="text-3-3-29"><p>就是只吃饭之前的活动，为了准备好吃饭的事项，比如做饭，或者烧水，或者其它。</p><p>首先，它属于消耗性质(因为它明显不是积累性的，是没有收获的活动)——生活；</p><p>其次，它属于基本消耗（因为吃饭之前准备工作都是可选的，比如你可以不做饭点外卖，或者反之不影响你吃饭）——规律；</p><p>再者，如果是做饭，那明显是居家性质的家务，所以定为 *事务*；</p><p>最后，如果是其它的事情，至少那也是基本消耗性质，不确定其中具体的子分类，就直接放置为 <b>_规律</b> 。</p><p>另外注意，如果是餐前的非基本活动，比如祈祷，这就不是 <b>_规律</b>, 而是 <b>_仪式</b> 了。</p></div></div><div id="outline-container-orgheadline48" class="outline-4"><h4 id="orgheadline48"><span class="section-number-4">3.3.30</span> 送宝宝上幼儿园</h4><div class="outline-text-4" id="text-3-3-30"><p>首先，它属于消耗性质(因为它明显不是积累性的，是没有收获的活动)——生活；</p><p>再者，它是属于基本的消耗（因为虽然它不影响生活是否可以继续，但是小孩子是一定要上学的，上学就要送她，太小了）——规律；</p><p>然后，仔细检查暂时没有进一步合适的子分类，保险起见，所以定为： <b>_规律</b> 。</p></div></div><div id="outline-container-orgheadline49" class="outline-4"><h4 id="orgheadline49"><span class="section-number-4">3.3.31</span> 上班</h4><div class="outline-text-4" id="text-3-3-31"><p>这里主要指的是每天上班的路上，通勤的时候。</p><p>首先，它属于消耗性质(因为它明显不是积累性的，是没有收获的活动)——生活；</p><p>再者，它是属于基本的消耗（因为没有它你能活，但是你却到达不了公司，虽然它本身不影响你工作但是你想工作之前肯定少不了它）——规律；</p><p>然后，仔细检查暂时没有进一步合适的子分类，保险起见，所以定为： <b>_规律</b> 。</p></div></div><div id="outline-container-orgheadline50" class="outline-4"><h4 id="orgheadline50"><span class="section-number-4">3.3.32</span> 到公司</h4><div class="outline-text-4" id="text-3-3-32"><p>本意是到公司后进入工作之前的一些准备性质的活动（不会很长）。</p><p>首先，它属于消耗性质(因为它明显不是积累性的，是没有收获的活动)——生活；</p><p>再者，它是基本的消耗（因为这些事情，不影响你生活，但是你到公司还是要经历这个过程，你不可能一下子就能工作）——规律；</p><p>然后，仔细检查暂时没有进一步合适的子分类（它就像吃饭前的祈祷），保险起见，所以定为： <b>_规律</b> 。</p><p>注意，但是，这个规律也是相对的，如果你消耗的过长了，那么就不是规律，而是 <b>_仪式</b> 了。</p></div></div><div id="outline-container-orgheadline51" class="outline-4"><h4 id="orgheadline51"><span class="section-number-4">3.3.33</span> 午休后</h4><div class="outline-text-4" id="text-3-3-33"><p>理解成：午休醒来，进行状态的切换，有助于进入工作状态。</p><p>首先，它属于消耗性质（因为它明显不是积累性的，是没有收获的活动)——生活；</p><p>再者，它是额外的消耗（因为这些事情，不影响你干活，你也休息完了，只是名义上想高率给自己的心理暗示，做一些准备工作，比如深呼吸等）——仪式；</p><p>然后，仔细检查暂时没有进一步合适的子分类(显然它不是娱乐，就像是吃饭前的祈祷一样)，所以定为： <b>_仪式</b> 。</p></div></div><div id="outline-container-orgheadline52" class="outline-4"><h4 id="orgheadline52"><span class="section-number-4">3.3.34</span> 撸羊毛</h4><div class="outline-text-4" id="text-3-3-34"><p>理解成：上网、微信等等，总是有一些优惠的活动。</p><p>首先，它属于消耗性质（因为它明显不是积累性的，是没有收获的活动，有便宜可占不代表有所收获)——生活；</p><p>再者，它属于额外消耗（因为它并不是生活中必须的，也不是更好维持生活的基本要素，而是一种对生活积累的挥霍/奢侈/享受）——仪式；</p><p>然后，他是和你个人喜好的事情，所以就设置为： <b>_休闲</b> 。</p></div></div><div id="outline-container-orgheadline53" class="outline-4"><h4 id="orgheadline53"><span class="section-number-4">3.3.35</span> 洗漱</h4><div class="outline-text-4" id="text-3-3-35"><p>理解成，洗脸、洗澡、刷牙、等主要在卫生间。</p><p>首先，它属于消耗性质（因为它明显不是积累性的，是没有收获的活动)——生活；</p><p>再者，它是必要的消耗（吃喝拉撒洗睡的生活事务，至少有它们才是正常生活的开端）——作息；</p><p>然后，这是清理相关事项（洗漱的活动名称含义已经很清楚了，但是要与家务中的整理收纳和洗衣拖地分开），所以定为： <b>卫生</b> 。</p></div></div><div id="outline-container-orgheadline54" class="outline-4"><h4 id="orgheadline54"><span class="section-number-4">3.3.36</span> 杂务</h4><div class="outline-text-4" id="text-3-3-36"><p>这里理解成一些闲杂无法确定的事项（可能很多事情很琐碎，无法一一记录）。</p><p>首先，它属于消耗性质（因为它明显不是积累性的，是没有收获的活动)——生活（注：如果实在不确定，就备注一下，直接定为： <b>_</b> ）；</p><p>再者，无法进一步确定属性（什么是杂务？含义不明确，所以这里就不细分析了，认为不确定），所以定为： <b>_生活</b> 。</p></div></div><div id="outline-container-orgheadline55" class="outline-4"><h4 id="orgheadline55"><span class="section-number-4">3.3.37</span> 查询信息</h4><div class="outline-text-4" id="text-3-3-37"><p>这里理解成：上网、电话、或者其它为了办理某件事情的时候从事的活动。</p><p>首先，它属于消耗性质（因为它不会为你积累物质和非物质的财富）——生活；</p><p>再者，是基本消耗（因为为了办事而进行的活动，虽然不像吃饭睡觉那样必须，但是办好事情有是为了提升生活的）——规律；</p><p>然后，它是发生在你生活中的活动(你需要消耗你的精力，高效的利用你的精力去做的生活中的基本的事情)，所以定为： <b>事务</b> 。</p></div></div><div id="outline-container-orgheadline56" class="outline-4"><h4 id="orgheadline56"><span class="section-number-4">3.3.38</span> 查询租房信息</h4><div class="outline-text-4" id="text-3-3-38"><p>与查询信息一样，定为： <b>事务</b> 。</p></div></div><div id="outline-container-orgheadline57" class="outline-4"><h4 id="orgheadline57"><span class="section-number-4">3.3.39</span> 调整时间</h4><div class="outline-text-4" id="text-3-3-39"><p>这里理解成：对自己时间记录的回顾，优化，一些错误的修正分析。</p><p>首先，它属于非物质的积累（因为它有助于增长你对时间方面经验的积累）——进修；</p><p>再者，它既非创造也非获取（折中性，你并不是创造什么经验，也不是从哪里获取经验），所以分类定为： <b>管理</b> 。</p></div></div><div id="outline-container-orgheadline58" class="outline-4"><h4 id="orgheadline58"><span class="section-number-4">3.3.40</span> 上网闲逛</h4><div class="outline-text-4" id="text-3-3-40"><p>首先，它属于消耗性质（因为它不会为你积累物质和非物质的财富）——生活；</p><p>再者，它属于额外消耗（因为它并不是生活中必须的，也不是更好维持生活的基本要素，而是一种对生活积累的挥霍/奢侈/享受）——仪式；</p><p>然后：</p><ul class="org-ul"><li>如果是个人看看新闻、浏览网页、新闻等定为： <b>休闲</b> ；</li><li>如果与人聊天就是： <b>社交</b> ；</li><li>如果和家人在一起闲聊就是： <b>家庭</b>  。</li></ul></div></div></div></div><div id="outline-container-orgheadline59" class="outline-2"><h2 id="orgheadline59"><span class="section-number-2">4</span> 其它</h2><div class="outline-text-2" id="text-4"><p>这里是对额外内容的补充。</p></div><div id="outline-container-orgheadline60" class="outline-3"><h3 id="orgheadline60"><span class="section-number-3">4.1</span> 整理进度</h3><div class="outline-text-3" id="text-4-1"><ul class="org-ul"><li>[&gt;] <a href="../../../../../../../../../mydata/orgmode/gtd/_study.html#ID-10bdb8d4-0954-4649-b980-f19cbc696421">解决问题——第一步，事务分类</a></li><li class="off"><code>[&#xa0;]</code> <a href="../../../../../../../../../mydata/orgmode/gtd/_study.html#ID-f487fc08-8c4e-4124-8b20-d81fe70e4515">事务的分类</a></li></ul></div></div><div id="outline-container-orgheadline61" class="outline-3"><h3 id="orgheadline61"><a id="ID-b0cbc98b-3354-4088-875f-eb5dd13c55e0"></a><span class="section-number-3">4.2</span> 分类反思</h3><div class="outline-text-3" id="text-4-2"></div><div id="outline-container-orgheadline62" class="outline-4"><h4 id="orgheadline62"><span class="section-number-4">4.2.1</span> 方法源于实践</h4><div class="outline-text-4" id="text-4-2-1"><p>前面得出的方法，虽然不是绝对的，但是分类之后，基本很少变动（因为我们都生活于正与反的二元世界）；或者变动了也有能容许变动的程度（“其它”分类）。</p><p>但是在得出这个方法前，也是进行了无数的错误尝试的。有时候我们分类，常常直接从现实或者随意的抽取结果得出分类体系，这样难免会经常变动；这时候这个时候运用前面的方法来分类，能解决很多问题。</p><p>关键是：方法并非凭空产生，它源于实践。即：先通过实践探索总结方法，再通过方法解决完善实践问题。实践是鸡，方法是蛋，但这些由我们自身决定。^_^</p></div><div id="outline-container-orgheadline63" class="outline-5"><h5 id="orgheadline63"><span class="section-number-5">4.2.1.1</span> 诞生实践的方法</h5><div class="outline-text-5" id="text-4-2-1-1"><p>举个真实的例子，我个人经历之后的反思：</p><p>以前按照直观的方式，我将生活分为：学习、工作、管理、生活，四个方面。乍一看，不错，为什么呢？我也给出了一个看似很有道理的分析，因为四者的关系: </p><ul class="org-ul"><li>学习, 提升管理/工作/生活水平和经验</li><li>工作, 为学习/管理/生活提供基础</li><li>管理, 提升学习/工作/生活的效率以及水平</li><li>生活, 是学习/工作/管理的意义所在</li></ul></div></div><div id="outline-container-orgheadline64" class="outline-5"><h5 id="orgheadline64"><span class="section-number-5">4.2.1.2</span> 用理论改进实践</h5><div class="outline-text-5" id="text-4-2-1-2"><p>但是，这样我们的方法就完美了吗？经过前面比较的分类分析与得出的结论，显然这个简单确定的方式，是存在许多的漏洞的。</p><p>继续进入我们的三部曲：</p></div><ol class="org-ol"><li><a id="orgheadline93"></a>空-发现问题<br><div class="outline-text-6" id="text-4-2-1-2-1"><p>我以前的这个分类方式，随着时间的推进和更多的记录发现：</p><ul class="org-ul"><li>好处1： 有些事情还好，如 “生活”，这个大分类至少基本变动不大，有什么相关的事项至少进一步划分整理前可以存到“生活”中；</li><li>问题1： 有些事情如学习个人管理技术，这就很难抉择是管理方面的，还是学习方面的，无法抉择怎么办？于是不得不创建一个“临时”的分类来容纳失误；</li><li>问题2： 还有一些事情，整理工作资料、学习资料，是管理方面的？工作方面的？还是学习方面的？还得堆积在新创建的“临时”分类中有待将来整理。</li></ul></div></li><li><a id="orgheadline94"></a>雨-分析问题<br><div class="outline-text-6" id="text-4-2-1-2-2"><p>这样的情况很多，导致经常进行分类的调整，资料的迁移等等。直至后来，直接怀疑不是分类的问题，问题在于分类的方式。</p><p>经过反思，发现即便是分类，还是需要一些系统、逻辑、理性的思路或推断，其它事情应该类似吧。</p><p>于是，便是前面新一轮的“天空有乌云”，“看样子要下雨”，“应该打雨伞”（空、雨、伞）分析，即：发现问题、分析问题、解决问题。</p></div></li><li><a id="orgheadline95"></a>伞-解决问题<br><div class="outline-text-6" id="text-4-2-1-2-3"><p>运用前面的方式，分类，刚刚发现的问题很容易解决。</p><ul class="org-ul"><li><p>问题1</p><pre class="example">学习个人管理技术，不会直接带来收入，也不是生活的一部分，显然是属于“进修”这个范围；因为学习管理技术，是从外部获取知识，所以，属于进修中的“学习”子分类。</pre></li><li><p>问题2</p><pre class="example">整理工作资料、学习资料，显然不是能直接带来收入的活动，也不是生活的一部分，那么它只能属于“进修”这个分类。因为整理工作资料，是靠自己意愿进行的，是自己内部消化组织的过程，并没有从外面获取知识，所以，属于进修中的“管理”子分类。</pre></li><li><p>进一步</p><pre class="example">另外，不断的将东西添加到“临时”的文件夹中，待合适的时候消化组织，方法不错，这个“临时”目录的作用也是相对固定的，所以还不如改成自认为合适的名字可以一直使用下去，比如“其它”。</pre></li></ul><p>至此，答案很明显。一言难尽，简单来说又回到了前面：实践促使理论诞生，理论进一步改善实践。</p></div></li></ol></div></div><div id="outline-container-orgheadline65" class="outline-4"><h4 id="orgheadline65"><span class="section-number-4">4.2.2</span> 进一步探索</h4><div class="outline-text-4" id="text-4-2-2"><p>最好的方法不是完美的方法，而是可以进化的方法，最实用的方法不是好用的方法，而是理解方法的意义。</p><ul class="org-ul"><li>关于策略的策略</li><li>分类实质索引</li></ul></div><div id="outline-container-orgheadline66" class="outline-5"><h5 id="orgheadline66"><a id="ID-32404b95-475f-45d0-8589-9afac9a919d6"></a><span class="section-number-5">4.2.2.1</span> 分类的实质是什么</h5><div class="outline-text-5" id="text-4-2-2-1"></div><ol class="org-ol"><li><a id="orgheadline96"></a>原理的思考<br><div class="outline-text-6" id="text-4-2-2-1-1"><p>分类有两个目的：一、快速查找。二、思维模型。</p><p>前者可实现在已有内容中迅速定位到当下需要的部分；后者在纳入新内容时令其有合适的归属保持整个已有知识体系的持续完善与进化。</p><p>我没有对人脑记忆有过多的研究，但印象中有看过说人脑具有“被动”回忆的特性，并针对这个特性有很多如：宫殿、桩等记忆方式。根据简短的提示，可以让人回忆起相关的大量信息。按照我的思路，把这个简单理解概况成这个意思：人脑记忆量惊人，但弱点是提取信息时需要依靠一些提示线索性提示而触发，而非主动回忆。如果没有提示信息，那么便几乎无法回忆，但内容确依旧在脑中。心理学中通过催眠等方式，让接收者不知不觉挖掘出潜意识中没有注意到的大量信息，也应是这个原理。</p></div></li><li><a id="orgheadline101"></a>分类即索引<br><div class="outline-text-6" id="text-4-2-2-1-2"><p>从前面的考虑来看，其实分类就是一种索引内容的方式。将内容的共性抽象出来。</p></div><ol class="org-ol"><li><a id="orgheadline97"></a>日常经历<br><div class="outline-text-7" id="text-4-2-2-1-2-1"><p>每个人都有自己的经历，不同时期有不同的经历。按照经历的事务，可以最直接的对自己的分类体系与生活相映射。比如：学习、工作、生活。但是，人的经历是变化的，这样的分类会过于频繁的变化。</p></div></li><li><a id="orgheadline98"></a>字母索引<br><div class="outline-text-7" id="text-4-2-2-1-2-2"><p>比如，内容的首字母，根据26个字母将一切能够用语言表述的内容归结到26个类中。但是缺点就是，同样内容，不同人不同时间描述的方式可能又不完全相同，所以这是这类索引思维的不确定性，适合辅助建立细节的分类/标签，但是经常变动。</p></div></li><li><a id="orgheadline99"></a>元的思维<br><div class="outline-text-7" id="text-4-2-2-1-2-3"><p>二元思维（阴阳），三元思维（天地人等），四元，五元等等等等，是抽象出一切事务的内在规律做为索引。它便于描述一些内容一致，但是描述因人和时间会有变化的内容，缺点就是，分类太大，如果想细化描述，就要求有足够的生活经历，足够合理的抽象，越细节，越难以抽象，层次也会很多。适合建立大体的分类框架，不经常变动。</p></div></li><li><a id="orgheadline100"></a>总结<br><div class="outline-text-7" id="text-4-2-2-1-2-4"><p>其实无论是元，还是字母顺序还是其它，这样的分类都是对内容的一种分割，简单用元来总结吧：这个世界是二元的，也可以是三元的，多少元都行，但归根结底都是——平衡的；世界的元，本质是内容的索引。</p><p>将这个思想应用到分类当中，很容易得出比较完整的互斥分类策略。(参考: <a href="#orgheadline4">基于 “元” 的分类思想</a>)</p><p>很明显，上层分类是大致确定的，细节分类变化多端。我们可以将个人经历、字母索引、与元与结合起来使用，关键是保证内容索引的确定性。</p><ul class="org-ul"><li>上层大分类用元：元的思想是确定的，但是要找对角度，上层大分类用元思维确定，做为总体框架，也能降低元思维应用的复杂度。</li><li>细节用经历，辅助用字母索引：个人经历是变化的，字母排序固定但因人表达等而异也是不确定，底层细节分类用生活经历动态确定，字母辅助索引。</li></ul></div></li></ol></li></ol></div><div id="outline-container-orgheadline67" class="outline-5"><h5 id="orgheadline67"><a id="ID-70cb4425-e916-4fd8-a643-a4ece43671b6"></a><span class="section-number-5">4.2.2.2</span> 如何应对分类体系的不断</h5><div class="outline-text-5" id="text-4-2-2-2"><p>对自己分类体系应用一段时间后，会深有体会：随着生活境况的变化，或者概念的清晰化等等，这个体系内容也会有所变化。很可能经过一段时间之后，自己的分类体系不再适用，于是更新分类体系，这样又导致已有内容翻天覆地的变化。不断地更新分类、不断地调整原有内容的分类，是一个很耗时的过程。那么，如何能够建立一套“完美”、“不变”、“可进化”的分类体系呢？</p><p>抽身而出，观察这个进化的世界，我们很可能得到这个问题的答案是——“无”。因为，世界上不可能有完美、不变的事物，但是——答案也可以是——“有”。因为，最完美的事物就是能够不断进化，最恒久的事物就是接受变化。</p><p>我们的问题在于，没有一个完美的分类策略，但是我们上升一个维度，用更高维度的视角去控制低维度的事物，这个问题却不是那么困难：我们可以设计一个设计分类策略的策略，可不同的分类策略适应不同的状况。</p></div><ol class="org-ol"><li><a id="orgheadline102"></a>建议方式——通过时间前缀<br><div class="outline-text-6" id="text-4-2-2-2-1"><p>首先，确认我们的需求。即：建立一套可以随时更新的系统，又能保证原有数据不被丢失。</p><p>然后，进一步分析。很明显，这个问题关键的变化点在于——时间。我们希望，分类方案能够不断更新，又不用立即大量迁移数据，还能够保持原有方案，那么，当需要更新分类的时候，我们大可以在已有分类的基础上。大胆创建新的分类，在新类加版本前缀，既然时间导致一切变化，我们就用时间做为新类的版本前缀。并且，这个前缀策略本身也是可以更新进化的，比如你开始仍然用无前缀的分类体系（你最初的分类体系，也可能是你没有想过要这样用前缀标记等导致），后来用“1809&lt;新分类名&gt;”表示18年9月你更新的分类系统。我们新的内容就存放新的分类体系中，最新分类体系必在最近策略中。</p><p>最后，得出解决方式。这样，有了新分类体系后，不用立即迁移已有所有内容，原有内容仍然保留在原有的分类体系中，新分类体系的分类全都加上前缀（一般为时间前缀）。新的内容就用往新分类体系中记录即可。这也保留了历史。</p><p>总结一下，就是：将不同时期的分类体系，以前缀（如特定期间的时间前缀）标记，便于保留以前的分类历史思维，用作归档。注：</p><ul class="org-ul"><li>通过用时间前缀，来标记不同时期的分类策略，能适应不断变化的分类策略的应用，但是太过频繁并且比较小范围的分类变动不用考虑。</li><li>如果出现分类体系过多导致分类杂乱的现象，大可以将不用的旧分类隐藏，无法隐藏就归档，或者统一移动到一个被称作"旧有体系"的目录中。</li><li>如果分类名子中的前缀，让你感觉分类名难看，大可用前缀做为新分类的目录，新分类名在以时间为前缀的目录中，也就不用前缀了，自然时间方式归档。</li><li>分类前缀的长度不用过长，年+月4位就够了，（比如1811xxx表示2018年11月的规则），因为人一辈子也就100来年，分类变化的频率一般不会是一个月。</li><li>分类策略的策略是这样，策略的策略的策略就再加前缀，比如你后来用其它的方式来标记新分类体系策略，那么就201809，等等，以此类推，一般不会太多。</li></ul></div></li></ol></div></div></div><div id="outline-container-orgheadline68" class="outline-3"><h3 id="orgheadline68"><span class="section-number-3">4.3</span> 留给将来的自己</h3><div class="outline-text-3" id="text-4-3"><p>为将来可能会做的读后感，留一块地方。</p></div></div></div><br><div id="mypostamble" align="right" style="float:right" class="status">    <table> <tbody> <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Author</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">QuietHeart</td>  </tr><tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Email</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">    <a href="mailto:quiet_heart000@126.com" target="_blank" rel="noopener">quiet_heart000@126.com</a>  </td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Date</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">[2019-04-30 二]</td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Update</td>  <td style="border-style: solid;border-width:1px;border-right:0px;"><2019-05-05 日 14:04:20></2019-05-05></td></tr>    </tbody></table></div><br>]]></content>
    
    <summary type="html">
    
      
      
        

&lt;style type=&quot;text/css&quot;&gt;
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
            
      
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
      <category term="note" scheme="http://0.0.0.0:4000/categories/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>时间管理：2.分析问题——如何开始</title>
    <link href="http://0.0.0.0:4000/2019/02/27/timemanage_2_how_to_start/"/>
    <id>http://0.0.0.0:4000/2019/02/27/timemanage_2_how_to_start/</id>
    <published>2019-02-26T16:00:00.000Z</published>
    <updated>2019-09-11T08:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">  .title  { text-align: center;             margin-bottom: .2em; }  .subtitle { text-align: center;              font-size: medium;              font-weight: bold;              margin-top:0; }  .todo   { font-family: monospace; color: red; }  .done   { font-family: monospace; color: green; }  .priority { font-family: monospace; color: orange; }  .tag    { background-color: #eee; font-family: monospace;            padding: 2px; font-size: 80%; font-weight: normal; }  .timestamp { color: #bebebe; }  .timestamp-kwd { color: #5f9ea0; }  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }  .org-center { margin-left: auto; margin-right: auto; text-align: center; }  .underline { text-decoration: underline; }  #postamble p, #preamble p { font-size: 90%; margin: .2em; }  p.verse { margin-left: 3%; }  pre {    border: 1px solid #0c0;    box-shadow: 1px 1px 1px #0e0;    padding: 8pt;    font-family: italic monospace;    color: #C7EDCC;    background-color: #111111;    overflow: auto;    margin: 1.2em;  }  pre.src {    position: relative;    overflow: visible;    padding-top: 1.2em;  }  pre.src:before {    display: none;    position: absolute;    background-color: black;    top: -10px;    right: 10px;    padding: 3px;    border: 1px solid black;  }  pre.src:hover:before { display: inline;}  pre.src-sh:before    { content: 'sh'; }  pre.src-bash:before  { content: 'sh'; }  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }  pre.src-R:before     { content: 'R'; }  pre.src-perl:before  { content: 'Perl'; }  pre.src-java:before  { content: 'Java'; }  pre.src-sql:before   { content: 'SQL'; }  table { border-collapse:collapse; }  caption.t-above { caption-side: top; }  caption.t-bottom { caption-side: bottom; }  td, th { vertical-align:top;  }  th.org-right  { text-align: center;  }  th.org-left   { text-align: center;   }  th.org-center { text-align: center; }  td.org-right  { text-align: right;  }  td.org-left   { text-align: left;   }  td.org-center { text-align: center; }  dt { font-weight: bold; }  .footpara { display: inline; }  .footdef  { margin-bottom: 1em; }  .figure { padding: 1em; }  .figure p { text-align: center; }  .inlinetask {    padding: 10px;    border: 2px solid gray;    margin: 10px;    background: #ffffcc;  }  #org-div-home-and-up   { text-align: right; font-size: 70%; white-space: nowrap; }  .linenr { font-size: smaller }  .code-highlighted { background-color: #ffff00; }  .org-info-js_info-navigation { border-style: none; }  #org-info-js_console-label    { font-size: 10px; font-weight: bold; white-space: nowrap; }  .org-info-js_search-highlight    { background-color: #ffff00; color: #000000; font-weight: bold; }    code {        border:groove #555555;border-width:thin;        background-color: #111111;color: #C7EDCC;    }#table-of-contents {    font-size: 9pt;    position: fixed;    right: 10px;    top: 14em;    margin:0;    padding:0;    border-width:1px;    border-style:solid;    background: #000000;    -webkit-box-shadow: 0 0 1em #777777;    -moz-box-shadow: 0 0 1em #777777;    -webkit-border-bottom-left-radius: 5px;    -moz-border-radius-bottomleft: 5px;    text-align: right;    /* ensure doesn't flow off the screen when expanded */    max-height: 60%;    overflow: auto;     z-index: 200;}#table-of-contents h2 {    font-size: 9pt;    max-width: 8em;    font-weight: normal;    padding-left: 0.5em;    padding-top: 0.05em;    padding-bottom: 0.05em; }#table-of-contents ul {    margin-left: 14pt;     margin-bottom: 10pt;    padding: 0}#table-of-contents li {    padding: 0;    margin: 1px;    list-style: none;}#table-of-contents ul>:first-child {    color: blue;}#table-of-contents #text-table-of-contents {    display: none;    text-align: left;}#table-of-contents:hover #text-table-of-contents {    display: block;    padding: 0.5em;    margin-top: -1.5em; }</style><div id="table-of-contents"><h2>Table of Contents</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 类似的问题</a></li><li><a href="#orgheadline2">2. 共同的方式</a></li><li><a href="#orgheadline3">3. 确认思路</a></li><li><a href="#orgheadline4">4. 开始行动</a><ul><li><a href="#orgheadline5">4.1. 如何开始记录？——分类</a></li><li><a href="#orgheadline6">4.2. 如何进行分类？——寻找分类策略而非分类本身</a></li></ul></li></ul></div></div><p>时间总是不知不觉逝去，如何改善这种状况？——时间管理，很明显，管理好自己的时间或许是一个出路。</p><p>时间是抽象的，在提出可能能进行有效管理的方式之前，先理解一下提出该方式的思路。</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 类似的问题</h2><div class="outline-text-2" id="text-1"><p>不知道大家有没有这个体会：</p><p>逛超市时</p><pre class="example">来到超市，不知道买什么东西；最后不知不觉，买了很多没必要的东西。如果出行前对所缺失的东西都有所记录的话，到超市会更有目的性。</pre><p>理财时</p><pre class="example">消费的时候，不知道所消费的价格，最后不知不觉，花了很多没有必要的钱。如果对每一笔花销及时记录，消费的时候，会自然的衡量，状况也会好很多。</pre><p>学习时</p><pre class="example">进修的时候，不知道看些什么，最后不知不觉，什么也没有学会。如果在学习的时候先做好笔记，在进修的时候再拿出来分析、消化这些知识，最终会掌握相应的技巧。</pre><p>执行计划时</p><pre class="example">将要做某件事情的时候，却不知从何开始，不知不觉过去了很久了却什么都没有做。如果在执行任务之前，先尽可能在任何地点、时间及时收集到有关的想法，再组织整理汇集分类，最终到执行的时候，会更有目的性并最终完成。</pre></div></div><div id="outline-container-orgheadline2" class="outline-2"><h2 id="orgheadline2"><span class="section-number-2">2</span> 共同的方式</h2><div class="outline-text-2" id="text-2"><p>其实类似的事情有很多，仔细观察一下你会发现，导致这些事务成功的过程，都有一个共性，就是如下类似的三步：</p><ul class="org-ul"><li>发现（列出/记录&#x2026;）问题</li><li>分析（归纳/组织&#x2026;）问题</li><li>解决（理解/完成&#x2026;）问题</li></ul><p>这里简单借用下麦肯锡笔记法中提到的空、雨、伞来总结一下（对麦肯锡笔记了解不多，可能也不准）。</p><p>麦肯锡笔记法是一个通过笔记方式解决问题的方式：空、雨、伞，其实是对：“天空有乌云，应该要下雨，所以得打伞”的简写。</p><p>它是对解决问题的三个阶段的抽象性概述，直观点说就是：发现问题、分析问题、解决问题。</p><p>而上面例子，就像对这个思想的一个变相应用，这是一个符合一般人思考规律的过程(感觉如此，实际并未深入调查关于人的思考规律)。</p><p>正是因为经历了上面提到的过程，所以：</p><ul class="org-ul"><li>到超市前的清单是对购物内容的记录，购物前的排序是对购物目的的清晰化，有了清晰的购物清单便能轻松购物。</li><li>对每一笔花销及时的记录，日常浏览各类花销以及比例的分析，有让每次消费更合理。</li><li>学习时及时做好笔记（记录），过后的时间内对记录的内容消化（分析），最终会很好的吸收（掌握）相应知识。</li><li>执行任务前，尽可能集思广益收集一切琐项（记录），再组织整理归纳排序（分析），最终执行（行动）会更容易完成。</li></ul></div></div><div id="outline-container-orgheadline3" class="outline-2"><h2 id="orgheadline3"><a id="ID-f0fd28ee-3519-43e1-b844-eda86cd27121"></a><span class="section-number-2">3</span> 确认思路</h2><div class="outline-text-2" id="text-3"><p>购物要先列清单、理财要先记账、学习要先笔记、任务要先规划……同理，显然对时间的管理，应当如此： <b>管理时间，要先记录时间。</b> </p><p>回归主题：时间记录——只有掌握好每时每刻，才可能管理好时间。</p><p>（仔细想想，在得出这个结论之前，我们是否也也应用了类似的三步分析过程呢^_^）</p><p>虽然结论得出的有些“突然”，却总是有一种“似乎被理论说服了，却心底不够确定”的感觉？</p><p>这样的话，我能想到的只有将这段时间以来收集的零散时刻抓住的些许体会分享，</p><p>或许将来会有更多，或许也有机会并入，但人各有不同，希望能够更坚定同道者继续的信心：</p><ul class="org-ul"><li>只有做好记录，才能为接下来的分析、与规划打好基础。</li><li>只有对自己要做的事情很清晰了之后，才会更容易记录自己做过的事情，所以要对事物分类。</li><li>深感自己如同随波逐流的一叶扁舟，一切都处于无法掌控的状态，如何掌控?不清晰则乱,乱则无法掌控！</li><li>看清自己的每时每刻，才能看见自己的未来；掌控好自己的每时每刻，才能掌握自己的一生！</li><li><p>借助规律，而非感觉。</p><pre class="example">偏好按照感觉而不按照规律做事，是因为不明白规律，根本是原因你对你所遇见的了解不够清晰。深刻的体会到，感觉只是片面的、短暂的、主观的感受，规律才是系统的、长久的、客观的事实。当足够清晰并了解掌握一切，感觉会更接近规律，从而自然而然变得按规律做事不按照感觉做事。当一切形成了规律，一切会顺理成章，一切的未知似乎已经被掌握，不再焦虑、迷茫、以及空虚。</pre></li></ul></div></div><div id="outline-container-orgheadline4" class="outline-2"><h2 id="orgheadline4"><span class="section-number-2">4</span> 开始行动</h2><div class="outline-text-2" id="text-4"><p>在前面，我们确认了一点：想要做好时间管理，首先我们需要做的，便是记录下你身上所有发生事情的所有时间信息。即： <b>时间记录</b> 。</p><p>这里重点给出第一步行动，因为有了第一步，接下来的过程就容易多了，并且这个问题也还在继续探索中。</p></div><div id="outline-container-orgheadline5" class="outline-3"><h3 id="orgheadline5"><span class="section-number-3">4.1</span> 如何开始记录？——分类</h3><div class="outline-text-3" id="text-4-1"><p>直接面对这个任务我们会发现，要记录的事情各式各样、杂乱无章，似乎根本不可能全部记录下来。如何记录才能有助于真正有意义的跟踪与分析呢？</p><p>其实，仔细想想，难以进行下去的很大一部分原因是对自己从事事务分类的不明确，</p><p>所以先对要记录的事务先做好分类，记录时再根据分类组织记录项，应该能有所改善。</p></div></div><div id="outline-container-orgheadline6" class="outline-3"><h3 id="orgheadline6"><span class="section-number-3">4.2</span> 如何进行分类？——寻找分类策略而非分类本身</h3><div class="outline-text-3" id="text-4-2"><p>需要要将所有待记录的事件分类，可是同样因待记录的数据过于庞大、繁杂、变化多端，却有种无从下手的感觉，怎么分类才能达到简明，并且保罗万象呢？</p><p>经过长时间的实践发现，分类的情况应该是因人而异的，即使是同一个人，分类的方式在不同的时间也有所不同，并且存在分类交叉的现象，这是复杂的一个关键。</p><p>问题不在于分类本身，而在于分类策略，接下来将专用针对时间记录，给出一个分类策略，特点是事务间基本互斥（同一时间只能做一件事情），这个分类并非内容/知识管理组织中的分类/标签(可以交叉从属)。</p></div></div></div><br><div id="mypostamble" align="right" style="float:right" class="status">    <table> <tbody> <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Author</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">QuietHeart</td>  </tr><tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Email</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">    <a href="mailto:quiet_heart000@126.com" target="_blank" rel="noopener">quiet_heart000@126.com</a>  </td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Date</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">[2019-02-27 三]</td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Update</td>  <td style="border-style: solid;border-width:1px;border-right:0px;"><2019-05-05 日 14:04:11></2019-05-05></td></tr>    </tbody></table></div><br>]]></content>
    
    <summary type="html">
    
      
      
        

&lt;style type=&quot;text/css&quot;&gt;
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
            
      
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
      <category term="note" scheme="http://0.0.0.0:4000/categories/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>时间管理：1.发现问题——时间的流逝</title>
    <link href="http://0.0.0.0:4000/2019/02/19/timemanage_1_elapsed_time/"/>
    <id>http://0.0.0.0:4000/2019/02/19/timemanage_1_elapsed_time/</id>
    <published>2019-02-18T16:00:00.000Z</published>
    <updated>2019-09-11T08:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">  .title  { text-align: center;             margin-bottom: .2em; }  .subtitle { text-align: center;              font-size: medium;              font-weight: bold;              margin-top:0; }  .todo   { font-family: monospace; color: red; }  .done   { font-family: monospace; color: green; }  .priority { font-family: monospace; color: orange; }  .tag    { background-color: #eee; font-family: monospace;            padding: 2px; font-size: 80%; font-weight: normal; }  .timestamp { color: #bebebe; }  .timestamp-kwd { color: #5f9ea0; }  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }  .org-center { margin-left: auto; margin-right: auto; text-align: center; }  .underline { text-decoration: underline; }  #postamble p, #preamble p { font-size: 90%; margin: .2em; }  p.verse { margin-left: 3%; }  pre {    border: 1px solid #0c0;    box-shadow: 1px 1px 1px #0e0;    padding: 8pt;    font-family: italic monospace;    color: #C7EDCC;    background-color: #111111;    overflow: auto;    margin: 1.2em;  }  pre.src {    position: relative;    overflow: visible;    padding-top: 1.2em;  }  pre.src:before {    display: none;    position: absolute;    background-color: black;    top: -10px;    right: 10px;    padding: 3px;    border: 1px solid black;  }  pre.src:hover:before { display: inline;}  pre.src-sh:before    { content: 'sh'; }  pre.src-bash:before  { content: 'sh'; }  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }  pre.src-R:before     { content: 'R'; }  pre.src-perl:before  { content: 'Perl'; }  pre.src-java:before  { content: 'Java'; }  pre.src-sql:before   { content: 'SQL'; }  table { border-collapse:collapse; }  caption.t-above { caption-side: top; }  caption.t-bottom { caption-side: bottom; }  td, th { vertical-align:top;  }  th.org-right  { text-align: center;  }  th.org-left   { text-align: center;   }  th.org-center { text-align: center; }  td.org-right  { text-align: right;  }  td.org-left   { text-align: left;   }  td.org-center { text-align: center; }  dt { font-weight: bold; }  .footpara { display: inline; }  .footdef  { margin-bottom: 1em; }  .figure { padding: 1em; }  .figure p { text-align: center; }  .inlinetask {    padding: 10px;    border: 2px solid gray;    margin: 10px;    background: #ffffcc;  }  #org-div-home-and-up   { text-align: right; font-size: 70%; white-space: nowrap; }  .linenr { font-size: smaller }  .code-highlighted { background-color: #ffff00; }  .org-info-js_info-navigation { border-style: none; }  #org-info-js_console-label    { font-size: 10px; font-weight: bold; white-space: nowrap; }  .org-info-js_search-highlight    { background-color: #ffff00; color: #000000; font-weight: bold; }    code {        border:groove #555555;border-width:thin;        background-color: #111111;color: #C7EDCC;    }#table-of-contents {    font-size: 9pt;    position: fixed;    right: 10px;    top: 14em;    margin:0;    padding:0;    border-width:1px;    border-style:solid;    background: #000000;    -webkit-box-shadow: 0 0 1em #777777;    -moz-box-shadow: 0 0 1em #777777;    -webkit-border-bottom-left-radius: 5px;    -moz-border-radius-bottomleft: 5px;    text-align: right;    /* ensure doesn't flow off the screen when expanded */    max-height: 60%;    overflow: auto;     z-index: 200;}#table-of-contents h2 {    font-size: 9pt;    max-width: 8em;    font-weight: normal;    padding-left: 0.5em;    padding-top: 0.05em;    padding-bottom: 0.05em; }#table-of-contents ul {    margin-left: 14pt;     margin-bottom: 10pt;    padding: 0}#table-of-contents li {    padding: 0;    margin: 1px;    list-style: none;}#table-of-contents ul>:first-child {    color: blue;}#table-of-contents #text-table-of-contents {    display: none;    text-align: left;}#table-of-contents:hover #text-table-of-contents {    display: block;    padding: 0.5em;    margin-top: -1.5em; }</style><div id="table-of-contents"><h2>Table of Contents</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 你的一周，究竟有多少时间?</a><ul><li><a href="#orgheadline2">1.1. 1 想法</a></li><li><a href="#orgheadline3">1.2. 2 动机</a></li><li><a href="#orgheadline4">1.3. 3 准备</a></li><li><a href="#orgheadline5">1.4. 4 计算</a><ul><li><a href="#orgheadline6">1.4.1. 4.1 最初</a></li><li><a href="#orgheadline7">1.4.2. 4.2 减去必不可少的睡觉</a></li><li><a href="#orgheadline8">1.4.3. 4.3 减去不得不从事的职业</a></li><li><a href="#orgheadline9">1.4.4. 4.4 减去必不可少的饮食</a></li><li><a href="#orgheadline10">1.4.5. 4.5 减去必定要做的卫生</a></li><li><a href="#orgheadline11">1.4.6. 4.6 减去必不可少的精力恢复</a></li><li><a href="#orgheadline12">1.4.7. 4.7 减去不知不觉的移动</a></li><li><a href="#orgheadline13">1.4.8. 4.8 减去不知不觉的休闲、交际</a></li><li><a href="#orgheadline14">1.4.9. 4.9 减去不得不进行的健康医疗</a></li><li><a href="#orgheadline15">1.4.10. 4.10 减去必须要做的事务</a></li></ul></li><li><a href="#orgheadline16">1.5. 5 答案</a></li><li><a href="#orgheadline17">1.6. 6 怎样</a><ul><li><a href="#orgheadline18">1.6.1. 消耗</a></li><li><a href="#orgheadline19">1.6.2. 积累</a></li></ul></li></ul></li></ul></div></div><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><a id="ID-fed237e9-2985-45ba-9e0f-f280f0d1ca26"></a><span class="section-number-2">1</span> 你的一周，究竟有多少时间?</h2><div class="outline-text-2" id="text-1"></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> 1 想法</h3><div class="outline-text-3" id="text-1-1"><p>我思考了好久，想要专门写一篇文章，描述下时间的宝贵，可是得知结果后，却发现专门花费时间写这样一篇文章，真是太为奢侈的浪费。</p></div></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">1.2</span> 2 动机</h3><div class="outline-text-3" id="text-1-2"><p>不写出来，又担心会忘记，尤其是现在这个信息如海，一切都让人应接不暇的世界。对比忘记这个的结果的可怕，我只好心惊胆颤，利用一切似乎没有被浪费的、欺骗自己那不是奢侈的时间，上厕所时、路上、排队等候……，总之是用一切可能无用的一点一滴的碎片，堆积出了此文章，文章表达肯定是有不足之处的，只是希望给自己一个警醒，也希望能将思想传达出来，给大家一个参考。</p></div></div><div id="outline-container-orgheadline4" class="outline-3"><h3 id="orgheadline4"><span class="section-number-3">1.3</span> 3 准备</h3><div class="outline-text-3" id="text-1-3"><p>我们中有学生、职业者、居家人员……等等，不过在本质上，结果对我们来说是一样的，就暂且以我这个职业者的角度来看看这个结果吧。</p><p>假设，你有一份不错的职业，每天工作八个小时，工作不忙，还有每周二天的双休日。钱多事少离家近，位高权重责任轻，并且自身还积极上进。</p><p>——显然，这是理想。:)</p><p>姑且就在这样理想的情况下，我们一起看一下，究竟能有多少时间吧。</p></div></div><div id="outline-container-orgheadline5" class="outline-3"><h3 id="orgheadline5"><span class="section-number-3">1.4</span> 4 计算</h3><div class="outline-text-3" id="text-1-4"><p>一个人的每天都是变化的，所以下面将用一周来做为单位（时间太短不准，时间太长太复杂），粗略的分析并计算一下。</p></div><div id="outline-container-orgheadline6" class="outline-4"><h4 id="orgheadline6"><span class="section-number-4">1.4.1</span> 4.1 最初</h4><div class="outline-text-4" id="text-1-4-1"><p>一周时长：24*7 = 168小时。</p></div></div><div id="outline-container-orgheadline7" class="outline-4"><h4 id="orgheadline7"><span class="section-number-4">1.4.2</span> 4.2 减去必不可少的睡觉</h4><div class="outline-text-4" id="text-1-4-2"><p>假设周末不睡懒觉，作息规律，平均每天睡觉22:30-6:30共需8小时。</p><p>——一周还剩：168-8*7 = 112小时。</p></div></div><div id="outline-container-orgheadline8" class="outline-4"><h4 id="orgheadline8"><span class="section-number-4">1.4.3</span> 4.3 减去不得不从事的职业</h4><div class="outline-text-4" id="text-1-4-3"><p>假设正常工作每周5天，8小时/天且，每天能忙里偷闲2小时，即你只需要工作6小时/天。</p><p>——一周还剩：112-6*5 = 82小时。</p></div></div><div id="outline-container-orgheadline9" class="outline-4"><h4 id="orgheadline9"><span class="section-number-4">1.4.4</span> 4.4 减去必不可少的饮食</h4><div class="outline-text-4" id="text-1-4-4"><p>假设一天三顿饭，每顿餐前准备+吃完饭时间30分钟，那么一天共需1.5小时。</p><p>具体这样计算：</p><ul class="org-ul"><li>根据日常经验，一顿饭的时间一般是15分钟，但是这只是纯粹的时间。</li><li>对于居家的情形，一顿饭不只如此（不是你一个人吃饭），算上餐前/餐后事项（上桌与撤桌），却可能在近一个小时！</li><li>即便是最简洁的快餐、外卖，相关的选择、到达指定地点、以及排队等也是需要时间的。</li></ul><p>这里只将餐前餐后那些家务性的事情先省略，得出这样的时间，平均起来，也应该是合理的。</p><p>——一周还剩：72-1.5*7 = 71.5小时 = 4290分钟。</p></div></div><div id="outline-container-orgheadline10" class="outline-4"><h4 id="orgheadline10"><span class="section-number-4">1.4.5</span> 4.5 减去必定要做的卫生</h4><div class="outline-text-4" id="text-1-4-5"><p>假设每天卫生间，小便（3-5次）大便（1次）算上洗手加起来共需20分钟。</p><p>——一周还剩：4290-20*7 = 4150分钟。</p></div></div><div id="outline-container-orgheadline11" class="outline-4"><h4 id="orgheadline11"><span class="section-number-4">1.4.6</span> 4.6 减去必不可少的精力恢复</h4><div class="outline-text-4" id="text-1-4-6"><p>假设你日间间歇休息的时间（发呆、恢复精力、调整状态、午休等），每天需30分钟，另外工作日午休需15分钟。</p><p>具体这样计算：</p><ul class="org-ul"><li>上午工作/活动间隙：15分钟。</li><li>下午工作/活动间隙：15分钟。</li><li>午休：15分钟。</li></ul><p>——一周还剩：4150-30*7-15*5=3865分钟。</p></div></div><div id="outline-container-orgheadline12" class="outline-4"><h4 id="orgheadline12"><span class="section-number-4">1.4.7</span> 4.7 减去不知不觉的移动</h4><div class="outline-text-4" id="text-1-4-7"><p>假设你每天行走时间（不可能一直呆在原处）只有35分钟。</p><p>具体的计算：</p><ul class="org-ul"><li>本人上班通勤，不算坐车而是走到车站的时间，每次都往往15分钟，家里和公司离车站都不远，实际一天上下班两趟应该在30分钟。</li><li>周末活动应该大于通勤的行走吧，也算成30分钟。</li><li>平时活动，拿东西，卫生间等等，怎么都是要行走的，就算5分钟。</li></ul><p>已经尽可能少的计算了，我记得以前上小学初近10年，家里到学校步行正好1000米15分钟，大概1500步，1分钟100步，如果你有记录步数的工具，会更精确。</p><p>——一周还剩：3865-35*7 = 3620分钟。</p></div></div><div id="outline-container-orgheadline13" class="outline-4"><h4 id="orgheadline13"><span class="section-number-4">1.4.8</span> 4.8 减去不知不觉的休闲、交际</h4><div class="outline-text-4" id="text-1-4-8"><p>假设你每天闲聊时间（电话、微信、网络、朋友、亲人、同僚）只有30分钟。</p><p>具体的计算：</p><ul class="org-ul"><li>上网</li><li>电话</li><li>微信</li><li>朋友圈</li><li>闲聊</li><li>等等</li></ul><p>这个也是尽量少的计算了的，我上网不是很多，电话很少，微信也很少聊，一般都是咨询或者意料外的联系与交际。我想对于一般人而言，单单刷朋友圈就不止这些时间吧？</p><p>——一周还剩：3620-30*7 = 3410分钟。</p></div></div><div id="outline-container-orgheadline14" class="outline-4"><h4 id="orgheadline14"><span class="section-number-4">1.4.9</span> 4.9 减去不得不进行的健康医疗</h4><div class="outline-text-4" id="text-1-4-9"><p>假设生病就医的时间一周平均1.5小时。</p><p>具体的计算不可能每个人都不会生病，而且每次生病对时间消耗的影响非常的大，不但生病期间状态和效率低下，而且看病也是要花费时间的如：</p><ul class="org-ul"><li>预约</li><li>排队</li><li>去医院</li><li>就医</li><li>买药</li><li>等等</li></ul><p>每次折腾下来，严重的往往几天没有精神，每年都平均有1到2次不大不小的病状。</p><p>假设每年1次，每次一天多，那一个月平均下来约2、3个小时，一周就算半个小时吧。</p><p>另外，</p><ul class="org-ul"><li>家里如果有任何一个人有生病，尤其是家里老人、小孩的体弱者的情况，受到的影响</li><li>学校中，就是走的很近的朋友/同学/舍友生病，受到的影响</li></ul><p>假设每个人身边有2个这样的人吧，按照前面计算，每人平均半个小时，两个人就是1个小时。</p><p>——一周还剩：3410-90=3320分钟。</p></div></div><div id="outline-container-orgheadline15" class="outline-4"><h4 id="orgheadline15"><span class="section-number-4">1.4.10</span> 4.10 减去必须要做的事务</h4><div class="outline-text-4" id="text-1-4-10"><p>假设家务和规划、日常琐事、意料之外事项占用的时间只有：12小时50分钟+10.5小时+6.5小时+1小时10分钟+1小时45分钟 = 32小时45分钟 = 1965分钟</p><p>具体的计算：</p><p>家务类：12小时50分钟</p><ul class="org-ul"><li>对于居家人员，换洗衣物、被褥、清洁整理是必要的事情，就算你比较邋遢、有别人为你做这些，至少平均也需要20分钟/天，一周2小时20分钟；</li><li>清洁卫生，主要是餐后清洁、扫地拖地、家具擦拭、清洗/晾晒衣物被褥等，这个时间不固定的，按照经验，一日三餐餐后的洗碗和整理一般是20分钟一次，扫地拖地家具擦拭那次都不会少于1个小时，少点算吧，减去30分钟也得是：20*3+60-30=90分钟/天，一周10.5小时；</li></ul><p>餐前准备：10.5小时</p><ul class="org-ul"><li>居家人员做饭，是我亲身实践的事情，每次饭菜做好的时间，哪怕是简单的一饭一荤一素，都远远不止1个小时，何况是不止一个人的饭菜；</li><li>若只在外面吃饭，外卖或餐饮店，点餐选餐也是需要时间的（似乎前面已经算到了），不排除个别时候的高效。</li></ul><p>所以不多算，餐前准备这一项，就以平均30分钟一顿的时间，就是30*3=90分钟/天，一周10.5小时；</p><p>日常消费：6.5小时</p><ul class="org-ul"><li>日常生活中的衣食住行，是不可少的，每隔一段时间必定会去一趟商场、超市，一次至少要2个小时的时间，即便是网购也只是选择上方便，时间实际不会少多少，而有些人甚至每天都会有一些小的消费（抽烟、饮料、零食、等等），姑且，总共我们就算一周3个小时吧；</li><li>走亲访友，相信每个人每个月至少得有，一次从头到尾怎么都要4个小时以上的时间，而如果是出远门的，甚至会更多，姑且算作一个月15个小时吧，平均下来一天0.5小时，一周3.5小时。</li></ul><p>规划排程：1小时10分钟</p><ul class="org-ul"><li>对生活中的事务，如果多或复杂的时候，总是要做一些规划的，日常我们处理的事务太多了，少算一些，假设一天就10分钟吧（实际远远不止），一周也要70分钟。</li></ul><p>意料外：1小时45分钟最后，作业、加班、客户、小孩生病，这些不想发生的事情，没有计算到的事情，相信大多数人都会经历吧，就算15分钟，很少了，一周也要105分钟。</p><p>实际上，相信大多数人，远远不止于此，然而，所剩太少了，还是到此为止吧。</p><p>——一周还剩：3320-1965=1355分钟</p></div></div></div><div id="outline-container-orgheadline16" class="outline-3"><h3 id="orgheadline16"><span class="section-number-3">1.5</span> 5 答案</h3><div class="outline-text-3" id="text-1-5"><p><b>没错，按照这样的方式计算，最后的答案就是：我们的一周，只有1355分钟。</b></p><p>可能有人会想，算了这么多的时间，正常这就是一个人的生活啊，算这些有什么意义？</p><p>首先，我们要注意，以上要做的事情，我都是刻意加上了：必须要做、不得不做、必不可少、不知不觉……之类的修饰，也就是说，这些事情，不是你能控制的。</p><p>再者，回到前面的提问，计算这些时间，是为了逐渐提取出我们真正想要的、能够控制的时间。平时被太多的事务蒙蔽了双眼的我们，以为自己有很多的时间，实际呢？我们的时间，少的可怜。</p><p>显然，显然这样计算是不准确的，有些方面也过于片面，计算的方式过于简单……等等，而且这里所做的工作是相对徒劳的，因为太多的不速之客、意外事件、中断干扰、请人帮忙、帮助别人……等等等等，我都没有计算在内，也不可能全部都想象的到，因为剩下的时间太少了，也姑且只算这么多吧。相信大家肯定还能再加入不少的类似的时间，但是，加入的越多，就意味着下面你似乎能剩下的可控时间越少了。</p><p>不过，至少这样或多或少的，应该能得到比猜想更接近真实结果的答案吧。我们至少能够稍微感知的到，我们真正拥有的时间，很少，很少，在下次计划一个事情的时候（比如我要一个月内看完一本提升自我的书籍），就会更容易仔细的斟酌而非随意决定了。</p><p>所以，至此为止还有1355分钟，不是小时，所以，折合起来我们一周的可控时间至多是：23小时不到，平均3小时多一点/天。</p></div></div><div id="outline-container-orgheadline17" class="outline-3"><h3 id="orgheadline17"><span class="section-number-3">1.6</span> 6 怎样</h3><div class="outline-text-3" id="text-1-6"><p>然后在一周仅剩的这23个小时中，我们需要做哪些事情呢？</p></div><div id="outline-container-orgheadline18" class="outline-4"><h4 id="orgheadline18"><span class="section-number-4">1.6.1</span> 消耗</h4><div class="outline-text-4" id="text-1-6-1"><p>首先，还得承认，我们倾向于享受生活，一切都是为了生活，所以有类似如下的活动。</p><p>姑且称作“娱乐休闲”吧。很多类型，朋友、亲人、同事、同学，旅游、游戏、上网、户内外活动、商场购物等等，究竟喜欢花费多久是因人而异的。</p><p>举个简单的例子：</p><ul class="org-ul"><li>比如每个周末都会出去散步、或者电视、小说等等，这些活动，每周都有而且不止一次，每次不止1个小时，算2小时吧。</li><li>时常公司还会有些聚会活动，陪家人看看电影电视，休闲娱乐……每次都不会少于2-3个小时，即便每个月只有两次那每周也得有至少1个小时的时间预留给它们。</li><li>相信每个人不可能一周不上网，甚至每天上网的时间不止半个小时……就算3个小时吧。</li></ul><p>实际远远不止，但是，少算一些，暂时先这样吧，因为时间还剩：23-2-1-3=17小时，只剩下平均每天2个多小时了。</p></div></div><div id="outline-container-orgheadline19" class="outline-4"><h4 id="orgheadline19"><span class="section-number-4">1.6.2</span> 积累</h4><div class="outline-text-4" id="text-1-6-2"><p>其次，享受生活，必然是在一定物质、非物质的积累基础之上。</p><p>有些人喜欢进取，这类活动安排的就多；反之，有些人可能完全没有这方面的安排。</p><p>姑且将这些活动，分为三个方面：</p><ul class="org-ul"><li>个人管理</li><li>学习进修</li><li>事业方面</li></ul><p>实际也远远不止，但是，还是少列出一些，因为时间不多了。一天2个多小时，一周17个小时的时间内，你要进行这些的事情，以保证生活正常进行。</p><p>那么，剩下的这些时间中，该怎么分配呢？</p></div></div></div></div><br><div id="mypostamble" align="right" style="float:right" class="status">    <table> <tbody> <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Author</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">QuietHeart</td>  </tr><tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Email</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">    <a href="mailto:quiet_heart000@126.com" target="_blank" rel="noopener">quiet_heart000@126.com</a>  </td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Date</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">[2019-02-19 二]</td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Update</td>  <td style="border-style: solid;border-width:1px;border-right:0px;"><2019-05-05 日 14:04:02></2019-05-05></td></tr>    </tbody></table></div><br>]]></content>
    
    <summary type="html">
    
      
      
        

&lt;style type=&quot;text/css&quot;&gt;
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
            
      
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
      <category term="note" scheme="http://0.0.0.0:4000/categories/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>2017年舒尔特数字表训练总结--挣扎在路上</title>
    <link href="http://0.0.0.0:4000/2018/03/16/schulte_table_2017/"/>
    <id>http://0.0.0.0:4000/2018/03/16/schulte_table_2017/</id>
    <published>2018-03-15T16:00:00.000Z</published>
    <updated>2019-09-11T08:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">  .title  { text-align: center;             margin-bottom: .2em; }  .subtitle { text-align: center;              font-size: medium;              font-weight: bold;              margin-top:0; }  .todo   { font-family: monospace; color: red; }  .done   { font-family: monospace; color: green; }  .priority { font-family: monospace; color: orange; }  .tag    { background-color: #eee; font-family: monospace;            padding: 2px; font-size: 80%; font-weight: normal; }  .timestamp { color: #bebebe; }  .timestamp-kwd { color: #5f9ea0; }  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }  .org-center { margin-left: auto; margin-right: auto; text-align: center; }  .underline { text-decoration: underline; }  #postamble p, #preamble p { font-size: 90%; margin: .2em; }  p.verse { margin-left: 3%; }  pre {    border: 1px solid #0c0;    box-shadow: 1px 1px 1px #0e0;    padding: 8pt;    font-family: italic monospace;    color: #C7EDCC;    background-color: #111111;    overflow: auto;    margin: 1.2em;  }  pre.src {    position: relative;    overflow: visible;    padding-top: 1.2em;  }  pre.src:before {    display: none;    position: absolute;    background-color: black;    top: -10px;    right: 10px;    padding: 3px;    border: 1px solid black;  }  pre.src:hover:before { display: inline;}  pre.src-sh:before    { content: 'sh'; }  pre.src-bash:before  { content: 'sh'; }  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }  pre.src-R:before     { content: 'R'; }  pre.src-perl:before  { content: 'Perl'; }  pre.src-java:before  { content: 'Java'; }  pre.src-sql:before   { content: 'SQL'; }  table { border-collapse:collapse; }  caption.t-above { caption-side: top; }  caption.t-bottom { caption-side: bottom; }  td, th { vertical-align:top;  }  th.org-right  { text-align: center;  }  th.org-left   { text-align: center;   }  th.org-center { text-align: center; }  td.org-right  { text-align: right;  }  td.org-left   { text-align: left;   }  td.org-center { text-align: center; }  dt { font-weight: bold; }  .footpara { display: inline; }  .footdef  { margin-bottom: 1em; }  .figure { padding: 1em; }  .figure p { text-align: center; }  .inlinetask {    padding: 10px;    border: 2px solid gray;    margin: 10px;    background: #ffffcc;  }  #org-div-home-and-up   { text-align: right; font-size: 70%; white-space: nowrap; }  .linenr { font-size: smaller }  .code-highlighted { background-color: #ffff00; }  .org-info-js_info-navigation { border-style: none; }  #org-info-js_console-label    { font-size: 10px; font-weight: bold; white-space: nowrap; }  .org-info-js_search-highlight    { background-color: #ffff00; color: #000000; font-weight: bold; }    code {        border:groove #555555;border-width:thin;        background-color: #111111;color: #C7EDCC;    }#table-of-contents {    font-size: 9pt;    position: fixed;    right: 10px;    top: 14em;    margin:0;    padding:0;    border-width:1px;    border-style:solid;    background: #000000;    -webkit-box-shadow: 0 0 1em #777777;    -moz-box-shadow: 0 0 1em #777777;    -webkit-border-bottom-left-radius: 5px;    -moz-border-radius-bottomleft: 5px;    text-align: right;    /* ensure doesn't flow off the screen when expanded */    max-height: 60%;    overflow: auto;     z-index: 200;}#table-of-contents h2 {    font-size: 9pt;    max-width: 8em;    font-weight: normal;    padding-left: 0.5em;    padding-top: 0.05em;    padding-bottom: 0.05em; }#table-of-contents ul {    margin-left: 14pt;     margin-bottom: 10pt;    padding: 0}#table-of-contents li {    padding: 0;    margin: 1px;    list-style: none;}#table-of-contents ul>:first-child {    color: blue;}#table-of-contents #text-table-of-contents {    display: none;    text-align: left;}#table-of-contents:hover #text-table-of-contents {    display: block;    padding: 0.5em;    margin-top: -1.5em; }</style><div id="table-of-contents"><h2>Table of Contents</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 20170301注意力训练心得</a></li><li><a href="#orgheadline2">2. 20170306注意力训练心得</a></li><li><a href="#orgheadline3">3. 20170309</a></li><li><a href="#orgheadline4">4. 20170316</a></li><li><a href="#orgheadline5">5. 20170318</a></li><li><a href="#orgheadline6">6. 20170320</a></li><li><a href="#orgheadline7">7. 20170331之前</a></li><li><a href="#orgheadline8">8. 20170401</a></li><li><a href="#orgheadline9">9. 20170402</a></li><li><a href="#orgheadline10">10. 20170407</a></li><li><a href="#orgheadline11">11. 20170405看清再点</a></li><li><a href="#orgheadline12">12. 20170407逐渐稳定、清晰的视野</a></li><li><a href="#orgheadline13">13. 20170412 （你的手指不是思考与预知的结果，而是视线扩展的进度）</a></li><li><a href="#orgheadline14">14. 20170412 （将注意力从手指和速度上转移到视野清晰范围上）</a></li><li><a href="#orgheadline15">15. 20170413 （用眼睛直接看比用脑袋去推测更快更轻松）</a></li><li><a href="#orgheadline16">16. 20170413 （训练的重点是眼睛，而非脑袋或手指）</a></li><li><a href="#orgheadline17">17. 20170413 （不要等待不要顾及，尽量延伸你的目光，手指自然不会闲的）</a></li><li><a href="#orgheadline18">18. 20170414 （重点在于看到所有的数字而非点到）</a></li><li><a href="#orgheadline19">19. 20170414 （训练的是视线而非反应）</a></li><li><a href="#orgheadline20">20. 20170416 （只要看到就应能注意到，不存在余光或焦点）</a></li><li><a href="#orgheadline21">21. 20170504 （快到一定程度后，就变成视线广度而非反应的问题了）</a></li><li><a href="#orgheadline22">22. 20170510公平</a></li><li><a href="#orgheadline23">23. 20170507凝聚</a></li><li><a href="#orgheadline24">24. 20170508 余光</a></li><li><a href="#orgheadline25">25. 20170512 替代常规</a></li><li><a href="#orgheadline26">26. 20170518 印象</a></li><li><a href="#orgheadline27">27. 20170520 训练方向-余光</a></li><li><a href="#orgheadline28">28. 20150522 训练方向-独立的数字</a></li><li><a href="#orgheadline29">29. 20170523 两个重点</a></li><li><a href="#orgheadline30">30. 20170524 规律</a></li><li><a href="#orgheadline31">31. 20170524 是看不是找</a></li><li><a href="#orgheadline32">32. 20170524 注意与记忆的容量与起点</a></li><li><a href="#orgheadline33">33. 20170524 关闭记忆的能力</a></li><li><a href="#orgheadline34">34. 20170528 行为本身就是目的</a></li><li><a href="#orgheadline35">35. 20170615 找与看</a></li><li><a href="#orgheadline36">36. 20170620 不用点的训练</a></li><li><a href="#orgheadline37">37. 20170620 只看不点</a></li><li><a href="#orgheadline38">38. 20170622 探索</a></li><li><a href="#orgheadline39">39. 20170622 放松后每次实际不只一个数字</a></li><li><a href="#orgheadline40">40. 20170622 毫无犹豫的信心</a></li><li><a href="#orgheadline41">41. 20170629 预知又好用了？</a></li><li><a href="#orgheadline42">42. 20170711 勇往直前</a></li><li><a href="#orgheadline43">43. 20170711 一轮训练，多个机会</a></li><li><a href="#orgheadline44">44. 20170711如果数字是独立的</a></li><li><a href="#orgheadline45">45. 20170712 预知与独立</a></li><li><a href="#orgheadline46">46. 20170713去除关联</a></li><li><a href="#orgheadline47">47. 20170714没有开始</a></li><li><a href="#orgheadline48">48. 20170721不要聚焦</a></li><li><a href="#orgheadline49">49. 20170721由点到面</a></li><li><a href="#orgheadline50">50. 20170816 反复的看</a></li><li><a href="#orgheadline51">51. 20170828 一视同仁</a></li><li><a href="#orgheadline52">52. 20170908 忘记</a></li><li><a href="#orgheadline53">53. 20170915 整体去看</a></li><li><a href="#orgheadline54">54. 20170915 是看不是找</a></li><li><a href="#orgheadline55">55. 28170916 宁慢勿错</a></li><li><a href="#orgheadline56">56. 20171012 看，宽</a></li><li><a href="#orgheadline57">57. 20171013视线与反应</a></li><li><a href="#orgheadline58">58. 20171013关键</a></li><li><a href="#orgheadline59">59. 20171020 切换</a></li><li><a href="#orgheadline60">60. 20171021指不从心，指随眼落</a></li><li><a href="#orgheadline61">61. 20171022 重点是视线</a></li><li><a href="#orgheadline62">62. 20171024 开始在后面</a></li><li><a href="#orgheadline63">63. 20171027 没有负担地看</a></li><li><a href="#orgheadline64">64. 20171031 相信</a></li><li><a href="#orgheadline65">65. 20171031 限制</a></li><li><a href="#orgheadline66">66. 20171106 手指在哪</a></li><li><a href="#orgheadline67">67. 20171108 点的技巧</a></li><li><a href="#orgheadline68">68. 20171110阅读的乐趣</a></li><li><a href="#orgheadline69">69. 20171110 顺序</a></li><li><a href="#orgheadline70">70. 20171115看完</a></li><li><a href="#orgheadline71">71. 20171115 忽略手指</a></li><li><a href="#orgheadline72">72. 20171123 维持完整</a></li><li><a href="#orgheadline73">73. 20171128 奇妙的状态</a></li><li><a href="#orgheadline74">74. 20171202 不断的开始</a></li><li><a href="#orgheadline75">75. 20171203 加速度</a></li><li><a href="#orgheadline76">76. 20171206 克制</a></li><li><a href="#orgheadline77">77. 20171214 关注</a></li><li><a href="#orgheadline78">78. 20171214 协调</a></li><li><a href="#orgheadline79">79. 20171215 分组</a></li><li><a href="#orgheadline80">80. 20171225 有的放矢</a></li><li><a href="#orgheadline81">81. 20171226 手速</a></li><li><a href="#orgheadline82">82. 20171226 机会与微调</a></li><li><a href="#orgheadline83">83. 20171226 精力分配</a></li><li><a href="#orgheadline84">84. 20180205 分享一下训练技巧与心得</a><ul><li><a href="#orgheadline85">84.1. 手速-单手练</a></li><li><a href="#orgheadline86">84.2. 协调-双手练</a></li><li><a href="#orgheadline87">84.3. 视幅-不用手，只用眼</a></li><li><a href="#orgheadline88">84.4. 敏感度-不用手，不用眼</a></li><li><a href="#orgheadline89">84.5. 理论值</a></li></ul></li></ul></div></div><p>汇总一下2017整年的舒尔特训练过程，每个阶段有不同的体悟。</p><p>通过不断尝试与调整新的方式和思路，在尽可能多的方向上进行探索。</p><p>所有的内容并不一定是正确的，</p><p>希望能助大家探索到正确的道路。</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 20170301注意力训练心得</h2><div class="outline-text-2" id="text-1"><p>速度：4*4稳定在6.5~7.5秒原理：目光不要移动，不要聚焦</p><p>解释：在舒尔特表中，找到目标数字后，不要将焦点集中到已找到的目标上，继续找下一个，在寻找的时候不要目光移动，目光始终停在表中间，用"余光"找，尽量克服被移动的手指，吸引你的目光焦点</p><p>技巧，可用一只眼睛练习，体验下不移动眼睛找目标的感觉，这样似乎容易些。</p><p>猜测：熟练后，下一步或许是记住看过的数字，使复杂度由o(n*n)变到o(n).</p></div></div><div id="outline-container-orgheadline2" class="outline-2"><h2 id="orgheadline2"><span class="section-number-2">2</span> 20170306注意力训练心得</h2><div class="outline-text-2" id="text-2"><p>速度：4*4稳定在5.5~6.5秒</p><p>原理：看到的先是图像，不要翻译成意义</p><p>解释：此步骤确实复杂度都变成o(n)了，但是主要不是靠回忆达成的，目光扫描且看到的都是图形，不要考虑翻译成意义，杜绝默念。而是现搜索现确定，不要考虑语义记忆因素，因为回忆的时候会下意识地使用语言，导致寻找位置的时候，会下意识地思考它的意义。其实，尽量让眼睛扫描到数字，但是，不要考虑数字的意义，也不要考虑数字，谁大谁小谁先谁后，只把它们当作图形来处理，心里，看你念着到了那个数字，眼睛看到去点就行，根本不用念到数字后再考虑数字意义，比谁大比谁小等（虽然左脑总是想翻译，不翻译的话这样也能让左脑轻松些，这时你是能感觉到速度飞快，但是却很轻松的），这样寻找的速度是也稳定不会时快时慢。目光尽量要放宽，扫描到数字，但是，数字都是图形，扫描到之后，到了那个数字手自然会点到，而不是因为心里判断的意义才去点。这样会感觉到，速度大幅提升，而且，在，训练的时候，脑袋里还能思考别的事情，感觉思考别的事情所用的精力，与训练时的精力是相互不干扰的，甚至可以尝试在训练时，脑袋里，尽量去考虑别的事情，用别的事情来占用左脑精力，使得训练精力尽少使用左脑而是用右脑。猜测：下一步才可能是记忆，不是记忆，因为如果，使用右脑图像搜索不熟练，回忆时会自然使用语言、逻辑、抽的方式，会影响，右脑的直观图像搜索功能。等右脑直观图像搜索熟练后，再考虑记忆，记忆的时候，也不要考虑意义，而是要直接图像印到脑子里，不要考虑意义。还有，左右脑结合。</p><p>技巧，想别的占用左脑，或快速点，不让左脑有默念分析的机会</p></div></div><div id="outline-container-orgheadline3" class="outline-2"><h2 id="orgheadline3"><span class="section-number-2">3</span> 20170309</h2><div class="outline-text-2" id="text-3"><p>不要只追求右脑，要尽量放宽视野。比如，从一数到十六，找每个数的同时，眼睛里其他的数也看得见，其实找十六个数相当于把每个数过了十六遍。千万不要把目光的焦点来回移动。</p></div></div><div id="outline-container-orgheadline4" class="outline-2"><h2 id="orgheadline4"><span class="section-number-2">4</span> 20170316</h2><div class="outline-text-2" id="text-4"><p>点击的时候没有相互关系，看到的图像点了就行了。不用考虑怎么读，下一个是什么上一个，有什么关系等？看到就点。</p></div></div><div id="outline-container-orgheadline5" class="outline-2"><h2 id="orgheadline5"><span class="section-number-2">5</span> 20170318</h2><div class="outline-text-2" id="text-5"><p>要的不是理解，而是尽快的看到。不管看到的是什么，要尽快看到。因为右脑的功能是输入信息，左脑是加工信息。不需要加工，只需输入。要注意，看到的意思。看到后不要去理解，那样会累，也会降低速度。这也考验你控制不用左脑的能力。</p></div></div><div id="outline-container-orgheadline6" class="outline-2"><h2 id="orgheadline6"><span class="section-number-2">6</span> 20170320</h2><div class="outline-text-2" id="text-6"><p>眼睛目光定在中心，一定不要转。习惯目光固定的点数字。</p></div></div><div id="outline-container-orgheadline7" class="outline-2"><h2 id="orgheadline7"><span class="section-number-2">7</span> 20170331之前</h2><div class="outline-text-2" id="text-7"><p>在提高手的速度之前，先把4×4练好也就是视觉的范围以及右脑思维，手的速度，靠3×3练习。然后标准练习。</p><p>让目光放宽不过于焦距的方法：在选一个数字前，先确保边缘（四角）的数字看清再选。</p><p>目的是看数字数字尽收眼底，然后赶快点，不要去想它是啥，不要去读它是啥？看到了就是为了去看。</p><p>从1到9。看着还不错，十以上，也要以1-9方式来寻找，不要去想数字的意义，还是直接整体当成图像识别。</p><p>不去预知下一步的位置就不会，移动目光了。有信心，找的东西一定在视野之内，这样的话就不会去找下一次是啥。</p><p>要明白一件事，东西都在自己的视野范围之内，那就没有必要去找下一个，直接，该点哪，就点看到的就行，肯定能看到，所以不用考虑左脑的意志了。你会感觉到不是你，预知的东西牵引着你的目光，和寻找的位置，而是你看到的东西，随着你的点中，牵着你的预知往前走。因为你点的很快，超出了你的预知速度，所以也不用担心由于预知的慢而破坏了点的节奏。预知其实就是左脑，而你看到的，已经存在的东西，根本不用费心去预知，这是右脑。而造成这种感觉逐渐形成的条件就是，你的目光一定在中间不要来回移动去寻找什么。</p><p>你到你觉得因为太快而担心会慢下来，那原因多半是因为你，开始了寻找。已经在那了，根本不用寻找。不会越来越慢，只会越来越快。要相信这一点，就更要固定你的视线，不要移动你的目光。</p></div></div><div id="outline-container-orgheadline8" class="outline-2"><h2 id="orgheadline8"><span class="section-number-2">8</span> 20170401</h2><div class="outline-text-2" id="text-8"><p>记忆力是变相扩大了视野，在小小舒尔特表前，还不需要</p><p>不要过于太意速度的快慢，要将练习时领会到非左脑的感觉控制自如</p><p>要明白数字不是你感觉轮到的时候才注意到它，要在落下手指时感觉它原本就在那里，不比后面的提前，也不比以前的落后</p></div></div><div id="outline-container-orgheadline9" class="outline-2"><h2 id="orgheadline9"><span class="section-number-2">9</span> 20170402</h2><div class="outline-text-2" id="text-9"><p>练习的时候目光固定，并且每个数字点的时候，都能够心里很明白也能同时看到其他的数字，也就是说，你不要期望下一个数字，是你预期的某个数。你要觉的下一个数字可能是随机的任何一个数字，但是，即便是任何一个数字，你也能够立即点到，这样能够防止你内心的默念以及分心寻找预测下一个究竟是什么数字？在你，数数字的时候，脑袋里却没有思考。虽然你说数字的规律是顺序的，但是脑袋里只有，在你数到了的数字上，才能知道当前到了哪里，数道之前，不要思考。</p><p>要明白舒尔特数字表示用来看数字的不是用来数数字的。不是为了能快速点到数的数字，而是点到而是看到的数字。之所以用顺序的数，那是因为我们自身无法快速随机生成无重复数字。所以，我们用快速的数，来模拟随机的生成，以便于看到。但是不要本末倒置，数的目的是为了给看一个目标。但是不要去预测看的目标。这样做，也可以有助于我们分离左脑和右脑思维。</p><p>其实用脑袋，默默的数数，容易给人造成一种误解，最好的方式应该是，能有一个跟得上你的节奏的机器，大声的发出顺序的数字。然后你的眼睛，立刻去看到那个数字，如果机器大声发出随机的数字，你也能立刻去看到。可惜没有这样的机器，我们只能用自己的脑袋顺序的模拟数字的发声，这样就给我们造成一种误解，为了能尽快的看到数字，我们提前去预知下一个要数的数字是什么？这反而摒弃了练习的目的。但是这种，方式并不与练习冲突。它恰恰训练了我们，能够善于分离左脑右脑的习惯。我们在数数字之前，尽量的看清楚每一个数字。既然都看清楚了，当然就不用预知了。数到点到，仅此而已。所以重点不是，杜绝默念，默念并非完全错误，重点在于尽量不要在没有看清楚全貌的时候去点，那样你的脑袋会不由自主的去预知，即便默念，也不是预知。每点一个数字的，都是因为你看全了所有的数字，点的越快，说明你的视觉，越稳定，也就是注意力越稳定。应该是这样的吧！</p><p>练习有了重点。首先是不要去默念，而是靠视觉看到。其次是要视线固定在中心就达到看的目前。而今，重点转移到了，要做到每点一个数字之前，保证全部的数字都清晰，再去点。这样就不用，在意什么不要默念，不要思考，等等的问题。练习中如果方式对了你会发现，其实点的慢，不是因为，反应慢的问题，而是因为你的眼睛的，范围不够。因为能尽快的看到而快，而不是因为反应快而快。这样即便你的速度降下来，你还是进步的，反之，即便你速度快了，你也只感觉是因为幸运实际并无进展。尽快找到这样的感觉。</p><p>现在的目的有两个：第一是尽快的看到那个数字，第二是在看到的那个数字时候也保证其他数字也看到了，这样才达到了目的，达到这两个目的之后再点下去。其实目的都是为了去看，尽快点完，但是大多数时候，往往，注意了第一条，忘记了第二点。说法是一样的，但是意义却不一样了。</p></div></div><div id="outline-container-orgheadline10" class="outline-2"><h2 id="orgheadline10"><span class="section-number-2">10</span> 20170407</h2><div class="outline-text-2" id="text-10"><p>并不是一直都有收获的，每次收获，可能不是最好的，甚至是错误的，但却是当前自己最好的收获，因为它毕竟让自己推进了一点，于是每次都会将这种感觉记下。可是，并不一直是这么顺利的，每次到一定程度都觉得不会再进步了，渐渐的感觉很累，很枯燥，感觉已经没有什么进展的余地了，幸运的是还能看到有很多人有更好的成绩，为什么呢？这也给了我坚持下去的信心，相信一定还有没有做到的地方，这信心就像自己在感觉前面一片黑暗的状况下，心中的一盏灯，并且，是真实的，因为确实有人拿出了更好的成绩。然后，在痛苦的坚持下，终于某时，有了柳暗花明又一村的感觉，就是在这个状态下，让我不断发现新的收获。</p></div></div><div id="outline-container-orgheadline11" class="outline-2"><h2 id="orgheadline11"><span class="section-number-2">11</span> 20170405看清再点</h2><div class="outline-text-2" id="text-11"><p>每次的目的不是点，点的时候，只看到你点的目标。而是不只你点的目标，其他的目标也同时看到这个时候再点。</p><p>先把视野广度练习稳定，先不要在意默念。点击的条件：1.看到目标数字 2.其它数字也清晰</p></div></div><div id="outline-container-orgheadline12" class="outline-2"><h2 id="orgheadline12"><span class="section-number-2">12</span> 20170407逐渐稳定、清晰的视野</h2><div class="outline-text-2" id="text-12"><p>先让视野稳定，再开始点。视野稳定的意思是，看一会，感觉全部数字看到了，并且有信心在点的时候不会停顿。这样慢也能感觉到训练达到了目的，稳定的时候点，即便快也没达到目的。关键时间要消耗在稳定视线上（其实就是注意力的集中与稳定），而非寻找的上面。毕竟我们练的重点应该是视界，而非反应。注意：视野的稳定并不是记忆数字的位置。</p><p>如果无法一次看全，可在迅速点的同时尽快拓广视野，清晰没在视野的数字，而非专注于下个数字是啥。扩展视野，不只是范围上，也包括每一个数字的清晰度上。然后你会感觉到，随着练习，每轮练习中，你的视野像洒在桌上的水，扩展的越来越快，同时也像相机调焦由模糊变清晰的过程，清晰速度的越来越快，这是整体视野的训练，而非你找的越来越快。练习时应该要格外注意这点，不要为了一时的快而本末倒置（这也是量化自己进步的一个弊端）。</p></div></div><div id="outline-container-orgheadline13" class="outline-2"><h2 id="orgheadline13"><span class="section-number-2">13</span> 20170412 （你的手指不是思考与预知的结果，而是视线扩展的进度）</h2><div class="outline-text-2" id="text-13"><p>一定要体会到，不是你的脑袋牵引着你的眼睛，再到手指，而是你的眼睛直指牵引手指，同时脑袋才反应过来。不让脑袋绊住视线的一个技巧是，忘记时间，只要尽量把看到的一下子点完，看到就点，不要去想，即可，体会越来越清晰的余光。重点不是快速的点，那样会让你为了求速度而慌张紧张，重点是快速的把所有数字同时看清，而点的动作只是附带顺便尽量快的点，点慢了也无所谓。你的手指所落最终转变为不是思考与预知的结果，而是你视线扩展的进度。</p></div></div><div id="outline-container-orgheadline14" class="outline-2"><h2 id="orgheadline14"><span class="section-number-2">14</span> 20170412 （将注意力从手指和速度上转移到视野清晰范围上）</h2><div class="outline-text-2" id="text-14"><p>不要把心思不断的花费到每次要点的数字上，要注意在让所有数字清晰上。训练的目标就是将注意力如此转移到清晰上，从最初的不由自主的想你手指头该往哪点，到最后收放自如只顾数字，而非一气呵成就能达到的。</p></div></div><div id="outline-container-orgheadline15" class="outline-2"><h2 id="orgheadline15"><span class="section-number-2">15</span> 20170413 （用眼睛直接看比用脑袋去推测更快更轻松）</h2><div class="outline-text-2" id="text-15"><p>将手指变成视线扩展的进度，比思考要顺其自然，也快，也不慢。因为毕竟最终是看到的确定了结果，而非思考的。思考只需判断数字就够了，不用去找数字，找的工作由眼睛做，而非脑袋。</p></div></div><div id="outline-container-orgheadline16" class="outline-2"><h2 id="orgheadline16"><span class="section-number-2">16</span> 20170413 （训练的重点是眼睛，而非脑袋或手指）</h2><div class="outline-text-2" id="text-16"><p>先不要顾及手指往哪里点，先用眼睛尽快的把所有数字过一遍。手指的话能跟上眼睛的速度则尽量根上，眼睛扫描后，手指没有跟上，则从手指没有跟上的地方，再尽量过一遍数字，手指再进量跟上眼睛的速度。整个过程，注意力都集中在眼睛的尽量扫描上，手指只是附带的。不要让手指来分散你眼睛扫的注意力。大不了没有跟上眼睛翻过来从头再扫。关键是用眼睛去看，这样渐渐的眼睛扫完，到再渐渐的，眼睛扫完，并且能清晰起来。越来越清晰，手指也会自然的越来越快的。</p></div></div><div id="outline-container-orgheadline17" class="outline-2"><h2 id="orgheadline17"><span class="section-number-2">17</span> 20170413 （不要等待不要顾及，尽量延伸你的目光，手指自然不会闲的）</h2><div class="outline-text-2" id="text-17"><p>其实应该不能说目光牵着手指，其实手指应比目光快，所以才能说指落处便是目光扩展处。因为手指所向就是结果，结果是本来就存在的，它只是为了让目光看到，或思考预测到，本来就存在的，比任何发现要更快，所以说到底实质是手指一定比目光快，更比思考快。但是很多时候感觉目光更快，反正目光刻意等待手指，而手指本应比目光快，却反过来又等目光去扩展下一个，反而更慢了。也就是说，本来比手指慢的目光，却还以为它太快要等待手指，反而慢了。所以，不要顾及，不要怕忘记，不要等手指，目光尽快延伸，即可。</p></div></div><div id="outline-container-orgheadline18" class="outline-2"><h2 id="orgheadline18"><span class="section-number-2">18</span> 20170414 （重点在于看到所有的数字而非点到）</h2><div class="outline-text-2" id="text-18"><p>煅炼的是眼睛，手指如同考官只是告诉你结果对错的，根本不用训练，不要想那么复杂，若让视线停止扩展，就如同考场上的考生停止答卷，等待老师告诉你答完了后是否能告诉你对错一样可笑，这是常识，不用等待。认识到这点，训练才步入正轨，当然，也是需时间的，只需记住一点：你的心思要在考卷上而非考官。</p></div></div><div id="outline-container-orgheadline19" class="outline-2"><h2 id="orgheadline19"><span class="section-number-2">19</span> 20170414 （训练的是视线而非反应）</h2><div class="outline-text-2" id="text-19"><p>要达到：变慢的原因不是因为找的慢，而是看的慢</p><p>锻炼分两个阶段，第一去掉眼睛停顿的习惯，第二，去掉眼镜停顿习惯之后，才真正开始锻炼眼睛的广度和速度。两个阶段与手指都无关系。手指只是辅助的作用。成绩说不了什么</p></div></div><div id="outline-container-orgheadline20" class="outline-2"><h2 id="orgheadline20"><span class="section-number-2">20</span> 20170416 （只要看到就应能注意到，不存在余光或焦点）</h2><div class="outline-text-2" id="text-20"><p>当目光能一下子扩展到全部数字的时候，下一步就应该是，快速地将注意力，凝聚在每个数字上。</p><p>当达到了一定的程度，目光都不用移动，就能看到全部的数字。就好像用余光在看一样。看着数字，一个一个数一点到，目光根本不用移动，非常轻松。这个时候如果注意力一分散，状态就没了。</p></div></div><div id="outline-container-orgheadline21" class="outline-2"><h2 id="orgheadline21"><span class="section-number-2">21</span> 20170504 （快到一定程度后，就变成视线广度而非反应的问题了）</h2><div class="outline-text-2" id="text-21"><p>感谢以前看过的一则评论，引用为标题，忘记了出处，但是一句点醒梦中人：用扩大视界替代寻找，不思考替代默念，轻松替代紧张，几方面结合。</p><p>（每种技巧都有背后的原因，每份领悟都基于错误的经验）最近的新领悟，在以前领悟的基础上，进一步明白为何是看，是看全，不是记，不是念，不是找，不是只看一点，知道了为什么快且轻松，为什么两只手更快的深层次原因，知道了还是可以一只手继续，也许是对的。比如：将视线线性的扩展过程（即便你迅速地"从头到尾"看清了每个数字，但有头、尾，就表示线性），变成多维的扩展（从点到线，到面，到……维数越多，越稳定，因为"线"是很容易"断"的）。再一步解释，你"点"的过程是顺序（线性）的，但事实是，那些数字却不是顺序映入你的眼中。不刻意做这种非顺序到顺序的转换，才叫顺其自然，才会轻松，且快。这也是以前所感觉的，不要想，要看，的原理。其它类似。这些行为，是需要时间来习惯的，每次的领悟是经历过一段时间煅炼才能理解的，每次的技巧，也是煅炼到一定程度才适用的，对于更慢的和更快的阶段，都是错误的。其实，任何技巧方法经验领悟，都是对锻炼了一定程度而言的，对于合适的，它能点醒，对于不合适的，如同天书。但是，对于任何阶段都有一种万能的方法，就是明白，没有捷径，不断努力，相信会有更好，不要放弃，也不要自以为是。</p></div></div><div id="outline-container-orgheadline22" class="outline-2"><h2 id="orgheadline22"><span class="section-number-2">22</span> 20170510公平</h2><div class="outline-text-2" id="text-22"><p>所有数字都是公平的而非只是你要找的那个</p></div></div><div id="outline-container-orgheadline23" class="outline-2"><h2 id="orgheadline23"><span class="section-number-2">23</span> 20170507凝聚</h2><div class="outline-text-2" id="text-23"><p>当目光能一下子扩展到全部数字的时候，下一步就应该是，快速地将注意力，凝聚在每个数字上。</p></div></div><div id="outline-container-orgheadline24" class="outline-2"><h2 id="orgheadline24"><span class="section-number-2">24</span> 20170508 余光</h2><div class="outline-text-2" id="text-24"><p>当达到了一定的程度，目光都不用移动，就能看到全部的数字。就好像用余光在看一样。看着数字，一个一个数一点到，目光根本不用移动，非常轻松。这个时候如果注意力一分散，状态就没了。</p></div></div><div id="outline-container-orgheadline25" class="outline-2"><h2 id="orgheadline25"><span class="section-number-2">25</span> 20170512 替代常规</h2><div class="outline-text-2" id="text-25"><p>用扩大视界替代寻找，不思考替代默念，轻松替代紧张，几方面结合。</p></div></div><div id="outline-container-orgheadline26" class="outline-2"><h2 id="orgheadline26"><span class="section-number-2">26</span> 20170518 印象</h2><div class="outline-text-2" id="text-26"><p>个位数比较快的看到是因为它在你的头脑里，把更多的数字放到头脑里再看，比看到了头脑再知道要快很多</p></div></div><div id="outline-container-orgheadline27" class="outline-2"><h2 id="orgheadline27"><span class="section-number-2">27</span> 20170520 训练方向-余光</h2><div class="outline-text-2" id="text-27"><p>其实训练的是余光</p></div></div><div id="outline-container-orgheadline28" class="outline-2"><h2 id="orgheadline28"><span class="section-number-2">28</span> 20150522 训练方向-独立的数字</h2><div class="outline-text-2" id="text-28"><p>切断每个数字间的联系。每个数字与前面后面的都无关系，每次点都是重新开始点，不要把顺序的附近数字当成包袱。每个数字都是独立的，不要分心记忆与注意它们的关系。当然，视线还是要放宽的。学会把每个数字做为新的开始。每个数字点完就忘记它，只在点的时候在你心中（所有数字均在眼下）</p></div></div><div id="outline-container-orgheadline29" class="outline-2"><h2 id="orgheadline29"><span class="section-number-2">29</span> 20170523 两个重点</h2><div class="outline-text-2" id="text-29"><p>总结两点：第一每个数字都是独立的，切断数字间的联系。第二视线应该是相对固定的，不是不动，是用余光找。</p></div></div><div id="outline-container-orgheadline30" class="outline-2"><h2 id="orgheadline30"><span class="section-number-2">30</span> 20170524 规律</h2><div class="outline-text-2" id="text-30"><p>有一个规律可以试试，就是点数字的时候学会放下。具体点说，点完了一个数字，那个数字就没有用了，要学会忘记点过的数字，去点下一个。不要让过去的数字占据你的精力，一个个的去点，一个个的去忘记，很多时候都是因为心里放不下，觉得点过的数字或多或少还有点用，不舍得忘，但其实它会降低你的速度。学会忘记，再往后就是尝试不去预知，不考虑下一个将会是什么数字，下一个数字在哪，因为那也会影响你对视野广度的煅炼，让你花费更多的精力在逻辑顺序和记忆上了。可能数字少或开始时不断预知下一个甚至下几个会觉得快，但是那不是根本，到一定时候就不能再快了，因为精力和记忆力，注意力是有限的，而且数字越多练习越累，时间长不练习了还容易退步，成绩很不稳定。简言之，最终要学会把每个数字的联系斩断，每个数字都是孤立的，唯一的联系就是切换的瞬间。这样，你的精力便只集中于当下，也不要耗时去想过去与未来。个人的感受，可能也因人而异。</p></div></div><div id="outline-container-orgheadline31" class="outline-2"><h2 id="orgheadline31"><span class="section-number-2">31</span> 20170524 是看不是找</h2><div class="outline-text-2" id="text-31"><p>要达到：变慢的原因不是因为找的慢，而是看的慢</p></div></div><div id="outline-container-orgheadline32" class="outline-2"><h2 id="orgheadline32"><span class="section-number-2">32</span> 20170524 注意与记忆的容量与起点</h2><div class="outline-text-2" id="text-32"><p>一般都觉得是头1-10左右很快，然后就慢下来了，其实不是1-10，是头十几个数字，一般都习惯将数字起点设置为1，若把每个数字当做新的起点，那样会明显感觉轻松快速很多。当然足够多的训练，也会将十几个提升。</p></div></div><div id="outline-container-orgheadline33" class="outline-2"><h2 id="orgheadline33"><span class="section-number-2">33</span> 20170524 关闭记忆的能力</h2><div class="outline-text-2" id="text-33"><p>带着记忆去点，总是会分心去记忆前后，或判断，不能充分的煅炼眼睛。因为总是记忆，所以不能专心。当然，记忆也有好处，但过尤不及，若记忆分了你的专心，则减少记忆的量。专心的程度，取决于保持"不"记忆状态时间的长短。3*3太少，感觉不出来，适合练习速度与记忆；4*4稍少，可以练记忆与一点专心；5*5以上则主要是专心的程度。</p><p>20170528 煅炼的是眼睛不是手速锻炼的应该是看得更快，而不是点得更快，点不点到不重要，重要的是你看没看到，切记切记切记，你锻炼的是视野，不是速度。一旦你在意点击的速度，你的速度反而慢下来了，反而忘记了快慢，才会更好，因此需要把一些干扰排除。</p></div></div><div id="outline-container-orgheadline34" class="outline-2"><h2 id="orgheadline34"><span class="section-number-2">34</span> 20170528 行为本身就是目的</h2><div class="outline-text-2" id="text-34"><p>当你已经为了某种目的而来到了这里去做的时候，一切的目的都可转换为：在做的时候把那个目的忘掉。全身心的去做，无为而至。</p></div></div><div id="outline-container-orgheadline35" class="outline-2"><h2 id="orgheadline35"><span class="section-number-2">35</span> 20170615 找与看</h2><div class="outline-text-2" id="text-35"><p>在点的时候，每个数字开始是需要寻视，然后就都是清晰的了，不会因为点而清晰，也不会因为没点而模糊</p></div></div><div id="outline-container-orgheadline36" class="outline-2"><h2 id="orgheadline36"><span class="section-number-2">36</span> 20170620 不用点的训练</h2><div class="outline-text-2" id="text-36"><p>你关注的是视线，不是手指，手指只是顺带动动，能动不动，不能动也别让它影响了你的训练，手指停滞了错误了但别让视线停滞，大不了不动手指，只看完所有数字就退出来，这至少也达到训练视线的目的了。</p></div></div><div id="outline-container-orgheadline37" class="outline-2"><h2 id="orgheadline37"><span class="section-number-2">37</span> 20170620 只看不点</h2><div class="outline-text-2" id="text-37"><p>其实每轮训练时仅训练看完就行了，看完就返回，不用点。这样能更有针对性，效率也更高些，也能大至知道看的时间。这样到一定阶段后，再用手指来实践一下训练的成果。这样想来，手指挺误导人的。</p></div></div><div id="outline-container-orgheadline38" class="outline-2"><h2 id="orgheadline38"><span class="section-number-2">38</span> 20170622 探索</h2><div class="outline-text-2" id="text-38"><p>练习到一定时间遇到了瓶颈，可换一种方式，经常换方法，找感觉最好的方法。比如，有一个阶段觉得看的慢了，可能是由于顺序"默念"的原因，这时就换个方式，杜绝默念，整体去看，并行读。新方式不一定对，但会让你的前进方向更开阔更有动力和新鲜感</p></div></div><div id="outline-container-orgheadline39" class="outline-2"><h2 id="orgheadline39"><span class="section-number-2">39</span> 20170622 放松后每次实际不只一个数字</h2><div class="outline-text-2" id="text-39"><p>同时不是看到一个，是多个，一片数字，并且当你尝试数的时候，这一片数字不一定是相邻的，而且东一个西一个的分布着，所以当你数的时候发现是在一个一个的找的时候，立即停下来，转换一下方式，视野，等等。数字本来就被看着在那等你去数到的，而不是数到了才看到。</p></div></div><div id="outline-container-orgheadline40" class="outline-2"><h2 id="orgheadline40"><span class="section-number-2">40</span> 20170622 毫无犹豫的信心</h2><div class="outline-text-2" id="text-40"><p>手指的作用是指出早已经看到的，落指前要相信自己早已看见过了。</p></div></div><div id="outline-container-orgheadline41" class="outline-2"><h2 id="orgheadline41"><span class="section-number-2">41</span> 20170629 预知又好用了？</h2></div><div id="outline-container-orgheadline42" class="outline-2"><h2 id="orgheadline42"><span class="section-number-2">42</span> 20170711 勇往直前</h2><div class="outline-text-2" id="text-42"><p>不怕点错，破斧沉舟，勇往直前。只有不怕慢，才会快！只有不在意快，才不会慢下来！</p></div></div><div id="outline-container-orgheadline43" class="outline-2"><h2 id="orgheadline43"><span class="section-number-2">43</span> 20170711 一轮训练，多个机会</h2><div class="outline-text-2" id="text-43"><p>练习的是视野，不是逻辑，所以你的任务只是当前数字，不要思前顾后，不要怕点错点慢，否则会因为你的思想，影响了扩展视野的煅炼机会，这样你每点一个数字都是一次重新开始看，点了25个数字，就等于训练了25遍，反之点完一轮也许没煅炼到眼睛，可能只煅炼了肌肉，以来因为幸运感觉的反应变快。再次强调你练的是视野，不是快慢，不是记忆，不是反应，不是寻找，所以一定要斩断联系！将是否找到，转换为是否能看到，你不是因为记住了而点到了，而是因为再次看到而点到。</p></div></div><div id="outline-container-orgheadline44" class="outline-2"><h2 id="orgheadline44"><span class="section-number-2">44</span> 20170711如果数字是独立的</h2><div class="outline-text-2" id="text-44"><p>把注意力放在当前数字上而非上一个，或下一个，或这些数字之间的联系上</p><p>小小舒尔特表，蕴含了无限深意，看似眼花缭乱，其实它给了每个人弄清自己终究将注意力分散到了哪里的机会。</p></div></div><div id="outline-container-orgheadline45" class="outline-2"><h2 id="orgheadline45"><span class="section-number-2">45</span> 20170712 预知与独立</h2><div class="outline-text-2" id="text-45"><p>可以预看与独立并存只是要懂得随时切换，每一轮也是在练习心境</p></div></div><div id="outline-container-orgheadline46" class="outline-2"><h2 id="orgheadline46"><span class="section-number-2">46</span> 20170713去除关联</h2><div class="outline-text-2" id="text-46"><p>想象着如果每点一个数字就换一幅图，这样便去除了关联</p></div></div><div id="outline-container-orgheadline47" class="outline-2"><h2 id="orgheadline47"><span class="section-number-2">47</span> 20170714没有开始</h2><div class="outline-text-2" id="text-47"><p>不用刻意分离每个数字，有时一下缓存到几个就缓存上，如1-9，有时找不到就一个数字自成一体，只要将开始放在每一段的第一个就行，不用每个数字都是开始，顺其自然地切換开始，忽快忽慢至匀速。</p></div></div><div id="outline-container-orgheadline48" class="outline-2"><h2 id="orgheadline48"><span class="section-number-2">48</span> 20170721不要聚焦</h2><div class="outline-text-2" id="text-48"><p>即便不得不寻找，也不要把视野只限制在一个点，每次搜索的单位由点变为面</p></div></div><div id="outline-container-orgheadline49" class="outline-2"><h2 id="orgheadline49"><span class="section-number-2">49</span> 20170721由点到面</h2><div class="outline-text-2" id="text-49"><p>即便不得不寻找，也不要把视野只限制在一个点，每次搜索的单位由点变为面</p></div></div><div id="outline-container-orgheadline50" class="outline-2"><h2 id="orgheadline50"><span class="section-number-2">50</span> 20170816 反复的看</h2><div class="outline-text-2" id="text-50"><p>想像着点每个数字的同时，表格也刷新不同的序列，而非不动，这样才反应出看的速度</p></div></div><div id="outline-container-orgheadline51" class="outline-2"><h2 id="orgheadline51"><span class="section-number-2">51</span> 20170828 一视同仁</h2><div class="outline-text-2" id="text-51"><p>学会不断忘记，不断重新开始，不考虑当前进度，所有数字一视同仁，比如10以内的数字，应当与其它的一样速度才对，不因为超过10而减慢，否则便是有了杂念</p></div></div><div id="outline-container-orgheadline52" class="outline-2"><h2 id="orgheadline52"><span class="section-number-2">52</span> 20170908 忘记</h2><div class="outline-text-2" id="text-52"><p>排除杂念，总是不由自主回忆点过的数字，以及想知道还有多少，所以，每个数字点完后干脆尝试停止脑中活动专心只找该点的数字。点完的已经点完了，不要再占用你的精力，还有多少也与你当下"点"的目标无关。</p></div></div><div id="outline-container-orgheadline53" class="outline-2"><h2 id="orgheadline53"><span class="section-number-2">53</span> 20170915 整体去看</h2><div class="outline-text-2" id="text-53"><p>整体看，不要记忆 快速看完不用顾及手指，手指自然会点完，意思不是顺序着快速看完同时手指紧跟着目光之后，而是一眼全部看完，再转换成手指点的顺序。你的看，绝对不是顺序的，那样就变成了训练反应而非看。看，是一个整体，既然没有了顺序，自然不会瞻前顾后考虑到底到了哪里，还有多少这样的分心之事。也给人一种似乎是余光，眼睛不动，预知，的错觉，其实早已全部映入眼帘。所以如果训练正确，不存在到哪个数字后就慢了的问题，所有数字都是一样的，即便慢也是随机的慢，因为没看清，而不是没记住。这感觉，阶数高就感觉明显。</p></div></div><div id="outline-container-orgheadline54" class="outline-2"><h2 id="orgheadline54"><span class="section-number-2">54</span> 20170915 是看不是找</h2><div class="outline-text-2" id="text-54"><p>练习的是看到，不是找到。点到的数字都是看到的，不是找到的。</p></div></div><div id="outline-container-orgheadline55" class="outline-2"><h2 id="orgheadline55"><span class="section-number-2">55</span> 28170916 宁慢勿错</h2><div class="outline-text-2" id="text-55"><p>练习的重点 宁慢勿错，还有就是，目光要广，不要被当前数字吸引了全部注意力，当前数字只是看到的数字之一，没什么特别的，这个习惯可能需要放慢速度来练习，一旦发现你的目光太聚焦于某个数字了，就赶紧纠正。</p></div></div><div id="outline-container-orgheadline56" class="outline-2"><h2 id="orgheadline56"><span class="section-number-2">56</span> 20171012 看，宽</h2><div class="outline-text-2" id="text-56"><p>除了要看不要找，还有一点就是，尽量把目光放宽</p></div></div><div id="outline-container-orgheadline57" class="outline-2"><h2 id="orgheadline57"><span class="section-number-2">57</span> 20171013视线与反应</h2><div class="outline-text-2" id="text-57"><p>要意识到视线始终是走在手和反应的前面的，不会等待它们。</p></div></div><div id="outline-container-orgheadline58" class="outline-2"><h2 id="orgheadline58"><span class="section-number-2">58</span> 20171013关键</h2><div class="outline-text-2" id="text-58"><p>记住要点，视线范围尽量放广，视线不要等待动作和反应，要靠看不靠找</p></div></div><div id="outline-container-orgheadline59" class="outline-2"><h2 id="orgheadline59"><span class="section-number-2">59</span> 20171020 切换</h2><div class="outline-text-2" id="text-59"><p>数字的敏感度，其实是脑中缓存的当前关注的数字区间的切换灵活度。大多开始时，会练习到对1-9很敏感，之后就慢了，其实，当到10后，脑中切换下当前应关注的区间，如11-19，就可提就速度，因人而异，但大多人应同时能关注到10个左右。这10个数字随着你点的进度而"滑动"，比如开始只关注1-10，到10的时候变成11-20，等等，再灵活些，到5的时候变成5-15，这应该就是数字的敏感度的根源吧？关键是要忘记掉点过的数字，你头脑中的区间才会向前，否则只能始终是1-10，之后就变成一个个的找数字了。所以可尝试在切换前停下来，想想下一批要点的数字是哪些，然后再点，逐渐减少切换的停顿时间，然后我们要做的就是看，而非找。</p></div></div><div id="outline-container-orgheadline60" class="outline-2"><h2 id="orgheadline60"><span class="section-number-2">60</span> 20171021指不从心，指随眼落</h2><div class="outline-text-2" id="text-60"><p>不要反应不怕点错 只需关注眼睛一下子看完，手指就别关注了，手指自动的尽快划完就行，看完即点完，可能点错，但没关系，看完才重要。渐渐的，看完后，手指点完的正确率会上升。这样有利于训练集中注意力在看上而非点上，如果不明白的话，举个例子，眼睛迅速看完，同时手指也似乎正确的尽量与目光一致地"乱点"一气也结束了，开始不要在意手指的精确度，可能点的正确率只有1/100（一般前几个数字的正确率较高），这也不奇怪，目光本来就是快于反应，最后一个正确点到的数字后就表示从那起目光就与反应拉开了距离，但至少全部数字都看过了。这样训练是为了避免过分关注手指点到了哪里而停滞了目光，看不见了后面的其它数字，等渐渐的适应了目光稳定的快速看完（这时目光速度已达到了可能手指即便想乱点，也还没点出第一下前就看完了；或者即便控制手指也不会影响目光的前进与扫视的范围），再稍微分出些精力控制下手指的精确度。也就是，心神的主要精力不要浪费在控制手指上，毕竟人的反应是有极限的，这样渐渐的，有种手指随眼睛自动落下的感觉，根本不用控制。</p></div></div><div id="outline-container-orgheadline61" class="outline-2"><h2 id="orgheadline61"><span class="section-number-2">61</span> 20171022 重点是视线</h2><div class="outline-text-2" id="text-61"><p>不要让手指跑在视线的前面 即使3*3一闪而过，目光也其实是在手指前面的，不要被手指打乱了视线。手指再快也无用，只有视线在手指前面才是又快又准的正确方式。一切的奇迹都应是在看的见的基础上才能可靠的出现。</p></div></div><div id="outline-container-orgheadline62" class="outline-2"><h2 id="orgheadline62"><span class="section-number-2">62</span> 20171024 开始在后面</h2><div class="outline-text-2" id="text-62"><p>先不管三七二十一把前面熟悉的迅速点完（比如1-9），然后重点熟悉和点后面的数字。将真正训练的开始定在后面，前面一带而过。</p></div></div><div id="outline-container-orgheadline63" class="outline-2"><h2 id="orgheadline63"><span class="section-number-2">63</span> 20171027 没有负担地看</h2><div class="outline-text-2" id="text-63"><p>感受看到而非找到的感觉。手自然的点在那里，不因为提前看到了而增加记忆的负担，也不因为快了一些而想更快，慢了一些而想弥补。眼睛自然的看，渐渐的会因熟练与阶数而增减转动的频率，头脑也会放松，没有了预知、记忆、寻找的负担。训练多了，感觉的至多是眼睛有些累，而非头痛。</p></div></div><div id="outline-container-orgheadline64" class="outline-2"><h2 id="orgheadline64"><span class="section-number-2">64</span> 20171031 相信</h2><div class="outline-text-2" id="text-64"><p>不断扫视，扫到即点，不要停顿到看清，因为扫视到了，就是看清了，要相信自己的视力。</p></div></div><div id="outline-container-orgheadline65" class="outline-2"><h2 id="orgheadline65"><span class="section-number-2">65</span> 20171031 限制</h2><div class="outline-text-2" id="text-65"><p>不是脑袋控制手指，而是目光，在脑袋看来，手指不由自主的随目光而动。不要控制手指，顺其自然不加以控制的练习会让你切实体会到进步乐趣，脑袋控制的是目光看，而非对手指的控制反应，这样便感觉从脑袋控制反应的限制中解脱出来的舒畅与轻松感，从而更有动力。</p></div></div><div id="outline-container-orgheadline66" class="outline-2"><h2 id="orgheadline66"><span class="section-number-2">66</span> 20171106 手指在哪</h2><div class="outline-text-2" id="text-66"><p>用眼睛尽量看，之后会发现手指不是依次快速落下，而是似乎双手指有时同时落下却不错，尽量不是依次点下，尽可能多的同时用上双手，又不必分心去控制落下的策略，自动的却无双手互抢的奇怪感觉，好像手不是自己的，自动寻找到最轻松迅速却又不阻挡视线的下落方式。</p></div></div><div id="outline-container-orgheadline67" class="outline-2"><h2 id="orgheadline67"><span class="section-number-2">67</span> 20171108 点的技巧</h2><div class="outline-text-2" id="text-67"><p>总是说看最重要，手指就是点完看过的。但是点也有一定的技巧，快点看完，不管怎么点，看完的基础上，尽快点完。就像我亲自感受过的，单手三阶难以破1.3，单手四阶难以破2.3，双手点就能很快突破。即便双手，我想，点的方式若不变，也难以破除一定的极限的。手指会自动随着顺序进行，跟本无须控制哪个手指点。点完就行，谁点不重要，看过之后，注意力只在点上，而非谁去点，怎么点。一旦你觉得你开始控制手指了那就不是这种状态了，你会感觉手腕由于过度被控制而发酸，3阶可能也能达到0.9左右，但是感觉很难寸进，你更多的精力应该控制的是目光和思想，这样手腕任其自然，不累，有游刃有余的感觉，当然，若只用单手，因为单手只有唯一个线性的策略，为了追上思想和视线，还是会有些酸，如果双手，就会自然充分利用好双手交替的优势的。</p></div></div><div id="outline-container-orgheadline68" class="outline-2"><h2 id="orgheadline68"><span class="section-number-2">68</span> 20171110阅读的乐趣</h2><div class="outline-text-2" id="text-68"><p>每一次舒尔特表，就是一篇文章。文章的意义就是数字的次序，将文章背诵下来就是将所有数字位置记住，背的过程是读，记的过程是看。将练习的过程变为阅读。每一篇文章阅读完才知其意义。虽然这里的意义比较抽象，但是，知道了这点，便与阅读一样，你可以稳步提升"阅读"的速度，而不必被无关的单字干扰，也不存在哪个数字更敏感的问题。反之，其实阅读并理解，实质就是看完文字并根据头脑中的认知按特定次序加工，与舒尔特看完数字并点完是一个道理。实质就是看，这样，便不会枯燥。所以，你今天看完50篇文章了吗？</p></div></div><div id="outline-container-orgheadline69" class="outline-2"><h2 id="orgheadline69"><span class="section-number-2">69</span> 20171110 顺序</h2><div class="outline-text-2" id="text-69"><p>阅读被打乱的是文字，意义是顺序出现的。舒尔特被打乱的是数字的意义，数字本身是自然映入的。</p></div></div><div id="outline-container-orgheadline70" class="outline-2"><h2 id="orgheadline70"><span class="section-number-2">70</span> 20171115看完</h2><div class="outline-text-2" id="text-70"><p>还是那个感觉，不管手指怎么样，一下子全看完。手指一下子全点完，不要控制它，只告诉它点完看过的，不管它怎么点。你要控制的是一下子看完，这个动作。</p></div></div><div id="outline-container-orgheadline71" class="outline-2"><h2 id="orgheadline71"><span class="section-number-2">71</span> 20171115 忽略手指</h2><div class="outline-text-2" id="text-71"><p>手指点归点，眼睛就当手指不存在，该看哪了就看哪，不要等手指也别被手指干扰到。</p></div></div><div id="outline-container-orgheadline72" class="outline-2"><h2 id="orgheadline72"><span class="section-number-2">72</span> 20171123 维持完整</h2><div class="outline-text-2" id="text-72"><p>不用的表，数字的次序本身就是表的意义，不同的表区别就在于次序，次序是每个表的唯一标识。而非要一定依次去看，而是一下子尽快看完整个表的意义，一下子确认完表的标识。因为标识是一个整体低阶中几乎视线不动，而高阶中视幅达不到全览时，就会靠不断扫视来让这个整体维持完整不会残缺（或许记忆表也行，但这便不是对视线的训练了），千万别因为寻找，而导致图像片面残缺不完整。</p></div></div><div id="outline-container-orgheadline73" class="outline-2"><h2 id="orgheadline73"><span class="section-number-2">73</span> 20171128 奇妙的状态</h2><div class="outline-text-2" id="text-73"><p>左手，右手，视线三者各自独立，各行其事，似乎毫无关系。</p></div></div><div id="outline-container-orgheadline74" class="outline-2"><h2 id="orgheadline74"><span class="section-number-2">74</span> 20171202 不断的开始</h2><div class="outline-text-2" id="text-74"><p>将每个数字看做新的轮舒尔特表的数字，而非原有的，这样便使得每个数字失去了关联，省去了预知和记忆的压力。记住，每一次点击都假想舒尔特表发生了变化，这样便不会企图上一个、下一个是什么的疑问，因为不断变化的表会让你明白数字间没有上一个、下一个的关系；也不用担心找不到下一个数字，因为找是基于不断的上面的，当你认为整个表本身都不是固定的前提下，根本没有找的机会，也不必记忆无意义的相对位置。这也是强迫你将注意力不得不只放在当下的一个技巧。</p></div></div><div id="outline-container-orgheadline75" class="outline-2"><h2 id="orgheadline75"><span class="section-number-2">75</span> 20171203 加速度</h2><div class="outline-text-2" id="text-75"><p>将前9个看做是后面的加速阶段，并且，脑袋尽量别想事了</p></div></div><div id="outline-container-orgheadline76" class="outline-2"><h2 id="orgheadline76"><span class="section-number-2">76</span> 20171206 克制</h2><div class="outline-text-2" id="text-76"><p>千万克制住控制手指的欲望，无论你反应有多快，一点控制了手指，即便速度没降低，也增加了大脑与手指的负担，失去了煅炼视觉的机会。</p></div></div><div id="outline-container-orgheadline77" class="outline-2"><h2 id="orgheadline77"><span class="section-number-2">77</span> 20171214 关注</h2><div class="outline-text-2" id="text-77"><p>即便看到了将要点的，但那不是现在点的，也不关注。</p></div></div><div id="outline-container-orgheadline78" class="outline-2"><h2 id="orgheadline78"><span class="section-number-2">78</span> 20171214 协调</h2><div class="outline-text-2" id="text-78"><p>不想前面，不想后面，只看当前，看到就点，手要配合好眼，不要反客为主眼等手。眼</p></div></div><div id="outline-container-orgheadline79" class="outline-2"><h2 id="orgheadline79"><span class="section-number-2">79</span> 20171215 分组</h2><div class="outline-text-2" id="text-79"><p>三个一组三一组个的点，这样也符合想往下看，以及记忆的规律。</p></div></div><div id="outline-container-orgheadline80" class="outline-2"><h2 id="orgheadline80"><span class="section-number-2">80</span> 20171225 有的放矢</h2><div class="outline-text-2" id="text-80"><p>为了看清每个数字，眼睛不要盲目乱转。头几个数字一样的，看清是或不是再看别的。要有的放失，即然看到那了，就要看清再走。</p></div></div><div id="outline-container-orgheadline81" class="outline-2"><h2 id="orgheadline81"><span class="section-number-2">81</span> 20171226 手速</h2><div class="outline-text-2" id="text-81"><p>两手轮流落下是提升手速的关键</p></div></div><div id="outline-container-orgheadline82" class="outline-2"><h2 id="orgheadline82"><span class="section-number-2">82</span> 20171226 机会与微调</h2><div class="outline-text-2" id="text-82"><p>手速，视幅，眼力是基础。基础练好了，就可以提前看清楚了，但能看清全部后，应立即再考虑用剩余的精力练习落指的方式，而非看清后就停下来等手指去点了。类似的，当提前考虑好落指策略，肯定还有基它方便可以调整的，以更进一步，只有时刻处在追求进取的心态中，并充分抓住并利用好每一瞬间，才能有更多的突破。</p></div></div><div id="outline-container-orgheadline83" class="outline-2"><h2 id="orgheadline83"><span class="section-number-2">83</span> 20171226 精力分配</h2><div class="outline-text-2" id="text-83"><p>只有尽快看完所有，才可能在已看清的基础上，有精力分配与练习两手配合的最优策略。手速是标，视幅是基础，眼力才是本。</p></div></div><div id="outline-container-orgheadline84" class="outline-2"><h2 id="orgheadline84"><span class="section-number-2">84</span> 20180205 分享一下训练技巧与心得</h2><div class="outline-text-2" id="text-84"></div><div id="outline-container-orgheadline85" class="outline-3"><h3 id="orgheadline85"><span class="section-number-3">84.1</span> 手速-单手练</h3><div class="outline-text-3" id="text-84-1"><p>先只左手，再只右手。</p><p>实践感觉，</p><p>3阶1.2-1.3，4阶2.3-2.4，5阶3.7-3.8</p><p>就大概是单手的极限了吧。</p><p>而6阶以上，目前感觉，单手完全可以练很久，到手不及眼的时候再换。</p></div></div><div id="outline-container-orgheadline86" class="outline-3"><h3 id="orgheadline86"><span class="section-number-3">84.2</span> 协调-双手练</h3><div class="outline-text-3" id="text-84-2"><p>也可以说是手法，有些人是左食右拇，有些人是左拇右食，或双拇指，双食指等等。</p><p>其实是注意安全的分配问题。有很多策略，比如左手尽量点左侧右手尽量点右侧以减少位移，或者尽量交错双手落指以减少抬指落指时间，等等，很明显，双手是快于单手的。</p></div></div><div id="outline-container-orgheadline87" class="outline-3"><h3 id="orgheadline87"><span class="section-number-3">84.3</span> 视幅-不用手，只用眼</h3><div class="outline-text-3" id="text-84-3"><p>手会干扰你的注意，将注意从眼转移到手，由于手慢于眼，这期间担误的多余时间又使得脑袋中不由自主去默念、思考、记忆、寻找……让精力更消耗在无用之上。所以，可以只看不点，看完一轮就退出再重看，如果不习惯，可以用儿童模式，灰显点过的数字让你只将精神集中于未点的，眼睛会不自觉的顾盼那些没点的。其实还有一点，就是，练久了手会酸，那就偷一下懒，让手休息一会吧。</p></div></div><div id="outline-container-orgheadline88" class="outline-3"><h3 id="orgheadline88"><span class="section-number-3">84.4</span> 敏感度-不用手，不用眼</h3><div class="outline-text-3" id="text-84-4"><p>尝试一下，你闭上双眼，不默念，只是依次快速、清晰的浮现完每个数字，你一次能同时浮现出几个数字？位置在哪浮现？100个数字你多久能浮现完？当数字清晰了，迅速了，你会发现，睁开眼睛后，你的眼晴会不由自由的只看你脑中的那些数字，数字在头脑中迅速切换浮现，眼睛同时就看到了，然后手就点到了，而非费劲的去一个个的找。眼随心动，指随眼落，再后来，眼力上去后，直接有指随心落的感觉，似乎是有了预知的能力。如果落实一下敏感度，还有个决窍，在自定义模式中，定义好1-10，11-20，21-30，31-40，41-50等等，先熟悉好各范围的十个数字；然后：1-25，11-35，21-45，31-55，等等，自己发挥吧。你会发现，最开始最熟悉的，往往是开始的几个数字，要是能将所有区间一视同仁就好了。</p><p>当然，视幅练久了头晕眼胀，可是却还想练习的时候，这样，的确是一个不会累，也很方便的训练方法。并且，依次在头脑中浮现数字而非数数字，也似乎有助睡眠，久了习惯了，再加上颜色，声音，变换形状，浮现文字，图像，甚至动态图像，直接能在头脑中看电影了。</p></div></div><div id="outline-container-orgheadline89" class="outline-3"><h3 id="orgheadline89"><span class="section-number-3">84.5</span> 理论值</h3><div class="outline-text-3" id="text-84-5"><p>目前我还是探索，探索到以上的方法。究竟极限是什么？是多少呢？其实只要我们练习就行了，不必在意那些，这都是因人而异的，只要自己提升，就足矣。</p><p>引用一下之前和小鹏聊天是说的吧，也算是给大家一个理论参考：</p><pre class="example">细算一下，你玩过计算器吗？我以前小时候玩过计时器，开始计时后立即停下。以最快速度的按两次。我以前最快两次按键间隔是0.05秒，这是我的极限了，我觉得拿到舒尔特上，除去反应时间，但按不同数字也是有位移的，按照以前计时器的按键速度估计，就乘2吧，舒尔特上单手一个键0.1秒应该也可以了吧，这样单手无反应理论上9个数字0.9秒，两个手的话，就减半，0.45秒。这样下来，9个键，还得0.45，还不算反应与看清所有数字的时间，所以我觉得那个人成绩不太可能，除非他确实大异常人。我这个估算应该问题不大，我记得在某处看过，人类反应理论极限0.2秒，这样双手理想为0.45+0.2=0.65还有些可能。拿到我自身上，我单手最高纪录实际1.25秒，其实其中看清与反应约0.3，纯手按9个键0.9多，也是符合这个规律。双手最高0.82，看清与反应仍然约0.3，双手0.52按9个键，也是正常的范围。所以我觉得那个0.41甚至0.3几的成绩，不太可能。要知道人的肌肉也是要休息的，按两下那么快可以，但好几个键连续都那么快，太难以想象了按照我之前的计算方式，四阶应该是反应时间，0.5以上，因为我也一下子看不完16个数字，要分两次看才能看得完，这不是熟练不熟练的问题，应该就是人类反应大概就是那样了，一下子十几个数字。4阶最好的成绩，如果比1.4少，那很有可能就是挂了。五阶以上我就不好说了。毕竟练得也不那么多。而且五阶以上反应就不是0.3那么简单了。</pre></div></div></div><br><div id="mypostamble" align="right" style="float:right" class="status">    <table> <tbody> <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Author</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">QuietHeart</td>  </tr><tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Email</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">    <a href="mailto:quiet_heart000@126.com" target="_blank" rel="noopener">quiet_heart000@126.com</a>  </td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Date</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">[2018-03-16 五 10:40]</td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Update</td>  <td style="border-style: solid;border-width:1px;border-right:0px;"><2018-03-16 五 10:42:57></2018-03-16></td></tr>    </tbody></table></div><br>]]></content>
    
    <summary type="html">
    
      
      
        

&lt;style type=&quot;text/css&quot;&gt;
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
            
      
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
      <category term="study" scheme="http://0.0.0.0:4000/categories/categories/study/"/>
    
      <category term="misc" scheme="http://0.0.0.0:4000/categories/categories/study/misc/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 访问权限控制基本原理</title>
    <link href="http://0.0.0.0:4000/2017/02/20/linux_system_access/"/>
    <id>http://0.0.0.0:4000/2017/02/20/linux_system_access/</id>
    <published>2017-02-19T16:00:00.000Z</published>
    <updated>2019-09-11T08:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">  .title  { text-align: center;             margin-bottom: .2em; }  .subtitle { text-align: center;              font-size: medium;              font-weight: bold;              margin-top:0; }  .todo   { font-family: monospace; color: red; }  .done   { font-family: monospace; color: green; }  .priority { font-family: monospace; color: orange; }  .tag    { background-color: #eee; font-family: monospace;            padding: 2px; font-size: 80%; font-weight: normal; }  .timestamp { color: #bebebe; }  .timestamp-kwd { color: #5f9ea0; }  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }  .org-center { margin-left: auto; margin-right: auto; text-align: center; }  .underline { text-decoration: underline; }  #postamble p, #preamble p { font-size: 90%; margin: .2em; }  p.verse { margin-left: 3%; }  pre {    border: 1px solid #0c0;    box-shadow: 1px 1px 1px #0e0;    padding: 8pt;    font-family: italic monospace;    color: #C7EDCC;    background-color: #111111;    overflow: auto;    margin: 1.2em;  }  pre.src {    position: relative;    overflow: visible;    padding-top: 1.2em;  }  pre.src:before {    display: none;    position: absolute;    background-color: black;    top: -10px;    right: 10px;    padding: 3px;    border: 1px solid black;  }  pre.src:hover:before { display: inline;}  pre.src-sh:before    { content: 'sh'; }  pre.src-bash:before  { content: 'sh'; }  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }  pre.src-R:before     { content: 'R'; }  pre.src-perl:before  { content: 'Perl'; }  pre.src-java:before  { content: 'Java'; }  pre.src-sql:before   { content: 'SQL'; }  table { border-collapse:collapse; }  caption.t-above { caption-side: top; }  caption.t-bottom { caption-side: bottom; }  td, th { vertical-align:top;  }  th.org-right  { text-align: center;  }  th.org-left   { text-align: center;   }  th.org-center { text-align: center; }  td.org-right  { text-align: right;  }  td.org-left   { text-align: left;   }  td.org-center { text-align: center; }  dt { font-weight: bold; }  .footpara { display: inline; }  .footdef  { margin-bottom: 1em; }  .figure { padding: 1em; }  .figure p { text-align: center; }  .inlinetask {    padding: 10px;    border: 2px solid gray;    margin: 10px;    background: #ffffcc;  }  #org-div-home-and-up   { text-align: right; font-size: 70%; white-space: nowrap; }  .linenr { font-size: smaller }  .code-highlighted { background-color: #ffff00; }  .org-info-js_info-navigation { border-style: none; }  #org-info-js_console-label    { font-size: 10px; font-weight: bold; white-space: nowrap; }  .org-info-js_search-highlight    { background-color: #ffff00; color: #000000; font-weight: bold; }    code {        border:groove #555555;border-width:thin;        background-color: #111111;color: #C7EDCC;    }#table-of-contents {    font-size: 9pt;    position: fixed;    right: 10px;    top: 14em;    margin:0;    padding:0;    border-width:1px;    border-style:solid;    background: #000000;    -webkit-box-shadow: 0 0 1em #777777;    -moz-box-shadow: 0 0 1em #777777;    -webkit-border-bottom-left-radius: 5px;    -moz-border-radius-bottomleft: 5px;    text-align: right;    /* ensure doesn't flow off the screen when expanded */    max-height: 60%;    overflow: auto;     z-index: 200;}#table-of-contents h2 {    font-size: 9pt;    max-width: 8em;    font-weight: normal;    padding-left: 0.5em;    padding-top: 0.05em;    padding-bottom: 0.05em; }#table-of-contents ul {    margin-left: 14pt;     margin-bottom: 10pt;    padding: 0}#table-of-contents li {    padding: 0;    margin: 1px;    list-style: none;}#table-of-contents ul>:first-child {    color: blue;}#table-of-contents #text-table-of-contents {    display: none;    text-align: left;}#table-of-contents:hover #text-table-of-contents {    display: block;    padding: 0.5em;    margin-top: -1.5em; }</style><div id="table-of-contents"><h2>Table of Contents</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 安全模型</a></li><li><a href="#orgheadline2">2. <code>DAC</code> 安全模型</a><ul><li><a href="#orgheadline3">2.1. 用户和组ID信息控制</a><ul><li><a href="#orgheadline4">2.1.1. 用户、组、口令信息</a></li><li><a href="#orgheadline5">2.1.2. 举例</a></li></ul></li><li><a href="#orgheadline6">2.2. 文件权限控制信息</a><ul><li><a href="#orgheadline7">2.2.1. 文件类型</a></li><li><a href="#orgheadline8">2.2.2. 访问权限控制组</a></li><li><a href="#orgheadline9">2.2.3. 可设定的权限</a></li><li><a href="#orgheadline10">2.2.4. 举例</a></li></ul></li><li><a href="#orgheadline11">2.3. 进程权限控制信息</a><ul><li><a href="#orgheadline12">2.3.1. 进程权限</a></li><li><a href="#orgheadline13">2.3.2. 举例</a></li></ul></li><li><a href="#orgheadline14">2.4. 进程访问文件的权限控制策略</a><ul><li><a href="#orgheadline15">2.4.1. 规则</a></li><li><a href="#orgheadline16">2.4.2. 举例</a></li></ul></li></ul></li></ul></div></div><p>这里，我们主要介绍 <code>Linux</code> 系统中，权限控制的基本原理。</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 安全模型</h2><div class="outline-text-2" id="text-1"><p>在 <code>Linux</code> 系统中，我们所有的操作实质都是在进行进程访问文件的操作。我们访问文件需要先取得相应的访问权限，而访问权限是通过 <code>Linux</code> 系统中的安全模型获得的。</p><p>对于 <code>Linux</code> 系统中的安全模型，我们需要知道下面两点</p><ol class="org-ol"><li><code>Linux</code> 系统上最初的安全模型叫 <code>DAC</code>, 全称是 <code>Discretionary Access Control</code> ，翻译为自主访问控制。</li><li>后来又增加设计了一个新的安全模型叫 <code>MAC</code>, 全称是 <code>Mandatory Access Control</code>, 翻译为强制访问控制。</li></ol><p>注意, <code>MAC</code> 和 <code>DAC</code> 不是互斥的， <code>DAC</code> 是最基本的安全模型，也是通常我们最常用到的访问控制机制是 <code>Linux</code> 必须具有的功能， 而 <code>MAC</code> 是构建在 <code>DAC</code> 之上的加强安全机制，属于可选模块。访问前， Linux系统通常都是先做 <code>DAC</code> 检查， 如果没有通过则操作直接失败; 如果通过 <code>DAC</code> 检查并且系统支持 <code>MAC</code> 模块，再做 <code>MAC</code> 权限检查。</p><p>为区分两者，我们将支持 <code>MAC</code> 的 <code>Linux</code> 系统称作 <code>SELinux</code>, 表示它是针对 <code>Linux</code> 的安全加强系统。</p><p>这里，我们将讲述 <code>Linux</code> 系统中的 <code>DAC</code> 安全模型。</p></div></div><div id="outline-container-orgheadline2" class="outline-2"><h2 id="orgheadline2"><span class="section-number-2">2</span> <code>DAC</code> 安全模型</h2><div class="outline-text-2" id="text-2"><p><code>DAC</code> 的核心内容是：在 <code>Linux</code> 中，进程理论上所拥有的权限与执行它的用户的权限相同。其中涉及的一切内容，都是围绕这个核心进行的。</p></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">2.1</span> 用户和组ID信息控制</h3><div class="outline-text-3" id="text-2-1"></div><div id="outline-container-orgheadline4" class="outline-4"><h4 id="orgheadline4"><span class="section-number-4">2.1.1</span> 用户、组、口令信息</h4><div class="outline-text-4" id="text-2-1-1"><p>通过 <code>/etc/passwd</code> 和 <code>/etc/group</code> 保存用户和组信息，通过 <code>/etc/shadow</code> 保存密码口令及其变动信息， 每行一条记录。</p><p>用户和组分别用 <code>UID</code> 和 <code>GID</code> 表示，一个用户可以同时属于多个组，默认每个用户必属于一个与之 <code>UID</code> 同值同名的 <code>GID</code> 。</p><p>对于 <code>/etc/passwd</code> , 每条记录字段分别为 <code>用户名:口令（在 /etc/shadow 加密保存）：UID:GID（默认UID）:描述注释:主目录:登录shell(第一个运行的程序)</code></p><p>对于 <code>/etc/group</code> ， 每条记录字段分别为 <code>组名：口令（一般不存在组口令）：GID：组成员用户列表（逗号分割的用户UID列表）</code></p><p>对于 <code>/etc/shadow</code> ，每条记录字段分别为： <code>登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:</code></p></div></div><div id="outline-container-orgheadline5" class="outline-4"><h4 id="orgheadline5"><span class="section-number-4">2.1.2</span> 举例</h4><div class="outline-text-4" id="text-2-1-2"><p>以下是对用户和组信息的举例。 <code>/etc/shadow</code> 中的口令信息为加密存储，不举例。</p><div class="org-src-container"><pre class="src src-sh">$cat /etc/passwd |head -n 5root:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/bin/shbin:x:2:2:bin:/bin:/bin/shsys:x:3:3:sys:/dev:/bin/shsync:x:4:65534:sync:/bin:/bin/sync$cat /etc/group |head -n 5root:x:0:daemon:x:1:bin:x:2:sys:x:3:adm:x:4:miracle</pre></div></div></div></div><div id="outline-container-orgheadline6" class="outline-3"><h3 id="orgheadline6"><span class="section-number-3">2.2</span> 文件权限控制信息</h3><div class="outline-text-3" id="text-2-2"></div><div id="outline-container-orgheadline7" class="outline-4"><h4 id="orgheadline7"><span class="section-number-4">2.2.1</span> 文件类型</h4><div class="outline-text-4" id="text-2-2-1"><p><code>Linux</code> 中的文件有如下类型：</p><ul class="org-ul"><li>普通文件， 又包括文本文件和二进制文件， 可用 <code>touch</code> 创建；</li><li>套接字文件， 用于网络通讯，一般由应用程序在执行中间接创建；</li><li>管道文件是有名管道，而非无名管道， 可用 <code>mkfifo</code> 创建；</li><li>字符文件和块文件均为设备文件， 可用 <code>mknod</code> 创建；</li><li>链接文件是软链接文件，而非硬链接文件, 可用 <code>ln</code> 创建。</li></ul></div></div><div id="outline-container-orgheadline8" class="outline-4"><h4 id="orgheadline8"><span class="section-number-4">2.2.2</span> 访问权限控制组</h4><div class="outline-text-4" id="text-2-2-2"><p>分为三组进行控制：</p><ul class="org-ul"><li><code>user</code> 包含对文件属主设定的权限</li><li><code>group</code> 包含对文件属组设定的权限</li><li><code>others</code> 包含对其他者设定的权限</li></ul></div></div><div id="outline-container-orgheadline9" class="outline-4"><h4 id="orgheadline9"><span class="section-number-4">2.2.3</span> 可设定的权限</h4><div class="outline-text-4" id="text-2-2-3"><p>下面给出常见（但非全部）的权限值， 包括：</p><ul class="org-ul"><li><code>r</code> 表示具有读权限。</li><li><code>w</code> 表示具有写权限。</li><li><code>x</code> 一般针对可执行文件/目录，表示具有执行/搜索权限。</li><li><code>s</code> 一般针对可执行文件/目录，表示具有赋予文件属主权限的权限，只有 <code>user</code> 和 <code>group</code> 组可以设置该权限。</li><li><code>t</code> 一般针对目录，设置粘滞位后，有权限的用户只能写、删除自己的文件,否则可写、删除目录所有文件。旧系统还表示可执行文件运行后将text拷贝到交换区提升速度。</li></ul></div></div><div id="outline-container-orgheadline10" class="outline-4"><h4 id="orgheadline10"><span class="section-number-4">2.2.4</span> 举例</h4><div class="outline-text-4" id="text-2-2-4"><p>通过 <code>ls -l</code> 可以查看到其文件类型及权限，通过 <code>chmod</code> 修改权限。</p><p>举例来说，</p><div class="org-src-container"><pre class="src src-sh">$ ls -l /usr/bin/qemu-i386 -rwxr-xr-x 1 root root 2149080  8月 13  2014 /usr/bin/qemu-i386$ chmod 1775 test/$ ls -l |grep testdrwxrwxr-t 2 miracle video 4096  7月 20 09:31 test$ chmod 2777 test2/$ ls -l |grep test2drwxrwsrwx 2 miracle video 4096  7月 20 09:32 test2$ chmod 4777 test3/$ ls -l |grep test3drwsrwxrwx 2 miracle video 4096  7月 20 09:33 test3</pre></div><p>输出中， 第1个字符表示文件类型，其中，普通文件(<code>-</code>)、目录文件 (<code>d</code>)、套接字文件(<code>s</code>)，管道文件(<code>p</code>)，字符文件(<code>c</code>)，块文件(<code>b</code>)，链接文件(<code>l</code>)； 第2个字符开始的 <code>-rwxr-xr-x</code> 部分表示文件的权限位，共有9位。</p><p>对于文件 <code>/usr/bin/qemu-i386</code> , 这个权限控制的含义是：</p><ol class="org-ol"><li>第2~4位的 <code>rwx</code> 表示该文件可被它的 <code>owner</code> （属主）以 <code>r</code> 或 <code>w</code> 或 <code>x</code> 的权限访问。</li><li>第5~7位的 <code>r-x</code> 表示该文件可被与该文件同一属组的用户以 <code>r</code> 或 <code>x</code> 的权限访问</li><li>第8~10位的 <code>r-x</code> 表示该文件可被其它未知用户以 <code>r</code> 或 <code>x</code> 的权限访问。</li></ol><p>对于 <code>test/, test2/, test3/</code> 设定的权限：</p><ol class="org-ol"><li><code>r,w,x</code> 权限对每一权限控制组的权限用一位8进制来表示； 例如： <code>755</code> 表示 <code>rwxr-xr-x</code> 。</li><li><code>s,t</code> 权限会替代 <code>x</code> 位置显示；设定 <code>s,t</code> 权限则需在对应的、用于控制 <code>r,w,x</code> 的8进制权限控制组前追加数字； <code>s</code> 权限用于属主属组控制， <code>t</code> 用于其它控制。</li><li>设定属主 <code>s</code> 需追加 <code>4</code>, 设定属组 <code>s</code> 追加 <code>2</code>, 设定其它者 <code>t</code> 权限追加 <code>1</code> ； 例如前面对 <code>test/</code> 设定 <code>t</code>, 则用 <code>1775</code>, 表示 <code>rwxrwxr-t</code> 。</li></ol></div></div></div><div id="outline-container-orgheadline11" class="outline-3"><h3 id="orgheadline11"><span class="section-number-3">2.3</span> 进程权限控制信息</h3><div class="outline-text-3" id="text-2-3"></div><div id="outline-container-orgheadline12" class="outline-4"><h4 id="orgheadline12"><span class="section-number-4">2.3.1</span> 进程权限</h4><div class="outline-text-4" id="text-2-3-1"><p>对于进程，有如下属性与文件访问权限相关：</p><ul class="org-ul"><li><code>effective user id</code> : 进程访问文件权限相关的 <code>UID</code> （简写为 <code>euid</code> ）。</li><li><code>effective group id</code> : 进程访问文件权限相关的 <code>GID</code> （简写为 <code>egid</code> ）。</li><li><code>real user id</code> : 创建该进程的用户登录系统时的 <code>UID</code> （简写为 <code>ruid</code> ）。</li><li><code>real group id</code> :  创建该进程的用户登录系统时的 <code>GID</code> （简写为 <code>rgid</code> ）。</li><li><code>saved set user id</code> : 拷贝自 <code>euid</code> 。</li><li><code>saved set group id</code> : 拷贝自 <code>egid</code> 。</li></ul></div></div><div id="outline-container-orgheadline13" class="outline-4"><h4 id="orgheadline13"><span class="section-number-4">2.3.2</span> 举例</h4><div class="outline-text-4" id="text-2-3-2"><p>我们可以使用 <code>ps</code> 和 <code>top</code> 选择查看具有 <code>euid</code> 和 <code>ruid</code> 的进程。或者通过 <code>top</code> 来查看进程的 <code>euid</code> 和 <code>ruid</code></p><p>通过 <code>top</code> 来查看的例子：</p><ol class="org-ol"><li><p>首先输入 <code>top</code> 得到类似如下 </p><div class="org-src-container"><pre class="src src-sh">$top -d 10.10top - 15:50:39 up 9 days,  1:42,  9 users,  load average: 0.13, 0.16, 0.21Tasks: 287 total,   2 running, 284 sleeping,   0 stopped,   1 zombieCpu(s): 20.8%us,  4.6%sy,  0.0%ni, 72.5%id,  2.1%wa,  0.0%hi,  0.0%si,  0.0%stMem:   7707276k total,  7574252k used,   133024k free,   154872k buffersSwap:  1998844k total,   223744k used,  1775100k free,  3330212k cached  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                                31603 miracle   20   0 2368m 681m  52m S    6  9.1 206:07.74 firefox                                                                                 1507 root      20   0  451m 188m  97m S    2  2.5 193:49.86 Xorg  ....</pre></div><p>这里通过 <code>-d</code> 选项延长 <code>top</code> 的刷新频率便于操作。此处可见，只有 <code>USER</code> 字段，表示相应进程的 <code>effective user id</code>.</p></li><li>打开 <code>read user id</code> 的显示选项<ol class="org-ol"><li><p>在 <code>top</code> 命令运行期间，输入 <code>f</code>, 可以看见类似如下行：</p><pre class="example">c: RUSER      = Real user name</pre></li><li><p>输入 <code>c</code> 即可打开 <code>Real user name</code> 的显示开关。</p><pre class="example">* C: RUSER      = Real user name</pre></li><li><p>最后 <code>Return</code> 回车回到 <code>top</code> 中，即可看到 <code>real user id</code> 的选项</p><p>此时输入 <code>o</code>,可调整列次序</p><p>最终我们可看到包含 <code>effective user id</code> 和 <code>real user id</code> 的输出如下：</p><pre class="example">top - 15:57:58 up 9 days,  1:49,  9 users,  load average: 0.23, 0.22, 0.23Tasks: 286 total,   1 running, 284 sleeping,   0 stopped,   1 zombieCpu(s):  3.9%us,  1.4%sy,  0.0%ni, 94.6%id,  0.1%wa,  0.0%hi,  0.0%si,  0.0%stMem:   7707276k total,  7539776k used,   167500k free,   154996k buffersSwap:  1998844k total,   225132k used,  1773712k free,  3300036k cached  PID USER     RUSER     PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                              31603 miracle  miracle   20   0 2376m 688m  52m S    4  9.2 206:24.14 firefox                     1507 root     root      20   0  451m 188m  97m S    3  2.5 194:06.27 Xorg   ....</pre><p>其中， <code>PID</code> 是对应进程， <code>USER</code> 是对应的 <code>effective user</code>, <code>RUSER</code> 是对应的 <code>real user</code> 。</p></li></ol></li></ol></div></div></div><div id="outline-container-orgheadline14" class="outline-3"><h3 id="orgheadline14"><span class="section-number-3">2.4</span> 进程访问文件的权限控制策略</h3><div class="outline-text-3" id="text-2-4"></div><div id="outline-container-orgheadline15" class="outline-4"><h4 id="orgheadline15"><span class="section-number-4">2.4.1</span> 规则</h4><div class="outline-text-4" id="text-2-4-1"></div><div id="outline-container-orgheadline17" class="outline-5"><h5 id="orgheadline17"><span class="section-number-5">2.4.1.1</span> 进程访问文件大致权限控制策略</h5><div class="outline-text-5" id="text-2-4-1-1"><p>对于进程访问文件而言，最重要的是 <code>euid</code>, 所以其权限属性均以 <code>euid</code> 为 "中心"。</p><ul class="org-ul"><li>进程的 <code>euid</code> 一般默认即为 其 <code>ruid</code> 值</li><li>若可执行文件的可执行权限位为 <code>s</code> ，进程对其调用 <code>exec</code> 后，其 <code>euid</code> 被设置为该可执行文件的 <code>user id</code></li><li>进程的 <code>saved set user id</code> 拷贝自 <code>euid</code>.</li><li>当进程的 <code>euid</code> 与文件的 <code>user id</code> 匹配时，进程才具有文件 <code>user</code> 权限位所设定的权限</li><li>组权限 <code>egid</code> 的控制规则类似。</li></ul></div></div><div id="outline-container-orgheadline18" class="outline-5"><h5 id="orgheadline18"><span class="section-number-5">2.4.1.2</span> 通过 <code>exec</code> 执行文件修改权限属性</h5><div class="outline-text-5" id="text-2-4-1-2"><p>通过 <code>exec</code> 调用可执行文件之时：</p><ul class="org-ul"><li>进程 <code>ruid</code> 值始终不变；</li><li><code>saved set-user ID</code> 始终来自 <code>euid</code> ；</li><li><code>euid</code> 值取决于文件的 <code>set-user-ID</code> 位是否被设置。</li></ul><p>如下：</p><table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"><colgroup><col class="org-left"><col class="org-left"><col class="org-left"></colgroup><thead><tr><th scope="col" class="org-left">ID</th><th scope="col" class="org-left">set-user-ID bit off</th><th scope="col" class="org-left">set-user-ID bit on</th></tr></thead><tbody><tr><td class="org-left">real user ID</td><td class="org-left">unchanged</td><td class="org-left">unchanged</td></tr></tbody><tbody><tr><td class="org-left">effective user ID</td><td class="org-left">unchanged</td><td class="org-left">set from userID of program file</td></tr></tbody><tbody><tr><td class="org-left">saved set-user ID</td><td class="org-left">copied from effective user ID</td><td class="org-left">copied from effective user ID</td></tr></tbody></table></div></div><div id="outline-container-orgheadline19" class="outline-5"><h5 id="orgheadline19"><span class="section-number-5">2.4.1.3</span> 通过 <code>setuid(uid)</code> 系统调用修改权限属性</h5><div class="outline-text-5" id="text-2-4-1-3"><p>通过 <code>setuid(uid)</code> 修改权限属性之时： </p><ul class="org-ul"><li><code>superuser</code> 可顺利修改 <code>ruid</code>, <code>euid</code>, <code>saved set-user ID</code> ；</li><li><code>unprivileged user</code> 只能在 <code>uid</code> 与 <code>ruid</code> 相等时修改 <code>euid</code>, 其它无法修改。</li></ul><p>如下：</p><table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"><colgroup><col class="org-left"><col class="org-left"><col class="org-left"></colgroup><thead><tr><th scope="col" class="org-left">ID</th><th scope="col" class="org-left">superuser</th><th scope="col" class="org-left">unprivileged user</th></tr></thead><tbody><tr><td class="org-left">real user ID</td><td class="org-left">set to uid</td><td class="org-left">unchanged</td></tr></tbody><tbody><tr><td class="org-left">effective user ID</td><td class="org-left">set to uid</td><td class="org-left">set to uid</td></tr></tbody><tbody><tr><td class="org-left">saved set-user ID</td><td class="org-left">set to uid</td><td class="org-left">unchanged</td></tr></tbody></table></div></div></div><div id="outline-container-orgheadline16" class="outline-4"><h4 id="orgheadline16"><span class="section-number-4">2.4.2</span> 举例</h4><div class="outline-text-4" id="text-2-4-2"><p>再举几个比较特别的例子：</p></div><div id="outline-container-orgheadline20" class="outline-5"><h5 id="orgheadline20"><span class="section-number-5">2.4.2.1</span> 设置了 <code>set-user-id</code></h5><div class="outline-text-5" id="text-2-4-2-1"><div class="org-src-container"><pre class="src src-sh">$ ls -l /usr/bin/sudo-rwsr-xr-x 1 root root 71288  2月 28  2013 /usr/bin/sudo</pre></div><p>如前所述，这个输出的含义是，对于 <code>/usr/bin/sudo</code> 文件，</p><ul class="org-ul"><li>第1~3位的 <code>rws</code> 表示该文件可被它的owner（属主）以 <code>r</code> 或 <code>w</code> 或 <code>s</code> 的权限访问</li><li>第4~6位的 <code>r-x</code> 表示该文件可被与该文件同一属组的用户以 <code>r</code> 或 <code>x</code> 的权限访问。</li><li>第7~9位的 <code>r-x</code> 表示该文件可被其它未知用户以 <code>r</code> 或 <code>x</code> 的权限访问。</li></ul><p>这样设置之后，对于owner，具有读、写、执行权限，这一点没有什么不同。但是对于不属于 <code>root</code> 组的普通用户进程来说，却大不相同。</p><p>普通用户进程执行 <code>sudo</code> 命令时通过其 <code>others</code> 中的 <code>x</code> 获得执行权限，再通过 <code>user</code> 中的 <code>s</code> 使得普通用户进程临时具有了 <code>sudo</code> 可执行文件属主( <code>root</code> )的权限，即超级权限。</p><p>这也是为什么通过 <code>sudo</code> 命令就可以让普通用户执行许多管理员权限的命令的原因。</p></div></div><div id="outline-container-orgheadline21" class="outline-5"><h5 id="orgheadline21"><span class="section-number-5">2.4.2.2</span> 设置了 <code>stick-bit</code></h5><div class="outline-text-5" id="text-2-4-2-2"><div class="org-src-container"><pre class="src src-sh">$ ls -l / |grep tmpdrwxrwxrwt  25 root root 12288  7月 20 09:09 tmp</pre></div><p>这样设置之后，对于 <code>/tmp</code> 目录，任何人都具有读、写、执行权限，这一点没有什么不同。但是对于 <code>others</code> 部分设置了粘滞位 <code>t</code>, 其功能却大不相同。</p><p>若目录没设置粘滞位，任何对目录有写权限者都则可删除其中任何文件和子目录，即使他不是相应文件的所有者，也没有读或写许可; 设置粘滞位后，用户就只能写或删除属于他的文件和子目录。</p><p>这也是为什么任何人都能向 <code>/tmp</code> 目录写文件、目录，却只能写和删除自己拥有的文件或目录的原因。</p></div></div><div id="outline-container-orgheadline22" class="outline-5"><h5 id="orgheadline22"><span class="section-number-5">2.4.2.3</span> 举一个 <code>man</code> 程序的应用片断，描述 <code>set-user-id</code> 和 <code>saved set-user-id</code> 的使用</h5><div class="outline-text-5" id="text-2-4-2-3"><p><code>man</code> 程序可以用来显示在线帮助手册， <code>man</code> 程序可以被安装指定 <code>set-user-ID</code> 或者 <code>set-group-ID</code> 为一个指定的用户或者组。 </p><p><code>man</code> 程序可以读取或者覆盖某些位置的文件，这一般由一个配置文件(通常是 <code>/etc/man.config</code> 或者 <code>/etc/manpath.config</code> )或者命令行选项来进行配置。</p><p><code>man</code> 程序可能会执行一些其它的命令来处理包含显示的 <code>man</code> 手册页的文件。</p><p>为防止处理出错， <code>man</code> 会从两个特权之间进行切换：运行 <code>man</code> 命令的用户特权，以及 <code>man</code> 程序的拥有者的特权。</p><p>需要抓住的主线：当只执行 <code>man</code> 之时，进程特权就是 <code>man</code> 用户的特权， 当通过 <code>man</code> 执行子进程（如通过 <code>!bash</code> 引出shell命令）时，用户切换为当前用户，执行完又切换回去。</p><p>过程如下：</p><ol class="org-ol"><li>假设 <code>man</code> 程序文件被用户 <code>man</code> 所拥有，并且已经被设置了它的 <code>set-user-ID</code> 位，当我们 <code>exec</code> 它的时候，我们有如下情况：<ul class="org-ul"><li><code>real user ID</code> = 我们的用户UID</li><li><code>effective user ID</code> = man用户UID</li><li><code>saved set-user-ID</code> = man用户UID</li></ul></li><li><code>man</code> 程序会访问需要的配置文件和 <code>man</code> 手册页。这些文件由 <code>man</code> 用户所拥有，但是由于 <code>effective user ID</code> 是 <code>man</code>,文件的访问就被允许了。</li><li><p>在 <code>man</code> 为我们运行任何命令的时候，它会调用 <code>setuid(getuid()))</code> (<code>getuid()</code> 返回的是 <code>real user id</code>).</p><p>因为我们不是 <code>superuser</code> 进程，这个变化只能改变 <code>effective user ID</code>. 我们会有如下情况：</p><ul class="org-ul"><li><code>real user ID</code> = 我们的用户UID(不会被改变)</li><li><code>effective user ID</code> = 我们的用户UID</li><li><code>saved set-user-ID</code> = man 的用户UID(不会被改变)</li></ul><p>现在 <code>man</code> 进程运行的时候把我们得UID作为它的 <code>effective user ID</code>.这也就是说，我们只能访问我们拥有自己权限的文件。也就是说，它能够代表我们安全地执行任何 <code>filter</code>.</p></li><li><p>当 <code>filter</code> 做完了的时候， <code>man</code> 会调用 <code>setuid(euid)</code>.</p><p>这里， <code>euid</code> 是 <code>man</code> 用户的UID.(这个ID是通过 <code>man</code> 调用 <code>geteuid</code> 来保存的)这个调用是可以的，因为 <code>setuid</code> 的参数和 <code>saved set-user-ID</code> 是相等的。(这也就是为什么我们需要 <code>saved set-user-ID</code>).这时候我们会有如下情况：</p><ul class="org-ul"><li><code>real user ID</code> = 我们的用户UID(不会被改变)</li><li><code>effective user ID</code> = man的UID</li><li><code>saved set-user-ID</code> = man 的用户UID(不会被改变)</li></ul></li><li><p>由于 <code>effective user ID</code> 是 <code>man</code>,现在 <code>man</code> 程序可以操作它自己的文件了。</p><p>通过这样使用 <code>saved set-user-ID</code>,我们可以在进程开始和结束的时候通过程序文件的 <code>set-user-ID</code> 来使用额外的权限。然而，期间我们却是以我们自己的权限运行的。如果我们无法在最后切换回 <code>saved set-user-ID</code>,我们就可能会在我们运行的时候保留额外的权限。</p></li></ol><p>下面我们来看看如果 <code>man</code> 启动一个 <code>shell</code> 的时候会发生什么： </p><ul class="org-ul"><li>这里的 <code>shell</code> 是 <code>man</code> 使用 <code>fork</code> 和 <code>exec</code> 来启动的。</li><li>因为这时 <code>real user ID</code> 和 <code>effective user ID</code> 都是我们的普通用户UID(参见step3)， 所以 <code>shell</code> 没有其它额外的权限.</li><li>启动的 <code>shell</code> 无法访问 <code>man</code> 的 <code>saved set-user-ID(man)</code> ,因为 <code>shell</code> 的 <code>saved set-user-ID</code> 是由 <code>exec</code> 从 <code>effective user ID</code> 拷贝过来的。</li><li>在执行 <code>exec</code> 的子进程( <code>shell</code> )中，所有的 <code>user ID</code> 都是我们的普通用户ID.</li></ul><p>实际上，我们描述 <code>man</code> 使用 <code>setuid</code> 函数的方法不是特别正确，因为程序可能会 <code>set-user-ID</code> 为 <code>root</code> .这时候， <code>setuid</code> 会把所有三种uid都变成你设置的id，但是我们只需要设置 <code>effective user ID</code>.</p></div></div></div></div></div><br><div id="mypostamble" align="right" style="float:right" class="status">    <table> <tbody> <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Author</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">QuietHeart</td>  </tr><tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Email</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">    <a href="mailto:quiet_heart000@126.com" target="_blank" rel="noopener">quiet_heart000@126.com</a>  </td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Date</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">[2017-02-20 一 20:25]</td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Update</td>  <td style="border-style: solid;border-width:1px;border-right:0px;"><2017-02-28 二 18:30:58></2017-02-28></td></tr>    </tbody></table></div><br>]]></content>
    
    <summary type="html">
    
      
      
        

&lt;style type=&quot;text/css&quot;&gt;
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
            
      
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
      <category term="study" scheme="http://0.0.0.0:4000/categories/categories/study/"/>
    
      <category term="linux" scheme="http://0.0.0.0:4000/categories/categories/study/linux/"/>
    
    
  </entry>
  
  <entry>
    <title>小米路由器DIY</title>
    <link href="http://0.0.0.0:4000/2016/04/07/xiaomi_router_tips/"/>
    <id>http://0.0.0.0:4000/2016/04/07/xiaomi_router_tips/</id>
    <published>2016-04-06T16:00:00.000Z</published>
    <updated>2019-09-11T08:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">  .title  { text-align: center;             margin-bottom: .2em; }  .subtitle { text-align: center;              font-size: medium;              font-weight: bold;              margin-top:0; }  .todo   { font-family: monospace; color: red; }  .done   { font-family: monospace; color: green; }  .priority { font-family: monospace; color: orange; }  .tag    { background-color: #eee; font-family: monospace;            padding: 2px; font-size: 80%; font-weight: normal; }  .timestamp { color: #bebebe; }  .timestamp-kwd { color: #5f9ea0; }  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }  .org-center { margin-left: auto; margin-right: auto; text-align: center; }  .underline { text-decoration: underline; }  #postamble p, #preamble p { font-size: 90%; margin: .2em; }  p.verse { margin-left: 3%; }  pre {    border: 1px solid #0c0;    box-shadow: 1px 1px 1px #0e0;    padding: 8pt;    font-family: italic monospace;    color: #C7EDCC;    background-color: #111111;    overflow: auto;    margin: 1.2em;  }  pre.src {    position: relative;    overflow: visible;    padding-top: 1.2em;  }  pre.src:before {    display: none;    position: absolute;    background-color: black;    top: -10px;    right: 10px;    padding: 3px;    border: 1px solid black;  }  pre.src:hover:before { display: inline;}  pre.src-sh:before    { content: 'sh'; }  pre.src-bash:before  { content: 'sh'; }  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }  pre.src-R:before     { content: 'R'; }  pre.src-perl:before  { content: 'Perl'; }  pre.src-java:before  { content: 'Java'; }  pre.src-sql:before   { content: 'SQL'; }  table { border-collapse:collapse; }  caption.t-above { caption-side: top; }  caption.t-bottom { caption-side: bottom; }  td, th { vertical-align:top;  }  th.org-right  { text-align: center;  }  th.org-left   { text-align: center;   }  th.org-center { text-align: center; }  td.org-right  { text-align: right;  }  td.org-left   { text-align: left;   }  td.org-center { text-align: center; }  dt { font-weight: bold; }  .footpara { display: inline; }  .footdef  { margin-bottom: 1em; }  .figure { padding: 1em; }  .figure p { text-align: center; }  .inlinetask {    padding: 10px;    border: 2px solid gray;    margin: 10px;    background: #ffffcc;  }  #org-div-home-and-up   { text-align: right; font-size: 70%; white-space: nowrap; }  .linenr { font-size: smaller }  .code-highlighted { background-color: #ffff00; }  .org-info-js_info-navigation { border-style: none; }  #org-info-js_console-label    { font-size: 10px; font-weight: bold; white-space: nowrap; }  .org-info-js_search-highlight    { background-color: #ffff00; color: #000000; font-weight: bold; }    code {        border:groove #555555;border-width:thin;        background-color: #111111;color: #C7EDCC;    }#table-of-contents {    font-size: 9pt;    position: fixed;    right: 10px;    top: 14em;    margin:0;    padding:0;    border-width:1px;    border-style:solid;    background: #000000;    -webkit-box-shadow: 0 0 1em #777777;    -moz-box-shadow: 0 0 1em #777777;    -webkit-border-bottom-left-radius: 5px;    -moz-border-radius-bottomleft: 5px;    text-align: right;    /* ensure doesn't flow off the screen when expanded */    max-height: 60%;    overflow: auto;     z-index: 200;}#table-of-contents h2 {    font-size: 9pt;    max-width: 8em;    font-weight: normal;    padding-left: 0.5em;    padding-top: 0.05em;    padding-bottom: 0.05em; }#table-of-contents ul {    margin-left: 14pt;     margin-bottom: 10pt;    padding: 0}#table-of-contents li {    padding: 0;    margin: 1px;    list-style: none;}#table-of-contents ul>:first-child {    color: blue;}#table-of-contents #text-table-of-contents {    display: none;    text-align: left;}#table-of-contents:hover #text-table-of-contents {    display: block;    padding: 0.5em;    margin-top: -1.5em; }</style><div id="table-of-contents"><h2>Table of Contents</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 小米路由器ssh开启</a><ul><li><a href="#orgheadline2">1.1. 烧写开发板</a><ul><li><a href="#orgheadline3">1.1.1. 网址：ROM 2.0 开发版</a></li><li><a href="#orgheadline4">1.1.2. 烧写：</a></li><li><a href="#orgheadline5">1.1.3. 总结：</a></li></ul></li><li><a href="#orgheadline6">1.2. 烧写ssh</a><ul><li><a href="#orgheadline7">1.2.1. 网址：MiWiFi开放平台</a></li><li><a href="#orgheadline8">1.2.2. 下载：</a></li><li><a href="#orgheadline9">1.2.3. 烧写：</a></li><li><a href="#orgheadline10">1.2.4. 总结：</a></li></ul></li><li><a href="#orgheadline11">1.3. 访问文件系统权限</a></li></ul></li><li><a href="#orgheadline12">2. 小米路由器防火墙配置</a><ul><li><a href="#orgheadline13">2.1. 开启端口</a></li><li><a href="#orgheadline14">2.2. 端口转发</a></li><li><a href="#orgheadline15">2.3. 禁用端口</a></li></ul></li><li><a href="#orgheadline16">3. 使用opkg在小米路由器软件管理</a><ul><li><a href="#orgheadline17">3.1. 配置软件源地址</a></li><li><a href="#orgheadline18">3.2. 用opkg在小米路由器(openwrt)上进行软件管理</a></li><li><a href="#orgheadline19">3.3. 软件管理中遇到的问题</a><ul><li><a href="#orgheadline20">3.3.1. 找不到软件，则需更换软件源</a></li><li><a href="#orgheadline21">3.3.2. 无法安装，则需配置架构信息</a></li><li><a href="#orgheadline22">3.3.3. 安装成功，无法运行，需要更换二进制文件，使之支持当前路由器 cpu 架构</a></li></ul></li><li><a href="#orgheadline23">3.4. 参考资料</a></li></ul></li><li><a href="#orgheadline24">4. 小米路由器交叉编译环境配置</a></li><li><a href="#orgheadline25">5. 小米路由器上交叉编译一些常见库和环境</a><ul><li><a href="#orgheadline26">5.1. 交叉编译安装zlib</a></li><li><a href="#orgheadline27">5.2. 交叉编译openssl</a><ul><li><a href="#orgheadline28">5.2.1. 交叉编译php时， <code>openssl</code> 的编译过程</a></li><li><a href="#orgheadline29">5.2.2. 其他编译 <code>openssl</code> 方式供参考</a></li></ul></li><li><a href="#orgheadline30">5.3. 交叉编译适用于小米路由的go环境</a><ul><li><a href="#orgheadline31">5.3.1. 下载</a></li><li><a href="#orgheadline32">5.3.2. 配置环境</a></li><li><a href="#orgheadline33">5.3.3. 编译</a></li><li><a href="#orgheadline34">5.3.4. 部署</a></li><li><a href="#orgheadline35">5.3.5. 测试</a></li><li><a href="#orgheadline36">5.3.6. 参考</a></li></ul></li></ul></li><li><a href="#orgheadline37">6. 在小米路由器上搭建基于LNMP的Owncloud云平台</a><ul><li><a href="#orgheadline38">6.1. PC上搭建Owncloud</a><ul><li><a href="#orgheadline39">6.1.1. 安装openssl</a></li><li><a href="#orgheadline40">6.1.2. 安装php所需依赖</a></li><li><a href="#orgheadline41">6.1.3. 编译、安装php</a></li><li><a href="#orgheadline42">6.1.4. 安装nginx所需依赖</a></li><li><a href="#orgheadline43">6.1.5. 编译、安装nginx</a></li><li><a href="#orgheadline44">6.1.6. Mysql的root帐号建立</a></li><li><a href="#orgheadline45">6.1.7. php的配置和运行</a></li><li><a href="#orgheadline46">6.1.8. ssl key文件的生成</a></li><li><a href="#orgheadline47">6.1.9. nginx的配置和运行</a></li><li><a href="#orgheadline48">6.1.10. 搭建owncloud网站</a></li><li><a href="#orgheadline49">6.1.11. 安装Owncloud</a></li></ul></li><li><a href="#orgheadline50">6.2. 小米路由器上搭建Owncloud</a><ul><li><a href="#orgheadline51">6.2.1. 准备交叉编译环境</a></li><li><a href="#orgheadline52">6.2.2. 下载相关软件包</a></li><li><a href="#orgheadline53">6.2.3. 交叉编译安装MySql</a></li><li><a href="#orgheadline54">6.2.4. 交叉编译安装PHP</a></li><li><a href="#orgheadline55">6.2.5. 交叉编译安装nginx</a></li><li><a href="#orgheadline56">6.2.6. 部署到小米路由器上的内容</a></li></ul></li><li><a href="#orgheadline57">6.3. 参考资料</a></li></ul></li><li><a href="#orgheadline58">7. 小米路由器上使用 <code>git</code> 版本控制系统</a><ul><li><a href="#orgheadline59">7.1. 下载 <code>git</code> 源码</a></li><li><a href="#orgheadline60">7.2. 非交叉编译 <code>git</code> 过程</a></li><li><a href="#orgheadline61">7.3. 交叉编译 <code>git</code></a><ul><li><a href="#orgheadline62">7.3.1. 配置交叉编译环境路径</a></li><li><a href="#orgheadline63">7.3.2. 生成配置脚本</a></li><li><a href="#orgheadline64">7.3.3. 编译、安装</a></li><li><a href="#orgheadline65">7.3.4. 部署与配置</a></li><li><a href="#orgheadline66">7.3.5. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[%]</code><code>[/]</code></a></li></ul></li></ul></li><li><a href="#orgheadline67">8. Misc</a><ul><li><a href="#orgheadline68">8.1. 小米路由器添加ddns</a></li><li><a href="#orgheadline69">8.2. 小米路由器修改ssh启动的欢迎语</a></li><li><a href="#orgheadline70">8.3. 云存储相关资料</a></li></ul></li><li><a href="#orgheadline71">9. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[12/25]</code> <code>[48%]</code></a><ul><li><a href="#orgheadline72">9.1. <span class="done nilDONE">DONE</span> 小米路由如何开启ssh?</a><ul><li><a href="#orgheadline73">9.1.1. 下面内容仅参考暂不用</a></li></ul></li><li><a href="#orgheadline74">9.2. <span class="done nilDONE">DONE</span> 小米路由器防火墙如何配置?</a></li><li><a href="#orgheadline75">9.3. <span class="done nilDONE">DONE</span> 小米路由如何添加域名访问？</a></li><li><a href="#orgheadline76">9.4. <span class="done nilDONE">DONE</span> 小米路由器交叉编译环境配置</a></li><li><a href="#orgheadline77">9.5. <span class="done nilDONE">DONE</span> 如何使用软件管理工具管理小米路由上的软件?</a></li><li><a href="#orgheadline78">9.6. <span class="done nilDONE">DONE</span> 开启ssh后无法获得系统文件夹写入权限?</a></li><li><a href="#orgheadline79">9.7. <span class="done nilDONE">DONE</span> 在小米路由器上搭建基于LNMP的Owncloud云平台</a></li><li><a href="#orgheadline80">9.8. <span class="done nilCANCEL">CANCEL</span> Myowncloud</a><ul><li><a href="#orgheadline81">9.8.1. site: &lt;暂不可用&gt;</a></li><li><a href="#orgheadline82">9.8.2. step</a></li><li><a href="#orgheadline83">9.8.3. refer</a></li></ul></li><li><a href="#orgheadline84">9.9. <span class="done nilCANCEL">CANCEL</span> owncloud升级</a></li><li><a href="#orgheadline85">9.10. <span class="done nilCANCEL">CANCEL</span> owncloud issue</a></li><li><a href="#orgheadline86">9.11. <span class="done nilDONE">DONE</span> 如何小米路由器上使用 <code>git</code> 版本控制系统?</a></li><li><a href="#orgheadline87">9.12. <span class="todo nilLATER">LATER</span> 交叉编译mysql-5.7.11</a><ul><li><a href="#orgheadline88">9.12.1. <span class="todo nilNEXT">NEXT</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2017-04-27 四 11:46&gt; </span></span> try <code>mysql-5.7.18</code></a></li><li><a href="#orgheadline89">9.12.2. <span class="done nilCANCEL">CANCEL</span> try cmake</a></li><li><a href="#orgheadline90">9.12.3. 参考</a></li></ul></li><li><a href="#orgheadline91">9.13. <span class="todo nilNEXT">NEXT</span> 小米路由器搭建ftp服务</a><ul><li><a href="#orgheadline92">9.13.1. 交叉编译环境</a></li><li><a href="#orgheadline93">9.13.2. 源代码下载：</a></li><li><a href="#orgheadline94">9.13.3. 编译libcrypt</a></li><li><a href="#orgheadline95">9.13.4. 修改Makefile</a></li><li><a href="#orgheadline96">9.13.5. 编译</a></li><li><a href="#orgheadline97">9.13.6. 开启防火墙</a></li><li><a href="#orgheadline98">9.13.7. 部署</a></li><li><a href="#orgheadline99">9.13.8. 配置</a></li><li><a href="#orgheadline100">9.13.9. 运行</a></li><li><a href="#orgheadline101">9.13.10. 使用</a></li><li><a href="#orgheadline102">9.13.11. 常见错误</a></li></ul></li><li><a href="#orgheadline103">9.14. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> 交叉编译vim</a></li><li><a href="#orgheadline104">9.15. <span class="todo nilNEXT">NEXT</span> Seafile</a><ul><li><a href="#orgheadline105">9.15.1. <span class="done nilDONE">DONE</span> PC 上安装Seafile</a></li><li><a href="#orgheadline106">9.15.2. 编译Seafile</a></li><li><a href="#orgheadline107">9.15.3. 交叉编译Seafile</a></li><li><a href="#orgheadline108">9.15.4. 参考资料</a></li></ul></li><li><a href="#orgheadline109">9.16. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> SparkleShare</a><ul><li><a href="#orgheadline110">9.16.1. <span class="done nilCANCEL">CANCEL</span> PC上的编译安装</a></li><li><a href="#orgheadline111">9.16.2. Ubuntu上直接安装</a></li><li><a href="#orgheadline112">9.16.3. 参考网址：</a></li></ul></li><li><a href="#orgheadline113">9.17. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> dvcs-autosync</a></li><li><a href="#orgheadline114">9.18. <span class="done nilCANCEL">CANCEL</span> git annex</a><ul><li><a href="#orgheadline115">9.18.1. 源代码</a></li><li><a href="#orgheadline116">9.18.2. 参考资料</a></li></ul></li><li><a href="#orgheadline117">9.19. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> git lfs</a></li><li><a href="#orgheadline118">9.20. <span class="todo nilNEXT">NEXT</span> 交叉编译安装Python</a><ul><li><a href="#orgheadline119">9.20.1. 下载</a></li><li><a href="#orgheadline120">9.20.2. 配置交叉编译环境路径</a></li><li><a href="#orgheadline121">9.20.3. 安装</a></li><li><a href="#orgheadline122">9.20.4. 参考资料：</a></li></ul></li><li><a href="#orgheadline123">9.21. <span class="todo nilNEXT">NEXT</span> 创建一套小米路由器setup工具脚本</a></li><li><a href="#orgheadline124">9.22. <span class="todo nilNEXT">NEXT</span> Mongodb交叉编译</a><ul><li><a href="#orgheadline125">9.22.1. source</a></li><li><a href="#orgheadline126">9.22.2. 参考</a></li></ul></li><li><a href="#orgheadline127">9.23. <span class="todo nilNEXT">NEXT</span> 编译openssh</a><ul><li><a href="#orgheadline128">9.23.1. 实践</a></li><li><a href="#orgheadline129">9.23.2. 参考</a></li></ul></li><li><a href="#orgheadline130">9.24. <span class="todo nilNEXT">NEXT</span> 整理一些常见库的交叉编译</a></li><li><a href="#orgheadline131">9.25. <span class="todo nilNEXT">NEXT</span> leannote</a><ul><li><a href="#orgheadline132">9.25.1. <span class="done nilDONE">DONE</span> PC上的Leannote编译安装</a></li><li><a href="#orgheadline133">9.25.2. 交叉编译适用于小米路由的go环境</a></li><li><a href="#orgheadline134">9.25.3. 交叉编译Mongodb</a></li><li><a href="#orgheadline135">9.25.4. 参考</a></li></ul></li></ul></li></ul></div></div><p>原文参考：<a href="http://vaqeteart.github.io/categories/study/linux/misc/xiaomi_router_tips.html" target="_blank" rel="noopener">小米路由器DIY</a></p><p>曾经还以为自己是一枚成长迅速的米粉，但是渐渐却发现，我不适合做为米粉。</p><p>尽管购买过红米手机、但是我现在觉得目前使用魅蓝更好用。</p><p>尽管之前购买了小米路由、小蚁摄像机、小米插排……现在也正在使用着，</p><p>但这并不表示我忠爱小米，只能说我是一个小米“受害者”，宣传的力量真是不可忽视。</p><p>我相信小米也有它自己的好处，但是真的觉得它不适合我，</p><p>在这台路由器上如此折腾，只是不得不使用已经花钱用买过的东西，很大程度上也可能是因为对Linux的兴趣。</p><p>这个文章没有贬低小米的意思，更无意与人争执，只是最开始表达一些个人的情绪，不喜者，可以略过。</p><p>分享此文出来供喜欢和不喜欢小米的朋友们参考，以及自己记录。</p><p>通过此文，可以让专业和有些专业背景的朋友们了解如下内容：</p><ul class="org-ul"><li>如何在特定平台上进行交叉编译，实现源码跨平台运行</li><li>如何在特定平台上搭建自己的云存储体系</li><li>如何在特定平台上搭建 <code>php/nginx</code> 提供web服务</li><li>如何在特定平台上搭建 <code>mysql</code> 数据库</li><li>如何在特定平台上搭建基于 <code>git</code> 的管理代码仓库服务</li><li>其它，待更新</li></ul><p>这里的特定平台，小米路由器上实践，在其它 <code>openwrt</code> 或者 <code>linux</code> 系统上，应当能够类似实现。</p><p>接下来主要介绍在小米路由器上面讲述有关这些方面的问题。</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><a id="ID-e920b849-4dc8-4385-8644-9ba243894764"></a><span class="section-number-2">1</span> 小米路由器ssh开启</h2><div class="outline-text-2" id="text-1"><p>开启ssh访问，小米路由器需升级到开发版0.5.28及以上，小米路由器mini需升级到开发版0.3.84及以上。注意：稳定版不支持。</p></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> 烧写开发板</h3><div class="outline-text-3" id="text-1-1"><p></p></div><div id="outline-container-orgheadline3" class="outline-4"><h4 id="orgheadline3"><span class="section-number-4">1.1.1</span> 网址：<a href="http://www1.miwifi.com/miwifi_download.html" target="_blank" rel="noopener">ROM 2.0 开发版</a></h4><div class="outline-text-4" id="text-1-1-1"><p>下载：<a href="http://bigota.miwifi.com/xiaoqiang/rom/r2d/brcm4709_r2d_all_6c01b_2.11.67.bin" target="_blank" rel="noopener">http://bigota.miwifi.com/xiaoqiang/rom/r2d/brcm4709_r2d_all_6c01b_2.11.67.bin</a></p></div></div><div id="outline-container-orgheadline4" class="outline-4"><h4 id="orgheadline4"><span class="section-number-4">1.1.2</span> 烧写：</h4><div class="outline-text-4" id="text-1-1-2"><pre class="example">U盘刷机步骤：1、准备一个系统格式为FAT或FAT32的U盘；2、到小米路由器的官网miwifi.com下载用来进行刷机的ROM包；重要的事情再说三遍：U盘刷机会清空硬盘上的数据！会清空硬盘上的数据！！会清空硬盘上的数据！！！3、将下载好的ROM包放到U盘的根目录下，并命名为“miwifi.bin”；4、对于指示灯为红色闪烁或者红色常亮的情况，直接将U盘插入路由器的USB接口，用细长的工具按住reset，待路由器指示灯变为黄灯闪烁时，松开reset；对于指示灯为其他状态的情况，需要先断开路由器的电源后，将U盘插入路由器的USB接口，用细长的工具按住reset，接通电源，待路由器指示灯变为黄灯闪烁时，松开reset5、大约3-5分钟后，指示灯变成黄色常亮状态时可以拔掉U盘，此时刷机已经完成正在重启，稍等片刻路由器指示灯变蓝就可以正常使用了。如果在刷机过程中，指示灯黄灯闪烁几秒后变为黄灯常亮状态，说明此次U盘刷机过程失败，请检查以上的刷机过程并重新进行刷机操作。</pre></div></div><div id="outline-container-orgheadline5" class="outline-4"><h4 id="orgheadline5"><span class="section-number-4">1.1.3</span> 总结：</h4><div class="outline-text-4" id="text-1-1-3"><ol class="org-ol"><li>下载rom</li><li>拷贝到u盘</li><li>路由器断电、插入u盘(fat32格式)</li><li>按住reset上电</li><li>等待黄灯闪烁，松开reset</li><li>一直等待，直至蓝灯。</li></ol></div></div></div><div id="outline-container-orgheadline6" class="outline-3"><h3 id="orgheadline6"><span class="section-number-3">1.2</span> 烧写ssh</h3><div class="outline-text-3" id="text-1-2"><p></p></div><div id="outline-container-orgheadline7" class="outline-4"><h4 id="orgheadline7"><span class="section-number-4">1.2.1</span> 网址：<a href="http://www.miwifi.com/miwifi_open.html" target="_blank" rel="noopener">MiWiFi开放平台</a></h4></div><div id="outline-container-orgheadline8" class="outline-4"><h4 id="orgheadline8"><span class="section-number-4">1.2.2</span> 下载：<a href="https://d.miwifi.com/rom/ssh" target="_blank" rel="noopener">https://d.miwifi.com/rom/ssh</a></h4></div><div id="outline-container-orgheadline9" class="outline-4"><h4 id="orgheadline9"><span class="section-number-4">1.2.3</span> 烧写：</h4><div class="outline-text-4" id="text-1-2-3"><pre class="example">工具包使用方法：小米路由器需升级到开发版0.5.28及以上，小米路由器mini需升级到开发版0.3.84及以上。注意：稳定版不支持。    请将下载的工具包bin文件复制到U盘（FAT/FAT32格式）的根目录下，保证文件名为miwifi_ssh.bin；    断开小米路由器的电源，将U盘插入USB接口；    按住reset按钮之后重新接入电源，指示灯变为黄色闪烁状态即可松开reset键；    等待3-5秒后安装完成之后，小米路由器会自动重启，之后您就可以尽情折腾啦 ：）</pre></div></div><div id="outline-container-orgheadline10" class="outline-4"><h4 id="orgheadline10"><span class="section-number-4">1.2.4</span> 总结：</h4><div class="outline-text-4" id="text-1-2-4"><ol class="org-ol"><li>下载rom</li><li>拷贝到u盘</li><li>路由器断电、插入u盘(fat32格式)</li><li>按住reset上电</li><li>等待黄灯闪烁，松开reset</li><li>一直等待，直至蓝灯。</li></ol></div></div></div><div id="outline-container-orgheadline11" class="outline-3"><h3 id="orgheadline11"><a id="ID-438b20dc-9055-47e1-98f3-bb98d31183fa"></a><span class="section-number-3">1.3</span> 访问文件系统权限</h3><div class="outline-text-3" id="text-1-3"><p>开启ssh后无法获得系统文件夹写入权限，只能读写外接硬盘的内容。这对有时候系统级别的配置不太方便。</p><p>这主要是因为挂载的时候，以只读方式挂载了相应的目录，执行下述命令即可：</p><div class="org-src-container"><pre class="src src-sh">$mount -o remount -rw /</pre></div></div></div></div><div id="outline-container-orgheadline12" class="outline-2"><h2 id="orgheadline12"><a id="ID-8ba30038-f09d-4780-81ce-54f2c062f789"></a><span class="section-number-2">2</span> 小米路由器防火墙配置</h2><div class="outline-text-2" id="text-2"></div><div id="outline-container-orgheadline13" class="outline-3"><h3 id="orgheadline13"><span class="section-number-3">2.1</span> 开启端口</h3><div class="outline-text-3" id="text-2-1"><pre class="example">使用WinSCP软件进入192.168.31.1 端口22，用户名 root 密码 admin 文件协议改为SCP进入,进入后打开/etc/config/firewall这个文件的尾部增加：    config rule 'httpdwan'          option src 'wan'         option dest_port '8088'    option proto 'tcp'    option target 'ACCEPT'    option name ''\''httpd wan accept tcp port 8088'\'''保存后，SSH到路由的22端口执行 /etc/init.d/firewall restart 重启防火墙。</pre><p>参考：<a href="http://www.laohao.info/xiao-mi-lu-you-qi-fang-huo-qiang-kai-qi-duan-kou-rang-wai-bu-wang-luo-fang-wen-ni-di-xiao-mi-lu-you/" target="_blank" rel="noopener">小米路由器防火墙开启端口，让外部网络访问你的小米路由</a></p></div></div><div id="outline-container-orgheadline14" class="outline-3"><h3 id="orgheadline14"><span class="section-number-3">2.2</span> 端口转发</h3><div class="outline-text-3" id="text-2-2"><p>修改 <code>/etc/config/firewall</code></p><pre class="example"># port redirect of remapped ssh port (22001) on wanconfig redirect 'myssh'option src wanoption src_dport 10022option dest lanoption dest_port 22option proto tcp</pre><p>重启防火墙 <code>/etc/init.d/firewall restart</code></p><p>参考 <a href="http://jingyan.baidu.com/article/9113f81b3a5d982b3314c74a.html?st=3&amp;net_type=2&amp;bd_page_type=1&amp;os=0&amp;showimg=1&amp;rst=6" target="_blank" rel="noopener">小米路由器mini如何设置外网访问ssh</a></p></div></div><div id="outline-container-orgheadline15" class="outline-3"><h3 id="orgheadline15"><a id="ID-302570f5-16c1-4874-90df-b413b2dca2f0"></a><span class="section-number-3">2.3</span> 禁用端口</h3><div class="outline-text-3" id="text-2-3"><p>默认端口不对外开放。</p></div></div></div><div id="outline-container-orgheadline16" class="outline-2"><h2 id="orgheadline16"><a id="ID-1beeb842-72bd-4682-b3b0-cabca3dd0b6c"></a><span class="section-number-2">3</span> 使用opkg在小米路由器软件管理</h2><div class="outline-text-2" id="text-3"><p>小米路由器系统是openwrt系统，该系统基于linux，使用 <code>opkg</code> 工具实现软件管理，该工具类似ubuntu中的 <code>apt-get</code> 或者centeros 中的 <code>yum</code> 工具。</p><p>目前的现状其实是：找不到适合xiaomi路由器架构的合适的软件源，通过openwrt的所有软件源中相应交叉工具链的信息，发现很难找到和小米路由器相符的软件。这样的结果是，即使使用某一个软件源，强行配置将对应软件安装到小米路由器中，也无法运行。 最稳妥的方式还是使用小米路由器提供的交叉编译工具链，通过源代码交叉编译要使用的软件包，这需要一些专业技术（例如如何通过autotools 配置交叉编译选项等等）， 所以对于小米路由器，普通用户其实也很难自由的安装所需软件。下面给出的信息，也算为遇到相关问题的同仁提供一个参考。</p><p>使用opkg管理软件的大致方式如下</p></div><div id="outline-container-orgheadline17" class="outline-3"><h3 id="orgheadline17"><span class="section-number-3">3.1</span> 配置软件源地址</h3><div class="outline-text-3" id="text-3-1"><p>配置文件为 <code>/etc/opkg.conf</code>, 下面是一个配置文件完整的例子：</p><pre class="example">#src/gz attitude_adjustment http://downloads.openwrt.org/attitude_adjustment/12.09/brcm4709/R2D/packages#src/gz attitude_adjustment http://downloads.openwrt.org/attitude_adjustment/12.09/brcm63xx/generic/packagessrc/gz attitude_adjustment http://downloads.openwrt.org/attitude_adjustment/12.09/brcm47xx/generic/packages#src/gz attitude_adjustment http://downloads.openwrt.org/attitude_adjustment/12.09/omap4/generic/packagesdest root /datadest ram /tmplists_dir ext /data/var/opkg-listsoption overlay_root /dataarch all 1arch noarch 1arch brcm4709 10arch brcm47xx 100arch brcm53xx 110arch brcm63xx 120arch omap4 130</pre><p>这里的含义不言而喻，最关键的还是最开始列出的地址信息，指明了软件源中所包括的软件从哪里下载。这里为 <code>http://downloads.openwrt.org/attitude_adjustment/12.09/brcm47xx/generic/packages</code> 。其它为安装时的路径和架构信息，用到之时自然会明白。</p></div></div><div id="outline-container-orgheadline18" class="outline-3"><h3 id="orgheadline18"><span class="section-number-3">3.2</span> 用opkg在小米路由器(openwrt)上进行软件管理</h3><div class="outline-text-3" id="text-3-2"><p><code>opkg</code> 使用方法类似 ubuntu下的 <code>apt-get</code>, 具体如下：</p><ul class="org-ul"><li><p>更新软件源当我们修改软件元配置文件 <code>/etc/opkg.conf</code> 中的软件源信息之后，需要更新本地软件源索引，才能继续后面的使用。命令如下：</p><div class="org-src-container"><pre class="src src-sh">#opkg update</pre></div></li><li><p>查看当前系统支持安装的架构</p><div class="org-src-container"><pre class="src src-sh">$opkg print-architecture</pre></div><p>只有符合这里列出的架构的软件包，才能被安装。</p></li><li><p>直接下载 <code>*.ipk</code> 安装我们可以直接下载相应的 <code>*.ipk</code> 文件进行安装， 例如安装screen</p><div class="org-src-container"><pre class="src src-sh">$wget -c http://downloads.openwrt.org/attitude_adjustment/12.09/brcm47xx/generic/packages/screen_4.0.3-3_brcm47xx.ipk#opkg install screen_4.2.1-2_ralink.ipk</pre></div><p>这里， <code>ipk</code> 文件的地址，通过软件源配置文件可以猜到。</p></li><li><p>通过软件源配置文件中的软件源库进行安装配置好软件源库，并且更新后，不用将 <code>.ipk</code> 文件下载，直接可以如下安装：</p><div class="org-src-container"><pre class="src src-sh">#opkg install libgcc#opkg install ./libc_0.9.33.2-1_brcm47xx.ipk #opkg install ./screen_4.0.3-3_brcm47xx.ipk</pre></div><p>安装之后，工具会在 <code>/data/usr/</code> 相关的子目录中。</p></li><li><p>查找软件源库中是否存在某软件假设我们查找是否存在包含 <code>screen</code> 字样的软件，可如下：</p><div class="org-src-container"><pre class="src src-sh">#opkg find screen</pre></div></li><li><p>查看软件源库中所有的软件</p><div class="org-src-container"><pre class="src src-sh">#opkg list</pre></div></li><li><p>查看已经安装的软件</p><div class="org-src-container"><pre class="src src-sh">#opkg list-installed</pre></div></li><li><p>卸载</p><div class="org-src-container"><pre class="src src-sh">#opkg remove --autoremove screen#opkg remove --autoremove --force-removal-of-essential-packages libc#opkg remove --autoremove --force-removal-of-essential-packages libgcc</pre></div><p>这里对screen这样的普通程序，卸载之时可以加上 <code>--autoremove</code> 同时卸载掉无用的依赖。而对于 <code>libc</code> 这样的特殊库，需要再加额外选项才能强制卸载。</p></li><li><p>更多卸载的命令可以查看帮助信息：</p><div class="org-src-container"><pre class="src src-sh">$opkg</pre></div></li></ul></div></div><div id="outline-container-orgheadline19" class="outline-3"><h3 id="orgheadline19"><span class="section-number-3">3.3</span> 软件管理中遇到的问题</h3><div class="outline-text-3" id="text-3-3"></div><div id="outline-container-orgheadline20" class="outline-4"><h4 id="orgheadline20"><span class="section-number-4">3.3.1</span> 找不到软件，则需更换软件源</h4><div class="outline-text-4" id="text-3-3-1"><p>我们想安装某软件之前，只需找到包含该软件的相应软件源地址后，填入 <code>opkg.conf</code> 中即可，例如你可能会找到如下的源：</p><pre class="example">#src/gz attitude_adjustment http://downloads.openwrt.org/attitude_adjustment/12.09/brcm4709/R2D/packages#src/gz attitude_adjustment http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/packages#src/gz attitude_adjustment http://downloads.openwrt.org/attitude_adjustment/12.09/brcm47xx/generic/packages#src/gz attitude_adjustment http://downloads.openwrt.org/attitude_adjustment/12.09/brcm63xx/generic/packagessrc/gz attitude_adjustment http://downloads.openwrt.org/snapshots/trunk/bcm53xx/generic/packages/packages</pre><p>使用其中一个即可。软件源中实际的软件包文件都是*.ipk格式，是事先用交叉编译方式编译好的二进制程序。</p></div></div><div id="outline-container-orgheadline21" class="outline-4"><h4 id="orgheadline21"><span class="section-number-4">3.3.2</span> 无法安装，则需配置架构信息</h4><div class="outline-text-4" id="text-3-3-2"><p>如果无法安装，可能是由于架构不匹配导致，需要通过命令 <code>opkg print-architecture</code> 查看当前系统支持的架构，再根据被安装的安装包名称，确定需支持的架构。</p><p>如果当前系统不支持被安装软件包所需支持的架构，那么则修改/etc/opkg.conf 添加类似如下：</p><pre class="example">arch all 100arch brcm4716 200arch brcm47xx 300arch bcm53xx 310</pre><p>这里安装的软件包为 <code>screen_4.0.3-3_brcm47xx.ipk</code>, 通过名字可知其架构为 <code>brcm47xx</code>; 而添加的 <code>arch brcm47xx</code> 与该软件包的架构匹配。 添加之后，所以即可安装成功。</p><p>注意：安装成功不代表可以成功运行，参见后面。</p><p>修改 <code>/etc/opkg.conf</code> 的操作会修改 <code>opkg print-architecture</code> 默认配置。根据列出的结果，依次按照优先级匹配相应的内容。</p></div></div><div id="outline-container-orgheadline22" class="outline-4"><h4 id="orgheadline22"><span class="section-number-4">3.3.3</span> 安装成功，无法运行，需要更换二进制文件，使之支持当前路由器 cpu 架构</h4><div class="outline-text-4" id="text-3-3-3"><p>前面配置好架构之后虽然能够安装软件，但是不一定能够运行。这里仍以 <code>screen</code> 为例，如果仍然无法运行 <code>screen</code> 。则需要确认一下其二进制文件中的cpu架构信息。</p><ol class="org-ol"><li><p>将安装好的二进制文件 <code>screen</code>, 以及小米路由器上可运行的原生的 <code>busybox</code> 二进制文件拷贝到linux上，用 <code>file</code> 查看其架构是否一样。这里如下，</p><p><code>screen</code> 中的架构信息为：</p><div class="org-src-container"><pre class="src src-sh">$file screenscreen: ELF 32-bit LSB executable, MIPS, MIPS32 version 1, dynamically linked (uses shared libs), corrupted section header size</pre></div><p>而 <code>busybox</code> 中的架构信息为：</p><div class="org-src-container"><pre class="src src-sh">busybox: ELF 32-bit LSB executable, ARM, version 1 (SYSV), dynamically linked (uses shared libs), stripped</pre></div><p>可见 <code>screen</code> 无法运行，是由于实际cpu架构不一致问题（注意，这里的架构不是前面配置的架构，而是运行所需的实际架构），导致无法运行。</p></li><li>解决方法有二：<ul class="org-ul"><li>直接用小米官网上提供的小米路由器对应的交叉编译工具链，结合相应软件（screen）源代码，编译出一个可执行的程序。</li><li>在openwrt相关软件源网站中，寻找能够和当前主机架构一致（或最接近）的架构的软件源。</li></ul></li></ol><ol class="org-ol"><li>寻找匹配架构的软件源这里不讲交叉编译的方法（事实上交叉编译的方法各个软件各不相同）。讲述当软件无法运行之时，如何找到可以运行的软件。<ul class="org-ul"><li>首先，需要确定当前小米路由器上的 <code>busybox</code> 支持的cpu架构。如前所述，通过 <code>file</code> 命令，可以看到是 <code>ARM, version 1 (SYSV),...</code> 。只有二进制文件中的信息和此相一致之时，才可能运行得起来。</li><li><p>其次，确认配置文件中，软件源中软件所支持的cpu架构。当然，我们可以先配置好架构信息，将软件安装上，然后类似前面，通过 <code>file</code> 命令查看相应的软件程序所支持的架构。但是这样做，太麻烦了，每检查一个软件源，就需要安装该源的软件，并且查看。其实有更简单的方法。</p><p>我们前面配置中使用的是如下软件源： <code>src/gz attitude_adjustment http://downloads.openwrt.org/attitude_adjustment/12.09/brcm47xx/generic/packages</code>, 所以到 <code>http://downloads.openwrt.org/attitude_adjustment/12.09/brcm47xx/generic/</code> 中，看到如下类似的链接：</p><pre class="example">Parent directory/--packages/-09-Jul-2014 08:05OpenWrt-ImageBuilder-brcm47xx-for-linux-i486.tar.bz235570587403-Apr-2013 08:39OpenWrt-SDK-brcm47xx-for-linux-i486-gcc-4.6-linaro_uClibc-0.9.33.2.tar.bz262982212303-Apr-2013 08:39OpenWrt-Toolchain-brcm47xx-for-mipsel-gcc-4.6-linaro_uClibc-0.9.33.2.tar.bz2</pre><p>这里，注意 <code>xxxToolchainxxx</code>, 由此可知，之前软件源配置中指定的软件源是mipsel相关的架构（这也和前面我们通过file命令中看到的结果一致），和我们的arm不一致。</p><p>用类似的方法可以找到合适的架构，比如我们看到 <code>http://downloads.openwrt.org/attitude_adjustment/12.09/omap4/generic/</code> 中的信息：</p><pre class="example">OpenWrt-Toolchain-omap4-for-arm_v7-a-gcc-4.6-linaro_uClibc-0.9.33.2_eabi.tar.bz2</pre><p>发现这个软件源采用的arm架构，大致上和我们小米路由器上显示的 <code>busybox</code> 的架构更为接近，所以这个软件源中的软件可能会在小米路由器上运行起来。当然这里只是一个例子，还需实践一下（重新配置软件源、添加omap4的架构配置、更新软件源、安装软件、运行），才能确定。</p></li></ul></li></ol></div></div></div><div id="outline-container-orgheadline23" class="outline-3"><h3 id="orgheadline23"><span class="section-number-3">3.4</span> 参考资料</h3><div class="outline-text-3" id="text-3-4"><ul class="org-ul"><li><p>关于软件源的问题参考</p><p><a href="http://www.right.com.cn/FORUM/thread-158625-1-1.html" target="_blank" rel="noopener">http://www.right.com.cn/FORUM/thread-158625-1-1.html</a></p><p><a href="http://bbs.xiaomi.cn/t-9915018" target="_blank" rel="noopener">http://bbs.xiaomi.cn/t-9915018</a></p></li><li><p>关于适用与openwrt系统的已有软件源网址，可到如下网站结合自己机器实际情况比对寻找：</p><p><a href="https://wiki.openwrt.org/doc/techref/opkg" target="_blank" rel="noopener">https://wiki.openwrt.org/doc/techref/opkg</a></p><p><a href="http://downloads.openwrt.org/snapshots/trunk/bcm53xx/generic/packages/packages" target="_blank" rel="noopener">http://downloads.openwrt.org/snapshots/trunk/bcm53xx/generic/packages/packages</a></p><p><a href="http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/packages/" target="_blank" rel="noopener">http://downloads.openwrt.org.cn/PandoraBox/ralink/packages/packages/</a></p><p><a href="http://downloads.openwrt.org/attitude_adjustment/12.09/brcm47xx/generic/packages/" target="_blank" rel="noopener">http://downloads.openwrt.org/attitude_adjustment/12.09/brcm47xx/generic/packages/</a></p><p><a href="https://downloads.openwrt.org/chaos_calmer/15.05.1/bcm53xx/generic/packages/" target="_blank" rel="noopener">https://downloads.openwrt.org/chaos_calmer/15.05.1/bcm53xx/generic/packages/</a></p></li><li><p>关于配置软件架构参考</p><p><a href="https://wiki.openwrt.org/doc/techref/opkg" target="_blank" rel="noopener">https://wiki.openwrt.org/doc/techref/opkg</a> <code>Adjust Architecturesn</code> 部分的内容。</p></li><li><p>关于安装最新ipk包提示postinst出错解决方法参见</p><p><a href="http://www.ddhow.com/blog/postinst.html" target="_blank" rel="noopener">http://www.ddhow.com/blog/postinst.html</a></p></li></ul></div></div></div><div id="outline-container-orgheadline24" class="outline-2"><h2 id="orgheadline24"><a id="ID-812a4b1a-4b1b-4521-9dd1-34e0371d07f9"></a><span class="section-number-2">4</span> 小米路由器交叉编译环境配置</h2><div class="outline-text-2" id="text-4"><p>配置好小米交叉编译环境，所有的软件基本上从源码级别上原生即可编译生成，无需上网寻找各种人家做好的软件包。是最理想安装软件的方法。</p><ol class="org-ol"><li><p>下载</p><p>首先到官网网站： <a href="http://www.miwifi.com/miwifi_open.html" target="_blank" rel="noopener">小米开放平台</a> 下载交叉编译工具链。根据自己的路由器型号选择其中的 "插件开发文档" 链接。</p><div class="org-src-container"><pre class="src src-sh">$mkdir -p /home/miracle/work/1_inbox/xiaomirouter/test$cd /home/miracle/work/1_inbox/xiaomirouter/test$wget -c http://bigota.miwifi.com/xiaoqiang/sdk/tools/package/sdk_package.zip</pre></div></li><li><p>设置交叉编译环境</p><div class="org-src-container"><pre class="src src-sh">$unzip sdk_package.zip$export PATH=/home/miracle/work/1_inbox/xiaomirouter/test/sdk_package/toolchain/bin:$PATH</pre></div><p>这里设置交叉编译环境是为了让源代码通过该交叉编译工具进行编译，这样生成的可执行文件才符合小米路由器cpu的架构，能够在小米路由器上执行。而pc上直接编译生成的可执行文件只能在pc上执行（因为pc和小米路由器的cpu架构不同）。</p></li></ol><p>之后的内容，全部基于该交叉编译工具链进行。从源代码配置、编译、安装生成可运行的软件可执行文件，许多开源软件，基本都是利用GNU Auto tools工具进行，遵循 <code>configure</code>, <code>make</code>, <code>make install</code> 三部曲。</p></div></div><div id="outline-container-orgheadline25" class="outline-2"><h2 id="orgheadline25"><a id="ID-8fa01248-1425-4e62-8ab4-9ce6954d0ca8"></a><span class="section-number-2">5</span> 小米路由器上交叉编译一些常见库和环境</h2><div class="outline-text-2" id="text-5"><p>这里列出一些交叉编译时，需要的常见库，后面交叉编译一些工具时，可能会用到这里的内容。</p></div><div id="outline-container-orgheadline26" class="outline-3"><h3 id="orgheadline26"><a id="ID-74d9cbba-b1f7-43d6-a52a-f1da558c4774"></a><span class="section-number-3">5.1</span> 交叉编译安装zlib</h3><div class="outline-text-3" id="text-5-1"><div class="org-src-container"><pre class="src src-sh">$wget -c http://zlib.net/zlib-1.2.8.tar.gz$tar -xzvf zlib-1.2.8.tar.gz$cd zlib-1.2.8$export CC=arm-xiaomi-linux-uclibcgnueabi-gcc$./configure  -static --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop $make $make install</pre></div></div></div><div id="outline-container-orgheadline27" class="outline-3"><h3 id="orgheadline27"><a id="ID-153b0dd3-3815-49a7-b98f-78a0f5b86f7e"></a><span class="section-number-3">5.2</span> 交叉编译openssl</h3><div class="outline-text-3" id="text-5-2"></div><div id="outline-container-orgheadline28" class="outline-4"><h4 id="orgheadline28"><a id="ID-46f1e8ac-84ad-4487-add7-0b4330587ac7"></a><span class="section-number-4">5.2.1</span> 交叉编译php时， <code>openssl</code> 的编译过程</h4><div class="outline-text-4" id="text-5-2-1"><div class="org-src-container"><pre class="src src-sh">$wget -c http://www.openssl.org/source/openssl-1.0.2g.tar.gz$tar -xzvf openssl-1.0.2g.tar.gz $cd openssl-1.0.2g/$./Configure shared no-asm --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop os/compiler:arm-xiaomi-linux-uclibcgnueabi-gcc$make$make install</pre></div></div></div><div id="outline-container-orgheadline29" class="outline-4"><h4 id="orgheadline29"><a id="ID-55259b19-7690-4f31-b18d-dcd14c244d67"></a><span class="section-number-4">5.2.2</span> 其他编译 <code>openssl</code> 方式供参考</h4><div class="outline-text-4" id="text-5-2-2"><div class="org-src-container"><pre class="src src-sh">$wget -c http://www.openssl.org/source/openssl-1.0.2g.tar.gz$tar -xzvf openssl-1.0.2g.tar.gz$export CROSS_COMPILE=arm-xiaomi-linux-uclibcgnueabi-$cd openssl-1.0.2g./config no-asm shared --prefix=$CUSTOM_PREFIX/openssl-1.0.2g$vim Makefile...#SHARED_LDFLAGS=-m64...#CC= gccCC= arm-xiaomi-linux-uclibcgnueabi-gcc#CFLAG= -fPIC -DOPENSSL_PIC -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -m64 -DL_ENDIAN -O3 -WallCFLAG= -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -DOPENSSL_NO_KRB5 -DL_ENDIAN -O3 -WallDEPFLAG= -DOPENSSL_NO_EC_NISTP_64_GCC_128 -DOPENSSL_NO_GMP -DOPENSSL_NO_JPAKE -DOPENSSL_NO_LIBUNBOUND -DOPENSSL_NO_MD2 -DOPENSSL_NO_RC5 -DOPENSSL_NO_RFC3779 -DOPENSSL_NO_SCTP -DOPENSSL_NO_SSL_TRACE -DOPENSSL_NO_SSL2 -DOPENSSL_NO_STORE -DOPENSSL_NO_UNIT_TEST -DOPENSSL_NO_WEAK_SSL_CIPHERSPEX_LIBS= EX_LIBS= -ldlEXE_EXT= ARFLAGS= #AR= ar $(ARFLAGS) rAR= arm-xiaomi-linux-uclibcgnueabi-ar $(ARFLAGS) r#RANLIB= /usr/bin/ranlibRANLIB= arm-xiaomi-linux-uclibcgnueabi-ranlib#NM= nmNM= arm-xiaomi-linux-uclibcgnueabi-nmPERL= /usr/bin/perlTAR= tarTARFLAGS= --no-recursionMAKEDEPPROG= gccLIBDIR=lib...$make depend$make$make install</pre></div><p><a href="http://blog.csdn.net/zy799894671/article/details/22289039" target="_blank" rel="noopener">http://blog.csdn.net/zy799894671/article/details/22289039</a></p></div></div></div><div id="outline-container-orgheadline30" class="outline-3"><h3 id="orgheadline30"><a id="ID-ffbea2cc-0190-48c7-ac48-bf8f8ff2dcfc"></a><span class="section-number-3">5.3</span> 交叉编译适用于小米路由的go环境</h3><div class="outline-text-3" id="text-5-3"></div><div id="outline-container-orgheadline31" class="outline-4"><h4 id="orgheadline31"><span class="section-number-4">5.3.1</span> 下载</h4><div class="outline-text-4" id="text-5-3-1"><p>因为交叉编译，需要用go本身来编译go，所以要有一个运行在PC上的二进制go程序，和待编译的go源码</p><div class="org-src-container"><pre class="src src-sh">$wget -c https://storage.googleapis.com/golang/go1.8.1.linux-amd64.tar.gz$wget -c https://storage.googleapis.com/golang/go1.8.1.src.tar.gz$tar -xzvf go1.8.1.linux-amd64.tar.gz$mv go /home/miracle/myinstalled$tar -xzvf go1.8.1.src.tar.gz</pre></div></div></div><div id="outline-container-orgheadline32" class="outline-4"><h4 id="orgheadline32"><span class="section-number-4">5.3.2</span> 配置环境</h4><div class="outline-text-4" id="text-5-3-2"><p>注：由于小米路由的CPU BCM4709不支持硬件浮点数，所以如果需要使用GO来编译GO程序，需要将GOARM 设置为5（默认为6）</p><p>交叉编译路径具体配置这里省略，具体参考：<a href="#orgheadline76">小米路由器交叉编译环境配置</a></p><p>下面是配置过程</p><div class="org-src-container"><pre class="src src-sh">$export PATH=/home/miracle/work/1_inbox/xiaomirouter/test/sdk_package/toolchain/bin:$PATH$export GOROOT=/home/miracle/work/1_inbox/xiaomirouter/test/go$export GOOS=linux$export GOARCH=arm$export GOARM=5$CC_FOR_TARGET=arm-xiaomi-linux-uclibcgnueabi-gcc$CXX_FOR_TARGET=arm-xiaomi-linux-uclibcgnueabi-g++$export GOROOT_BOOTSTRAP=/home/miracle/myinstalled/go</pre></div></div></div><div id="outline-container-orgheadline33" class="outline-4"><h4 id="orgheadline33"><span class="section-number-4">5.3.3</span> 编译</h4><div class="outline-text-4" id="text-5-3-3"><div class="org-src-container"><pre class="src src-sh">$cd go/src$./make.bash</pre></div></div></div><div id="outline-container-orgheadline34" class="outline-4"><h4 id="orgheadline34"><span class="section-number-4">5.3.4</span> 部署</h4><div class="outline-text-4" id="text-5-3-4"><p>编译之后， <code>go/bin/linux_arm</code> 里面的内容即为需要的内容。</p><div class="org-src-container"><pre class="src src-sh">$cd go/bin$tar -czvf linux_arm.tgz linux_armscp linux_arm.tgz xiaomi:xxx$scp linux_arm.tgz  xiaomi:/userdisk/data/myinstalled</pre></div></div></div><div id="outline-container-orgheadline35" class="outline-4"><h4 id="orgheadline35"><span class="section-number-4">5.3.5</span> 测试</h4><div class="outline-text-4" id="text-5-3-5"><p>小米路由器上：</p><div class="org-src-container"><pre class="src src-sh">$tar -xzvf linux_arm.tgz$mkdir go$mv linux_arm go/bin$mkdir gopackage$export GOROOT=/userdisk/data/myinstalled/go$export GOPATH=//userdisk/data/myinstalled/gopackage$export PATH=$PATH:$GOROOT/bin:$GOPATH/bin$go versiongo version go1.8.1 linux/arm</pre></div></div></div><div id="outline-container-orgheadline36" class="outline-4"><h4 id="orgheadline36"><span class="section-number-4">5.3.6</span> 参考</h4><div class="outline-text-4" id="text-5-3-6"><p>go环境： <a href="https://golang.org/doc/" target="_blank" rel="noopener">https://golang.org/doc/</a></p><p>go源码安装： <a href="https://golang.org/doc/install/source" target="_blank" rel="noopener">https://golang.org/doc/install/source</a></p><p>xiaomi: <a href="http://bbs.xiaomi.cn/t-10261188" target="_blank" rel="noopener">http://bbs.xiaomi.cn/t-10261188</a></p></div></div></div></div><div id="outline-container-orgheadline37" class="outline-2"><h2 id="orgheadline37"><a id="ID-d116ddc3-b3c0-4a82-93e9-628e0ecc2f69"></a><span class="section-number-2">6</span> 在小米路由器上搭建基于LNMP的Owncloud云平台</h2><div class="outline-text-2" id="text-6"><p>Mega Sync、Box、DropBox、苹果icloud、微软Sky Driver、Google的GDriver、腾讯微云、百度云、新浪微盘、坚果云、金山快盘、七牛、115网盘、华为网盘、Ubuntu One、</p><p>这里介绍如何在小米路由器上搭建自己的个人云存储系统。</p><p>在此之前，需要注意云存储和云备份是有区别的。在参考英文原文： <code>Cloud services: How do they compare?（译者/刘旭坤）</code> 中提到：</p><ol class="org-ol"><li>云存储的目的是方便地在不同设备之间共享文件，并不意味着一定会在电脑或手机上创建备份。如果发生误删，可能文件永远也找不回来了。</li><li>云备份则不同，如果本地的文件删除了在云端还有。</li></ol><p>这里主要侧重的是云存储功能的建立。</p><p>如果单纯是为了云存储功能的搭建，采用许多可用的服务即可，例如：ftp、webdav等等。这里采用云平台，是考虑到日后扩展而准备的。</p><p>Web Server：云存储一般都基于Web Server后端，对于Web服务器，考虑到在小米路由器上搭建个人云，也可能会在将来基于此搭建个人站点，这里主要需求是：开源、免费、稳定、以及资源占用少、并发度高、流行度高（比较容易找到学习资料）。比较著名的Web Server有Apache、Tomcat、nginx、lighthttpd……对比众多服务器以及需求之后，选择nginx做为服务器。</p><p>云平台的选择：对于云，这里的主要需求是，开源、核心功能免费、扩展性强（扩展功能可以收费）。比较流行的个人云平台工具如：seafile、own cloud、SparkleShare、WonderBox等等，在对比了许多的介绍和需求之后，选择Own Cloud做为云平台。</p><p>由于Own Cloud使用php完成，综上，搭建Own cloud平台，可基于LNMP环境（Linux+Nginx+Mysql+Php）进行。搭建好的Own Cloud云平台，由于其本身的可扩展特点，具有的功能除传统网盘（如百度云、DropBox）外，还能支持webdav服务，以及自行添加插件App，比如OwnNote（基于Owncloud的云笔记）、tasks（基于Owncloud的任务管理）等等，这些应用可在Owncloud第三方插件提供处找到，也可自己基于Owncloud的开放接口开发出来。</p><p>由于小米路由器Cpu架构与传统PC机不同，所以这里先介绍在PC上搭建LNMP环境以及安装Own Cloud的方法，了解到与平台无关的核心过程后，然后再具体介绍在小米路由器上进行。</p></div><div id="outline-container-orgheadline38" class="outline-3"><h3 id="orgheadline38"><span class="section-number-3">6.1</span> PC上搭建Owncloud</h3><div class="outline-text-3" id="text-6-1"><p>PC上的Owncloud在两个系统上进行过，即：Ubuntu和Center OS。除个别依赖库外，尽量采用源代码编译的方式进行，这样的过程比较“通用”，在各个平台上过程大同小异。过程大致如下：</p></div><div id="outline-container-orgheadline39" class="outline-4"><h4 id="orgheadline39"><span class="section-number-4">6.1.1</span> 安装openssl</h4><div class="outline-text-4" id="text-6-1-1"><p>下载： <code>$wget -c http://www.openssl.org/source/openssl-1.0.2g.tar.gz</code></p><p>配置、编译、安装如下：</p><div class="org-src-container"><pre class="src src-sh">$tar -xzvf openssl-1.0.2g.tar.gz &amp;&amp; cd openssl-1.0.2g$./config --prefix=/usr/local/develop/openssl-1.0.2g$sudo make depend$sudo make $sudo make install</pre></div></div></div><div id="outline-container-orgheadline40" class="outline-4"><h4 id="orgheadline40"><a id="ID-ec1983bd-1420-45b1-b21a-9353e0b9015e"></a><span class="section-number-4">6.1.2</span> 安装php所需依赖</h4><div class="outline-text-4" id="text-6-1-2"></div><div id="outline-container-orgheadline136" class="outline-5"><h5 id="orgheadline136"><span class="section-number-5">6.1.2.1</span> 在 Ubuntu 12.04 上：</h5><div class="outline-text-5" id="text-6-1-2-1"><div class="org-src-container"><pre class="src src-sh">$sudo apt-get install -y libxml2$sudo apt-get install -y libxml2-dev$sudo apt-get install -y libxml2-utils$sudo apt-get install -y libcurl3$sudo apt-get install -y libcurl$sudo apt-get install -y libcurl4-gnutls-dev$sudo apt-get install -y libjpeg-dev$sudo apt-get install -y libpng-dev$sudo apt-get install -y libmcrypt-dev$sudo apt-get install -y libfreetype6$sudo apt-get install -y libfreetype6-dev</pre></div></div></div><div id="outline-container-orgheadline137" class="outline-5"><h5 id="orgheadline137"><span class="section-number-5">6.1.2.2</span> 在 Center OS 上：</h5><div class="outline-text-5" id="text-6-1-2-2"><div class="org-src-container"><pre class="src src-sh">$sudo yum install libxml2$sudo yum install libxml2-devel$sudo yum install libcurl$sudo yum install libcurl-devel$sudo yum install libjpeg-devel$sudo yum install libpng-devel$sudo yum install libfreetype-devel</pre></div><p>另外在Center OS上对mysql的安装与启动如下：</p><div class="org-src-container"><pre class="src src-sh">$yum install mariadb-server mariadb-libs mariadb$systemctl start mariadb.service</pre></div></div></div></div><div id="outline-container-orgheadline41" class="outline-4"><h4 id="orgheadline41"><span class="section-number-4">6.1.3</span> 编译、安装php</h4><div class="outline-text-4" id="text-6-1-3"><p>下载：<a href="http://php.net/get/php-5.6.19.tar.bz2/from/a/mirror" target="_blank" rel="noopener">http://php.net/get/php-5.6.19.tar.bz2/from/a/mirror</a></p><p>配置、编译、安装如下：</p><div class="org-src-container"><pre class="src src-sh">$./configure --prefix=/usr/local/develop/ --with-config-file-path=/usr/local/develop/etc --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-iconv-dir --with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir=/usr --enable-xml --disable-rpath --enable-magic-quotes --enable-safe-mode --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --with-curl --with-curlwrappers --enable-mbregex --enable-mbstring --with-mcrypt --enable-ftp --with-gd --enable-gd-native-ttf --with-openssl=/usr/local/develop/openssl-1.0.2g --with-mhash --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap --without-pear --with-gettext --disable-fileinfo$sudo make$sudo make install</pre></div><p>另外注：如果遇到如下错误：</p><pre class="example">ext/openssl/.libs/xp_ssl.o: In function `php_select_crypto_method':/home/miracle/myinstalled/php-5.6.19/ext/openssl/xp_ssl.c:947: undefined reference to `SSLv3_client_method'/home/miracle/myinstalled/php-5.6.19/ext/openssl/xp_ssl.c:947: undefined reference to `SSLv3_server_method'</pre><p>那么编译安装如下：</p><div class="org-src-container"><pre class="src src-sh">$sudo make EXTRA_CFLAGS=-DOPENSSL_NO_SSL3</pre></div></div></div><div id="outline-container-orgheadline42" class="outline-4"><h4 id="orgheadline42"><span class="section-number-4">6.1.4</span> 安装nginx所需依赖</h4><div class="outline-text-4" id="text-6-1-4"><p>下载：</p><div class="org-src-container"><pre class="src src-sh">$wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.38.tar.gz$wget http://apache.opencas.org//apr/apr-util-1.5.4.tar.gz$wget http://mirrors.cnnic.cn/apache//apr/apr-1.5.2.tar.bz2</pre></div><p>配置、编译、安装如下：</p><div class="org-src-container"><pre class="src src-sh">$cd apr-1.5.2$sudo ./configure --prefix=/usr/local/develop/apr-1.5.2$sudo make$sudo make install$cd apr-util-1.5.4$sudo ./configure --prefix=/usr/local/develop/apr-util-1.5.4 --with-apr=/usr/local/develop/apr-1.5.2$sudo make$sudo make install$cd pcre-8.38$sudo ./configure --prefix=/usr/local/develop/pcre-8.38 --with-apr=/usr/local/develop/apr-1.5.2 --with-apr-util=/usr/local/develop/apr-util-1.5.4$sudo make$sudo make install</pre></div><p>实践发现，其实只需要下载 <code>pcre-8.38</code>, 解压，后面编译 <code>nginx</code> 的时候，直接指定这个目录即可。不用对 <code>pcre-8.38</code> 进行编译。</p></div></div><div id="outline-container-orgheadline43" class="outline-4"><h4 id="orgheadline43"><span class="section-number-4">6.1.5</span> 编译、安装nginx</h4><div class="outline-text-4" id="text-6-1-5"><p>下载： <code>wget http://nginx.org/download/nginx-1.8.1.tar.gz</code></p><p>配置、编译、安装：</p><div class="org-src-container"><pre class="src src-sh">$./configure --prefix=/usr/local/develop/ --with-openssl=`pwd`/../openssl-1.0.2g --with-pcre=`pwd`/../pcre-8.38 --with-http_ssl_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-threads$sudo make$sudo make install</pre></div></div></div><div id="outline-container-orgheadline44" class="outline-4"><h4 id="orgheadline44"><span class="section-number-4">6.1.6</span> Mysql的root帐号建立</h4><div class="outline-text-4" id="text-6-1-6"><ol class="org-ol"><li><p>启动mysqld服务</p><div class="org-src-container"><pre class="src src-sh">#service mysqld start</pre></div><p>当然，可以用 <code>stop</code> 参数停止，用 <code>restart</code> 参数重启mysqld服务。 </p></li></ol><ol class="org-ol"><li><p>设置mysql管理员密码</p><div class="org-src-container"><pre class="src src-sh">#mysqladmin -u root password '123'</pre></div><p>这里首先启动mysqld服务，然后设置mysql数据库root帐号密码,密码为123。 数据库安装好后，我们应该为mysql数据库创建一个管理帐号。执行这个命令之后， mysql数据库的管理员是root，密码是123(实践发现，不让设置成root之外的名字，应该有其他的方法)。 </p></li><li><p>使用root用户登录mysql</p><div class="org-src-container"><pre class="src src-sh">#mysql --user=root --password=123 或者#mysql -uroot -p123 或者#mysql -uroot -p &lt;手动输入密码&gt;</pre></div><p>这里，假设root用户的密码是123,最后一个命令会提示你额外输入密码。这样会有 <code>mysql&gt;</code> 提示符号，提示你和mysql进行交互。操作这些命令的时候，应该把mysqld服务器打开。注意，如果是连接到另外的机器上，则需要加入一个参数 <code>-h</code> 机器IP。</p></li></ol><p>至此，mysql服务确认完毕。</p></div></div><div id="outline-container-orgheadline45" class="outline-4"><h4 id="orgheadline45"><span class="section-number-4">6.1.7</span> php的配置和运行</h4><div class="outline-text-4" id="text-6-1-7"></div><div id="outline-container-orgheadline138" class="outline-5"><h5 id="orgheadline138"><span class="section-number-5">6.1.7.1</span> 对mysql的配置</h5><div class="outline-text-5" id="text-6-1-7-1"><p>为了能够安装owncloud，需要做php对mysql支持的配置，将源代码解压包中的 <code>php.ini-development</code> 拷贝到安装好的目录中（ <code>/usr/local/develop/php-5.6.19/etc</code> ），命名为 <code>php.ini</code> 修改如下： <code>pdo_mysql.default_socket=/var/run/mysqld/mysqld.sock</code> 。</p><p>注意，这个mysql默认的socket路径，通过 <code>ls /var/run/mysqld</code> 发现是这个路径，也可能是别的路径，可以通过在 <code>/etc/mysql/my.cnf</code> 中查看到。</p><p>如果不进行这个配置，后面搭建好owncloud网站之后，设置的时候可能会出现类似如下错误：</p><pre class="example">ownCloud is not installed - only a limited number of commands are availableError while trying to create admin user: Failed to connect to the database: An exception occured in driver: SQLSTATE[HY000] [2002] No such file or directory -&gt;</pre></div></div><div id="outline-container-orgheadline139" class="outline-5"><h5 id="orgheadline139"><span class="section-number-5">6.1.7.2</span> 运行php</h5><div class="outline-text-5" id="text-6-1-7-2"><p>运行 <code>./php-fpm.sh start</code></p><p>停止 <code>./php-fpm.sh stop</code></p><p><code>php-fpm.sh</code> 脚本如下（根据自己的情况，将开头定义的 <code>$PHP_PATH</code> 等变量做相应修改）：</p><div class="org-src-container"><pre class="src src-sh">$cat /etc/init.d/php-fpm.sh #!/bin/sh#PHP_PATH=/usr/local/developDESC="php-fpm daemon"NAME=php-fpm# php-fpmDAEMON=$PHP_PATH/sbin/$NAMECONFIGFILE=$PHP_PATH/etc/php-fpm.confPIDFILE=$PHP_PATH/var/run/$NAME.pidrh_start() {  $DAEMON -c $PHP_PATH/etc -y $CONFIGFILE || echo -n " already running"}rh_stop() {  killall $NAME  #kill -QUIT `cat $PIDFILE` || echo -n " not running"}case "$1" in  start)        echo -n "Starting $DESC: $NAME"        rh_start        echo "."        ;;  stop)        echo -n "Stopping $DESC: $NAME"        rh_stop        echo "."        ;;  restart)        echo -n "Restarting $DESC: $NAME"        rh_stop        sleep 1        rh_start        echo "."        ;;  *)         echo "Usage: $SCRIPTNAME {start|stop|restart}" &gt;&amp;2         exit 3        ;;esacexit 0</pre></div></div></div></div><div id="outline-container-orgheadline46" class="outline-4"><h4 id="orgheadline46"><span class="section-number-4">6.1.8</span> ssl key文件的生成</h4><div class="outline-text-4" id="text-6-1-8"><p>因为要使用https方式访问搭建的网站，需要生成ssl的认证文件，在后面配置nginx之时会用到。</p><div class="org-src-container"><pre class="src src-sh">$openssl genrsa -des3 -out server.key 1024$openssl req -new -key server.key -out server.csr$cp server.key server.key.org$openssl rsa -in server.key.org -out server.key$openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt</pre></div></div></div><div id="outline-container-orgheadline47" class="outline-4"><h4 id="orgheadline47"><span class="section-number-4">6.1.9</span> nginx的配置和运行</h4><div class="outline-text-4" id="text-6-1-9"></div><div id="outline-container-orgheadline140" class="outline-5"><h5 id="orgheadline140"><span class="section-number-5">6.1.9.1</span> 运行脚本</h5><div class="outline-text-5" id="text-6-1-9-1"><p>先给出运行nginx的脚本，后面会用到（根据自己的情况，将开头定义的 <code>$NGINX_BIN</code> 等变量做相应修改）。</p><div class="org-src-container"><pre class="src src-sh">$cat /etc/init.d/nginx.sh#!/bin/shNGINX_BIN=/usr/local/develop/sbin/nginxNGINX_CONF_FILE="/usr/local/develop/conf/nginx.conf"NGINX_PREFIX="/usr/local/develop"start() {        #mkdir -p /var/log/nginx        #mkdir -p /var/lib/nginx        $NGINX_BIN -p $NGINX_PREFIX -c $NGINX_CONF_FILE        return $?}stop() {        $NGINX_BIN -p $NGINX_PREFIX -s stop        return $?}reload() {        $NGINX_BIN -p $NGINX_PREFIX -s reload        return $?}shutdown() {        $NGINX_BIN -p $NGINX_PREFIX -s quit}case "$1" in    start)        start &amp;&amp; echo "Start success" || echo "Start fail."        ;;    stop)        stop &amp;&amp; echo "Stop success" || echo "Stop fail."        ;;    reload)        reload &amp;&amp; echo "Reload success" || echo "Reload fail."        ;;    shutdown)        shutdown        ;;    *)        echo $"Usage: $0 {start|stop|reload|shutdown}"        exit 2esac</pre></div></div></div><div id="outline-container-orgheadline141" class="outline-5"><h5 id="orgheadline141"><span class="section-number-5">6.1.9.2</span> 测试网站</h5><div class="outline-text-5" id="text-6-1-9-2"><ol class="org-ol"><li><p>先写一个测试的php脚本，用来检测是否正确。</p><div class="org-src-container"><pre class="src src-sh">$mkdir -p ~/nginx$cd ~/nginx$vim index.php&lt;?php    const CONSTANT = 'Hello World';    echo CONSTANT;    phpinfo();   ?&gt;</pre></div></li><li><p>在nginx上配置测试站点</p><div class="org-src-container"><pre class="src src-sh">$cd /usr/local/develop/nginx-1.8.1/conf/$vim nginx.conf...前面省略...server {        listen       18080;          server_name localhost;          location / {                     root   /home/miracle/nginx;                     index  index.php index.html;        }          location ~ \.php$ {                     fastcgi_pass   127.0.0.1:9000;                     fastcgi_index  index.php;                     fastcgi_param  SCRIPT_FILENAME  /home/miracle/nginx$fastcgi_script_name;                     include        fastcgi_params;          }}....后面省略...$/etc/init.d/nginx.sh start</pre></div></li><li><p>访问站点</p><p>经过前面配置之后，打开浏览器，输入 <code>http://localhost:18080</code> 若打开对应的测试站点并运行 <code>index.php</code> 脚本成功，说明配置成功。</p></li></ol></div></div></div><div id="outline-container-orgheadline48" class="outline-4"><h4 id="orgheadline48"><span class="section-number-4">6.1.10</span> 搭建owncloud网站</h4><div class="outline-text-4" id="text-6-1-10"><p>对前面LNMP环境建立并且测试完成之后，搭建owncloud网站其主要工作就是修改 <code>nginx.conf</code> 配置文件了。在owncloud官网上有一个对nginx的配置说明，这里给出当前实践过，并且好用的配置。不做过多解释,根据自身情况，做相应修改应当不难。</p></div><div id="outline-container-orgheadline142" class="outline-5"><h5 id="orgheadline142"><span class="section-number-5">6.1.10.1</span> OwnCloud相关软件和文档获取</h5><div class="outline-text-5" id="text-6-1-10-1"><ol class="org-ol"><li><p>服务端：</p><div class="org-src-container"><pre class="src src-sh">$wget -c https://download.owncloud.org/community/owncloud-8.2.2.tar.bz2</pre></div></li><li><p>客户端客户端有用于PC的Linux、Window，也有用于手机IOS、Android版本。IOS版本的OwnCloud客户端竟然是收费的，不过没有关系，搭建好的Owncloud支持webdav，可以随便寻找一款文件同步工具（比如foldersync等）实现客户端的功能，具体可在后面列出的参考资料中寻找。</p><p>官方客户端下载网址是：</p><pre class="example">https://software.opensuse.org/download/package?project=isv:ownCloud:desktop&amp;package=owncloud-client</pre></li><li>文档文档的下载和在线版本，可在如下网站获取： <code>https://doc.owncloud.org/</code></li></ol></div></div><div id="outline-container-orgheadline143" class="outline-5"><h5 id="orgheadline143"><span class="section-number-5">6.1.10.2</span> 配置用于OwnCloud的Nginx配置选项</h5><div class="outline-text-5" id="text-6-1-10-2"><div class="org-src-container"><pre class="src src-sh">$cat /usr/local/develop/nginx-1.8.1/conf/nginx.conf...前面省略###myown cloud with ssl        upstream php-handler {                server 127.0.0.1:9000;#server unix:/var/run/php5-fpm.sock;        }        server {                listen 18000;                server_name 172.16.246.39;# enforce https                return 301 https://$server_name$request_uri;        }        server {                listen 443 ssl;                server_name 172.16.246.39;                ssl_certificate /usr/local/develop/nginx-1.8.1/conf/server.crt;                ssl_certificate_key /usr/local/develop/nginx-1.8.1/conf/server.key;# Add headers to serve security related headers                add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";                add_header X-Content-Type-Options nosniff;                add_header X-Frame-Options "SAMEORIGIN";                add_header X-XSS-Protection "1; mode=block";                add_header X-Robots-Tag none;                add_header X-Download-Options noopen;                add_header X-Permitted-Cross-Domain-Policies none;# Path to the root of your installation                root /media/sda6/mycloud/owncloud;# set max upload size                client_max_body_size 1G;                fastcgi_buffers 64 4K;# Disable gzip to avoid the removal of the ETag header                gzip off;# Uncomment if your server is build with the ngx_pagespeed module# This module is currently not supported.#pagespeed off;                index index.php;                error_page 403 /core/templates/403.php;                error_page 404 /core/templates/404.php;                rewrite ^/.well-known/carddav /remote.php/dav/ permanent;                rewrite ^/.well-known/caldav /remote.php/dav/ permanent;# The following 2 rules are only needed for the user_webfinger app.# Uncomment it if you're planning to use this app.#rewrite ^/.well-known/host-meta /public.php?service=host-meta last;#rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;                location = /robots.txt {                        allow all;                        log_not_found off;                        access_log off;                }                location ~ ^/(build|tests|config|lib|3rdparty|templates|data)/ {                        deny all;                }                location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {                        deny all;                }                location / {                        rewrite ^/remote/(.*) /remote.php last;                        rewrite ^(/core/doc/[^\/]+/)$ $1/index.html;                        try_files $uri $uri/ =404;                }                location ~ \.php(?:$|/) {                        fastcgi_split_path_info ^(.+\.php)(/.+)$;                        include fastcgi_params;                        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;                        fastcgi_param PATH_INFO $fastcgi_path_info;                        fastcgi_param HTTPS on;                        fastcgi_param modHeadersAvailable true; #Avoid sending the security headers twice#fastcgi_pass   127.0.0.1:9000;                                fastcgi_pass   php-handler;                        fastcgi_intercept_errors on;                }                location ~* \.(?:css|js)$ {                        add_header Cache-Control "public, max-age=7200";# Add headers to serve security related headers                        add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";                        add_header X-Content-Type-Options nosniff;                        add_header X-Frame-Options "SAMEORIGIN";                        add_header X-XSS-Protection "1; mode=block";                        add_header X-Robots-Tag none;                        add_header X-Download-Options noopen;                        add_header X-Permitted-Cross-Domain-Policies none;# Optional: Don't log access to assets                        access_log off;                }# Optional: Don't log access to other assets                location ~* \.(?:jpg|jpeg|gif|bmp|ico|png|swf)$ {                        access_log off;                }        }...后面省略</pre></div></div></div></div><div id="outline-container-orgheadline49" class="outline-4"><h4 id="orgheadline49"><span class="section-number-4">6.1.11</span> 安装Owncloud</h4><div class="outline-text-4" id="text-6-1-11"><p>具体安装过程以及期间遇到的问题，可参考文档进行，下面给出大致过程。</p></div><div id="outline-container-orgheadline144" class="outline-5"><h5 id="orgheadline144"><span class="section-number-5">6.1.11.1</span> 设置OwnCloud的安装目录</h5><div class="outline-text-5" id="text-6-1-11-1"><p>先将Owncloud解压，然后设置文件权限。需要设置owncloud中data和config目录等的用户和组为 <code>www-data</code> 。在文档中具体介绍了为什么要这样设置。这里简化起见，设置之后，再将权限设置为777，并不是最优方案。</p><div class="org-src-container"><pre class="src src-sh">$tar -xjvf owncloud-8.2.2.tar.bz2$mv owncloud-8.2.2 /media/sda6/mycloud/owncloud$cd /media/sda6/mycloud$sudo chown -R www-data.www-data owncloud$sudo chmod 777 -R owncloud$mkdir oc_data$sudo chown -R www-data.www-data oc_data$sudo chmod 777 -R oc_data</pre></div></div></div><div id="outline-container-orgheadline150" class="outline-5"><h5 id="orgheadline150"><span class="section-number-5">6.1.11.2</span> 配置Owncloud添加管理员账户</h5><div class="outline-text-5" id="text-6-1-11-2"></div><ol class="org-ol"><li><a id="orgheadline145"></a>基本配置<br><div class="outline-text-6" id="text-6-1-11-2-1"><p>我们可以根据前面的 <code>nginx.conf</code> 设置，直接使用 <code>https://localhost</code> 访问，进入Owncloud初始设置界面。为便于描述，这里直接用命令行方式对其进行设置，效果相同。</p><p>命令实质是运行owncloud中的 <code>occ</code> php脚本，运行之时要以 <code>www-data</code> 身份进行（不同系统，可能为不同的http名称，参考官方文档）。如下：</p><div class="org-src-container"><pre class="src src-sh">$ cd /media/sda6/mycloud/owncloud$ sudo -u www-data php occ maintenance:install --database "mysql" --database-name "ownclouddb" --database-user "root" --database-pass "&lt;之前设置的mysql数据库root密码&gt;" --admin-pass "&lt;owncloud 的管理员admin 账户密码&gt;" --data-dir "/media/sda6/mycloud/oc_data"</pre></div><p>上述命令是设置owncloud采用哪种数据库、使用的管理员账户是什么，以及数据存放的位置。运行之后，我们便可以登录 <code>https://localhost</code> 进行访问了。期间创建的文件数据都存放在 <code>media/sda6/mycloud/oc_data</code> 中，能够直接浏览。</p></div></li><li><a id="orgheadline146"></a>额外配置<br><div class="outline-text-6" id="text-6-1-11-2-2"><p>如上配置之后，可以本地访问owncloud，但是如果想要实现远程其它机器也能访问，还需修改 <code>owncloud/config/config.php</code> 如下：将</p><pre class="example">array (    0 =&gt; 'localhost',    ),</pre><p>修改为：</p><pre class="example">array (    0 =&gt; 'localhost',    1 =&gt; '112.74.19.38',    ),</pre><p>这里， <code>112.74.19.38</code> 是本地机器对外的ip地址，也可使用DNS域名。</p></div></li><li><a id="orgheadline149"></a>其它<br><ol class="org-ol"><li><a id="orgheadline147"></a>openssl认证安装<br><div class="outline-text-7" id="text-6-1-11-2-3-1"><div class="org-src-container"><pre class="src src-sh">$ openssl req -new -x509 -days 730 -nodes -out "server.crt" -newkey rsa:2048 -keyout "server.key"Generating a 2048 bit RSA private key..+++..............................................................+++writing new private key to 'server.key'-----You are about to be asked to enter information that will be incorporatedinto your certificate request.What you are about to enter is what is called a Distinguished Name or a DN.There are quite a few fields but you can leave some blankFor some fields there will be a default value,If you enter '.', the field will be left blank.-----Country Name (2 letter code) [AU]:CNState or Province Name (full name) [Some-State]:GDLocality Name (eg, city) []:SZOrganization Name (eg, company) [Internet Widgits Pty Ltd]:QCYOrganizational Unit Name (eg, section) []:PublicCommon Name (e.g. server FQDN or YOUR name) []:QuietHeartEmail Address []:quiet_heart000@126.com</pre></div></div></li><li><a id="orgheadline148"></a><a id="ID-eef7d7d1-5227-4269-a44d-ea01c022a7b4"></a>可支持 <code>webdav</code>,<br><div class="outline-text-7" id="text-6-1-11-2-3-2"><div class="org-src-container"><pre class="src src-sh">#yum install davfs2$sudo mount -t davfs https://localhost/remote.php/webdav/ owncloud_webdav/Please enter the username to authenticate with serverhttps://localhost/remote.php/webdav/ or hit enter for none.  Username: publicPlease enter the password to authenticate user public with serverhttps://localhost/remote.php/webdav/ or hit enter for none.  Password:  /sbin/mount.davfs: the server certificate does not match the server name/sbin/mount.davfs: the server certificate is not trusted  issuer:      Public, QCY, SZ, GD, CN  subject:     Public, QCY, SZ, GD, CN  identity:    QuietHeart  fingerprint: 45:39:d4:81:81:35:c1:a0:35:ad:74:ca:8a:ee:84:55:d3:d0:74:70You only should accept this certificate, if you canverify the fingerprint! The server might be fakedor there might be a man-in-the-middle-attack.Accept certificate for this session? [y,N] y/sbin/mount.davfs: warning: the server does not support locks/sbin/mount.davfs: Warning: can't write entry into mtab, but will mount the file system anyway</pre></div></div></li></ol></li></ol></div></div></div><div id="outline-container-orgheadline50" class="outline-3"><h3 id="orgheadline50"><span class="section-number-3">6.2</span> 小米路由器上搭建Owncloud</h3><div class="outline-text-3" id="text-6-2"><p>网上找到过别人搭建的Nginx环境，但是不能直接使用（还是需要php和mysql等其他环境），也用opkg 工具尝试过安装相关的工具，基本没有适用于自己架构的软件源（或者很难找到）。</p><p>最终还是完全从源代码开始，交叉编译、安装了所需的所有软件包和依赖库，完成LNMP下Own cloud环境的搭建，还是自给自足可靠，当前期间也参考了许多其他人的过程。</p></div><div id="outline-container-orgheadline51" class="outline-4"><h4 id="orgheadline51"><span class="section-number-4">6.2.1</span> 准备交叉编译环境</h4><div class="outline-text-4" id="text-6-2-1"><p>参考：<a href="#orgheadline76">小米路由器交叉编译环境配置</a></p></div></div><div id="outline-container-orgheadline52" class="outline-4"><h4 id="orgheadline52"><span class="section-number-4">6.2.2</span> 下载相关软件包</h4><div class="outline-text-4" id="text-6-2-2"><ul class="org-ul"><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2016-04-27 三 11:15]</span></span></li></ul><div class="org-src-container"><pre class="src src-sh">$cd /home/miracle/work/1_inbox/xiaomirouter/test$wget -c http://xmlsoft.org/sources/libxml2-2.7.8.tar.gz$wget -c http://zlib.net/zlib-1.2.8.tar.gz$wget -c ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.38.tar.gz$wget -c http://www.openssl.org/source/openssl-1.0.2g.tar.gz$wget -c http://cn2.php.net/distributions/php-5.6.19.tar.xz$wget -c https://curl.haxx.se/download/curl-7.48.0.tar.gz$wget -c https://codeload.github.com/smart-make/libjpeg/zip/master$wget -c http://iweb.dl.sourceforge.net/project/libpng/libpng16/1.6.21/libpng-1.6.21.tar.xz$wget -c http://ftp.yzu.edu.tw/nongnu//freetype/freetype-2.6.3.tar.gz$wget -c http://iweb.dl.sourceforge.net/project/mhash/mhash/0.9.9.9/mhash-0.9.9.9.tar.gz$wget -c http://heanet.dl.sourceforge.net/project/mcrypt/Libmcrypt/2.5.8/libmcrypt-2.5.8.tar.bz2$wget -c http://tenet.dl.sourceforge.net/project/mcrypt/MCrypt/2.6.8/mcrypt-2.6.8.tar.gz$wget -c ftp://ftp.gnu.org/gnu/gettext/gettext-0.19.tar.gz$wget -c http://heanet.dl.sourceforge.net/project/unixodbc/unixODBC/2.3.4/unixODBC-2.3.4.tar.gz$wget -c http://nginx.org/download/nginx-1.8.1.tar.gz</pre></div><p>owncloud-8.2.2.tgz</p></div></div><div id="outline-container-orgheadline53" class="outline-4"><h4 id="orgheadline53"><span class="section-number-4">6.2.3</span> 交叉编译安装MySql</h4><div class="outline-text-4" id="text-6-2-3"><p>注意，这里编译的是 <code>mysql-5.1.72</code> 其它更新的版本可能没有相应的configure文件。</p></div><div id="outline-container-orgheadline151" class="outline-5"><h5 id="orgheadline151"><span class="section-number-5">6.2.3.1</span> 下载相关软件包</h5><div class="outline-text-5" id="text-6-2-3-1"><div class="org-src-container"><pre class="src src-sh">$wget -c http://mirror.hust.edu.cn/gnu/ncurses/ncurses-5.6.tar.gz$wget -c http://cdn.mysql.com/archives/mysql-5.1/mysql-5.1.72.tar.gz</pre></div></div></div><div id="outline-container-orgheadline152" class="outline-5"><h5 id="orgheadline152"><span class="section-number-5">6.2.3.2</span> 编译PC板的MySql</h5><div class="outline-text-5" id="text-6-2-3-2"><div class="org-src-container"><pre class="src src-sh">$tar -xzvf mysql-5.1.72.tar.gz $mv mysql-5.1.72/ mysql-5.1.72_pc$cd mysql-5.1.72_pc$./configure --prefix=/usr/local/develop/mysql-5.1.72$make</pre></div><p>目的是为交叉编译过程顺利进行，这里先生成一个特殊的只能在pc上运行的工具。</p></div></div><div id="outline-container-orgheadline154" class="outline-5"><h5 id="orgheadline154"><span class="section-number-5">6.2.3.3</span> 交叉编译安装ncurses</h5><div class="outline-text-5" id="text-6-2-3-3"><p>这个工具需要先编译，这样后面的MySql和php对gettext的交叉编译才不会出现问题。</p><div class="org-src-container"><pre class="src src-sh">$tar -xzvf ncurses-5.6.tar.gz$cd ncurses-5.6/$./configure --host=arm-xiaomi-linux-uclibcgnueabi --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --enable-static CC=arm-xiaomi-linux-uclibcgnueabi-gcc$make $make install</pre></div></div><ol class="org-ol"><li><a id="orgheadline153"></a>交叉编译的MySql<br><div class="outline-text-6" id="text-6-2-3-3-1"><ol class="org-ol"><li><p>首先修改configure文件，使之不会在交叉编译的时候运行测试软件</p><div class="org-src-container"><pre class="src src-sh">$tar -xzvf mysql-5.1.72.tar.gz $cd mysql-5.1.72$vim configure</pre></div><p>因为交叉编译的程序无法在pc上运行，如果运行生成的测试软件，必然会由于无法运行而报错，导致后面步骤无法继续。</p><p>找到类似如下代码：</p><pre class="example">if test "$cross_compiling" = yes; then{ { $as_echo "$as_me:$LINENO: error: in \`$ac_pwd':" &gt;&amp;5$as_echo "$as_me: error: in \`$ac_pwd':" &gt;&amp;2;}{ { $as_echo "$as_me:$LINENO: error: cannot run test program while cross compilingSee \`config.log' for more details." &gt;&amp;5$as_echo "$as_me: error: cannot run test program while cross compilingSee \`config.log' for more details." &gt;&amp;2;}{ (exit 1); exit 1; }; }; }</pre><p>修改为：</p><pre class="example">if test "$cross_compiling" = yes; thenecho "skip corss_compiling test";</pre></li><li><p>配置与编译</p><div class="org-src-container"><pre class="src src-sh">$./configure --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --without-docs --without-man --without-debug --with-charset=utf8 --with-extra-charsets=gbk,gb2312,utf8,ascii --enable-local-infile --with-mysqld-user=root --host=arm-xiaomi-linux-uclibcgnueabi --with-named-curses-libs=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib/libncurses.a CC=arm-xiaomi-linux-uclibcgnueabi-gcc$make</pre></div><p>这里运行 <code>make</code> 编译时，会报类似如下错误：</p><pre class="example">make[2]:正在离开目录 `/home/miracle/work/1_inbox/xiaomirouter/test/mysql-5.1.72/sql'./gen_lex_hash &gt; lex_hash.h-t/bin/bash: ./gen_lex_hash: 无法执行二进制文件make[1]: *** [lex_hash.h] 错误 126make[1]:正在离开目录 `/home/miracle/work/1_inbox/xiaomirouter/test/mysql-5.1.72/sql'</pre><p>拷贝前面pc版本MySql中的gen_lex_hash继续：</p><div class="org-src-container"><pre class="src src-sh">$cp ../mysql-5.1.72_pc/sql/gen_lex_hash sqlmiracle@miracle-Zhaoyang-cd sql$touch sql/gen_lex_hash$cd ..$make</pre></div><p>仍然可能报告如下错误：</p><pre class="example">sql_parse.cc:5741:21: error: 操作符‘&lt;’没有左操作数#if STACK_DIRECTION &lt; 0</pre><p>修改如下：</p><div class="org-src-container"><pre class="src src-sh">$vim sql/sql_parse.cc</pre></div><p>将</p><pre class="example">5739 #ifndef EMBEDDED_LIBRARY5740 5741 #if STACK_DIRECTION &lt; 0                                                                                                                         5742 #define used_stack(A,B) (long) (A - B)5743 #else5744 #define used_stack(A,B) (long) (B - A)5745 #endif</pre><p>修改为</p><pre class="example">5739 #ifndef EMBEDDED_LIBRARY5740 #define STACK_DIRECTION 1                                                                                                                       5741 #if STACK_DIRECTION &lt; 05742 #define used_stack(A,B) (long) (A - B)5743 #else5744 #define used_stack(A,B) (long) (B - A)5745 #endif</pre><p>然后继续编译、安装如下</p><div class="org-src-container"><pre class="src src-sh">$make$make install</pre></div><p>至此，交叉编译版本的MySql编译安装完毕。</p></li></ol></div></li></ol></div></div><div id="outline-container-orgheadline54" class="outline-4"><h4 id="orgheadline54"><span class="section-number-4">6.2.4</span> 交叉编译安装PHP</h4><div class="outline-text-4" id="text-6-2-4"></div><div id="outline-container-orgheadline155" class="outline-5"><h5 id="orgheadline155"><span class="section-number-5">6.2.4.1</span> 交叉编译安装libxml</h5><div class="outline-text-5" id="text-6-2-4-1"><p>需要编译的版本是libxml2-2.7.8，更高的版本需要编译python。</p><div class="org-src-container"><pre class="src src-sh">$tar -xzvf libxml2-2.7.8.tar.gz $cd libxml2-2.7.8/$./configure --host=arm-xiaomi-linux-uclibcgnueabi --enable-static --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop CC=arm-xiaomi-linux-uclibcgnueabi-gcc$make$make install</pre></div></div></div><div id="outline-container-orgheadline156" class="outline-5"><h5 id="orgheadline156"><span class="section-number-5">6.2.4.2</span> 交叉编译安装zlib</h5><div class="outline-text-5" id="text-6-2-4-2"><p>参考：<a href="#orgheadline26">交叉编译安装zlib</a></p></div></div><div id="outline-container-orgheadline157" class="outline-5"><h5 id="orgheadline157"><span class="section-number-5">6.2.4.3</span> 交叉编译安装pcre</h5><div class="outline-text-5" id="text-6-2-4-3"><div class="org-src-container"><pre class="src src-sh">$export CC=$tar -xzvf pcre-8.38.tar.gz $cd pcre-8.38/$./configure --host=arm-xiaomi-linux-uclibcgnueabi --enable-static --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop CC=arm-xiaomi-linux-uclibcgnueabi-gcc$make$make install</pre></div></div></div><div id="outline-container-orgheadline158" class="outline-5"><h5 id="orgheadline158"><span class="section-number-5">6.2.4.4</span> 交叉编译安装openssl</h5><div class="outline-text-5" id="text-6-2-4-4"><p>参考：<a href="#orgheadline28">交叉编译php时， <code>openssl</code> 的编译过程</a></p></div></div><div id="outline-container-orgheadline159" class="outline-5"><h5 id="orgheadline159"><span class="section-number-5">6.2.4.5</span> 交叉编译安装libcurl</h5><div class="outline-text-5" id="text-6-2-4-5"><div class="org-src-container"><pre class="src src-sh">$tar -xzvf curl-7.48.0.tar.gz $cd curl-7.48.0/$./configure --host=arm-xiaomi-linux-uclibcgnueabi --enable-static --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop CC=arm-xiaomi-linux-uclibcgnueabi-gcc$make$make install</pre></div></div></div><div id="outline-container-orgheadline160" class="outline-5"><h5 id="orgheadline160"><span class="section-number-5">6.2.4.6</span> 交叉编译安装libjpeg</h5><div class="outline-text-5" id="text-6-2-4-6"><div class="org-src-container"><pre class="src src-sh">$unzip libjpeg-master.zip $cd libjpeg-master/$./configure --host=arm-xiaomi-linux-uclibcgnueabi --enable-static --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop CC=arm-xiaomi-linux-uclibcgnueabi-gcc$make$make install</pre></div></div></div><div id="outline-container-orgheadline161" class="outline-5"><h5 id="orgheadline161"><span class="section-number-5">6.2.4.7</span> 交叉编译安装libpng</h5><div class="outline-text-5" id="text-6-2-4-7"><div class="org-src-container"><pre class="src src-sh">$tar -xJvf libpng-1.6.21.tar.xz $cd libpng-1.6.21$./configure --host=arm-xiaomi-linux-uclibcgnueabi --enable-static --with-zlib-prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop CC=arm-xiaomi-linux-uclibcgnueabi-gcc LDFLAGS=-L/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib CFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include CPPFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include$make$make install</pre></div></div></div><div id="outline-container-orgheadline162" class="outline-5"><h5 id="orgheadline162"><span class="section-number-5">6.2.4.8</span> 交叉编译安装libfreetype</h5><div class="outline-text-5" id="text-6-2-4-8"><div class="org-src-container"><pre class="src src-sh">$tar -xzvf freetype-2.6.3.tar.gz$cd freetype-2.6.3$./configure --host=arm-xiaomi-linux-uclibcgnueabi --enable-static --with-zlib-prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop CC=arm-xiaomi-linux-uclibcgnueabi-gcc LDFLAGS=-L/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib CFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include CPPFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include LIBPNG_LIBS=-lpng$make$make install</pre></div></div></div><div id="outline-container-orgheadline163" class="outline-5"><h5 id="orgheadline163"><span class="section-number-5">6.2.4.9</span> 交叉编译安装libmhash</h5><div class="outline-text-5" id="text-6-2-4-9"><div class="org-src-container"><pre class="src src-sh">$tar -xzvf mhash-0.9.9.9.tar.gz$cd mhash-0.9.9.9/$./configure --host=arm-xiaomi-linux-uclibcgnueabi --enable-static --with-zlib-prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop CC=arm-xiaomi-linux-uclibcgnueabi-gcc LDFLAGS=-L/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib CFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include CPPFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include</pre></div><p>至此，会报告 <code>rpl_malloc</code> 相关错误，需要修改如下：</p><div class="org-src-container"><pre class="src src-sh">$vim include/mutils/mhash_config.h</pre></div><p>交叉编译時autotools认为工具链的libc中不包含 <code>malloc</code> 和 <code>realloc</code> ，然后擅自做主张替换成了 <code>rpl_malloc</code> 和 <code>rpl_realloc</code> 。把相关的几句话注释如下：</p><pre class="example">257 //#define malloc rpl_malloc</pre><p>然后编译安装如下：</p><div class="org-src-container"><pre class="src src-sh">$make$make install</pre></div></div></div><div id="outline-container-orgheadline164" class="outline-5"><h5 id="orgheadline164"><span class="section-number-5">6.2.4.10</span> 交叉编译安装libmcrypt-2.5.8</h5><div class="outline-text-5" id="text-6-2-4-10"><div class="org-src-container"><pre class="src src-sh">$tar -xjvf libmcrypt-2.5.8.tar.bz2$cd libmcrypt-2.5.8</pre></div><p>还不能直接配置，需要如下修改：</p><div class="org-src-container"><pre class="src src-sh">$vim ./config.sub</pre></div><p>添加对xiaomi路由器的支持：</p><pre class="example">...287     arm-xiaomi-linux)288       os=-linux289       ;;290     *-*-*)                                                                                                                                        291         echo Invalid configuration \`$1\': machine \`$basic_machine\' not recognized 1&gt;&amp;2292         exit 1293         ;;...</pre><p>配置如下：</p><div class="org-src-container"><pre class="src src-sh">$./configure --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --host=arm-xiaomi-linux CC=arm-xiaomi-linux-uclibcgnueabi-gcc</pre></div><p>编译之前需要如下修改：</p><div class="org-src-container"><pre class="src src-sh">$vim config.h</pre></div><p>注释如下宏定义使得可以编译：</p><pre class="example">174 /* Define to rpl_malloc if the replacement function should be used. */                                                                            175 //#define malloc rpl_malloc176 177 /* Define to rpl_realloc if the replacement function should be used. */178 //#define realloc rpl_realloc</pre><p>编译、安装如下：</p><div class="org-src-container"><pre class="src src-sh">$make$make install</pre></div></div></div><div id="outline-container-orgheadline165" class="outline-5"><h5 id="orgheadline165"><span class="section-number-5">6.2.4.11</span> 交叉编译安装mcrypt</h5><div class="outline-text-5" id="text-6-2-4-11"><p>这个貌似不用安装，但是保险起见还是把它安装上去。配置如下：</p><div class="org-src-container"><pre class="src src-sh">$tar -xzvf mcrypt-2.6.8.tar.gz$cd mcrypt-2.6.8$./configure --with-gnu-ld --host=arm-xiaomi-linux-uclibcgnueabi --enable-static --with-zlib-prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop CC=arm-xiaomi-linux-uclibcgnueabi-gcc LDFLAGS=-L/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib CFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include CPPFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include</pre></div><p>交叉编译之前，需要将 <code>Makefile</code> 中对非交叉编译包含的路径 <code>/usr/lib</code> 的依赖去掉如下修改：</p><div class="org-src-container"><pre class="src src-sh">$vim Makefile92 #CFLAGS = -I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include -I/usr/include -Wall                                            93 CFLAGS = -I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include -Wall$vim src/Makefile91 #CFLAGS = -I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include -I/usr/include -Wall92 CFLAGS = -I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include -Wall</pre></div><p>编译安装如下：</p><div class="org-src-container"><pre class="src src-sh">$make$make install</pre></div></div></div><div id="outline-container-orgheadline166" class="outline-5"><h5 id="orgheadline166"><span class="section-number-5">6.2.4.12</span> 交叉编译安装gettext</h5><div class="outline-text-5" id="text-6-2-4-12"><p>这个也貌似不需要安装，但是为保险起见也将其安装如下：</p><div class="org-src-container"><pre class="src src-sh">$tar -xzvf gettext-0.19.tar.gz$cd gettext-0.19/$./configure --host=arm-xiaomi-linux-uclibcgnueabi --enable-static --with-libncurses-prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --with-named-curses-libs=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib/libncurses.a --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop CC=arm-xiaomi-linux-uclibcgnueabi-gcc$make$make install</pre></div><p>注意：此处可能导致后面 <code>gettext</code> 之时报错，如果报错，那么如下再进行一次 <code>ncurses</code> 编译：</p><div class="org-src-container"><pre class="src src-sh">$cd ncurses-5.6/$./configure --host=arm-xiaomi-linux-uclibcgnueabi --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --with-shared CC=arm-xiaomi-linux-uclibcgnueabi-gcc$make $make install</pre></div></div></div><div id="outline-container-orgheadline167" class="outline-5"><h5 id="orgheadline167"><span class="section-number-5">6.2.4.13</span> 交叉编译安装libodbc</h5><div class="outline-text-5" id="text-6-2-4-13"><p>似乎无用，保险起见，编译安装如下：</p><div class="org-src-container"><pre class="src src-sh">$tar -xzvf unixODBC-2.3.4.tar.gz $cd unixODBC-2.3.4/$./configure --host=arm-xiaomi-linux-uclibcgnueabi --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --with-shared CC=arm-xiaomi-linux-uclibcgnueabi-gcc$make$make install</pre></div></div></div><div id="outline-container-orgheadline180" class="outline-5"><h5 id="orgheadline180"><span class="section-number-5">6.2.4.14</span> 交叉编译安装php</h5><div class="outline-text-5" id="text-6-2-4-14"><p>这个部分是最关键，也最复杂。前面一切都是为了这个php做准备，有了php后面的nginx也才能够正常支持php的网站。</p><p>本文采用php-5.6.19，下载地址如下：<a href="http://php.net/get/php-5.6.19.tar.gz/from/a/mirror" target="_blank" rel="noopener">http://php.net/get/php-5.6.19.tar.gz/from/a/mirror</a></p><p>如果需要最新地址，可到如下网址下载：<a href="http://php.net/downloads.php" target="_blank" rel="noopener">http://php.net/downloads.php</a></p></div><ol class="org-ol"><li><a id="orgheadline168"></a>代码与依赖<br><div class="outline-text-6" id="text-6-2-4-14-1"><div class="org-src-container"><pre class="src src-sh">$tar -xzvf php-5.6.19.tar.gz</pre></div><p>拷贝交叉编译工具链中的 <code>libc.so</code>, <code>libm.so</code> 库。这步虽然可能不必要（小米路由器上已有运行库），但是编译时确实需要。</p><div class="org-src-container"><pre class="src src-sh">$mkdir -p /home/miracle/work/1_inbox/xiaomirouter/test/usr/lib$cp /home/miracle/work/1_inbox/xiaomirouter/test/sdk_package/toolchain/arm-xiaomi-linux-uclibcgnueabi/sysroot/usr/lib/{libc.so,libm.so} $_</pre></div></div></li><li><a id="orgheadline169"></a>配置前的修改<br><div class="outline-text-6" id="text-6-2-4-14-2"><p>使用configure脚本配置，会导致测试test的时候报错，错误原因类似mysql的配置，是因为交叉编译产生的测试程序不能直接运行，进而无法通过测试，修改configure脚本如下：</p><div class="org-src-container"><pre class="src src-sh">$vim configure</pre></div><p>将如下脚本片段：</p><pre class="example">if test "$cross_compiling" = yes; then :{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" &gt;&amp;5$as_echo "$as_me: error: in \`$ac_pwd':" &gt;&amp;2;}as_fn_error $? "cannot run test program while cross compilingSee \`config.log' for more details" "$LINENO" 5 ; }else</pre><p>修改为：</p><pre class="example">if test "$cross_compiling" = yes; then :echo "skip corss_compiling test"; # { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" &gt;&amp;5#$as_echo "$as_me: error: in \`$ac_pwd':" &gt;&amp;2;}#as_fn_error $? "cannot run test program while cross compiling#See \`config.log' for more details" "$LINENO" 5 ; }else</pre></div></li><li><a id="orgheadline170"></a>配置1&#x2013;用于确认导出变量的配置<br><div class="outline-text-6" id="text-6-2-4-14-3"><p>经过如上修改之后， <code>./configure</code> 脚本能够运行通过。但是，仅仅如此还是不够，这样配置后，即使后面的编译过程通过了，所得到的php也有许多的问题，这些问题只有在运行时才可能会被发现，那样我们有需要重新交叉编译、配置php了。过程比较麻烦，这里给出一些需要修改的地方，希望能够尽量避免日后重新配置安装。但是如果不得不重新配置安装的话，这里也为将来出现问题时如何解决给出了一个参考。</p><p>我们编译php，首先做如下配置：</p><div class="org-src-container"><pre class="src src-sh">$./configure --host=arm-xiaomi-linux-uclibcgnueabi --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-iconv-dir --with-freetype-dir --with-jpeg-dir=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --with-png-dir --with-zlib --with-libxml-dir=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --enable-xml --disable-rpath  --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --with-curl=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --enable-mbregex --enable-mbstring --enable-ftp --with-gd --enable-gd-native-ttf --with-openssl=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --with-openssl-dir=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --with-mcrypt=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --with-mhash --with-unixODBC=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap  --enable-opcache=no --without-pear --disable-fileinfo CC=arm-xiaomi-linux-uclibcgnueabi-gcc --with-gettext=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop LDFLAGS=-L/home/miracle/work/1_inbox/xiaomirouter/test/usr/lib CFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include CPPFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include CFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include/freetype2 CPPFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include/freetype2</pre></div></div></li><li><a id="orgheadline174"></a>确定需要额外修改的配置信息<br><div class="outline-text-6" id="text-6-2-4-14-4"><p>这里需要修改的内容比较复杂，不可能完全将修改的内容在这里给出。但是相信进行到这里的朋友肯定也对自己所做的事情很清楚了，不需要详细的描述，通过这里给出的方法，应当能够自己根据实际情况将configure修改成适合自己的样子。</p></div><ol class="org-ol"><li><a id="orgheadline172"></a>配置支持的函数开关<br><div class="outline-text-7" id="text-6-2-4-14-4-1"><p>上述配置完成之后，会生成一个 <code>config.log</code>, 其中包含了配置时的信息。对比在pc上配置、编译php后生成的 <code>config.log</code> 与该交叉配置、编译php的 <code>config.log</code> ，找到 <code>ac_cv_func_xxx</code> 变量的配置结果，会发现，有些pc版上为 <code>yes</code> ，而交叉编译版本时变成了 <code>no</code> 的变量，在交叉编译的configure中，根据自身路由器的情况，一般会将相应位置修改回 <code>yes</code> 。</p><p>这里修改的变量内容很多，不一一列出，需要自行搜索。一般是在configure脚本中判断该变量之前的地方将其值修改。如果编译出错，一般是这样添加的变量对应的某些函数在当前交叉编译环境库中找不到，这时候，再在configure中将相应的函数定义相关变量的 <code>yes</code> 之处改回 <code>no</code> 即可。比如这里曾经修改过的： <code>getloadavg</code>, <code>res_nsearch</code>, <code>strfmon</code>.对应的函数就找不到，所以都又被 <code>disable</code> 了。</p><p>例如如下就是修改过的代码片段：</p><pre class="example">67029 ac_cv_func_fork=yes67030 ac_cv_func_waitpid=yes67031 ac_cv_func_sigaction=yes67032 67033 if test "$PHP_PCNTL" != "no"; then</pre></div><ol class="org-ol"><li><a id="orgheadline171"></a>例子<br><div class="outline-text-8" id="text-6-2-4-14-4-1-1"><p>下面的例子，展示了我们为什么要添加这些函数变量。</p><ol class="org-ol"><li><p>发现运行问题</p><p>最初配置好php之后，适当修改 <code>Makefile</code> (修改方式参见后面)， 编译、安装完成之后，运行某个php脚本时，发现php提示找不到 <code>glob</code> 的错误。 </p></li><li><p>对比php运行环境</p><p>于是在pc和小米路由器上写了一个简单的php脚本，</p><div class="org-src-container"><pre class="src src-php">&lt;?php&gt;phpinfo()&lt;?&gt;</pre></div><p>然后搭建好webserver并在浏览器上显示该脚本的运行结果，发现，pc版本中支持的函数多了一个 <code>glob</code>, 这应当是在pc上没有错误，而在小米路由器上有错误的原因。</p></li><li><p>修改源码包中相关内容</p><p>该glob函数的定义，可以需要修改源代码，但是更根本的原因更可能是 <code>configure</code> 配置信息有问题，导致一些自动生成的源代码缺少了相关的函数定义。</p><p>于是再对比pc版和交叉编译版的 <code>config.log</code> 发现确实对 <code>glob</code> 相关的定义有所不同，最终追踪到修改 <code>configure</code> 脚本如下：</p><div class="org-src-container"><pre class="src src-sh">$vim configure...87993 ac_cv_func_glob=yes87994 for ac_func in getcwd getwd asinh acosh atanh log1p hypot glob strfmon nice fpclass isinf isnan mempcpy strpncpy87995 do :...</pre></div></li></ol><p>同理，推测其它函数应当也有类似的问题，于是干脆直接对比 <code>config.log</code>, 将pc上激活，而在交叉编译版却被禁止的变量尽量都打开。</p></div></li></ol></li><li><a id="orgheadline173"></a>配置其它选项参数<br><div class="outline-text-7" id="text-6-2-4-14-4-2"><p>参照类似前面的方式，对比pc版本和交叉编译版本 <code>config.log</code> 文件，找到其它看起来比较重要的、却在pc上打开，交叉编译版本关闭的一些选项参数，进行类似修改。比如：</p><pre class="example">ac_cv_header_wchar_h=yesac_cv_lib_crypt_crypt=yesac_cv_header_time=yesac_cv_header_time_h=yesac_cv_crypt_md5=yesac_cv_crypt_sha256=yesac_cv_crypt_sha512=yes</pre><p>这些是我找到的一些看起来比较重要的变量，都依次在 <code>configure</code> 中将相应的变量直接硬编码成 <code>yes</code> 值了。</p></div></li></ol></li><li><a id="orgheadline175"></a>配置2&#x2013;最终配置<br><div class="outline-text-6" id="text-6-2-4-14-5"><p>经过上述修改后，我们应该可以直接运行如下配置命令，生成Makefile了。</p><div class="org-src-container"><pre class="src src-sh">$./configure --host=arm-xiaomi-linux-uclibcgnueabi --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-iconv-dir --with-freetype-dir --with-jpeg-dir=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --with-png-dir --with-zlib --with-libxml-dir=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --enable-xml --disable-rpath  --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --with-curl=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --enable-mbregex --enable-mbstring --enable-ftp --with-gd --enable-gd-native-ttf --with-openssl=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --with-openssl-dir=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --with-mcrypt=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --with-mhash --with-unixODBC=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap  --enable-opcache=no --without-pear --disable-fileinfo CC=arm-xiaomi-linux-uclibcgnueabi-gcc --with-gettext=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop LDFLAGS=-L/home/miracle/work/1_inbox/xiaomirouter/test/usr/lib CFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include CPPFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include CFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include/freetype2 CPPFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include/freetype2</pre></div></div></li><li><a id="orgheadline176"></a>Makefile修改<br><div class="outline-text-6" id="text-6-2-4-14-6"><div class="org-src-container"><pre class="src src-sh">$vim Makefile</pre></div><p>具体修改主要解决的是路径的问题，防止交叉编译的时候，链接到非交叉编译库的路径。修改的内容主要包括：</p><ol class="org-ol"><li>去掉 <code>CFLAGS_CLEAN</code>, <code>INCLUDES</code>, <code>ext/iconv/iconv.lo</code> 中对 <code>/usr/include</code> 的包含。</li><li>​去掉 <code>EXTRA_LDFLAGS</code>, <code>EXTRA_LDFLAGS_PROGRAM</code>, <code>PHP_LDFLAGS</code> 中对 <code>/usr/lib</code> 的搜索。</li></ol></div></li><li><a id="orgheadline177"></a>代码修改<br><div class="outline-text-6" id="text-6-2-4-14-7"><p>经过前面对Makefile修改之后，还需对源代码进行一些修改，以避免出现编译错误。大致如下：</p><ol class="org-ol"><li><p>修改1</p><div class="org-src-container"><pre class="src src-sh">$vim include/../main/php_config.h</pre></div><p>修改片段：</p><pre class="example">15 //#define uint unsigned int16 //#define ulong unsigned long  ...535 #define HAVE_CRYPT 1  ...2516 /* Define to `unsigned int ' if &lt;sys/types.h&gt; does not define. */2517 //#define uint unsigned int2518 2519 /* Define to `unsigned long ' if &lt;sys/types.h&gt; does not define. */2520 //#define ulong unsigned long</pre><p>该修改主要解决对uint和ulong重复定义的错误信息。</p></li><li><p>修改2</p><div class="org-src-container"><pre class="src src-sh">$vim php-5.6.19/ext/zip/lib/zip_add.c</pre></div><p>将如下片段：</p><pre class="example">111 #if SIZEOF_OFF_T == 8                                                                                                                              112 #define ZIP_OFF_MAX ZIP_INT64_MAX113 #elif SIZEOF_OFF_T == 4114 #define ZIP_OFF_MAX ZIP_INT32_MAX115 #elif SIZEOF_OFF_T == 2116 #define ZIP_OFF_MAX ZIP_INT16_MAX117 #else118 #error unsupported size of off_t119 #endif</pre><p>改成：</p><pre class="example">111 //#if SIZEOF_OFF_T == 8112 //#define ZIP_OFF_MAX ZIP_INT64_MAX113 //#elif SIZEOF_OFF_T == 4114 #define ZIP_OFF_MAX ZIP_INT32_MAX115 //#elif SIZEOF_OFF_T == 2116 //#define ZIP_OFF_MAX ZIP_INT16_MAX117 //#else118 //#error unsupported size of off_t119 //#endif</pre><p>该修改主要解决平台字节位相关错误，这些错误可能在运行时才能够体现出来比较难以定位，在这里修改小米路由器就是32字长的CPU，所以去掉无用的判断。</p></li><li><p>修改3</p><div class="org-src-container"><pre class="src src-sh">$vim ext/standard/basic_functions.c</pre></div><p>添加#if HAVE_CRYPT&#x2026;#endif 宏包含如下代码块：</p><div class="org-src-container"><pre class="src src-C">...1837 /* {{{ password.c */1838 #if HAVE_CRYPT1839 ZEND_BEGIN_ARG_INFO_EX(arginfo_password_hash, 0, 0, 2)1840     ZEND_ARG_INFO(0, password)1841     ZEND_ARG_INFO(0, algo)1842     ZEND_ARG_INFO(0, options)1843 ZEND_END_ARG_INFO()1844 ZEND_BEGIN_ARG_INFO_EX(arginfo_password_get_info, 0, 0, 1)1845     ZEND_ARG_INFO(0, hash)1846 ZEND_END_ARG_INFO()1847 ZEND_BEGIN_ARG_INFO_EX(arginfo_password_needs_rehash, 0, 0, 2)1848     ZEND_ARG_INFO(0, hash)1849     ZEND_ARG_INFO(0, algo)1850     ZEND_ARG_INFO(0, options)1851 ZEND_END_ARG_INFO()1852 ZEND_BEGIN_ARG_INFO_EX(arginfo_password_verify, 0, 0, 2)1853     ZEND_ARG_INFO(0, password)1854     ZEND_ARG_INFO(0, hash)1855 ZEND_END_ARG_INFO()1856 #endif1857 /* }}} */...2866 #if HAVE_CRYPT2867     PHP_FE(password_hash,                                                   arginfo_password_hash)2868     PHP_FE(password_get_info,                                               arginfo_password_get_info)2869     PHP_FE(password_needs_rehash,                                           arginfo_password_needs_rehash)2870     PHP_FE(password_verify,                                                 arginfo_password_verify)2871 #endif ...3628 #if HAVE_CRYPT3629     BASIC_MINIT_SUBMODULE(password)3630 #endif</pre></div><p>该修改主要解决如下类似错误：</p><pre class="example">ext/standard/basic_functions.o: In function `zm_startup_basic':basic_functions.c:(.text+0x12d4): undefined reference to `zm_startup_password'ext/standard/basic_functions.o: In function `.LC795':basic_functions.c:(.rodata+0x9de8): undefined reference to `zif_password_hash'basic_functions.c:(.rodata+0x9dfc): undefined reference to `zif_password_get_info'basic_functions.c:(.rodata+0x9e10): undefined reference to `zif_password_needs_rehash'basic_functions.c:(.rodata+0x9e24): undefined reference to `zif_password_verify'collect2: error: ld returned 1 exit status</pre></li></ol></div></li><li><a id="orgheadline178"></a>交叉编译1-生成主要的二进制文件<br><div class="outline-text-6" id="text-6-2-4-14-8"><p>经过如上修改之后，即可以编译代码，如下：</p><div class="org-src-container"><pre class="src src-sh">$make</pre></div><p>如上的编译并不能完全顺利进行下来，期间遇到如下问题：</p><pre class="example">Generating phar.php/bin/bash: /home/miracle/work/1_inbox/xiaomirouter/test/php-5.6.19/sapi/cli/php: 无法执行二进制文件make: *** [ext/phar/phar.php] 错误 126</pre><p>原因是编译过程中需要在pc上运行 <code>sapi/cli/php</code> 生成一些必要的文件，但是由于编译过程是交叉编译，所以运行这个命令失败。需要借助pc版的php生成相应文件，大致过程见后面。</p></div></li><li><a id="orgheadline179"></a>交叉编译2-借助pc版本的php完成最终编译<br><div class="outline-text-6" id="text-6-2-4-14-9"><p>前面也提到了，前面出现的错误不需要修改什么，但是需要事先编译好一个pc版本的php。pc上php的编译在前面有所介绍。</p><p>当交叉编译出现这个错误之后，将事先编译好的pc版的 <code>php</code> 程序替换交叉编译源码目录中的 <code>php-5.6.19/sapi/cli/php</code> ，然后继续 <code>make</code> 即可。 <code>make</code> 之后，不要忘记再替换回之前的备份。</p><ol class="org-ol"><li><p>使用pc版本的 <code>php</code> 继续完成编译、安装</p><div class="org-src-container"><pre class="src src-sh">$cd sapi/cli$mv php php.arm$cp /usr/local/develop/php-5.6.19/bin/php .（这里/usr/local/develop/php-5.6.19是pc上的php的路径）$cd ../../$make$make install</pre></div></li><li><p>用之前交叉编译版本的 <code>php</code> 替换回安装好的程序中的 <code>php</code> 程序</p><div class="org-src-container"><pre class="src src-sh">$cd sapi/cli$cp php php.pc$cp php.arm php$cp php /home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/bin</pre></div></li></ol><p>至此，Php的交叉编译过程完成。</p></div></li></ol></div></div><div id="outline-container-orgheadline55" class="outline-4"><h4 id="orgheadline55"><span class="section-number-4">6.2.5</span> 交叉编译安装nginx</h4><div class="outline-text-4" id="text-6-2-5"></div><div id="outline-container-orgheadline181" class="outline-5"><h5 id="orgheadline181"><span class="section-number-5">6.2.5.1</span> 代码解压</h5><div class="outline-text-5" id="text-6-2-5-1"><div class="org-src-container"><pre class="src src-sh">$tar -xzvf nginx-1.8.1.tar.gz$cd nginx-1.8.1</pre></div></div></div><div id="outline-container-orgheadline182" class="outline-5"><h5 id="orgheadline182"><span class="section-number-5">6.2.5.2</span> 修改配置文件</h5><div class="outline-text-5" id="text-6-2-5-2"><p>源代码中的 <code>auto</code> 目录修改会影响后面用 <code>configure</code> 生成的 <code>objs/ngx_auto_config.h</code> 的内容。如果没有修改相应的配置文件，则在后面编译之时修改该头文件中相应的定义也行。保险起见，最好从配置文件上进行修改。</p><ol class="org-ol"><li><p>cpu位相关内容</p><div class="org-src-container"><pre class="src src-sh">$vim auto/types/sizeof</pre></div><p>修改如下：</p><pre class="example">15 ngx_size=4                                                                                                                                        ...&lt;中间的注释掉&gt;...18 case $ngx_size in</pre><p>因为目标机器（小米路由器）是32位，而这里测试程序是对编译主机检测的结果，如果该结果与目标机器不一致就会运行出错。例如我机器是64位，没有改这个，运行nginx读取配置文件的时候有如下错：</p><pre class="example">nginx: [emerg] "worker_processes" directive invalid value in /userdisk/data/opt/usr/local/develop/conf/nginx.conf:2</pre><p>这类运行时才出现的错误，一般很难定位，所以在开始尽量能避免则避免。</p><p>另外要注意 <code>auto/endianness</code> , 需要交叉编译这个文件定义的测试程序，然后放到小米路由器上运行一下，看其结果与ｐｃ上对比看是否一样，以决定NGX_HAVE_LITTLE_ENDIAN宏的定义。</p></li><li><p>一些系统调用的支持配置</p><div class="org-src-container"><pre class="src src-sh">$vim auto/os/linux</pre></div><p>注释修改类似如下</p><pre class="example">87 # O_PATH and AT_EMPTY_PATH were introduced in 2.6.39, glibc 2.14                                                                                  88 89 #ngx_feature="O_PATH"90 #ngx_feature_name="NGX_HAVE_O_PATH"91 #ngx_feature_run=no92 #ngx_feature_incs="#include &lt;sys/types.h&gt;93 #                  #include &lt;sys/stat.h&gt;94 #                  #include &lt;fcntl.h&gt;"95 #ngx_feature_path=96 #ngx_feature_libs=97 #ngx_feature_test="int fd; struct stat sb;98 #                  fd = openat(AT_FDCWD, \".\", O_PATH|O_DIRECTORY|O_NOFOLLOW);99 #                  if (fstatat(fd, \"\", &amp;sb, AT_EMPTY_PATH) != 0) return 1"100 #. auto/feature...169 # crypt_r()170 171 #ngx_feature="crypt_r()"172 #ngx_feature_name="NGX_HAVE_GNU_CRYPT_R"173 #ngx_feature_run=no174 #ngx_feature_incs="#include &lt;crypt.h&gt;"175 #ngx_feature_path=176 #ngx_feature_libs=-lcrypt177 #ngx_feature_test="struct crypt_data  cd;178 #                  crypt_r(\"key\", \"salt\", &amp;cd);"179 #. auto/feature</pre><p>如果这里的内容没有修改的话，那么在后面编译之时的代码，应当如下修改</p><div class="org-src-container"><pre class="src src-sh">$vim objs/ngx_auto_config.h</pre></div><p>修改片段：</p><pre class="example">...38 //#ifndef NGX_HAVE_O_PATH39 //#define NGX_HAVE_O_PATH  140 //#endif                                                                                                                                          ...63 //#ifndef NGX_HAVE_GNU_CRYPT_R64 //#define NGX_HAVE_GNU_CRYPT_R  165 //#endif ...</pre></li></ol></div></div><div id="outline-container-orgheadline183" class="outline-5"><h5 id="orgheadline183"><span class="section-number-5">6.2.5.3</span> 配置</h5><div class="outline-text-5" id="text-6-2-5-3"><div class="org-src-container"><pre class="src src-sh">$./configure  --with-openssl=/home/miracle/work/1_inbox/xiaomirouter/test/openssl-1.0.2g --with-pcre=/home/miracle/work/1_inbox/xiaomirouter/test/openssl-1.0.2g --with-http_ssl_module --with-http_dav_module --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop</pre></div></div></div><div id="outline-container-orgheadline184" class="outline-5"><h5 id="orgheadline184"><span class="section-number-5">6.2.5.4</span> 修改Makefile</h5><div class="outline-text-5" id="text-6-2-5-4"><div class="org-src-container"><pre class="src src-sh">$vim objs/Makefile</pre></div><ol class="org-ol"><li><p>修改1-交叉编译工具与选项</p><pre class="example">#CC =ccCC=arm-xiaomi-linux-uclibcgnueabi-gcc#CFLAGS =  -pipe  -O -W -Wall -Wpointer-arith -Wno-unused-parameter -Werror -g CFLAGS =  -pipe  -O -W -Wall -Wpointer-arith -Wno-unused-parameter CFLAGS+=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/includeCPP =$(CC) -ECPPFLAGS+=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/includeLINK =$(CC)LDFLAGS+=-L/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib</pre></li><li><p>修改2-头文件的包含</p><pre class="example">ALL_INCS = -I src/core \-I src/event \-I src/event/modules \-I src/os/unix \-I /home/miracle/work/1_inbox/xiaomirouter/test/openssl-1.0.2g \-I /home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include \-I objs \-I src/http \-I src/http/modules \-I src/mail</pre></li><li><p>修改3-依赖模块头文件(openssl与pcre)</p><pre class="example">CORE_DEPS = src/core/nginx.h \.../home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include/openssl/ssl.h \/home/miracle/work/1_inbox/xiaomirouter/test/pcre-8.38/pcre.h \objs/ngx_auto_config.h</pre></li><li><p>修改4-依赖模块安装路径包含(openssl与相应的交叉编译安装路径)</p><pre class="example">CORE_INCS = -I src/core \-I src/event \-I src/event/modules \-I src/os/unix \-I /home/miracle/work/1_inbox/xiaomirouter/test/openssl-1.0.2g \-I /home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include \-I objs</pre></li><li><p>修改5-libpcre.a的链接</p><pre class="example">objs/nginx:objs/src/core/nginx.o \...objs/ngx_modules.o \/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib/libpcre.a</pre></li><li><p>修改6-链接 <code>lz</code> 的路径</p><pre class="example">$(LINK) -o objs/nginx \...objs/ngx_modules.o \-lpthread -lcrypt /home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib/libpcre.a /home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib/libssl.a /home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib/libcrypto.a -ldl -L/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib -lz</pre></li><li><p>修改7-注释掉不需要的编译</p><pre class="example">#/home/miracle/work/1_inbox/xiaomirouter/test/openssl-1.0.2g/pcre.h:#/home/miracle/work/1_inbox/xiaomirouter/test/openssl-1.0.2g/Makefile#/home/miracle/work/1_inbox/xiaomirouter/test/openssl-1.0.2g/Makefile:objs/Makefile#cd /home/miracle/work/1_inbox/xiaomirouter/test/openssl-1.0.2g \#&amp;&amp; if [ -f Makefile ]; then $(MAKE) distclean; fi \#&amp;&amp; CC="$(CC)" CFLAGS="-O2 -fomit-frame-pointer -pipe " \#./configure --disable-shared #/home/miracle/work/1_inbox/xiaomirouter/test/openssl-1.0.2g/.libs/libpcre.a:#/home/miracle/work/1_inbox/xiaomirouter/test/openssl-1.0.2g/Makefile#cd /home/miracle/work/1_inbox/xiaomirouter/test/openssl-1.0.2g \#&amp;&amp; $(MAKE) libpcre.la#/home/miracle/work/1_inbox/xiaomirouter/test/openssl-1.0.2g/.openssl/include/openssl/ssl.h:objs/Makefile#cd /home/miracle/work/1_inbox/xiaomirouter/test/openssl-1.0.2g \#&amp;&amp; if [ -f Makefile ]; then $(MAKE) clean; fi \#&amp;&amp; ./config --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/openssl-1.0.2g/.openssl no-shared  \#&amp;&amp; $(MAKE) \#&amp;&amp; $(MAKE) install LIBDIR=lib</pre></li></ol></div></div><div id="outline-container-orgheadline185" class="outline-5"><h5 id="orgheadline185"><span class="section-number-5">6.2.5.5</span> 交叉编译、安装</h5><div class="outline-text-5" id="text-6-2-5-5"><div class="org-src-container"><pre class="src src-sh">$make$make install</pre></div><p>至此，nginx交叉编译、安装完成。</p></div></div></div><div id="outline-container-orgheadline56" class="outline-4"><h4 id="orgheadline56"><span class="section-number-4">6.2.6</span> 部署到小米路由器上的内容</h4><div class="outline-text-4" id="text-6-2-6"></div><div id="outline-container-orgheadline186" class="outline-5"><h5 id="orgheadline186"><span class="section-number-5">6.2.6.1</span> 安装包部署</h5><div class="outline-text-5" id="text-6-2-6-1"><p>每次升级路由器,都需要重新部署配置文件.</p><div class="org-src-container"><pre class="src src-sh">$vim /etc/profile</pre></div><div class="org-src-container"><pre class="src src-sh">#customexport PATH=$PATH:/userdisk/data/opt/usr/local/develop/binexport PATH=$PATH:/userdisk/data/opt/usr/local/develop/sbinexport PATH=$PATH:/userdisk/data/opt/usr/local/develop/libexecexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/userdisk/data/opt/usr/local/develop/libexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/userdisk/data/opt/usr/local/develop/lib/mysql</pre></div></div></div><div id="outline-container-orgheadline187" class="outline-5"><h5 id="orgheadline187"><span class="section-number-5">6.2.6.2</span> 配置文件以及数据库的部署</h5><div class="outline-text-5" id="text-6-2-6-2"><p>先给出一个脚本 <code>install.sh</code>, 用来集中描述对配置文件的部署：</p><div class="org-src-container"><pre class="src src-sh">#!/bin/shPREFIX=/userdisk/data/opt/usr/local/develop[ -f /etc/my.cnf ] &amp;&amp; echo "/etc/my.cnf exists, skip." || cp ./my.cnf /etc[ -f $PREFIX/etc/php-fpm.conf ] &amp;&amp; echo "$PREFIX/etc/php-fpm.conf exists, skip."|| cp ./php-fpm.conf $PREFIX/etc[ -f $PREFIX/etc/php.ini ] &amp;&amp; echo "$PREFIX/etc/php.ini exists, skip."|| cp ./php.ini $PREFIX/etc[ -f $PREFIX/conf/nginx.conf ] &amp;&amp; echo "$PREFIX/conf/nginx.conf exists, skip."|| cp ./nginx.conf $PREFIX/confmkdir -p $PREFIX/datamkdir -p $PREFIX/tmpchmod 777 -R $PREFIX/tmpmysql_install_db --user=root --basedir=$PREFIX --datadir=$PREFIX/data</pre></div><p>对于以上脚本，我们需要了解如下：</p><ol class="org-ol"><li><p><code>PREFIX=/userdisk/data/opt/usr/local/develop</code></p><p>这句话指定了我们将要将交叉编译的内容部署到小米路由器上的哪个路径，路径用环境变量 <code>PREFIX</code> 来指定。</p></li><li><p><code>[ -f /etc/my.cnf ] &amp;&amp; echo "/etc/my.cnf exists, skip." || cp ./my.cnf /etc</code></p><p>这句话指定 MySql 的配置文件，这个文件拷贝自源码包下的 <code>support-files/my-small.cnf</code>, 将其修改后拷贝到小米路由器的 <code>/etc</code> 下，并重命名为 <code>my.cnf</code> 做为MySql的配置文件。</p><p>对于该文件的修改主要如下片段：</p><pre class="example">[mysqld]user = rootbasedir= /userdisk/data/opt/usr/local/develop</pre></li><li><p><code>[ -f $PREFIX/etc/php-fpm.conf ] &amp;&amp; echo "$PREFIX/etc/php-fpm.conf exists, skip."|| cp ./php-fpm.conf $PREFIX/etc</code></p><p>这句话给出 <code>php-fpm</code> 的配置，该文件拷贝自安装目录 <code>$PREFIX/etc/php-fpm.conf</code> 下的 <code>php-fpm.conf.default</code> 文件， 主要修改如下：</p><pre class="example">[global]; Pid file; Note: the default prefix is /home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/var; Default Value: none;pid = run/php-fpm.pid; Error log file; If it's set to "syslog", log is sent to syslogd instead of being written; in a local file.; Note: the default prefix is /home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/var; Default Value: log/php-fpm.log;error_log = log/php-fpm.log...;   'port'                 - to listen on a TCP socket to all IPv4 addresses on a;                            specific port;;   '[::]:port'            - to listen on a TCP socket to all addresses;                            (IPv6 and IPv4-mapped) on a specific port;;   '/path/to/unix/socket' - to listen on a unix socket.; Note: This value is mandatory.listen = 127.0.0.1:9000...; Redirect worker stdout and stderr into main error log. If not set, stdout and; stderr will be redirected to /dev/null according to FastCGI specs.; Note: on highloaded environement, this can cause some delay in the page; process time (several ms).; Default Value: no;catch_workers_output = yes</pre></li><li><p><code>[ -f $PREFIX/etc/php.ini ] &amp;&amp; echo "$PREFIX/etc/php.ini exists, skip."|| cp ./php.ini $PREFIX/etc</code></p><p>这个文件拷贝自源代码包中的 <code>php.ini-development</code>, 修改如下：</p><pre class="example">...; Log errors to specified file. PHP's default behavior is to leave this value; empty.; http://php.net/error-log; Example:;error_log = php_errors.log; Log errors to syslog (Event Log on Windows).error_log = /userdisk/data/opt/usr/local/develop/var/log/php_errors.log...; Maximum size of POST data that PHP will accept.; Its value may be 0 to disable the limit. It is ignored if POST data reading; is disabled through enable_post_data_reading.; http://php.net/post-max-sizepost_max_size = 512M...; Directory in which the loadable extensions (modules) reside.; http://php.net/extension-dir; extension_dir = "./"; On windows:extension_dir = "/userdisk/data/opt/usr/local/develop/lib/php/extensions/no-debug-non-zts-20131226"...; Directory where the temporary files should be placed.; Defaults to the system default (see sys_get_temp_dir); sys_temp_dir = "/tmp"sys_temp_dir = "/userdisk/data/opt/usr/local/develop/tmp"...; Maximum allowed size for uploaded files.; http://php.net/upload-max-filesizeupload_max_filesize = 512M...; Default socket name for local MySQL connects.  If empty, uses the built-in; MySQL defaults.; http://php.net/pdo_mysql.default-socketpdo_mysql.default_socket= /tmp/mysql.sock...;;     session.save_path = "N;MODE;/path";; where MODE is the octal representation of the mode. Note that this; does not overwrite the process's umask.; http://php.net/session.save-path; session.save_path = "/tmp"session.save_path = "/userdisk/data/opt/usr/local/develop/tmp"...</pre></li><li><p><code>[ -f $PREFIX/conf/nginx.conf ] &amp;&amp; echo "$PREFIX/conf/nginx.conf exists, skip."|| cp ./nginx.conf $PREFIX/conf</code></p><p>这个是nginx的配置文件，在 <code>$PREFIX/conf/</code> 中有一个备份的文件 <code>nginx.conf.default</code>, (其他的nginx配置也是类似的备份方式)，对该文件的修改，和PC上基本一样。</p><p>这里给出其完整配置如下：</p><pre class="example">worker_processes  2;error_log  /userdisk/data/opt/usr/local/develop/logs/error.log;#error_log  /userdisk/data/opt/usr/local/develop/logs/error.log  notice;#error_log  /userdisk/data/opt/usr/local/develop/logs/error.log  info;#error_log  /userdisk/data/opt/usr/local/develop/logs/error.log  alert;pid        /var/run/nginx.pid;events {worker_connections  1024;}http {include       mime.types;default_type  application/octet-stream;log_format  main  '$remote_addr - $remote_user [$time_local] "$request" ''$status $body_bytes_sent "$http_referer" ''"$http_user_agent" "$http_x_forwarded_for"';access_log  /userdisk/data/opt/usr/local/develop/logs/access.log  main;sendfile        on;#tcp_nopush     on;#keepalive_timeout  0;keepalive_timeout  65;#gzip  on;###test phpserver {listen       18080;server_name 192.168.31.1;location / {#root   /userdisk/data/web/test;root   /userdisk/data/web/test;index  index.php index.html;}# pass the PHP scripts to FastCGI server listening on 192.168.31.1:19000#location ~ \.php$ {fastcgi_pass   127.0.0.1:19000;fastcgi_index  index.php;fastcgi_param  SCRIPT_FILENAME  /userdisk/data/web/test$fastcgi_script_name;include        fastcgi_params;}}###myown cloud with sslupstream php-handler {server 127.0.0.1:19000;#server unix:/var/run/php5-fpm.sock;}server {listen 18000;server_name 192.168.31.1;# enforce httpsreturn 301 https://$server_name$request_uri;}server {listen 443 ssl;server_name 192.168.31.1;ssl_certificate /userdisk/data/web/server.crt;ssl_certificate_key /userdisk/data/web/server.key;# Add headers to serve security related headersadd_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";add_header X-Content-Type-Options nosniff;add_header X-Frame-Options "SAMEORIGIN";add_header X-XSS-Protection "1; mode=block";add_header X-Robots-Tag none;add_header X-Download-Options noopen;add_header X-Permitted-Cross-Domain-Policies none;# Path to the root of your installationroot /userdisk/data/web;# set max upload sizelocation / {index index.html;}location /blog {alias /userdisk/data/web/blog;index index.html;}location /blog/quietheart {alias /userdisk/data/web/blog/quietheart;index index.html;}location /mycloud/owncloud {alias /userdisk/data/web/mycloud/owncloud;client_max_body_size 1G;fastcgi_buffers 64 4K;# Disable gzip to avoid the removal of the ETag headergzip off;# Uncomment if your server is build with the ngx_pagespeed module# This module is currently not supported.#pagespeed off;index index.php;error_page 403 /core/templates/403.php;error_page 404 /core/templates/404.php;rewrite ^/.well-known/carddav /remote.php/dav/ permanent;rewrite ^/.well-known/caldav /remote.php/dav/ permanent;# The following 2 rules are only needed for the user_webfinger app.# Uncomment it if you're planning to use this app.#rewrite ^/.well-known/host-meta /public.php?service=host-meta last;#rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;rewrite ^/remote/(.*) /remote.php last;rewrite ^(/core/doc/[^\/]+/)$ $1/index.html;try_files $uri $uri/ =404;}location = /robots.txt {allow all;log_not_found off;access_log off;}location ~ ^/(build|tests|config|lib|3rdparty|templates|data)/ {deny all;}location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {deny all;}#location / {#rewrite ^/remote/(.*) /remote.php last;#rewrite ^(/core/doc/[^\/]+/)$ $1/index.html;#try_files $uri $uri/ =404;#}location ~ \.php(?:$|/) {fastcgi_split_path_info ^(.+\.php)(/.+)$;include fastcgi_params;fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;fastcgi_param PATH_INFO $fastcgi_path_info;fastcgi_param HTTPS on;fastcgi_param modHeadersAvailable true; #Avoid sending the security headers twice#fastcgi_pass   127.0.0.1:9000;fastcgi_pass   php-handler;fastcgi_intercept_errors on;}location ~* \.(?:css|js)$ {add_header Cache-Control "public, max-age=7200";# Add headers to serve security related headersadd_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";add_header X-Content-Type-Options nosniff;add_header X-Frame-Options "SAMEORIGIN";add_header X-XSS-Protection "1; mode=block";add_header X-Robots-Tag none;add_header X-Download-Options noopen;add_header X-Permitted-Cross-Domain-Policies none;# Optional: Don't log access to assetsaccess_log off;}# Optional: Don't log access to other assetslocation ~* \.(?:jpg|jpeg|gif|bmp|ico|png|swf)$ {access_log off;}}}</pre></li><li><p>创建程序运行时所需要的目录</p><p>如下目录需要手动创建，运行时会向其中写入相关的文件：</p><div class="org-src-container"><pre class="src src-sh">$mkdir -p $PREFIX/data$mkdir -p $PREFIX/tmp$chmod 777 -R $PREFIX/tmp</pre></div></li><li><p>安装数据库相关内容</p><p>主要是数据库所在路径，配置之后即可启动MySql服务，如下：</p><div class="org-src-container"><pre class="src src-sh">$mysql_install_db --user=root --basedir=$PREFIX --datadir=$PREFIX/data</pre></div></li></ol></div></div><div id="outline-container-orgheadline188" class="outline-5"><h5 id="orgheadline188"><span class="section-number-5">6.2.6.3</span> 编写运行脚本</h5><div class="outline-text-5" id="text-6-2-6-3"><p>启动脚本主要包括：MySql启动脚本、Php环境启动脚本、以及nginx启动脚本。</p><p>后面会给出使用方式，这里先给出脚本内容分别如下：</p><ol class="org-ol"><li><p>MySql启动脚本：mysql.server</p><div class="org-src-container"><pre class="src src-sh">#!/bin/sh# Copyright Abandoned 1996 TCX DataKonsult AB &amp; Monty Program KB &amp; Detron HB# This file is public domain and comes with NO WARRANTY of any kind# MySQL daemon start/stop script.# Usually this is put in /etc/init.d (at least on machines SYSV R4 based# systems) and linked to /etc/rc3.d/S99mysql and /etc/rc0.d/K01mysql.# When this is done the mysql server will be started when the machine is# started and shut down when the systems goes down.# Comments to support chkconfig on RedHat Linux# chkconfig: 2345 64 36# description: A very fast and reliable SQL database engine.# Comments to support LSB init script conventions### BEGIN INIT INFO# Provides: mysql# Required-Start: $local_fs $network $remote_fs# Should-Start: ypbind nscd ldap ntpd xntpd# Required-Stop: $local_fs $network $remote_fs# Default-Start:  2 3 4 5# Default-Stop: 0 1 6# Short-Description: start and stop MySQL# Description: MySQL is a very fast and reliable SQL database engine.### END INIT INFO# If you install MySQL on some other places than /home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/mysql-5.1.72, then you# have to do one of the following things for this script to work:## - Run this script from within the MySQL installation directory# - Create a /etc/my.cnf file with the following information:#   [mysqld]#   basedir=&lt;path-to-mysql-installation-directory&gt;# - Add the above to any other configuration file (for example ~/.my.ini)#   and copy my_print_defaults to /usr/bin# - Add the path to the mysql-installation-directory to the basedir variable#   below.## If you want to affect other MySQL variables, you should make your changes# in the /etc/my.cnf, ~/.my.cnf or other MySQL configuration files.# If you change base dir, you must also change datadir. These may get# overwritten by settings in the MySQL configuration files.basedir=/userdisk/data/opt/usr/local/developdatadir=# Default value, in seconds, afterwhich the script should timeout waiting# for server start. # Value here is overriden by value in my.cnf. # 0 means don't wait at all# Negative numbers mean to wait indefinitelyservice_startup_timeout=900# The following variables are only set for letting mysql.server find things.# Set some defaultspid_file=server_pid_file=use_mysqld_safe=1user=rootif test -z "$basedir"thenbasedir=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/mysql-5.1.72bindir=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/mysql-5.1.72/binif test -z "$datadir"thendatadir=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/mysql-5.1.72/varfisbindir=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/mysql-5.1.72/sbinlibexecdir=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/mysql-5.1.72/libexecelsebindir="$basedir/bin"if test -z "$datadir"thendatadir="$basedir/data"fisbindir="$basedir/sbin"libexecdir="$basedir/libexec"fi# datadir_set is used to determine if datadir was set (and so should be# *not* set inside of the --basedir= handler.)datadir_set=## Use LSB init script functions for printing messages, if possible#lsb_functions="/lib/lsb/init-functions"if test -f $lsb_functions ; then. $lsb_functionselselog_success_msg(){echo " SUCCESS! $@"}log_failure_msg(){echo " ERROR! $@"}fiPATH=/sbin:/usr/sbin:/bin:/usr/bin:$basedir/binexport PATHmode=$1    # start or stopshiftother_args="$*"   # uncommon, but needed when called from an RPM upgrade action# Expected: "--skip-networking --skip-grant-tables"# They are not checked here, intentionally, as it is the resposibility# of the "spec" file author to give correct arguments only.case `echo "testing\c"`,`echo -n testing` in*c*,-n*) echo_n=   echo_c=     ;;*c*,*)   echo_n=-n echo_c=     ;;*)       echo_n=   echo_c='\c' ;;esacparse_server_arguments() {for arg docase "$arg" in--basedir=*)  basedir=`echo "$arg" | sed -e 's/^[^=]*=//'`bindir="$basedir/bin"if test -z "$datadir_set"; thendatadir="$basedir/data"fisbindir="$basedir/sbin"libexecdir="$basedir/libexec";;--datadir=*)  datadir=`echo "$arg" | sed -e 's/^[^=]*=//'`datadir_set=1;;--user=*)  user=`echo "$arg" | sed -e 's/^[^=]*=//'` ;;--pid-file=*) server_pid_file=`echo "$arg" | sed -e 's/^[^=]*=//'` ;;--service-startup-timeout=*) service_startup_timeout=`echo "$arg" | sed -e 's/^[^=]*=//'` ;;--use-mysqld_safe) use_mysqld_safe=1;;--use-manager)     use_mysqld_safe=0;;esacdone}parse_manager_arguments() {for arg docase "$arg" in--pid-file=*) pid_file=`echo "$arg" | sed -e 's/^[^=]*=//'` ;;--user=*)  user=`echo "$arg" | sed -e 's/^[^=]*=//'` ;;esacdone}wait_for_pid () {verb="$1"manager_pid="$2"  # process ID of the program operating on the pid-filei=0avoid_race_condition="by checking again"while test $i -ne $service_startup_timeout ; docase "$verb" in'created')# wait for a PID-file to pop into existence.test -s $pid_file &amp;&amp; i='' &amp;&amp; break;;'removed')# wait for this PID-file to disappeartest ! -s $pid_file &amp;&amp; i='' &amp;&amp; break;;*)echo "wait_for_pid () usage: wait_for_pid created|removed manager_pid"exit 1;;esac# if manager isn't running, then pid-file will never be updatedif test -n "$manager_pid"; thenif kill -0 "$manager_pid" 2&gt;/dev/null; then:  # the manager still runselse# The manager may have exited between the last pid-file check and now.  if test -n "$avoid_race_condition"; thenavoid_race_condition=""continue  # Check again.fi# there's nothing that will affect the file.log_failure_msg "Manager of pid-file quit without updating file."return 1  # not waiting any more.fifiecho $echo_n ".$echo_c"i=`expr $i + 1`sleep 1doneif test -z "$i" ; thenlog_success_msgreturn 0elselog_failure_msgreturn 1fi}# Get arguments from the my.cnf file,# the only group, which is read from now on is [mysqld]if test -x ./bin/my_print_defaultsthenprint_defaults="./bin/my_print_defaults"elif test -x $bindir/my_print_defaultsthenprint_defaults="$bindir/my_print_defaults"elif test -x $bindir/mysql_print_defaultsthenprint_defaults="$bindir/mysql_print_defaults"else# Try to find basedir in /etc/my.cnfconf=/etc/my.cnfprint_defaults=if test -r $confthensubpat='^[^=]*basedir[^=]*=\(.*\)$'dirs=`sed -e "/$subpat/!d" -e 's//\1/' $conf`for d in $dirsdod=`echo $d | sed -e 's/[     ]//g'`if test -x "$d/bin/my_print_defaults"thenprint_defaults="$d/bin/my_print_defaults"breakfiif test -x "$d/bin/mysql_print_defaults"thenprint_defaults="$d/bin/mysql_print_defaults"breakfidonefi# Hope it's in the PATH ... but I doubt ittest -z "$print_defaults" &amp;&amp; print_defaults="my_print_defaults"fi## Read defaults file from 'basedir'.   If there is no defaults file there# check if it's in the old (depricated) place (datadir) and read it from there#extra_args=""if test -r "$basedir/my.cnf"thenextra_args="-e $basedir/my.cnf"elseif test -r "$datadir/my.cnf"thenextra_args="-e $datadir/my.cnf"fifiparse_server_arguments `$print_defaults $extra_args mysqld server mysql_server mysql.server`# Look for the pidfile parse_manager_arguments `$print_defaults $extra_args manager`## Set pid file if not given#if test -z "$pid_file"thenpid_file=$datadir/mysqlmanager-`/bin/hostname`.pidelsecase "$pid_file" in/* ) ;;* )  pid_file="$datadir/$pid_file" ;;esacfiif test -z "$server_pid_file"thenserver_pid_file=$datadir/`/bin/hostname`.pidelsecase "$server_pid_file" in/* ) ;;* )  server_pid_file="$datadir/$server_pid_file" ;;esacficase "$mode" in'start')# Start daemon# Safeguard (relative paths, core dumps..)cd $basedirmanager=$bindir/mysqlmanagerif test -x $libexecdir/mysqlmanagerthenmanager=$libexecdir/mysqlmanagerelif test -x $sbindir/mysqlmanagerthenmanager=$sbindir/mysqlmanagerfiecho $echo_n "Starting MySQL"if test -x $manager -a "$use_mysqld_safe" = "0"thenif test -n "$other_args"thenlog_failure_msg "MySQL manager does not support options '$other_args'"exit 1fi# Give extra arguments to mysqld with the my.cnf file. This script may# be overwritten at next upgrade."$manager" \--mysqld-safe-compatible \--user="$user" \--pid-file="$pid_file" &gt;/dev/null 2&gt;&amp;1 &amp;wait_for_pid created $!; return_value=$?# Make lock for RedHat / SuSEif test -w /var/lock/subsysthentouch /var/lock/subsys/mysqlmanagerfiexit $return_valueelif test -x $bindir/mysqld_safethen# Give extra arguments to mysqld with the my.cnf file. This script# may be overwritten at next upgrade.pid_file=$server_pid_file$bindir/mysqld_safe --datadir=$datadir --pid-file=$server_pid_file $other_args &gt;/dev/null 2&gt;&amp;1 &amp;wait_for_pid created $!; return_value=$?# Make lock for RedHat / SuSEif test -w /var/lock/subsysthentouch /var/lock/subsys/mysqlfiexit $return_valueelselog_failure_msg "Couldn't find MySQL manager ($manager) or server ($bindir/mysqld_safe)"fi;;'stop')# Stop daemon. We use a signal here to avoid having to know the# root password.# The RedHat / SuSE lock directory to removelock_dir=/var/lock/subsys/mysqlmanager# If the manager pid_file doesn't exist, try the server'sif test ! -s "$pid_file"thenpid_file=$server_pid_filelock_dir=/var/lock/subsys/mysqlfiif test -s "$pid_file"thenmysqlmanager_pid=`cat $pid_file`if (kill -0 $mysqlmanager_pid 2&gt;/dev/null)thenecho $echo_n "Shutting down MySQL"kill $mysqlmanager_pid# mysqlmanager should remove the pid_file when it exits, so wait for it.wait_for_pid removed "$mysqlmanager_pid"; return_value=$?elselog_failure_msg "MySQL manager or server process #$mysqlmanager_pid is not running!"rm $pid_filefi# delete lock for RedHat / SuSEif test -f $lock_dirthenrm -f $lock_dirfiexit $return_valueelselog_failure_msg "MySQL manager or server PID file could not be found!"fi;;'restart')# Stop the service and regardless of whether it was# running or not, start it again.if $0 stop  $other_args; then$0 start $other_argselselog_failure_msg "Failed to stop running server, so refusing to try to start."exit 1fi;;'reload'|'force-reload')if test -s "$server_pid_file" ; thenread mysqld_pid &lt;  $server_pid_filekill -HUP $mysqld_pid &amp;&amp; log_success_msg "Reloading service MySQL"touch $server_pid_fileelselog_failure_msg "MySQL PID file could not be found!"exit 1fi;;'status')# First, check to see if pid file existsif test -s "$server_pid_file" ; then read mysqld_pid &lt; $server_pid_fileif kill -0 $mysqld_pid 2&gt;/dev/null ; then log_success_msg "MySQL running ($mysqld_pid)"exit 0elselog_failure_msg "MySQL is not running, but PID file exists"exit 1fielse# Try to find appropriate mysqld processmysqld_pid=`pidof $libexecdir/mysqld`# test if multiple pids existpid_count=`echo $mysqld_pid | wc -w`if test $pid_count -gt 1 ; thenlog_failure_msg "Multiple MySQL running but PID file could not be found ($mysqld_pid)"exit 5elif test -z $mysqld_pid ; then if test "$use_mysqld_safe" = "0" ; then lockfile=/var/lock/subsys/mysqlmanagerelselockfile=/var/lock/subsys/mysqlfi if test -f $lockfile ; then log_failure_msg "MySQL is not running, but lock exists"exit 2fi log_failure_msg "MySQL is not running"exit 3elselog_failure_msg "MySQL is running but PID file could not be found"exit 4fifi;;*)# usageecho "Usage: $0  {start|stop|restart|reload|force-reload|status}  [ MySQL server options ]"exit 1;;esacexit 0</pre></div></li><li><p>php环境运行脚本： <code>php-fpm.sh</code></p><div class="org-src-container"><pre class="src src-sh">#!/bin/sh#PHP_PATH=/userdisk/data/opt/usr/local/developDESC="php-fpm daemon"NAME=php-fpm# php-fpmDAEMON=$PHP_PATH/sbin/$NAMECONFIGFILE=$PHP_PATH/etc/php-fpm.confPIDFILE=/var/run/$NAME.pidrh_start() {$DAEMON -c $PHP_PATH/etc -y $CONFIGFILE || echo -n " already running"}rh_stop() {kill -QUIT `cat $PIDFILE` || echo -n " not running"}case "$1" instart)echo -n "Starting $DESC: $NAME"rh_startecho ".";;stop)echo -n "Stopping $DESC: $NAME"rh_stopecho ".";;restart)echo -n "Restarting $DESC: $NAME"rh_stopsleep 1rh_startecho ".";;*)echo "Usage: $SCRIPTNAME {start|stop|restart}" &gt;&amp;2exit 3;;esacexit 0</pre></div></li></ol></div></div><div id="outline-container-orgheadline189" class="outline-5"><h5 id="orgheadline189"><span class="section-number-5">6.2.6.4</span> 创建数据库根用户帐号与http帐号</h5><div class="outline-text-5" id="text-6-2-6-4"><p>数据库帐号用于登录和操作数据库，http帐号是访问某些Owncloud安装目录子目录数据所需要的帐号。</p><p>该过程只需执行一次，如下：</p><div class="org-src-container"><pre class="src src-sh">$./mysql.server start$mysqladmin -u root password '&lt;根用户密码&gt;'$vim /etc/passwd...添加www-data用户类似如下...www-data:x:1024:1024:www-data:/root:/bin/ash$vim /etc/group...添加www-data组类似如下...www-data:x:1024:</pre></div></div></div><div id="outline-container-orgheadline190" class="outline-5"><h5 id="orgheadline190"><span class="section-number-5">6.2.6.5</span> readme</h5><div class="outline-text-5" id="text-6-2-6-5"><pre class="example">(one time)1. ./install.sh3. ./mysql.server start(one time)4. mysqladmin -u root password '&lt;6+&gt;'(one time)5. edit/etc/passwdwww-data:x:1024:1024:www-data:/root:/bin/ash/etc/groupwww-data:x:1024:6. ./php-fpm.sh start(one time every two year)7.opensslexport OPENSSL_CONF=/userdisk/data/opt/usr/local/develop/ssl/openssl.cnfopenssl genrsa -des3 -out server.key 1024openssl req -new -key server.key -out server.csrcp server.key server.key.orgopenssl rsa -in server.key.org -out server.keyopenssl x509 -req -days 730 -in server.csr -signkey server.key -out server.crt8. ./nginx.sh startmkdir /userdisk/data/web/mycloud/oc_datamkdir /userdisk/data/usr/local/develop/tmpchmod -R 777 /userdisk/data/usr/local/develop/tmp</pre></div></div></div></div><div id="outline-container-orgheadline57" class="outline-3"><h3 id="orgheadline57"><a id="ID-8a9f336b-8b34-4a69-966d-d8b33c3d9e60"></a><span class="section-number-3">6.3</span> 参考资料</h3><div class="outline-text-3" id="text-6-3"><p>云存储相关：seafile:开源，部分收费（比如目录选择性同步、搜索、文件读写控制）,服务还不错，界面比较简陋。<a href="https://www.seafile.com/download/" target="_blank" rel="noopener">https://www.seafile.com/download/</a></p><p>*own cloud：开源，免费，服务一般，有人反映卡，功能齐全，支持平台多。<a href="https://owncloud.org/" target="_blank" rel="noopener">https://owncloud.org/</a></p><p>SparkleShare（开源免费，不支持IOS，使用git做为引擎，中文支持差？）<a href="http://www.oschina.net/p/sparkleshare/similar_projects?lang=25&amp;sort=time" target="_blank" rel="noopener">http://www.oschina.net/p/sparkleshare/similar_projects?lang=25&amp;sort=time</a></p><p>云存储架构cloudstack vs openstack<a href="http://infosec.blog.51cto.com/226250/1565179" target="_blank" rel="noopener">http://infosec.blog.51cto.com/226250/1565179</a></p><p>介绍Linux下常见的开源云平台&amp;&amp;存储服务<a href="http://blog.csdn.net/gatieme/article/details/44977487" target="_blank" rel="noopener">http://blog.csdn.net/gatieme/article/details/44977487</a></p><p>对比sparkleshare、owncloud、seafile<a href="https://www.reddit.com/r/linux/comments/1efdnd/sparkleshare_owncloud_or_seafile/" target="_blank" rel="noopener">https://www.reddit.com/r/linux/comments/1efdnd/sparkleshare_owncloud_or_seafile/</a></p><p>三大WEB服务器对比分析<a href="http://hai0378.iteye.com/blog/1860220" target="_blank" rel="noopener">http://hai0378.iteye.com/blog/1860220</a></p><p>openssl key的生成<a href="http://www.poluoluo.com/server/201401/261178.html" target="_blank" rel="noopener">http://www.poluoluo.com/server/201401/261178.html</a></p><p>nginx配置相关<a href="http://www.nginx.cn/591.html" target="_blank" rel="noopener">http://www.nginx.cn/591.html</a></p><p>文件同步工具：<a href="http://alternativeto.net/software/goodsync/" target="_blank" rel="noopener">http://alternativeto.net/software/goodsync/</a></p><p><a href="http://www.pc6.com/pc/wenjiantongburj/" target="_blank" rel="noopener">http://www.pc6.com/pc/wenjiantongburj/</a></p><p>小米路由安装nginx：<a href="http://www.miui.com/thread-2592877-1-1.html" target="_blank" rel="noopener">http://www.miui.com/thread-2592877-1-1.html</a></p><p>小米路由器交叉编译php：<a href="http://bbs.xiaomi.cn/t-11228942" target="_blank" rel="noopener">http://bbs.xiaomi.cn/t-11228942</a></p><p>小米开放平台<a href="http://www.miwifi.com/miwifi_open.html" target="_blank" rel="noopener">http://www.miwifi.com/miwifi_open.html</a></p></div></div></div><div id="outline-container-orgheadline58" class="outline-2"><h2 id="orgheadline58"><a id="ID-41a0f28c-65fa-4092-93e1-1562271e1702"></a><span class="section-number-2">7</span> 小米路由器上使用 <code>git</code> 版本控制系统</h2><div class="outline-text-2" id="text-7"></div><div id="outline-container-orgheadline59" class="outline-3"><h3 id="orgheadline59"><span class="section-number-3">7.1</span> 下载 <code>git</code> 源码</h3><div class="outline-text-3" id="text-7-1"><div class="org-src-container"><pre class="src src-sh">$wget --no-check-certificate -c https://codeload.github.com/git/git/tar.gz/v2.8.2</pre></div></div></div><div id="outline-container-orgheadline60" class="outline-3"><h3 id="orgheadline60"><span class="section-number-3">7.2</span> 非交叉编译 <code>git</code> 过程</h3><div class="outline-text-3" id="text-7-2"><p>先了解一下非交叉编译的过程，再进行交叉编译。</p><ol class="org-ol"><li><p>生成配置脚本</p><div class="org-src-container"><pre class="src src-sh">$tar -xzvf git-2.8.2.tar.gz$cd git-2.8.2$make configure$./configure --prefix=/usr/local/develop --without-tcltk</pre></div><p>执行完 <code>configure</code> 之后，会生成一个 <code>config.mak.autogen</code> 文件， <code>Makefile</code> 中会包含这个文件。</p></li><li><p>手动配置编译模块</p><p>根据 <code>INSTALL</code> 介绍，按需配置需要需掉的编译模块，修改 <code>config.mak.autogen</code></p><div class="org-src-container"><pre class="src src-sh">$vim config.mak.autogen...####CustomNO_PERL=YesPlease#NO_TCLTK=YesPlease$make all</pre></div><p><code>git</code> 有些功能还是需要外部依赖的，这里，将 <code>perl</code> 和 <code>tcltk</code> 相关内容去掉。会影响的功能，参见 <code>INSTALL</code> 介绍。</p><p>实际执行完 <code>make all</code> 后，就可在当前目录中运行 <code>./git</code> 进行测试了。</p></li></ol></div></div><div id="outline-container-orgheadline61" class="outline-3"><h3 id="orgheadline61"><span class="section-number-3">7.3</span> 交叉编译 <code>git</code></h3><div class="outline-text-3" id="text-7-3"></div><div id="outline-container-orgheadline62" class="outline-4"><h4 id="orgheadline62"><span class="section-number-4">7.3.1</span> 配置交叉编译环境路径</h4><div class="outline-text-4" id="text-7-3-1"><p>参考：<a href="#orgheadline76">小米路由器交叉编译环境配置</a></p></div></div><div id="outline-container-orgheadline63" class="outline-4"><h4 id="orgheadline63"><span class="section-number-4">7.3.2</span> 生成配置脚本</h4><div class="outline-text-4" id="text-7-3-2"><div class="org-src-container"><pre class="src src-sh">$tar -xzvf git-2.8.2.tar.gz$cd git-2.8.2$make configure$./configure --host=arm-xiaomi-linux-uclibcgnueabi --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --with-curl=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib --without-tcltk CC=arm-xiaomi-linux-uclibcgnueabi-gcc LDFLAGS=-L/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib CFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include CPPFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include</pre></div><p>执行完 <code>configure</code> 之后，会生成一个 <code>config.mak.autogen</code> 文件， <code>Makefile</code> 中会包含这个文件。</p><p>注意，运行 <code>configure</code> 之前，需要如下修改 <code>configure</code> 脚本，否则会出现无法运行测试文件相关的错误。修改如下：</p><div class="org-src-container"><pre class="src src-sh">$vim configure...6250 if test "$cross_compiling" = yes; then :                                                                                                         6251     echo "skip corss_compiling test";6252 #  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" &gt;&amp;56253 #$as_echo "$as_me: error: in \`$ac_pwd':" &gt;&amp;2;}6254 #as_fn_error $? "cannot run test program while cross compiling6255 #See \`config.log' for more details" "$LINENO" 5; }...6300 if test "$cross_compiling" = yes; then :6301     echo "skip corss_compiling test";                                                                                                            6302 #  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" &gt;&amp;56303 #$as_echo "$as_me: error: in \`$ac_pwd':" &gt;&amp;2;}6304 #as_fn_error $? "cannot run test program while cross compiling6305 #See \`config.log' for more details" "$LINENO" 5; }6306 else...</pre></div></div></div><div id="outline-container-orgheadline64" class="outline-4"><h4 id="orgheadline64"><span class="section-number-4">7.3.3</span> 编译、安装</h4><div class="outline-text-4" id="text-7-3-3"><div class="org-src-container"><pre class="src src-sh">$make all$make install</pre></div><p>至此， <code>git</code> 的交叉编译完成，部署到服务器添加环境变量后上即可运行。</p><p>注意，编译之前需要修改 <code>Makefile</code> 使用交叉编译工具链</p><div class="org-src-container"><pre class="src src-sh">$vim Makefile...439 CC = arm-xiaomi-linux-uclibcgnueabi-cc                                                                                                           440 AR = arm-xiaomi-linux-uclibcgnueabi-ar...</pre></div></div></div><div id="outline-container-orgheadline65" class="outline-4"><h4 id="orgheadline65"><span class="section-number-4">7.3.4</span> 部署与配置</h4><div class="outline-text-4" id="text-7-3-4"></div><div id="outline-container-orgheadline192" class="outline-5"><h5 id="orgheadline192"><span class="section-number-5">7.3.4.1</span> 部署路径</h5><div class="outline-text-5" id="text-7-3-4-1"><p>由于编译、安装时本地目录与部署的目录不同，运行的时候可能会出现各种问题。建议本地安装的目录和部署目录尽量一致。(考虑 <code>chroot</code> ?)</p></div><ol class="org-ol"><li><a id="orgheadline191"></a>实际情况<br><div class="outline-text-6" id="text-7-3-4-1-1"><p>假设编译时安装的路径为： <code>/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop</code></p><p>部署的路径为： <code>/userdisk/data/opt/usr/local/develop</code></p></div></li></ol></div><div id="outline-container-orgheadline194" class="outline-5"><h5 id="orgheadline194"><span class="section-number-5">7.3.4.2</span> 配置</h5><div class="outline-text-5" id="text-7-3-4-2"><p>根据 <code>man</code> 手册，运行: <code>git config --system xxx</code> 会读写 <code>/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/etc</code> 路径（小米路由器上不存在）</p><p>运行: <code>git config --global xxx</code> 会读写 <code>~/.gitconfig</code> (小米路由器只读)</p><p>运行: <code>git config xxx</code> 会读写 <code>.git/config</code>, 对于第一次运行的来说，不存在这个路径。</p><p>意图最初的配置文件在 <code>/userdisk/data/opt/usr/local/develop/etc/gitconfig</code> 读取，（因为无法操作 <code>system</code> 的以及 <code>global</code> 的配置）</p><p>所以，有几个方法在第一次运行git时指定配置：</p><ol class="org-ol"><li><p>配置 <code>GIT_CONFIG</code></p><div class="org-src-container"><pre class="src src-sh">$export GIT_CONFIG=/userdisk/data/opt/usr/local/develop/etc/gitconfig$git config init.templatedir /userdisk/data/opt/usr/local/develop/share/git-core/templates</pre></div><p>但是这样会修改已有的 <code>local</code> 的 config, 行为，使之在已有git repo中运行时，不会修改其 <code>.git/config</code></p></li><li><p>命令行中指定路径</p><div class="org-src-container"><pre class="src src-sh">$git -C &lt;config path&gt; xxx</pre></div><p>但是这样默认会在路径中寻找 <code>config</code> 的文件，实践似乎不管用。</p></li><li><p>命令行指定选项</p><div class="org-src-container"><pre class="src src-sh">$git -c init.templatedir=/userdisk/data/opt/usr/local/develop/share/git-core/templates clone xxx</pre></div></li><li><p>开启标准路径文件写权限。</p><p>执行下述命令即可：</p><div class="org-src-container"><pre class="src src-sh">$mount -o remount -rw /</pre></div><p>参考：<a href="#orgheadline78">开启ssh后无法获得系统文件夹写入权限?</a></p></li></ol><p>注意了，第一次运行，一定要指定好 <code>git config init.templatedir /userdisk/data/opt/usr/local/develop/share/git-core/templates</code></p></div><ol class="org-ol"><li><a id="orgheadline193"></a>实际过程<br><div class="outline-text-6" id="text-7-3-4-2-1"><p>当已经有了一个仓库之时，直接用 <code>git config</code> 为相应的本地库设置好那些需要设置的选项，默认系统最好设置如下内容如：</p><div class="org-src-container"><pre class="src src-sh">#mount -o remount -rw /#vim /etc/profile #custom export PATH=$PATH:/userdisk/data/opt/usr/local/develop/bin #export PATH=$PATH:/userdisk/data/opt/usr/local/develop/sbin #export PATH=$PATH:/userdisk/data/opt/usr/local/develop/libexec export PATH=$PATH:/userdisk/data/opt/usr/local/develop/libexec/git-core export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/userdisk/data/opt/usr/local/develop/lib #export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/userdisk/data/opt/usr/local/develop/lib/mysql#. /etc/profile#ln -s /userdisk/data/opt/usr/local/develop/libexec/git-core/* /usr/bin/#git config --global init.templatedir /userdisk/data/opt/usr/local/develop/share/git-core/templates#git config --global http.sslVerify false#git config --global user.name "quietheart@xiaomi"#git config --global user.email "vaqeteart@qq.com"#git config --global receive.denyNonFastforwards true#git config --global receive.denycurrentbranch ignore</pre></div><p>这些信息保存在 <code>~/.gitconfig</code> 中。</p></div></li></ol></div></div><div id="outline-container-orgheadline66" class="outline-4"><h4 id="orgheadline66"><span class="section-number-4">7.3.5</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[%]</code><code>[/]</code></h4><div class="outline-text-4" id="text-7-3-5"><ul class="org-ul"><li>State "WAIT/FORWARD" from              <span class="timestamp-wrapper"><span class="timestamp">[2016-08-09 二 15:36] </span></span> <br>wait for all done.</li></ul></div><div id="outline-container-orgheadline195" class="outline-5"><h5 id="orgheadline195"><span class="section-number-5">7.3.5.1</span> <span class="done DONE">DONE</span> fatal: Unable to find remote helper for 'https'</h5><div class="outline-text-5" id="text-7-3-5-1"><ul class="org-ul"><li>State "DONE"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-07-27 三 09:24]</span></span></li></ul><p>添加路径: <code>export PATH=$PATH:/userdisk/data/opt/usr/local/develop/libexec/git-core</code></p></div></div><div id="outline-container-orgheadline196" class="outline-5"><h5 id="orgheadline196"><span class="section-number-5">7.3.5.2</span> <span class="done DONE">DONE</span> warning: templates not found /home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/share/git-core/templates</h5><div class="outline-text-5" id="text-7-3-5-2"><ul class="org-ul"><li>State "DONE"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-07-27 三 09:24]</span></span></li></ul><p>命令中指定templates： <code>git -c init.templatedir=/userdisk/data/opt/usr/local/develop/share/git-core/templates clone https://vaqeteart@bitbucket.org/vaqeteart/quietheart.git</code>or in config file:</p><pre class="example">[init]     templatedir = /userdisk/data/opt/usr/local/develop/share/git-core/templates</pre></div></div><div id="outline-container-orgheadline197" class="outline-5"><h5 id="orgheadline197"><a id="ID-c7960eeb-4799-49d8-93f6-53c696cb1303"></a><span class="section-number-5">7.3.5.3</span> <span class="done DONE">DONE</span> Protocol "https" not supported or disabled in libcurl</h5><div class="outline-text-5" id="text-7-3-5-3"><ul class="org-ul"><li>State "DONE"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-07-27 三 09:24]</span></span></li></ul><p>编译 <code>libcurl</code> 之时需要加入相关选项：</p><div class="org-src-container"><pre class="src src-sh">./configure --host=arm-xiaomi-linux-uclibcgnueabi --enable-static --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --enable-http --with-ssl=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/ CC=arm-xiaomi-linux-uclibcgnueabi-gcc</pre></div><p>之后再编译 <code>git</code></p><p>注意，编译 <code>libcurl</code> 如果出现无法链接 <code>libssl.a</code>, 需要加入 <code>-fPIC</code> 重新编译 <code>openssl</code>, 编译完成之后，运行 <code>curl --version</code> 即可看到支持不支持 <code>https</code> 。</p></div></div><div id="outline-container-orgheadline198" class="outline-5"><h5 id="orgheadline198"><span class="section-number-5">7.3.5.4</span> xiaomi路由器上建立一个本地仓库后，最好用什么配置做为默认的本地仓库配置？</h5><div class="outline-text-5" id="text-7-3-5-4"><p>如下：</p><div class="org-src-container"><pre class="src src-sh">$git config init.templatedir /userdisk/data/opt/usr/local/develop/share/git-core/templates$git config http.sslVerify false$git config receive.denycurrentbranch ignore</pre></div></div></div><div id="outline-container-orgheadline199" class="outline-5"><h5 id="orgheadline199"><span class="section-number-5">7.3.5.5</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> SSL certificate problem: unable to get local issuer certificate</h5><div class="outline-text-5" id="text-7-3-5-5"><ul class="org-ul"><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-08-09 二 15:34] </span></span> <br>wair for more secury method.</li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-07-27 三 09:24]</span></span></li><li><p>方法1：命令行中禁用 <code>https</code> 验证（不安全）</p><div class="org-src-container"><pre class="src src-sh">$git -c init.templatedir=/userdisk/data/opt/usr/local/develop/share/git-core/templates -c http.sslVerify=false clone https://vaqeteart@bitbucket.org/vaqeteart/quietheart.git</pre></div></li><li><p>方法2：环境变量禁用 <code>https</code> 验证（不安全）</p><div class="org-src-container"><pre class="src src-sh">$export GIT_SSL_NO_VERIFY=true$git -c init.templatedir=/userdisk/data/opt/usr/local/develop/share/git-core/templates clone https://github.com/vaqeteart/vaqeteart.github.io</pre></div></li><li>方法3：ssh-keygen??</li></ul></div></div><div id="outline-container-orgheadline200" class="outline-5"><h5 id="orgheadline200"><span class="section-number-5">7.3.5.6</span> <span class="done DONE">DONE</span> 其他主机如何clone库？</h5><div class="outline-text-5" id="text-7-3-5-6"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-08-09 二 15:35]</span></span></li><li>State "NEXT"       from "DONE"       <span class="timestamp-wrapper"><span class="timestamp">[2016-08-03 三 19:37]</span></span></li><li>State "DONE"       from "DONE"       <span class="timestamp-wrapper"><span class="timestamp">[2016-08-03 三 19:37]</span></span></li><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-07-28 四 17:04]</span></span></li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-07-28 四 17:02]</span></span></li></ul><p>如果开启了ssh功能，假设小米路由器上的git库路径为 <code>/path/to/gitrepo</code>, 账户为 <code>user</code>, 密码为 <code>passwd</code>, 那么其它主机只需要：</p><div class="org-src-container"><pre class="src src-sh">$git clone user@ip:/path/to/gitrepo .....根据提示输入密码passwd....</pre></div><p>由于小米路由器上的ssh端口做了映射，所以clone之前，先将主机上的 <code>.ssh/config</code> 中加入类似如下：</p><pre class="example">Host xiaomiHostName &lt;主机域名或者ip&gt;User userPort &lt;被映射的端口&gt;IdentityFile ~/.ssh/id_rsa</pre><p>之后只需如下进行：</p><div class="org-src-container"><pre class="src src-sh">$git clond ssh://xiaomi:&lt;path&gt;</pre></div></div></div><div id="outline-container-orgheadline201" class="outline-5"><h5 id="orgheadline201"><span class="section-number-5">7.3.5.7</span> <span class="done DONE">DONE</span> <code>ash: git-upload-pack: not found</code></h5><div class="outline-text-5" id="text-7-3-5-7"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-08-09 二 15:35]</span></span></li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-08-03 三 19:37]</span></span></li></ul><p>主要是运行 <code>git-upload-pack</code> 的路径不对。</p><ol class="org-ol"><li>命令行中指定</li></ol><div class="org-src-container"><pre class="src src-sh">$git clone --upload-pack "/userdisk/data/opt/usr/local/develop/bin/git-upload-pack" ssh://xxx</pre></div><p>或在服务器上，为 <code>git-upload-pack</code> 建立软链接，类似如下：</p><div class="org-src-container"><pre class="src src-sh">$ln -s /userdisk/data/opt/usr/local/develop/bin/git-upload-pack /usr/bin</pre></div><p>参考:</p><p><a href="http://stackoverflow.com/questions/11128464/git-upload-pack-command-not-found" target="_blank" rel="noopener">http://stackoverflow.com/questions/11128464/git-upload-pack-command-not-found</a></p><p><a href="http://www.linuxidc.com/Linux/2012-07/66270.htm" target="_blank" rel="noopener">http://www.linuxidc.com/Linux/2012-07/66270.htm</a></p></div></div><div id="outline-container-orgheadline202" class="outline-5"><h5 id="orgheadline202"><span class="section-number-5">7.3.5.8</span> <span class="done DONE">DONE</span> error: cannot run pack-objects: No such file or directory</h5><div class="outline-text-5" id="text-7-3-5-8"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-08-09 二 15:35]</span></span></li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-08-08 一 14:17]</span></span></li></ul><p>类似前面，为全部git组件创建软链接的方式最简单（创建之前最好能检查一下已有的）：</p><div class="org-src-container"><pre class="src src-sh">$ln -s /userdisk/data/opt/usr/local/develop/libexec/git-core/* /usr/bin</pre></div></div></div><div id="outline-container-orgheadline203" class="outline-5"><h5 id="orgheadline203"><span class="section-number-5">7.3.5.9</span> <span class="done DONE">DONE</span> <code>error: failed to push some refs to 'ssh://xiaomi</code></h5><div class="outline-text-5" id="text-7-3-5-9"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-08-09 二 15:35]</span></span></li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-08-08 一 14:17]</span></span></li></ul><p>远程客户端运行 <code>git push</code> 之时出现，应当在服务端为当前git仓库打开允许 <code>push</code> 的选项，如下：</p><div class="org-src-container"><pre class="src src-sh">$git config receive.denycurrentbranch ignore</pre></div><p>推送之后，到服务端上（xiaomi路由器上），可用 <code>git log</code> 查看到远端的修改，但是其工作目录中如果包含工作文件的话，推送的内容不会反映到工作目录中。</p><p>这个时候，应当将工作目录中的内容备份，然后:</p><div class="org-src-container"><pre class="src src-sh">$git reset --hard</pre></div></div></div></div></div></div><div id="outline-container-orgheadline67" class="outline-2"><h2 id="orgheadline67"><span class="section-number-2">8</span> Misc</h2><div class="outline-text-2" id="text-8"></div><div id="outline-container-orgheadline68" class="outline-3"><h3 id="orgheadline68"><a id="ID-96bd1991-9c0f-4869-b406-c6eced64bd6b"></a><span class="section-number-3">8.1</span> 小米路由器添加ddns</h3><div class="outline-text-3" id="text-8-1"><p>ddns可以实现当ip地址不固定的时候，也能通过域名正确访问到相应的路由器。</p><p>大致原理是需要有一个ddns服务提供商，然后路由器定时、及时地将ip地址变化信息及时更新给ddns服务商，ddns服务商将域名与最新的ip地址相对应。</p><p>在路由器web管理界面上有相应的选项，建议用花生壳提供的动态路由。现在花生壳注册用户名和密码，获取到一个免费的域名，再将账户信息填写到路由器中ddns的相应位置即可。</p></div></div><div id="outline-container-orgheadline69" class="outline-3"><h3 id="orgheadline69"><a id="ID-f5bb8834-de46-4077-bddc-e0a15b1dc790"></a><span class="section-number-3">8.2</span> 小米路由器修改ssh启动的欢迎语</h3><div class="outline-text-3" id="text-8-2"><p>修改 <code>/etc/banner</code> 文件。</p></div></div><div id="outline-container-orgheadline70" class="outline-3"><h3 id="orgheadline70"><span class="section-number-3">8.3</span> 云存储相关资料</h3><div class="outline-text-3" id="text-8-3"><p>一个比较全的列表：<a href="http://superuser.com/questions/31512/how-to-synchronize-the-home-folder-between-multiple-computers" target="_blank" rel="noopener">http://superuser.com/questions/31512/how-to-synchronize-the-home-folder-between-multiple-computers</a></p><p>oschina中的列表：<a href="http://m.oschina.net/project/tag/104/storage" target="_blank" rel="noopener">http://m.oschina.net/project/tag/104/storage</a></p><p>非常全的各类工具（云存储、云计算、云业务等只是其中的一部分）<a href="https://github.com/jobbole/awesome-sysadmin-cn" target="_blank" rel="noopener">https://github.com/jobbole/awesome-sysadmin-cn</a></p><p>dvcs-autosync<a href="https://github.com/rmayr/dvcs-autosync/blob/master/README" target="_blank" rel="noopener">https://github.com/rmayr/dvcs-autosync/blob/master/README</a>python实现，具体功能未知，不直观。</p><p>git-annex貌似用一个比较另类的语言实现：</p><p><a href="http://www.techug.com/git-annex-lfs-bigfiles" target="_blank" rel="noopener">http://www.techug.com/git-annex-lfs-bigfiles</a></p></div></div></div><div id="outline-container-orgheadline71" class="outline-2"><h2 id="orgheadline71"><span class="section-number-2">9</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[12/25]</code> <code>[48%]</code></h2><div class="outline-text-2" id="text-9"><ul class="org-ul"><li>State "WAIT/FORWARD" from              <span class="timestamp-wrapper"><span class="timestamp">[2016-04-07 四 18:52] </span></span> <br>wait for all resolved.</li></ul></div><div id="outline-container-orgheadline72" class="outline-3"><h3 id="orgheadline72"><span class="section-number-3">9.1</span> <span class="done DONE">DONE</span> 小米路由如何开启ssh?</h3><div class="outline-text-3" id="text-9-1"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-04-16 六 18:21]</span></span></li><li>State "WAIT/FORWARD" from "DONE"       <span class="timestamp-wrapper"><span class="timestamp">[2016-04-07 四 18:58] </span></span> <br>等待整理。</li><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-03-14 一 17:12]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-03-02 三 14:56]</span></span></p><hr><p>开启ssh可以本地局域网登录的方法，参考：<a href="#orgheadline1">小米路由器ssh开启</a></p><p>官网：<a href="http://www.miwifi.com/miwifi_open.html" target="_blank" rel="noopener">http://www.miwifi.com/miwifi_open.html</a></p><p>外网访问参考：<a href="http://jingyan.baidu.com/article/9113f81b3a5d982b3314c74a.html?st=3&amp;net_type=2&amp;bd_page_type=1&amp;os=0&amp;showimg=1&amp;rst=6" target="_blank" rel="noopener">http://jingyan.baidu.com/article/9113f81b3a5d982b3314c74a.html?st=3&amp;net_type=2&amp;bd_page_type=1&amp;os=0&amp;showimg=1&amp;rst=6</a></p><p>如果实现公网访问，需要开启防火墙端口。</p></div><div id="outline-container-orgheadline73" class="outline-4"><h4 id="orgheadline73"><span class="section-number-4">9.1.1</span> 下面内容仅参考暂不用</h4><div class="outline-text-4" id="text-9-1-1"><p>小米路由器mini如何设置外网访问ssh</p><p>关键是修改 <code>/etc/config/firewall</code></p><pre class="example"># port redirect of remapped ssh port (22001) on wanconfig redirect 'myssh'       option src              wan       option src_dport        22001       option dest             lan       option dest_port        22       option proto            tcp</pre><p>重启防火墙 <code>/etc/init.d/firewall restart</code></p><p>登录： <code>ssh -p 10022 root@&lt;ip&gt;</code></p><p>远程传输： <code>scp -P 10022 &lt;file&gt; root@&lt;ip&gt;:&lt;path&gt;</code></p></div></div></div><div id="outline-container-orgheadline74" class="outline-3"><h3 id="orgheadline74"><span class="section-number-3">9.2</span> <span class="done DONE">DONE</span> 小米路由器防火墙如何配置?</h3><div class="outline-text-3" id="text-9-2"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-04-13 三 19:35]</span></span></li><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-03-28 一 11:27] </span></span> <br>wait for more organize.</li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2016-03-15 二 09:38]</span></span></li></ul><p>参见：<a href="#orgheadline12">小米路由器防火墙配置</a></p></div></div><div id="outline-container-orgheadline75" class="outline-3"><h3 id="orgheadline75"><span class="section-number-3">9.3</span> <span class="done DONE">DONE</span> 小米路由如何添加域名访问？</h3><div class="outline-text-3" id="text-9-3"><ul class="org-ul"><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-04-13 三 19:42]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-03-02 三 14:56]</span></span></p><hr><p>首先申请dns域名，然后将之与ip关联，但是由于ip地址不固定，所以需要使用ddns服务。参见：<a href="#orgheadline68">小米路由器添加ddns</a></p></div></div><div id="outline-container-orgheadline76" class="outline-3"><h3 id="orgheadline76"><a id="ID-c3532fb4-fe93-448b-be0c-a7f443999174"></a><span class="section-number-3">9.4</span> <span class="done DONE">DONE</span> 小米路由器交叉编译环境配置</h3><div class="outline-text-3" id="text-9-4"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-08-08 一 17:23]</span></span></li><li>State "WAIT/FORWARD" from "DONE"       <span class="timestamp-wrapper"><span class="timestamp">[2016-08-08 一 11:42] </span></span> <br>wait for arrange.</li><li>State "DONE"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-07-26 二 16:59]</span></span></li></ul><p>参考：<a href="#orgheadline24">小米路由器交叉编译环境配置</a></p></div></div><div id="outline-container-orgheadline77" class="outline-3"><h3 id="orgheadline77"><span class="section-number-3">9.5</span> <span class="done DONE">DONE</span> 如何使用软件管理工具管理小米路由上的软件?</h3><div class="outline-text-3" id="text-9-5"><ul class="org-ul"><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-04-16 六 18:19]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-03-04 五 18:28]</span></span></p><hr><p>小米路由器是openwrt的系统，可借助opkg工具，参考：<a href="#orgheadline16">使用opkg在小米路由器软件管理</a></p></div></div><div id="outline-container-orgheadline78" class="outline-3"><h3 id="orgheadline78"><a id="ID-c4e46793-af9e-4f13-ba43-f609a121c196"></a><span class="section-number-3">9.6</span> <span class="done DONE">DONE</span> 开启ssh后无法获得系统文件夹写入权限?</h3><div class="outline-text-3" id="text-9-6"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-08-08 一 17:25]</span></span></li><li>State "WAIT/FORWARD" from              <span class="timestamp-wrapper"><span class="timestamp">[2016-08-05 五 17:21] </span></span> <br>wait for more.</li></ul><p>参考：<a href="#orgheadline11">访问文件系统权限</a></p></div></div><div id="outline-container-orgheadline79" class="outline-3"><h3 id="orgheadline79"><span class="section-number-3">9.7</span> <span class="done DONE">DONE</span> 在小米路由器上搭建基于LNMP的Owncloud云平台</h3><div class="outline-text-3" id="text-9-7"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-08-08 一 17:37]</span></span></li><li>State "WAIT/FORWARD" from "DONE"       <span class="timestamp-wrapper"><span class="timestamp">[2016-04-16 六 16:45] </span></span> <br>wait for arrange.</li><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-04-16 六 16:45]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-03-04 五 19:55]</span></span></p><hr><p>注，Owncloud功能比较全面，但是也相对不是很稳定，而且感觉消耗资源。对于资源紧张的小米路由器，目前已经不考虑用其做为主要云服务器。暂时用git来满足分布访问的需求。直接考虑的方式，获取有更好的能替代Owncloud的方式。</p><p>参考：<a href="#orgheadline37">在小米路由器上搭建基于LNMP的Owncloud云平台</a></p></div></div><div id="outline-container-orgheadline80" class="outline-3"><h3 id="orgheadline80"><span class="section-number-3">9.8</span> <span class="done CANCEL">CANCEL</span> Myowncloud</h3><div class="outline-text-3" id="text-9-8"><ul class="org-ul"><li>State "CANCEL"     from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-08-08 一 17:33] </span></span> <br>Owncloud不稳定，数据虽然不会丢失，但是有时也很麻烦，已经不采用，此处仅供参考。</li><li>State "WAIT/FORWARD" from              <span class="timestamp-wrapper"><span class="timestamp">[2016-08-08 一 17:32] </span></span> <br>wait for arrange.</li></ul><p>注，Owncloud功能比较全面，但是也相对不是很稳定，而且感觉消耗资源。对于资源紧张的小米路由器，目前已经不考虑用其做为主要云服务器。暂时用git来满足分布访问的需求。直接考虑的方式，获取有更好的能替代Owncloud的方式。</p></div><div id="outline-container-orgheadline81" class="outline-4"><h4 id="orgheadline81"><span class="section-number-4">9.8.1</span> site: &lt;暂不可用&gt;</h4></div><div id="outline-container-orgheadline82" class="outline-4"><h4 id="orgheadline82"><span class="section-number-4">9.8.2</span> step</h4><div class="outline-text-4" id="text-9-8-2"></div><div id="outline-container-orgheadline210" class="outline-5"><h5 id="orgheadline210"><span class="section-number-5">9.8.2.1</span> 安装apache(pc)</h5><div class="outline-text-5" id="text-9-8-2-1"><p>这里，安装apache之前需要安装组件：apr,apr-util,pcre，最后再安装httpd。</p><p>这里，发现nginx更适合，所以不用apache了。</p></div><ol class="org-ol"><li><a id="orgheadline204"></a>下载<br><div class="outline-text-6" id="text-9-8-2-1-1"><div class="org-src-container"><pre class="src src-sh">$ wget -c http://apache.opencas.org//httpd/httpd-2.4.18.tar.bz2$ wget -c http://mirrors.cnnic.cn/apache//apr/apr-1.5.2.tar.bz2$ wget -c http://apache.opencas.org//apr/apr-util-1.5.4.tar.gz$ wget -c ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.38.tar.gz</pre></div></div></li><li><a id="orgheadline205"></a>安装<br><div class="outline-text-6" id="text-9-8-2-1-2"><div class="org-src-container"><pre class="src src-sh">$sudo ./configure --prefix=/usr/local/development/apr-1.5.2$sudo make$sudo make install$sudo ./configure --prefix=/usr/local/development/apr-util-1.5.4 --with-apr=/usr/local/development/apr-1.5.2$sudo make$sudo make install$sudo ./configure --prefix=/usr/local/development/pcre-8.38 --with-apr=/usr/local/development/apr-1.5.2 --with-apr-util=/usr/local/development/apr-util-1.5.4$sudo make$sudo make install$sudo ./configure --prefix=/usr/local/development/httpd-2.4.18 --enable-so --enable-mods-shared=all --with-apr=/usr/local/development/apr-1.5.2 --with-apr-util=/usr/local/development/apr-util-1.5.4 --with-pcre=/usr/local/development/pcre-8.38$sudo make$sudo make install$sudo ln -s /usr/local/development/httpd-2.4.18/bin/apachectl /etc/init.d</pre></div></div></li><li><a id="orgheadline206"></a>启动<br><div class="outline-text-6" id="text-9-8-2-1-3"><div class="org-src-container"><pre class="src src-sh">$sudo /etc/init.d/apachectl start</pre></div></div></li><li><a id="orgheadline207"></a>调试<br><div class="outline-text-6" id="text-9-8-2-1-4"><p>如果启动出现如下两个错误：</p><pre class="example">miracle@miracle-Zhaoyang-E49:~/myinstalled/httpd-2.4.18$ sudo /etc/init.d/apachectl startAH00558: httpd: Could not reliably determine the server's fully qualified domain name, using 127.0.1.1. Set the 'ServerName' directive globally to suppress this message(98)Address already in use: AH00072: make_sock: could not bind to address 0.0.0.0:80no listening sockets available, shutting downAH00015: Unable to open logs</pre><p>那么第一个问题：修改 <code>/usr/local/development/httpd-2.4.18/conf/httpd.conf</code>, 添加 <code>ServerName localhost:80</code>.第二个问题：应该是端口被占用，可能启动了其他apache，可以如下修改  <code>/usr/local/development/httpd-2.4.18/conf/httpd.conf</code></p><pre class="example">Listen 90ServerName localhost:90</pre></div></li><li><a id="orgheadline208"></a>访问<br><div class="outline-text-6" id="text-9-8-2-1-5"><p>基于如上配置，打开浏览器，地址栏键入 <code>localhost:90</code> 看到 "It works!" 即表示成功。</p></div></li><li><a id="orgheadline209"></a>配置<br></li></ol></div><div id="outline-container-orgheadline221" class="outline-5"><h5 id="orgheadline221"><span class="section-number-5">9.8.2.2</span> 安装nginx(xiaomirouter)</h5><div class="outline-text-5" id="text-9-8-2-2"><p><code>cd ~/xiaomirouter</code></p></div><ol class="org-ol"><li><a id="orgheadline211"></a>下载<br><div class="outline-text-6" id="text-9-8-2-2-1"><div class="org-src-container"><pre class="src src-sh">$wget -c http://bigota.miwifi.com/xiaoqiang/sdk/tools/package/sdk_package.zip$wget -c http://nginx.org/download/nginx-1.8.1.tar.gz$wget -c http://www.openssl.org/source/openssl-1.0.2g.tar.gz$wget -c http://mirrors.cnnic.cn/apache//apr/apr-1.5.2.tar.bz2$wget -c http://apache.opencas.org//apr/apr-util-1.5.4.tar.gz$wget -c ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.38.tar.gz#$wget -c http://nchc.dl.sourceforge.net/project/libpng/zlib/1.2.8/zlib-1.2.8.tar.gz</pre></div></div></li><li><a id="orgheadline212"></a>配置交叉编译工具环境<br><div class="outline-text-6" id="text-9-8-2-2-2"><div class="org-src-container"><pre class="src src-sh">$export PATH=~/xiaomirouter/test/sdk_package/toolchain/bin:$PATH$export CUSTOM_PREFIX=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop</pre></div></div></li><li><a id="orgheadline214"></a>交叉编译<br><ol class="org-ol"><li><a id="orgheadline213"></a>openssl<br><div class="outline-text-7" id="text-9-8-2-2-3-1"><p>参考： <a href="#orgheadline29">其他编译 <code>openssl</code> 方式供参考</a></p></div></li></ol></li><li><a id="orgheadline216"></a>其他<br><ol class="org-ol"><li><a id="orgheadline215"></a>安装<br><div class="outline-text-7" id="text-9-8-2-2-4-1"><p>只指定安装路径，没有其他选项</p><div class="org-src-container"><pre class="src src-sh">$sudo ./configure --prefix=/usr/local/development/nginx-1.8.1$sudo make$sudo make install</pre></div><p>加入 <code>openssl</code> 的编译：</p><div class="org-src-container"><pre class="src src-sh">$./configure --prefix=/usr/local/development/nginx-1.8.1 --with-openssl=/home/miracle/myinstalled/openssl-1.0.2g --with-http_ssl_module$sudo make</pre></div><p>这里做 <code>sudo make</code> 的时候会自动编译ssl，如果手动编译ssl的话，那么大致如下：</p><div class="org-src-container"><pre class="src src-sh">$sudo ./config --prefix=/usr/local/development/openssl-1.0.2g$sudo make depend$sudo make$sudo make install</pre></div><p>参考：<a href="http://www.cnblogs.com/skynet/p/4146083.html" target="_blank" rel="noopener">http://www.cnblogs.com/skynet/p/4146083.html</a>卸载只需要将 <code>/usr/local/develop/nginx-1.8.1</code> 删除即可。</p></div></li></ol></li><li><a id="orgheadline217"></a>配置<br><div class="outline-text-6" id="text-9-8-2-2-5"><ul class="org-ul"><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2016-03-29 二 18:37]</span></span></li></ul><p>配置文件在 <code>/usr/local/development/nginx-1.8.1/conf</code> 下。</p></div></li><li><a id="orgheadline218"></a>启动<br><div class="outline-text-6" id="text-9-8-2-2-6"><p>直接运行 <code>./nginx</code></p><p>修改配置后 <code>./nginx -s reload</code></p><p>更多内容 <code>./nginx -h</code></p></div></li><li><a id="orgheadline219"></a>文档<br><div class="outline-text-6" id="text-9-8-2-2-7"><p><a href="http://nginx.org/en/docs/" target="_blank" rel="noopener">http://nginx.org/en/docs/</a></p></div></li><li><a id="orgheadline220"></a>Misc<br><div class="outline-text-6" id="text-9-8-2-2-8"><p>openssl</p><div class="org-src-container"><pre class="src src-sh">$sudo ./config --prefix=/usr/local/development/openssl-1.0.2g$sudo make depend$sudo make install</pre></div></div></li></ol></div><div id="outline-container-orgheadline222" class="outline-5"><h5 id="orgheadline222"><span class="section-number-5">9.8.2.3</span> 安装php5.4</h5><div class="outline-text-5" id="text-9-8-2-3"><p>这一步要放在安装完apache之后。</p><div class="org-src-container"><pre class="src src-sh">$ sudo add-apt-repository ppa:ondrej/php5$ sudo apt-get update$ sudo apt-get install php5-cli php5-fpm php-pear php5-mysql libcurl4-openssl-dev#$ sudo pecl install pecl_http  # Update /etc/php5/fpm/php.ini and /etc/php5/cli/php.ini with http.so$ php -v</pre></div></div></div><div id="outline-container-orgheadline226" class="outline-5"><h5 id="orgheadline226"><span class="section-number-5">9.8.2.4</span> 源码安装php</h5><div class="outline-text-5" id="text-9-8-2-4"></div><ol class="org-ol"><li><a id="orgheadline223"></a>openssl<br><div class="outline-text-6" id="text-9-8-2-4-1"><p><a href="http://www.openssl.org/source/openssl-1.0.2g.tar.gz" target="_blank" rel="noopener">http://www.openssl.org/source/openssl-1.0.2g.tar.gz</a>./config &#x2013;prefix=/usr/local/develop/openssl-1.0.2gsudo make dependsudo make sudo make install</p></div></li><li><a id="orgheadline224"></a>depend library<br><div class="outline-text-6" id="text-9-8-2-4-2"><p>sudo apt-get install libxml2sudo apt-get install libxml2-devsudo apt-get install libxml2-utilssudo apt-get install libcurl3sudo apt-get install libcurlsudo apt-get install libcurl4-gnutls-dev</p></div></li><li><a id="orgheadline225"></a>php<br><div class="outline-text-6" id="text-9-8-2-4-3"><p><a href="http://php.net/downloads.php" target="_blank" rel="noopener">http://php.net/downloads.php</a>./configure &#x2013;prefix=/usr/local/develop/php-5.6.19 &#x2013;with-config-file-path=/usr/local/develop/php-5.6.19/etc &#x2013;enable-fpm &#x2013;with-fpm-user=www-data &#x2013;with-fpm-group=www-data &#x2013;with-mysql=mysqlnd &#x2013;with-mysqli=mysqlnd &#x2013;with-pdo-mysql=mysqlnd &#x2013;with-iconv-dir &#x2013;with-freetype-dir &#x2013;with-jpeg-dir &#x2013;with-png-dir &#x2013;with-zlib &#x2013;with-libxml-dir=/usr &#x2013;enable-xml &#x2013;disable-rpath &#x2013;enable-magic-quotes &#x2013;enable-safe-mode &#x2013;enable-bcmath &#x2013;enable-shmop &#x2013;enable-sysvsem &#x2013;enable-inline-optimization &#x2013;with-curl &#x2013;with-curlwrappers &#x2013;enable-mbregex &#x2013;enable-mbstring &#x2013;with-mcrypt &#x2013;enable-ftp &#x2013;with-gd &#x2013;enable-gd-native-ttf &#x2013;with-openssl=/usr/local/develop/openssl-1.0.2g &#x2013;with-mhash &#x2013;enable-pcntl &#x2013;enable-sockets &#x2013;with-xmlrpc &#x2013;enable-zip &#x2013;enable-soap &#x2013;without-pear &#x2013;with-gettext &#x2013;disable-fileinfo</p><p>sudo makesudo make install</p></div></li></ol></div></div><div id="outline-container-orgheadline83" class="outline-4"><h4 id="orgheadline83"><span class="section-number-4">9.8.3</span> refer</h4><div class="outline-text-4" id="text-9-8-3"><p><a href="http://wiki.openwrt.org/doc/howto/owncloud" target="_blank" rel="noopener">ownCloud on OpenWrt</a></p><p><a href="http://www.cnblogs.com/qkcan/archive/2012/08/05/2623994.html" target="_blank" rel="noopener">ubuntu 12.04 PHP5.4安装</a></p><p><a href="http://www.linuxidc.com/Linux/2012-09/70518.htm" target="_blank" rel="noopener">Ubuntu 12.04 下安装Apache 2.4.2</a></p><p><a href="http://blog.sina.com.cn/s/blog_61d0b6cd010119a8.html" target="_blank" rel="noopener">Ubuntu10.04下编译安装apache-2.4.2版本</a></p></div></div></div><div id="outline-container-orgheadline84" class="outline-3"><h3 id="orgheadline84"><span class="section-number-3">9.9</span> <span class="done CANCEL">CANCEL</span> owncloud升级</h3><div class="outline-text-3" id="text-9-9"><ul class="org-ul"><li>State "CANCEL"     from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-08-08 一 17:34] </span></span> <br>Owncloud不稳定，数据虽然不会丢失，但是有时也很麻烦，已经不采用，此处仅供参考。</li><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-08-08 一 17:29] </span></span> <br>wait for try.</li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-08-08 一 17:29]</span></span></li></ul><p>下载,注意将 <code>https://</code> 改成 <code>http://</code></p><div class="org-src-container"><pre class="src src-sh">$wget -c http://download.owncloud.org/community/owncloud-9.0.2.tar.bz2</pre></div><ol class="org-ol"><li>停用所有第三方app.</li><li><code>rsync --inplace -rtv owncloud_latest/owncloud/ owncloud/</code></li></ol><p>php -c <i>userdisk/opt/usr/local/develop/etc</i> occ maintenance:mimetype:update-dbphp -c <i>userdisk/opt/usr/local/develop/etc</i> occ maintenance:mimetype:update-jsphp -c <i>userdisk/opt/usr/local/develop/etc</i> occ upgrade</p><p>参考:</p><p><a href="https://teddysun.com/211.html" target="_blank" rel="noopener">https://teddysun.com/211.html</a></p><p><a href="https://www.librehat.com/the-owncloud-upgrade-prolonged-stagnation-maintance-solution/" target="_blank" rel="noopener">https://www.librehat.com/the-owncloud-upgrade-prolonged-stagnation-maintance-solution/</a></p></div></div><div id="outline-container-orgheadline85" class="outline-3"><h3 id="orgheadline85"><span class="section-number-3">9.10</span> <span class="done CANCEL">CANCEL</span> owncloud issue</h3><div class="outline-text-3" id="text-9-10"><ul class="org-ul"><li>State "CANCEL"     from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-08-08 一 17:34] </span></span> <br>Owncloud不稳定，数据虽然不会丢失，但是有时也很麻烦，已经不采用，此处仅供参考。</li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-08 一 17:29]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-04-28 四 13:46]</span></span></p><hr><p>同步总是发生错误,其中之一是文件大小过大.</p><p>无法上传大文件的错误:上传大文件的错误:</p><pre class="example">Request Entity Too Large</pre><p><a href="https://forum.owncloud.org/viewtopic.php?f=17&amp;t=7733" target="_blank" rel="noopener">https://forum.owncloud.org/viewtopic.php?f=17&amp;t=7733</a></p><p>无法上传文件的错误:上传文件出现类似如下错误:</p><pre class="example">An exception occurred while executing 'INSERT INTO `oc_filecache` (`mimepart`,`mimetype`,`mtime`,`size`,`etag`,`storage_mtime`,`permissions`,`parent`,`path_hash`,`path`,`name`,`storage`) SELECT ?,?,?,?,?,?,?,?,?,?,?,? FROM `oc_filecache` WHERE `storage` = ? AND `path_hash` = ? HAVING COUNT(*) = 0' with params ["8", "18", 1461910752, 1250, "d73b2a5f54292c00fbe81872c61e9381", 1461910752, 27, "19", "04cf4abd8d26a455196d8cf88cab5fe0", "files\/Documents\/\u6587\u4ef6\u7ba1\u7406.md", "\u6587\u4ef6\u7ba1\u7406.md", "3", "3", "04cf4abd8d26a455196d8cf88cab5fe0"]: SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry '17101' for key 'PRIMARY'</pre><p>网上说是因为某些用户垃圾箱文件太多导致,清空垃圾箱即可,最好定时清空垃圾箱.?貌似还是不行? <a href="http://github.com/owncloud/core/issues/12591" target="_blank" rel="noopener">http://github.com/owncloud/core/issues/12591</a></p><pre class="example">i've tracked the files down in this message, and it belongs to a user who has about 6500 files in his trashbin.Retention was at 30 days, I've lowered it to 7, to see if that helps, but it deletes only 1 file every 10 seconds or so, so that will take weeks...I had to restart the mysql server twice now to prevent bigger problems.</pre><p><a href="https://github.com/owncloud/core/issues/17887" target="_blank" rel="noopener">https://github.com/owncloud/core/issues/17887</a></p></div></div><div id="outline-container-orgheadline86" class="outline-3"><h3 id="orgheadline86"><span class="section-number-3">9.11</span> <span class="done DONE">DONE</span> 如何小米路由器上使用 <code>git</code> 版本控制系统?</h3><div class="outline-text-3" id="text-9-11"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-08-09 二 15:33]</span></span></li><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-07-26 二 17:05] </span></span> <br>wait for refile.</li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2016-06-12 日 16:59]</span></span></li></ul><p>参考：<a href="#orgheadline58">小米路由器上使用 <code>git</code> 版本控制系统</a></p></div></div><div id="outline-container-orgheadline87" class="outline-3"><h3 id="orgheadline87"><span class="section-number-3">9.12</span> <span class="todo LATER">LATER</span> 交叉编译mysql-5.7.11</h3><div class="outline-text-3" id="text-9-12"><ul class="org-ul"><li>State "LATER"      from "MAYBE/FUTURE" <span class="timestamp-wrapper"><span class="timestamp">[2017-02-20 一 11:39]</span></span></li><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-08 一 17:34]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2016-06-12 日 16:59]</span></span></li></ul><p>新版本的 <code>mysql</code> 不是用 <code>GNU Auto tools</code> 生成 <code>Makefile</code> 而是使用 <code>CMake</code>, 所以编译方法有所不同。</p></div><div id="outline-container-orgheadline88" class="outline-4"><h4 id="orgheadline88"><span class="section-number-4">9.12.1</span> <span class="todo NEXT">NEXT</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2017-04-27 四 11:46&gt; </span></span> try <code>mysql-5.7.18</code></h4><div class="outline-text-4" id="text-9-12-1"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2017-04-27 四 12:01]</span></span></li></ul></div><div id="outline-container-orgheadline227" class="outline-5"><h5 id="orgheadline227"><span class="section-number-5">9.12.1.1</span> 下载</h5><div class="outline-text-5" id="text-9-12-1-1"><p>Mysql: <a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a></p><div class="org-src-container"><pre class="src src-sh">$wget --no-check-certificate -c https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.18-linux-glibc2.5-i686.tar</pre></div></div></div><div id="outline-container-orgheadline228" class="outline-5"><h5 id="orgheadline228"><span class="section-number-5">9.12.1.2</span> 依赖</h5><div class="outline-text-5" id="text-9-12-1-2"><div class="org-src-container"><pre class="src src-sh">$sudo apt-get install cmake</pre></div></div></div></div><div id="outline-container-orgheadline89" class="outline-4"><h4 id="orgheadline89"><span class="section-number-4">9.12.2</span> <span class="done CANCEL">CANCEL</span> try cmake</h4><div class="outline-text-4" id="text-9-12-2"><ul class="org-ul"><li>State "CANCEL"     from              <span class="timestamp-wrapper"><span class="timestamp">[2017-04-27 四 12:01] </span></span> <br>can't compile..</li></ul><div class="org-src-container"><pre class="src src-sh">$sudo apt-get install cmake$cd mysql-5.7.11$vim xx$cmake -DCMAKE_INSTALL_PREFIX=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop -DMYSQL_UNIX_ADDR=/var/run/mysql.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_EXTRA_CHARSETS=utf8,gbk -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_READLINE=1 -DENABLED_LOCAL_INFILE=1 -DMYSQL_DATADIR=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/data -DSTACK_DIRECTION=1 -DCURSES_LIBRARY=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib/libncurses.a -DCURSES_INCLUDE_PATH=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include -DWITH_MYISAM_STORAGE_ENGINE=1 -DDOWNLOAD_BOOST=1 -DWITH_BOOST=../boost.arm</pre></div><p>参考:</p><p><a href="http://www.th7.cn/db/mysql/201603/178674.shtml" target="_blank" rel="noopener">http://www.th7.cn/db/mysql/201603/178674.shtml</a></p><p><a href="http://dev.mysql.com/doc/internals/en/cmake.html" target="_blank" rel="noopener">http://dev.mysql.com/doc/internals/en/cmake.html</a></p><p><a href="http://www.cmake.org/Wiki/CMake_Cross_Compiling" target="_blank" rel="noopener">http://www.cmake.org/Wiki/CMake_Cross_Compiling</a></p><p><a href="http://blog.chinaunix.net/uid-29570002-id-5112786.html" target="_blank" rel="noopener">http://blog.chinaunix.net/uid-29570002-id-5112786.html</a></p><p>PC版本的编译:</p><div class="org-src-container"><pre class="src src-sh">mysql-5.7.11.pc$ cmake -DDOWNLOAD_BOOST=1 -DWITH_BOOST=../boost$cmake . -DWITH_BOOST=../boost/boost_1_59_0$make</pre></div><p>arm版本的编译:</p></div><div id="outline-container-orgheadline229" class="outline-5"><h5 id="orgheadline229"><span class="section-number-5">9.12.2.1</span> <span class="done DONE">DONE</span> 自带文档</h5><div class="outline-text-5" id="text-9-12-2-1"><ul class="org-ul"><li>State "DONE"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-08-17 三 12:04]</span></span></li></ul><p>INSTALL-SOURCE</p><pre class="example">To list the configuration options, use one of the followingcommands:shell&gt; cmake . -L   # overviewshell&gt; cmake . -LH  # overview with help textshell&gt; cmake . -LAH # all params with help textshell&gt; ccmake .     # interactive display</pre></div></div><div id="outline-container-orgheadline230" class="outline-5"><h5 id="orgheadline230"><span class="section-number-5">9.12.2.2</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-08-15 一 16:29&gt; </span></span> how to manage <code>cross compile</code>?</h5><div class="outline-text-5" id="text-9-12-2-2"><div class="org-src-container"><pre class="src src-sh">$sudo apt-get install cmake$cd usr/local/develop/include$ln -s ncurses/ncurses.h .$ln -s ncurses/curses.h .$cd mysql-5.7.11$vim Toolchain_xiaomi.cmake# this one is importantSET(CMAKE_SYSTEM_NAME Linux)#this one not so muchSET(CMAKE_SYSTEM_VERSION 1)# specify the cross compilerSET(CMAKE_C_COMPILER   /home/miracle/work/1_inbox/xiaomirouter/test/sdk_package/toolchain/bin/arm-xiaomi-linux-uclibcgnueabi-gcc)SET(CMAKE_CXX_COMPILER /home/miracle/work/1_inbox/xiaomirouter/test/sdk_package/toolchain/bin/arm-xiaomi-linux-uclibcgnueabi-g++)# where is the target environment SET(CMAKE_FIND_ROOT_PATH  /home/miracle/work/1_inbox/xiaomirouter/test/sdk_package/lib)# search for programs in the build host directoriesSET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)# for libraries and headers in the target directoriesSET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)</pre></div><div class="org-src-container"><pre class="src src-sh">#$cmake -DCMAKE_TOOLCHAIN_FILE=`pwd`/Toolchain_xiaomi.cmake -DCMAKE_INSTALL_PREFIX=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop -DMYSQL_UNIX_ADDR=/var/run/mysql.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_EXTRA_CHARSETS=utf8,gbk -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_READLINE=1 -DENABLED_LOCAL_INFILE=1 -DMYSQL_DATADIR=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/data -DSTACK_DIRECTION=1 -DCURSES_LIBRARY=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib/libncurses.a -DCURSES_INCLUDE_PATH=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include -DWITH_MYISAM_STORAGE_ENGINE=1 -DDOWNLOAD_BOOST=1 -DWITH_BOOST=../boost.arm .#$cmake -DCMAKE_INSTALL_PREFIX=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop -DWITH_DEBUG=0 -DDEFAULT_CHARSET=utf8 -DWITH_EXTRA_CHARSETS=all -DENABLED_LOCAL_INFILE=1 $cmake -DCMAKE_TOOLCHAIN_FILE=`pwd`/Toolchain_xiaomi.cmake -DCMAKE_INSTALL_PREFIX=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop -DMYSQL_UNIX_ADDR=/var/run/mysql.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_EXTRA_CHARSETS=utf8,gbk -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_READLINE=1 -DENABLED_LOCAL_INFILE=1 -DMYSQL_DATADIR=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/data -DSTACK_DIRECTION=1 -DCURSES_LIBRARY=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib/libncurses.a -DCURSES_INCLUDE_PATH=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_BOOST=`pwd`/../boost.arm .</pre></div><p>运行两次cmake?</p><p>how to translate from auto tools?</p><pre class="example">$./configure --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --without-docs ??none??--without-man ??--without-debug --with-charset=utf8 --with-extra-charsets=gbk,gb2312,utf8,ascii --enable-local-infile --with-mysqld-user=root ???none???--host=arm-xiaomi-linux-uclibcgnueabi ???none???--with-named-curses-libs=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib/libncurses.a ???CC=arm-xiaomi-linux-uclibcgnueabi-gcc ???</pre></div></div><div id="outline-container-orgheadline231" class="outline-5"><h5 id="orgheadline231"><span class="section-number-5">9.12.2.3</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-08-17 三 12:03&gt; </span></span> how to manage boost error?</h5><div class="outline-text-5" id="text-9-12-2-3"><p>in <code>cmake/boost.cmake</code></p><pre class="example">...  ## Did we get a path name to the directory of the .tar.gz or .zip file?  FIND_FILE(LOCAL_BOOST_ZIP            NAMES "${BOOST_PACKAGE_NAME}.tar.gz" "${BOOST_PACKAGE_NAME}.zip"            PATHS ${WITH_BOOST}            NO_DEFAULT_PATH           )  MESSAGE(STATUS "@@@@@@NAMES: ${BOOST_PACKAGE_NAME}.tar.gz")  MESSAGE(STATUS "@@@@@@PATHS(WITH_BOOST): ${WITH_BOOST}")  MESSAGE(STATUS "@@@@@@LOCAL_BOOST_ZIP: ${LOCAL_BOOST_ZIP}")  ## Did we get a path name to the directory of an unzipped version?  FIND_FILE(LOCAL_BOOST_DIR            NAMES "${BOOST_PACKAGE_NAME}"            PATHS ${WITH_BOOST}            NO_DEFAULT_PATH           )  MESSAGE(STATUS "@@@@@@NAMES: ${BOOST_PACKAGE_NAME}")  MESSAGE(STATUS "@@@@@@PATHS(WITH_BOOST): ${WITH_BOOST}")  MESSAGE(STATUS "@@@@@@LOCAL_BOOST_DIR: ${LOCAL_BOOST_DIR}")  ## Did we get a path name to an unzippped version?  FIND_PATH(LOCAL_BOOST_DIR            NAMES "boost/version.hpp"            PATHS ${WITH_BOOST}            NO_DEFAULT_PATH           )  MESSAGE(STATUS "@@@@@@NAMES: boost/version.hpp")  MESSAGE(STATUS "@@@@@@PATHS(WITH_BOOST): ${WITH_BOOST}")  MESSAGE(STATUS "@@@@@@LOCAL_BOOST_DIR: ${LOCAL_BOOST_DIR}")...</pre><p>output for cmake</p><div class="org-src-container"><pre class="src src-sh">miracle@miracle-Zhaoyang-E49:~/work/1_inbox/xiaomirouter/test/mysql-5.7.11$ cmake -DCMAKE_TOOLCHAIN_FILE=/home/miracle/work/1_inbox/xiaomirouter/test/mysql-5.7.11/Toolchain_xiaomi.cmake -DCMAKE_INSTALL_PREFIX=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop -DMYSQL_UNIX_ADDR=/var/run/mysql.sock -DDEFAULT_CHARSET=utf8 -DDEFAULT_COLLATION=utf8_general_ci -DWITH_EXTRA_CHARSETS=utf8,gbk -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_READLINE=1 -DENABLED_LOCAL_INFILE=1 -DMYSQL_DATADIR=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/data -DSTACK_DIRECTION=1 -DCURSES_LIBRARY=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib/libncurses.a -DCURSES_INCLUDE_PATH=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include -DWITH_MYISAM_STORAGE_ENGINE=1 -DWITH_BOOST="/home/miracle/work/1_inbox/xiaomirouter/test/boost.arm" .-- Running cmake version 2.8.7-- Configuring with MAX_INDEXES = 64U-- SIZEOF_VOIDP 4-- MySQL 5.7.11-- Packaging as: mysql-5.7.11-Linux--- @@@@@@NAMES: boost_1_59_0.tar.gz-- @@@@@@PATHS(WITH_BOOST): /home/miracle/work/1_inbox/xiaomirouter/test/boost.arm-- @@@@@@LOCAL_BOOST_ZIP: LOCAL_BOOST_ZIP-NOTFOUND-- @@@@@@NAMES: boost_1_59_0-- @@@@@@PATHS(WITH_BOOST): /home/miracle/work/1_inbox/xiaomirouter/test/boost.arm-- @@@@@@LOCAL_BOOST_DIR: LOCAL_BOOST_DIR-NOTFOUND-- @@@@@@NAMES: boost/version.hpp-- @@@@@@PATHS(WITH_BOOST): /home/miracle/work/1_inbox/xiaomirouter/test/boost.arm-- @@@@@@LOCAL_BOOST_DIR: LOCAL_BOOST_DIR-NOTFOUND-- WITH_BOOST=/home/miracle/work/1_inbox/xiaomirouter/test/boost.arm-- BOOST_INCLUDE_DIR-- LOCAL_BOOST_DIR LOCAL_BOOST_DIR-NOTFOUND-- LOCAL_BOOST_ZIP LOCAL_BOOST_ZIP-NOTFOUND-- Could not find (the correct version of) boost.-- MySQL currently requires boost_1_59_0CMake Error at cmake/boost.cmake:81 (MESSAGE):  You can download it with -DDOWNLOAD_BOOST=1 -DWITH_BOOST=&lt;directory&gt;  This CMake script will look for boost in &lt;directory&gt;.  If it is not there,  it will download and unpack it (in that directory) for you.  If you are inside a firewall, you may need to use an http proxy:  export http_proxy=http://example.com:80Call Stack (most recent call first):cmake/boost.cmake:176 (COULD_NOT_FIND_BOOST)  CMakeLists.txt:443 (INCLUDE)-- Configuring incomplete, errors occurred!</pre></div></div></div></div><div id="outline-container-orgheadline90" class="outline-4"><h4 id="orgheadline90"><span class="section-number-4">9.12.3</span> 参考</h4><div class="outline-text-4" id="text-9-12-3"><p><a href="http://blog.csdn.net/catemo/article/details/53136343" target="_blank" rel="noopener">http://blog.csdn.net/catemo/article/details/53136343</a></p></div></div></div><div id="outline-container-orgheadline91" class="outline-3"><h3 id="orgheadline91"><a id="ID-1a0e9abb-ab6c-4e1c-931e-8c08ad505b37"></a><span class="section-number-3">9.13</span> <span class="todo NEXT">NEXT</span> 小米路由器搭建ftp服务</h3><div class="outline-text-3" id="text-9-13"><ul class="org-ul"><li>State "NEXT"       from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2017-02-20 一 11:39]</span></span></li><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-08 一 17:35]</span></span></li></ul><p>vsftp官方网址：</p><p><a href="https://security.appspot.com/vsftpd.html" target="_blank" rel="noopener">https://security.appspot.com/vsftpd.html</a></p><p>vsftpd.beasts.org</p></div><div id="outline-container-orgheadline92" class="outline-4"><h4 id="orgheadline92"><span class="section-number-4">9.13.1</span> 交叉编译环境</h4></div><div id="outline-container-orgheadline93" class="outline-4"><h4 id="orgheadline93"><span class="section-number-4">9.13.2</span> 源代码下载：</h4><div class="outline-text-4" id="text-9-13-2"><div class="org-src-container"><pre class="src src-sh">$wget https://security.appspot.com/downloads/vsftpd-3.0.3.tar.gz</pre></div></div></div><div id="outline-container-orgheadline94" class="outline-4"><h4 id="orgheadline94"><span class="section-number-4">9.13.3</span> 编译libcrypt</h4></div><div id="outline-container-orgheadline95" class="outline-4"><h4 id="orgheadline95"><span class="section-number-4">9.13.4</span> 修改Makefile</h4><div class="outline-text-4" id="text-9-13-4"><p>/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib</p><ol class="org-ol"><li><p>CC</p><pre class="example">CC = arm-xiaomi-linux-uclibcgnueabi-gcc</pre></li><li><p>CFLAGS</p><pre class="example">CFLAGS=-O2 -fPIE --param=ssp-buffer-size=4 \     -Wall -W -Wshadow -Werror -Wformat-security \     -D_FORTIFY_SOURCE=2 \     #-pedantic -Wconversion</pre></li><li><p>LIBS</p><pre class="example">LIBS=-L/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib -lcrypt</pre></li></ol></div></div><div id="outline-container-orgheadline96" class="outline-4"><h4 id="orgheadline96"><span class="section-number-4">9.13.5</span> 编译</h4></div><div id="outline-container-orgheadline97" class="outline-4"><h4 id="orgheadline97"><span class="section-number-4">9.13.6</span> 开启防火墙</h4><div class="outline-text-4" id="text-9-13-6"><pre class="example">xkkjjjconfig rule 'ftp21'        option name 'myftp'                                   option src 'wan'                                      option proto 'tcp'                                    option target 'ACCEPT'                                option name ''\''ftp wan accept tcp port 21'\'''             option dest_port '21'config rule 'ftp20'        option src 'wan'          option proto 'tcp'        option target 'ACCEPT'        option name ''\''ftp wan accept tcp port 20'\'''        option dest_port '20'</pre></div></div><div id="outline-container-orgheadline98" class="outline-4"><h4 id="orgheadline98"><span class="section-number-4">9.13.7</span> 部署</h4><div class="outline-text-4" id="text-9-13-7"><div class="org-src-container"><pre class="src src-sh">#vi /etc/config/firewall......config rule 'ftp21'                   option name 'myftp'            option src 'wan'                option proto 'tcp'                        option target 'ACCEPT'                                option name ''\''ftp wan accept tcp port 21'\'''                                        option dest_port '21'                                        config rule 'ftp20'                                                             option src 'wan'                                                                  option proto 'tcp'                                                                            option target 'ACCEPT'                                                                                                          option name ''\''ftp wan accept tcp port 20'\'''                                                                                option dest_port '20'#/etc/init.d/firewall restart#cp vsftpd /userdisk/data/opt/usr/local/develop/bin/#cp vsftpd.conf /userdisk/data/opt/usr/local/develop/etc/#cp vsftpd.user_list /userdisk/data/opt/usr/local/develop/etc/#mkdir -p /userdisk/data/opt/usr/local/develop/share/empty</pre></div></div></div><div id="outline-container-orgheadline99" class="outline-4"><h4 id="orgheadline99"><span class="section-number-4">9.13.8</span> 配置</h4><div class="outline-text-4" id="text-9-13-8"></div><div id="outline-container-orgheadline232" class="outline-5"><h5 id="orgheadline232"><span class="section-number-5">9.13.8.1</span> 配置文件 <code>vsftpd.conf</code></h5><div class="outline-text-5" id="text-9-13-8-1"><pre class="example">###### Connection# Standalone modelisten=YESlisten_port=21max_clients=200max_per_ip=4#listen_address=connect_from_port_20=YESftp_data_port=20pasv_enable=YESpasv_max_port=0pasv_min_port=0###### Featuresftpd_banner=Welcome to QuietHeart FTP service.write_enable=YESxferlog_enable=YESxferlog_std_format=YESxferlog_file=/userdisk/data/opt/usr/local/develop/var/log/vsftpd.logls_recurse_enable=NOdownload_enable=YESascii_upload_enable=NOascii_download_enable=NOasync_abor_enable=YES#Importantallow_writeable_chroot=YES###### Anonymousanonymous_enable=YESftp_username=ftpno_anon_password=YESanon_root=/userdisk/data/ftp/publicanon_upload_enable=NOanon_world_readable_only=YESanon_mkdir_write_enable=NOanon_other_write_enable=NOanon_max_rate=50000chown_uploads=YESchown_username=ftpanon_umask=077###### Local userlocal_enable=YESlocal_root=/userdisk/data/ftplocal_umask=022###### Misc# Securityhide_ids=YESchroot_list_enable=NO#chroot_list_file=/etc/vsftpd.chroot_list#Only access own root dir, can't access outside.chroot_local_user=YESuserlist_deny=NOuserlist_file=/userdisk/data/opt/usr/local/develop/etc/vsftpd.user_list# Performanceone_process_model=NOsecure_chroot_dir=/userdisk/data/opt/usr/local/develop/share/emptyidle_session_timeout=120data_connection_timeout=300accept_timeout=60connect_timeout=60</pre></div></div><div id="outline-container-orgheadline233" class="outline-5"><h5 id="orgheadline233"><span class="section-number-5">9.13.8.2</span> 配置文件 <code>vsftpd.user_list</code></h5><div class="outline-text-5" id="text-9-13-8-2"><pre class="example"># vsftpd userlist# If userlist_deny=NO, only allow users in this file# If userlist_deny=YES(default), never allow users in this file,and# do not even prompt for a password.# Note that the default vsftpd pam config also checks /etc/vsftpd.ftpusers# for users that are denied.xiaomiftp</pre></div></div><div id="outline-container-orgheadline234" class="outline-5"><h5 id="orgheadline234"><span class="section-number-5">9.13.8.3</span> 匿名ftp用户信息</h5><div class="outline-text-5" id="text-9-13-8-3"><div class="org-src-container"><pre class="src src-sh">#vi /etc/passwd......ftp:*:55:55:ftp:/userdisk/data/ftp/public:/bin/false......</pre></div></div></div><div id="outline-container-orgheadline235" class="outline-5"><h5 id="orgheadline235"><span class="section-number-5">9.13.8.4</span> 添加用户</h5><div class="outline-text-5" id="text-9-13-8-4"><p>假设添加 <code>xiaomiftp</code> 注意：目前添加用户的目的是为了让前面的 <code>local_root</code> 路径和用户主目录一致。</p><ol class="org-ol"><li>将 <code>/etc/passwd</code> 中的 <code>ftp</code> 对应行复制，然后修改用户名和用户id为非重复的，假设为： <code>xiaomiftp</code></li><li>将 <code>/etc/group</code> 中添加对应的 <code>xiaomiftp</code> 组(开始复制并相应修改)</li><li>将 <code>/etc/shadow</code> 添加 <code>xiaomiftp</code> 对应的项（开始复制并修改即可）</li><li><p>设置密码</p><div class="org-src-container"><pre class="src src-sh">#passwd xiaomiftpxxxxx</pre></div></li><li><p>之后会看到类似如下行：</p><div class="org-src-container"><pre class="src src-sh">#cat /etc/passwd......xiaomiftp:$1$IIOSCgTf$8sQxyfRWcz2kfOf0/9jmy0:2:2:xiaomiftp:/userdisk/data/ftp:/bin/false......#cat /etc/group......xiaomiftp:x:2:......</pre></div></li></ol></div></div></div><div id="outline-container-orgheadline100" class="outline-4"><h4 id="orgheadline100"><span class="section-number-4">9.13.9</span> 运行</h4><div class="outline-text-4" id="text-9-13-9"><div class="org-src-container"><pre class="src src-sh">#vsftpd /userdisk/data/opt/usr/local/develop/etc/vsftpd.conf &amp;</pre></div></div></div><div id="outline-container-orgheadline101" class="outline-4"><h4 id="orgheadline101"><span class="section-number-4">9.13.10</span> 使用</h4><div class="outline-text-4" id="text-9-13-10"><p>直接通过 windows/linux/android 相应的文件浏览器，通过网址： <code>ftp://&lt;your ip&gt;</code> 即可打开并访问你的路由器了。</p></div></div><div id="outline-container-orgheadline102" class="outline-4"><h4 id="orgheadline102"><span class="section-number-4">9.13.11</span> 常见错误</h4><div class="outline-text-4" id="text-9-13-11"></div><div id="outline-container-orgheadline236" class="outline-5"><h5 id="orgheadline236"><span class="section-number-5">9.13.11.1</span> <a href="http://www.aiisen.com/blog-27a6a852-ad4d-4e23-9a1c-3c5aca2c724d.html" target="_blank" rel="noopener">http://www.aiisen.com/blog-27a6a852-ad4d-4e23-9a1c-3c5aca2c724d.html</a></h5><div class="outline-text-5" id="text-9-13-11-1"><pre class="example">#错误解决：530 This FTP server is anonymous only将local_enable=YES前的#（注释）取消；在anonymous_enable=YES前加上#。# 错误解决:500 OOPS: vsftpd: security: 'one_process_model' is anonymous only one_process_model=yes 改成 one_process_model=no</pre></div></div><div id="outline-container-orgheadline237" class="outline-5"><h5 id="orgheadline237"><span class="section-number-5">9.13.11.2</span> <a href="http://server.it168.com/server/2008-03-20/200803200803872_1.shtml" target="_blank" rel="noopener">http://server.it168.com/server/2008-03-20/200803200803872_1.shtml</a></h5><div class="outline-text-5" id="text-9-13-11-2"><pre class="example">日志文件文件出现错误信息“500 OOPS: vsftpd: not found: directory given in 'secure_chroot_dir':/usr/share/empty”。解决方法：vsftpd.conf 添加一行：secure_chroot_dir=/opt/usr/share/empty建立一个目录mkdir /opt/usr/share/empty</pre></div></div><div id="outline-container-orgheadline238" class="outline-5"><h5 id="orgheadline238"><span class="section-number-5">9.13.11.3</span> <a href="http://blog.csdn.net/bluishglc/article/details/42399439" target="_blank" rel="noopener">http://blog.csdn.net/bluishglc/article/details/42399439</a></h5><div class="outline-text-5" id="text-9-13-11-3"><pre class="example">miracle@xmnb4003210:~/work$ ftp &lt;your ip&gt;Connected to &lt;your ip&gt;.220 Welcome to QuietHeart FTP service.Name (&lt;your ip&gt;:miracle): xiaomiftp331 Please specify the password.Password:500 OOPS: vsftpd: refusing to run with writable root inside chroot()Login failed.421 Service not available, remote server has closed connection</pre></div></div><div id="outline-container-orgheadline239" class="outline-5"><h5 id="orgheadline239"><span class="section-number-5">9.13.11.4</span> 其他参考：</h5><div class="outline-text-5" id="text-9-13-11-4"><p><a href="http://yuanbin.blog.51cto.com/363003/108262/" target="_blank" rel="noopener">http://yuanbin.blog.51cto.com/363003/108262/</a></p><p><a href="http://llk726.blog.51cto.com/622293/121383" target="_blank" rel="noopener">http://llk726.blog.51cto.com/622293/121383</a></p><p><a href="http://www.miui.com/thread-1843572-1-1.html" target="_blank" rel="noopener">http://www.miui.com/thread-1843572-1-1.html</a></p><p><a href="http://www.cnblogs.com/JemBai/archive/2009/02/05/1384413.html" target="_blank" rel="noopener">http://www.cnblogs.com/JemBai/archive/2009/02/05/1384413.html</a></p><p><a href="http://www.cnblogs.com/hhuai/archive/2011/02/12/1952647.html" target="_blank" rel="noopener">http://www.cnblogs.com/hhuai/archive/2011/02/12/1952647.html</a></p><p>配置文件：<a href="http://blog.csdn.net/Derekmi/article/details/54095202" target="_blank" rel="noopener">http://blog.csdn.net/Derekmi/article/details/54095202</a></p><p><a href="http://glacier.blog.163.com/blog/static/217084139201110116190266/" target="_blank" rel="noopener">http://glacier.blog.163.com/blog/static/217084139201110116190266/</a></p></div></div></div></div><div id="outline-container-orgheadline103" class="outline-3"><h3 id="orgheadline103"><span class="section-number-3">9.14</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> 交叉编译vim</h3><div class="outline-text-3" id="text-9-14"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-08 一 17:35]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2016-08-03 三 19:05]</span></span></li></ul></div></div><div id="outline-container-orgheadline104" class="outline-3"><h3 id="orgheadline104"><a id="ID-44c228da-ed63-4a98-8768-49148cb010ac"></a><span class="section-number-3">9.15</span> <span class="todo NEXT">NEXT</span> Seafile</h3><div class="outline-text-3" id="text-9-15"><ul class="org-ul"><li>State "NEXT"       from "MAYBE/FUTURE" <span class="timestamp-wrapper"><span class="timestamp">[2016-08-08 一 17:35]</span></span></li><li>State "MAYBE/FUTURE" from "CANCEL"     <span class="timestamp-wrapper"><span class="timestamp">[2016-07-29 五 12:05]</span></span></li><li>State "CANCEL"     from              <span class="timestamp-wrapper"><span class="timestamp">[2016-07-28 四 18:32] </span></span> <br></li></ul><p>虽然开源，但是从代码结构上来看，编译比较麻烦，取消。</p><p>且对mysql的交叉编译环境暂时不待见。而且文件全都是加密过的，不能直接访问。</p><p>额外的功能如搜索等，还需收费。</p></div><div id="outline-container-orgheadline105" class="outline-4"><h4 id="orgheadline105"><span class="section-number-4">9.15.1</span> <span class="done DONE">DONE</span> PC 上安装Seafile</h4><div class="outline-text-4" id="text-9-15-1"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-07-26 二 15:35]</span></span></li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-07-26 二 15:35]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-07-25 一 19:01]</span></span></p><hr><p>下载：<a href="https://www.seafile.com/en/download/" target="_blank" rel="noopener">https://www.seafile.com/en/download/</a></p><div class="org-src-container"><pre class="src src-sh">$wget -c /home/miracle/下载/seafile-server_5.1.4_x86-64.tar.gz$tar -xzvf seafile-server_5.1.4_x86-64.tar.gz$cd seafile-server_5.1.4_x86-64$sudo apt-get install python-mysqldb$./setup-seafile-mysql.sh...Press ENTER to continue-----------------------------------------------------------------[Enter]What is the name of the server? It will be displayed on the client.3 - 15 letters or digits[ server name ] my-seafile [Enter]What is the ip or domain of the server?For example: www.mycompany.com, 192.168.1.101[ This server's ip or domain ] 172.16.246.34 [Enter]Where do you want to put your seafile data?Please use a volume with enough free space[ default "/media/sda6/cloud/seafile/seafile-data" ] [Enter]Which port do you want to use for the seafile fileserver?[ default "8082" ] [Enter]-------------------------------------------------------Please choose a way to initialize seafile databases:-------------------------------------------------------[1] Create new ccnet/seafile/seahub databases[2] Use existing ccnet/seafile/seahub databases[ 1 or 2 ] 1[Enter]What is the host of mysql server?[ default "localhost" ] [Enter]What is the port of mysql server?[ default "3306" ] [Enter]What is the password of the mysql root user?[ root password ] xxxxxx[Enter]Enter the name for mysql user of seafile. It would be created if not exists.[ default "root" ] myseafile[Enter]Enter the password for mysql user "myseafile":[ password for myseafile ] xxxxxx[Enter]Enter the database name for ccnet-server:[ default "ccnet-db" ] [Enter]Enter the database name for seafile-server:[ default "seafile-db" ] [Enter]Enter the database name for seahub:[ default "seahub-db" ] [Enter]---------------------------------This is your configuration---------------------------------    server name:            my-seafile    server ip/domain:       172.16.246.34    seafile data dir:       /media/sda6/cloud/seafile/seafile-data    fileserver port:        8082    database:               create new    ccnet database:         ccnet-db    seafile database:       seafile-db    seahub database:        seahub-db    database user:          myseafile---------------------------------Press ENTER to continue, or Ctrl-C to abort---------------------------------[Enter]....-----------------------------------------------------------------Your seafile server configuration has been finished successfully.-----------------------------------------------------------------run seafile server:     ./seafile.sh { start | stop | restart }run seahub  server:     ./seahub.sh  { start &lt;port&gt; | stop | restart &lt;port&gt; }-----------------------------------------------------------------If you are behind a firewall, remember to allow input/output of these tcp ports:-----------------------------------------------------------------port of seafile fileserver:   8082port of seahub:               8000When problems occur, Refer to        https://github.com/haiwen/seafile/wikifor information.</pre></div><div class="org-src-container"><pre class="src src-sh">$./seafile.sh start$./seahub.sh start......What is the email for the admin account?[ admin email ] quiet_heart000@126.comWhat is the password for the admin account?[ admin password ] Enter the password again:[ admin password again ] ......</pre></div><p>访问之时，浏览器输入： <code>127.0.0.1:8000</code></p><p>文档：<a href="http://manual.seafile.com/" target="_blank" rel="noopener">http://manual.seafile.com/</a></p></div></div><div id="outline-container-orgheadline106" class="outline-4"><h4 id="orgheadline106"><span class="section-number-4">9.15.2</span> 编译Seafile</h4><div class="outline-text-4" id="text-9-15-2"></div><div id="outline-container-orgheadline240" class="outline-5"><h5 id="orgheadline240"><span class="section-number-5">9.15.2.1</span> 编译libsearpc</h5><div class="outline-text-5" id="text-9-15-2-1"><div class="org-src-container"><pre class="src src-sh">$./autogen.sh$./configure --prefix=`pwd`/../prefix</pre></div><pre class="example">checking for JANSSON... noconfigure: error: Package requirements (jansson &gt;= 2.2.1) were not met:No package 'jansson' found</pre><div class="org-src-container"><pre class="src src-sh">$wget -c http://www.digip.org/jansson/releases/jansson-2.7.tar.gz$./configure --prefix=`pwd`/../prefix$make$make install</pre></div><div class="org-src-container"><pre class="src src-sh">$./configure --prefix=`pwd`/../prefix LDFLAGS=-L`pwd`/../prefix/lib JANSSON_CFLAGS=-I`pwd`/../prefix/include JANSSON_LIBS="-L`pwd`/../prefix/lib -ljansson"</pre></div><pre class="example">gcc -DHAVE_CONFIG_H -I. -I..    -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I../lib -g -O2 -MT searpc-demo-server.o -MD -MP -MF .deps/searpc-demo-server.Tpo -c -o searpc-demo-server.o searpc-demo-server.cIn file included from ../lib/searpc.h:7:0,                 from searpc-demo-server.c:10:../lib/searpc-server.h:6:21: 致命错误： jansson.h：没有那个文件或目录编译中断。</pre><p>添加 <code>JANSSON_CFLAGS</code></p><div class="org-src-container"><pre class="src src-sh">$vim demo/Makefile70 COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \                                                                          71     $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) $(JANSSON_CFLAGS)</pre></div><div class="org-src-container"><pre class="src src-sh">$./configure --prefix=`pwd`/../prefix LDFLAGS=-L`pwd`/../prefix/lib JANSSON_CFLAGS=-I`pwd`/../prefix/include JANSSON_LIBS="-L`pwd`/../prefix/lib -ljansson"$make$make install</pre></div></div></div><div id="outline-container-orgheadline241" class="outline-5"><h5 id="orgheadline241"><span class="section-number-5">9.15.2.2</span> 编译ccnet</h5><div class="outline-text-5" id="text-9-15-2-2"><p>下载依赖</p><p>编译依赖</p><p>编译 <code>ccnet</code></p><div class="org-src-container"><pre class="src src-sh">$cd ccnet-5.1.4-server$./autogen.sh./configure --prefix=`pwd`/../prefix --enable-server</pre></div><pre class="example">checking for uuid_generate in -luuid... noconfigure: error: *** Unable to find uuid library</pre><p><code>https://sourceforge.net/projects/libuuid/files/libuuid-1.0.3.tar.gz/download</code></p><div class="org-src-container"><pre class="src src-sh">$cd libuuid-1.0.3/$./configure --prefix=`pwd`/../prefix$make$make install</pre></div><div class="org-src-container"><pre class="src src-sh">$cd ccnet-5.1.4-server$./configure --prefix=`pwd`/../prefix --enable-server LDFLAGS=-L`pwd`/../prefix/lib</pre></div><pre class="example">found library pthreadchecking for sqlite3_open in -lsqlite3... noconfigure: error: *** Unable to find sqlite3 library</pre><div class="org-src-container"><pre class="src src-sh">$wget -c http://www.sqlite.org/2016/sqlite-amalgamation-3140100.zip$cd sqlite-autoconf-3140100$./configure --prefix=`pwd`/../prefix$make$make install</pre></div><div class="org-src-container"><pre class="src src-sh">$cd ccnet-5.1.4-server$export PKG_CONFIG_PATH=`pwd`/../prefix/lib/pkgconfig$./configure --prefix=`pwd`/../prefix --enable-server LDFLAGS=-L`pwd`/../prefix/lib</pre></div><pre class="example">configure: error: Package requirements (libevent &gt;= 2.0) were not met:No package 'libevent' found</pre><div class="org-src-container"><pre class="src src-sh">$wget -c https://github.com/libevent/libevent/releases/download/release-2.0.22-stable/libevent-2.0.22-stable.tar.gz$./configure --prefix=`pwd`/../prefix LDFLAGS=-L`pwd`/../prefix/lib$make$make install</pre></div><div class="org-src-container"><pre class="src src-sh">$./configure --prefix=`pwd`/../prefix --enable-server LDFLAGS=-L`pwd`/../prefix/lib...checking for ZDB... noconfigure: error: Package requirements (zdb &gt;= 2.10) were not met:No package 'zdb' found...</pre></div><div class="org-src-container"><pre class="src src-sh">$wget -c http://www.tildeslash.com/libzdb/dist/libzdb-3.1.tar.gz$./configure --prefix=`pwd`/../prefix --with-mysql LDFLAGS=-L`pwd`/../prefix/lib CFLAGS=-I`pwd`/../prefix/include$make$make install</pre></div><div class="org-src-container"><pre class="src src-sh">$./configure --prefix=`pwd`/../prefix --enable-server LDFLAGS=-L`pwd`/../prefix/lib$make...valac -C --pkg posix ccnetobj.vala/bin/bash: valac: 未找到命令make[2]: *** [ccnetobj.c] 错误 127...$sudo apt-get intall valac$make ...../common/rpc-service.c:40:30: 致命错误： searpc-signature.h：没有那个文件或目录编译中断。make[3]: *** [rpc-service.o] 错误 1make[3]:正在离开目录 `/home/miracle/下载/seafile/build/ccnet-5.1.4-server/net/daemon'make[2]: *** [all-recursive] 错误 1make[2]:正在离开目录 `/home/miracle/下载/seafile/build/ccnet-5.1.4-server/net'make[1]: *** [all-recursive] 错误 1make[1]:正在离开目录 `/home/miracle/下载/seafile/build/ccnet-5.1.4-server'make: *** [all] 错误 2...</pre></div></div></div></div><div id="outline-container-orgheadline107" class="outline-4"><h4 id="orgheadline107"><span class="section-number-4">9.15.3</span> 交叉编译Seafile</h4></div><div id="outline-container-orgheadline108" class="outline-4"><h4 id="orgheadline108"><span class="section-number-4">9.15.4</span> 参考资料</h4><div class="outline-text-4" id="text-9-15-4"><p>官网：<a href="https://github.com/haiwen/seafile" target="_blank" rel="noopener">https://github.com/haiwen/seafile</a></p><p>编译：<a href="http://manual.seafile.com/build_seafile/linux.html" target="_blank" rel="noopener">http://manual.seafile.com/build_seafile/linux.html</a></p></div></div></div><div id="outline-container-orgheadline109" class="outline-3"><h3 id="orgheadline109"><span class="section-number-3">9.16</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> SparkleShare</h3><div class="outline-text-3" id="text-9-16"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2017-02-20 一 11:39]</span></span></li><li><p>State "WAIT/FORWARD" from "CANCEL"     <span class="timestamp-wrapper"><span class="timestamp">[2016-08-03 三 09:15] </span></span> <br>is it available as a git client?</p><p>考察是否能将其仅做为git户端使用，这样就不需要服务端有运行的了。服务端只需要有git即可。</p></li><li>State "CANCEL"     from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-07-28 四 18:30] </span></span> <br>取消，因为依赖 <code>git-lfs</code>,而 <code>git-lfs</code> 是用 go 写的，并且可能依赖外部服务。</li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-07-27 三 09:29]</span></span></li></ul><p>这是一个基于git的类dropbox网盘。</p><p>还需要基于图形环境。</p></div><div id="outline-container-orgheadline110" class="outline-4"><h4 id="orgheadline110"><span class="section-number-4">9.16.1</span> <span class="done CANCEL">CANCEL</span> PC上的编译安装</h4><div class="outline-text-4" id="text-9-16-1"><ul class="org-ul"><li>State "CANCEL"     from "MAYBE/FUTURE" <span class="timestamp-wrapper"><span class="timestamp">[2016-08-03 三 11:56] </span></span> <br>没有必要在PC上源码安装，只需在使用的机器上有一个sparkleshare客户端即可，因为服务端就是git服务器。没有必要考虑交叉编译。</li><li>State "MAYBE/FUTURE" from              <span class="timestamp-wrapper"><span class="timestamp">[2016-08-03 三 09:38]</span></span></li></ul></div><div id="outline-container-orgheadline247" class="outline-5"><h5 id="orgheadline247"><span class="section-number-5">9.16.1.1</span> 依赖</h5><div class="outline-text-5" id="text-9-16-1-1"></div><ol class="org-ol"><li><a id="orgheadline242"></a>安装curl<br><div class="outline-text-6" id="text-9-16-1-1-1"><p>参考： <a href="#orgheadline40">安装php所需依赖</a></p></div></li><li><a id="orgheadline243"></a>安装git<br><div class="outline-text-6" id="text-9-16-1-1-2"><p>参考： <a href="#orgheadline58">小米路由器 <code>git</code> 源码交叉编译</a></p></div></li><li><a id="orgheadline244"></a><span class="done CANCEL">CANCEL</span> 安装git-lfs<br><div class="outline-text-6" id="text-9-16-1-1-3"><ul class="org-ul"><li>State "CANCEL"     from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-07-28 四 18:32] </span></span> <br>取消，考虑git-annex.</li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-07-27 三 10:45]</span></span></li></ul><p>官网：<a href="https://github.com/github/git-lfs/releases" target="_blank" rel="noopener">https://github.com/github/git-lfs/releases</a></p><p>下载：</p><div class="org-src-container"><pre class="src src-sh">$wget -c https://github.com/github/git-lfs/archive/v1.2.0.tar.gz</pre></div></div></li><li><a id="orgheadline245"></a>libtool<br><div class="outline-text-6" id="text-9-16-1-1-4"><div class="org-src-container"><pre class="src src-sh">$sudo apt-get install libtool</pre></div></div></li><li><a id="orgheadline246"></a>mono<br></li></ol></div><div id="outline-container-orgheadline248" class="outline-5"><h5 id="orgheadline248"><span class="section-number-5">9.16.1.2</span> 下载：</h5><div class="outline-text-5" id="text-9-16-1-2"><div class="org-src-container"><pre class="src src-sh">$wget -c https://github.com/hbons/SparkleShare/archive/1.5.0.tar.gz$./autogen.sh</pre></div></div></div></div><div id="outline-container-orgheadline111" class="outline-4"><h4 id="orgheadline111"><span class="section-number-4">9.16.2</span> Ubuntu上直接安装</h4><div class="outline-text-4" id="text-9-16-2"></div><div id="outline-container-orgheadline249" class="outline-5"><h5 id="orgheadline249"><span class="section-number-5">9.16.2.1</span> 安装</h5><div class="outline-text-5" id="text-9-16-2-1"><p>因为服务端就是git服务器，只需在使用的机器上有一个sparkleshare客户端即可，没有必要在PC上源码安装，也没有必要考虑交叉编译。</p><div class="org-src-container"><pre class="src src-sh">$sudo add-apt-repository ppa:warp10/sparkleshare$sudo apt-get update$sudo apt-get install sparkleshare libwebkit1.1-cil git-core</pre></div><p>可能还需要安装python-nautilus，防止某些系统打开之后软件崩溃：</p><div class="org-src-container"><pre class="src src-sh">$sudo apt-get install python-nautilus</pre></div></div></div><div id="outline-container-orgheadline250" class="outline-5"><h5 id="orgheadline250"><span class="section-number-5">9.16.2.2</span> 运行</h5><div class="outline-text-5" id="text-9-16-2-2"><div class="org-src-container"><pre class="src src-sh">$sparkleshare start</pre></div></div></div><div id="outline-container-orgheadline251" class="outline-5"><h5 id="orgheadline251"><span class="section-number-5">9.16.2.3</span> 添加已托管的git项目（位于ssh主机上）</h5><div class="outline-text-5" id="text-9-16-2-3"><p>选择已有的一个git服务器下的git目录添加, 经常会出现无法同步文件的情况。</p><p>如果机器是ssh登录的话，通过终端的log可看到，sparkle会自动登录远端服务器进行 <code>git clone</code>, 但是ssh密码却没有交互输入的地方。</p><p>解决方法：需要将key文件上传到服务器中，实现免密ssh登录。sparkleshare目录中有key文件，.ssh中也有。上传用类似这个命令： <code>ssh-copy-id quietheart@112.74.19.38</code></p></div></div><div id="outline-container-orgheadline254" class="outline-5"><h5 id="orgheadline254"><span class="section-number-5">9.16.2.4</span> 服务端的配置</h5><div class="outline-text-5" id="text-9-16-2-4"><p>Sparkle shared其实就是一个 git 图形客户端。自动定期同步其管辖目录下的git文件。服务端的配置非常简单，只需要有一个git仓库即可。</p><p>关于git的配置这里不做描述，需要的可参考git的相关使用文档： <a href="https://git-scm.com/book/zh/v2" target="_blank" rel="noopener">https://git-scm.com/book/zh/v2</a></p><p>常见的用于sparkle的比较重要的git配置如下：</p></div><ol class="org-ol"><li><a id="orgheadline252"></a>允许push<br><div class="outline-text-6" id="text-9-16-2-4-1"><p>服务端git仓库需要配置成允许push, 修改配置文件修改其 <code>receive.denyCurrentBranch</code> 的值为 <code>ignore</code> ，或者在具有工作目录的仓库中运行 <code>git config receive.denyCurrentBranch ignore</code> .</p></div></li><li><a id="orgheadline253"></a>使用裸库替代有工作目录的git库<br><div class="outline-text-6" id="text-9-16-2-4-2"><p>如果服务端git仓库中包含一个工作目录，那么客户端的Sparkleshare 完成 push之后，服务端会看不到变化的文件。原因是服务端如果在被push的分支上，就无法在实时更新其工作目录结构，需要在服务端手动运行 <code>git reset --hard</code> 才行。</p><p>最好的方法是，将服务端的git库设为裸库（或者镜像？）。</p></div></li></ol></div></div><div id="outline-container-orgheadline112" class="outline-4"><h4 id="orgheadline112"><span class="section-number-4">9.16.3</span> 参考网址：</h4><div class="outline-text-4" id="text-9-16-3"><p>官方网址：<a href="https://www.sparkleshare.org/" target="_blank" rel="noopener">https://www.sparkleshare.org/</a></p><p>代码管理：<a href="https://www.github.com/hbons/SparkleShare" target="_blank" rel="noopener">https://www.github.com/hbons/SparkleShare</a></p><p>源代码安装： <a href="https://github.com/hbons/SparkleShare/blob/master/SparkleShare/Linux/README.md" target="_blank" rel="noopener">https://github.com/hbons/SparkleShare/blob/master/SparkleShare/Linux/README.md</a></p><p>Wiki： <a href="https://www.github.com/hbons/SparkleShare/wiki" target="_blank" rel="noopener">https://www.github.com/hbons/SparkleShare/wiki</a></p><p>git-annex： <a href="http://git-annex.branchable.com/walkthrough/" target="_blank" rel="noopener">http://git-annex.branchable.com/walkthrough/</a></p><p>git-annex:  <a href="http://git-annex.branchable.com/" target="_blank" rel="noopener">http://git-annex.branchable.com/</a></p></div></div></div><div id="outline-container-orgheadline113" class="outline-3"><h3 id="orgheadline113"><span class="section-number-3">9.17</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> dvcs-autosync</h3><div class="outline-text-3" id="text-9-17"><ul class="org-ul"><li>State "MAYBE/FUTURE" from              <span class="timestamp-wrapper"><span class="timestamp">[2016-07-28 四 19:53]</span></span></li></ul></div></div><div id="outline-container-orgheadline114" class="outline-3"><h3 id="orgheadline114"><span class="section-number-3">9.18</span> <span class="done CANCEL">CANCEL</span> git annex</h3><div class="outline-text-3" id="text-9-18"><ul class="org-ul"><li>State "CANCEL"     from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-07-29 五 11:57] </span></span> <br>语言太奇葩：Haskell.</li><li>State "NEXT"       from "CANCEL"     <span class="timestamp-wrapper"><span class="timestamp">[2016-07-29 五 11:36]</span></span></li><li>State "CANCEL"     from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-07-28 四 19:39] </span></span> <br>使用麻烦，安装也不一定好弄</li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-07-28 四 18:32]</span></span></li></ul><p>开发语言比较奇葩</p><pre class="example">git-annex is Free Software, written in Haskell. You can contribute!</pre></div><div id="outline-container-orgheadline115" class="outline-4"><h4 id="orgheadline115"><span class="section-number-4">9.18.1</span> 源代码</h4><div class="outline-text-4" id="text-9-18-1"><div class="org-src-container"><pre class="src src-sh">git clone https://github.com/joeyh/git-annex.git</pre></div></div></div><div id="outline-container-orgheadline116" class="outline-4"><h4 id="orgheadline116"><span class="section-number-4">9.18.2</span> 参考资料</h4><div class="outline-text-4" id="text-9-18-2"><p>官方网站：<a href="http://git-annex.branchable.com/" target="_blank" rel="noopener">http://git-annex.branchable.com/</a></p><p>学习的起点：<a href="https://writequit.org/articles/getting-started-with-git-annex.html" target="_blank" rel="noopener">https://writequit.org/articles/getting-started-with-git-annex.html</a></p><p>使用举例：<a href="http://git-annex.branchable.com/walkthrough/#index10h2" target="_blank" rel="noopener">http://git-annex.branchable.com/walkthrough/#index10h2</a></p><p>下载应用：<a href="https://downloads.kitenet.net/git-annex/android/current/" target="_blank" rel="noopener">https://downloads.kitenet.net/git-annex/android/current/</a></p><p>源代码：<a href="https://github.com/joeyh/git-annex" target="_blank" rel="noopener">https://github.com/joeyh/git-annex</a></p><p>其他：<a href="http://hackage.haskell.org/package/git-annex" target="_blank" rel="noopener">http://hackage.haskell.org/package/git-annex</a></p></div></div></div><div id="outline-container-orgheadline117" class="outline-3"><h3 id="orgheadline117"><span class="section-number-3">9.19</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> git lfs</h3><div class="outline-text-3" id="text-9-19"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-08-03 三 19:02]</span></span></li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-07-29 五 12:05]</span></span></li></ul><p>服务器？go语言？<a href="https://git-lfs.github.com/" target="_blank" rel="noopener">https://git-lfs.github.com/</a></p></div></div><div id="outline-container-orgheadline118" class="outline-3"><h3 id="orgheadline118"><span class="section-number-3">9.20</span> <span class="todo NEXT">NEXT</span> 交叉编译安装Python</h3><div class="outline-text-3" id="text-9-20"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-10-28 五 16:26]</span></span></li></ul></div><div id="outline-container-orgheadline119" class="outline-4"><h4 id="orgheadline119"><span class="section-number-4">9.20.1</span> 下载</h4><div class="outline-text-4" id="text-9-20-1"><div class="org-src-container"><pre class="src src-sh">$wget -c http://mirrors.sohu.com/python/3.4.1/Python-3.4.1.tar.xz$tar -xJvf Python-3.4.1.tar.xz</pre></div></div></div><div id="outline-container-orgheadline120" class="outline-4"><h4 id="orgheadline120"><span class="section-number-4">9.20.2</span> 配置交叉编译环境路径</h4><div class="outline-text-4" id="text-9-20-2"><p>参考：<a href="#orgheadline76">小米路由器交叉编译环境配置</a></p></div></div><div id="outline-container-orgheadline121" class="outline-4"><h4 id="orgheadline121"><span class="section-number-4">9.20.3</span> 安装</h4><div class="outline-text-4" id="text-9-20-3"></div><div id="outline-container-orgheadline255" class="outline-5"><h5 id="orgheadline255"><span class="section-number-5">9.20.3.1</span> 先编译PC版本的Parser</h5><div class="outline-text-5" id="text-9-20-3-1"><div class="org-src-container"><pre class="src src-sh">$./configure$make Parser/pgen</pre></div></div></div><div id="outline-container-orgheadline256" class="outline-5"><h5 id="orgheadline256"><span class="section-number-5">9.20.3.2</span> 修改 <code>configure</code></h5><div class="outline-text-5" id="text-9-20-3-2"><p>如果不修改，后面运行 <code>./configure</code> 的时候会报错，并且，根据这 <code>config.log</code> 可以定位到下面需要修改的位置。</p><p>修改如下：</p><div class="org-src-container"><pre class="src src-sh">$vim configure......if test "$cross_compiling" = yes; then        echo "skip cross compile test"#    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for python interpreter for cross build" &gt;&amp;5#$as_echo_n "checking for python interpreter for cross build... " &gt;&amp;6; }#    if test -z "$PYTHON_FOR_BUILD"; then#        for interp in python$PACKAGE_VERSION python3 python; do#           which $interp &gt;/dev/null 2&gt;&amp;1 || continue#           if $interp -c 'import sys;sys.exit(not sys.version_info[:2] &gt;= (3,3))'; then#               break#           fi#            interp=#       done#        if test x$interp = x; then#           as_fn_error $? "python$PACKAGE_VERSION interpreter not found" "$LINENO" 5#       fi#        { $as_echo "$as_me:${as_lineno-$LINENO}: result: $interp" &gt;&amp;5#$as_echo "$interp" &gt;&amp;6; }#       PYTHON_FOR_BUILD='_PYTHON_PROJECT_BASE=$(abs_builddir) _PYTHON_HOST_PLATFORM=$(_PYTHON_HOST_PLATFORM) PYTHONPATH=$(shell test -f pybuilddir.txt &amp;&amp; echo $(abs_builddir)/`cat pybuilddir.txt`:)$(srcdir)/Lib:$(srcdir)/Lib/$(PLATDIR) '$interp#    fielif test "$cross_compiling" = maybe; then......</pre></div><div class="org-src-container"><pre class="src src-sh">$./configure --host=arm-xiaomi-linux-uclibcgnueabi --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop CC=arm-xiaomi-linux-uclibcgnueabi-gcc LDFLAGS=-L/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/lib CFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include CPPFLAGS=-I/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop/include --disable-ipv6</pre></div></div></div></div><div id="outline-container-orgheadline122" class="outline-4"><h4 id="orgheadline122"><span class="section-number-4">9.20.4</span> 参考资料：</h4><div class="outline-text-4" id="text-9-20-4"><p><a href="http://blog.aboutc.net/linux/61/install-python-on-linux" target="_blank" rel="noopener">http://blog.aboutc.net/linux/61/install-python-on-linux</a></p><p><a href="http://www.2cto.com/kf/201305/208310.html" target="_blank" rel="noopener">http://www.2cto.com/kf/201305/208310.html</a></p><p>官网网址下载 <a href="https://www.python.org/ftp/python/3.5.2/Python-3.5.2.tar.xz" target="_blank" rel="noopener">https://www.python.org/ftp/python/3.5.2/Python-3.5.2.tar.xz</a></p></div></div></div><div id="outline-container-orgheadline123" class="outline-3"><h3 id="orgheadline123"><span class="section-number-3">9.21</span> <span class="todo NEXT">NEXT</span> 创建一套小米路由器setup工具脚本</h3><div class="outline-text-3" id="text-9-21"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2017-02-20 一 11:40]</span></span></li></ul><p>比如： <code>setup_mi.sh</code></p><div class="org-src-container"><pre class="src src-sh">./setup_mi.sh git [enabled|disabled]./setup_mi.sh ftp [enabled|disabled]...</pre></div></div></div><div id="outline-container-orgheadline124" class="outline-3"><h3 id="orgheadline124"><a id="ID-bdbc2179-04a3-4c75-a5ff-bf7fccd3ead0"></a><span class="section-number-3">9.22</span> <span class="todo NEXT">NEXT</span> Mongodb交叉编译</h3><div class="outline-text-3" id="text-9-22"><ul class="org-ul"><li>State "NEXT"       from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2017-05-19 五 18:08]</span></span></li><li>State "LATER"      from              <span class="timestamp-wrapper"><span class="timestamp">[2017-04-28 五 10:41]</span></span></li></ul></div><div id="outline-container-orgheadline125" class="outline-4"><h4 id="orgheadline125"><span class="section-number-4">9.22.1</span> source</h4><div class="outline-text-4" id="text-9-22-1"><p><a href="https://fastdl.mongodb.org/src/mongodb-src-r3.2.13.tar.gz?_ga=2.19480760.126996370.1495188701-1857806401.1491882057" target="_blank" rel="noopener">https://fastdl.mongodb.org/src/mongodb-src-r3.2.13.tar.gz?_ga=2.19480760.126996370.1495188701-1857806401.1491882057</a></p></div></div><div id="outline-container-orgheadline126" class="outline-4"><h4 id="orgheadline126"><span class="section-number-4">9.22.2</span> 参考</h4><div class="outline-text-4" id="text-9-22-2"><p><a href="https://www.mongodb.com/dr/fastdl.mongodb.org/linux/mongodb-linux-arm64-ubuntu1604-3.4.4.tgz/download" target="_blank" rel="noopener">https://www.mongodb.com/dr/fastdl.mongodb.org/linux/mongodb-linux-arm64-ubuntu1604-3.4.4.tgz/download</a></p><p><a href="https://www.mongodb.com/download-center#community" target="_blank" rel="noopener">https://www.mongodb.com/download-center#community</a></p><p><a href="https://github.com/Barryrowe/mongo-arm" target="_blank" rel="noopener">https://github.com/Barryrowe/mongo-arm</a></p><p><a href="http://blog.csdn.net/sishuihuahua/article/details/70208865" target="_blank" rel="noopener">http://blog.csdn.net/sishuihuahua/article/details/70208865</a></p><p><a href="http://www.360doc.com/content/11/0520/09/2660674_118051404.shtml" target="_blank" rel="noopener">http://www.360doc.com/content/11/0520/09/2660674_118051404.shtml</a></p></div></div></div><div id="outline-container-orgheadline127" class="outline-3"><h3 id="orgheadline127"><span class="section-number-3">9.23</span> <span class="todo NEXT">NEXT</span> 编译openssh</h3><div class="outline-text-3" id="text-9-23"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2017-05-04 四 09:29]</span></span></li></ul></div><div id="outline-container-orgheadline128" class="outline-4"><h4 id="orgheadline128"><span class="section-number-4">9.23.1</span> 实践</h4><div class="outline-text-4" id="text-9-23-1"></div><div id="outline-container-orgheadline257" class="outline-5"><h5 id="orgheadline257"><span class="section-number-5">9.23.1.1</span> 下载</h5><div class="outline-text-5" id="text-9-23-1-1"><div class="org-src-container"><pre class="src src-sh">$wget -c ftp://ftp.kddilabs.jp/pub/OpenBSD/OpenSSH/portable/openssh-7.5p1.tar.gz</pre></div></div></div><div id="outline-container-orgheadline258" class="outline-5"><h5 id="orgheadline258"><span class="section-number-5">9.23.1.2</span> 配置交叉编译环境</h5><div class="outline-text-5" id="text-9-23-1-2"><p>参考： <a href="#orgheadline24">小米路由器交叉编译环境配置</a></p></div></div><div id="outline-container-orgheadline263" class="outline-5"><h5 id="orgheadline263"><span class="section-number-5">9.23.1.3</span> 交叉编译</h5><div class="outline-text-5" id="text-9-23-1-3"></div><ol class="org-ol"><li><a id="orgheadline259"></a>依赖的编译<br><div class="outline-text-6" id="text-9-23-1-3-1"><p>需要编译zlib和openssl，参考： <a href="#orgheadline26">交叉编译安装zlib</a></p><p><a href="#orgheadline27">交叉编译openssl</a></p></div></li><li><a id="orgheadline260"></a>ssh的编译<br><div class="outline-text-6" id="text-9-23-1-3-2"><p>/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop </p><div class="org-src-container"><pre class="src src-sh">$tar -xzvf openssh-7.5p1.tar.gz$cd openssh-7.5p1$./configure --prefix=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --host=arm-xiaomi-linux-uclibcgnueabi --with-libs --with-zlib=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --with-ssl-dir=/home/miracle/work/1_inbox/xiaomirouter/test/usr/local/develop --disable-etc-default-login CC=arm-xiaomi-linux-uclibcgnueabi-gcc AR=arm-xiaomi-linux-uclibcgnueabi-ar$vim Makefile...#STRIP_OPT=-sSTRIP_OPT=-s --strip-program=/home/miracle/work/1_inbox/xiaomirouter/test/sdk_package/toolchain/bin/arm-xiaomi-linux-uclibcgnueabi-strip...$make$make install-nokeys</pre></div></div></li><li><a id="orgheadline261"></a>配置文件<br><div class="outline-text-6" id="text-9-23-1-3-3"><div class="org-src-container"><pre class="src src-sh">$vim /usr/local/develop/etc/sshd_config...HostKey /userdisk/data/opt/usr/local/develop/etc/ssh_host_rsa_keyHostKey /userdisk/data/opt/usr/local/develop/etc/ssh_host_dsa_key...Subsystem       sftp    /userdisk/data/opt/usr/local/develop/libexec/sftp-server...</pre></div></div></li><li><a id="orgheadline262"></a>运行<br><div class="outline-text-6" id="text-9-23-1-3-4"><p>部署到xiaomi路由上，添加好环境变量之后。</p><div class="org-src-container"><pre class="src src-sh">#vi /etc/passwd...sshd:*:56:56:sshd:/root:/bin/false       ...#cd /userdisk/data/opt/usr/local/develop/etc/#ssh-keygen -t rsa -f ssh_host_rsa_key -N ""#ssh-keygen -t dsa -f ssh_host_dsa_key -N ""#mkdir /var/empty#/userdisk/data/opt/usr/local/develop/sbin/sshd -f /userdisk/data/opt/usr/local/develop/etc/sshd_config</pre></div></div></li></ol></div></div><div id="outline-container-orgheadline129" class="outline-4"><h4 id="orgheadline129"><span class="section-number-4">9.23.2</span> 参考</h4><div class="outline-text-4" id="text-9-23-2"><p>官网：<a href="http://www.openssh.com/portable.html" target="_blank" rel="noopener">http://www.openssh.com/portable.html</a></p><p>参考：<a href="http://blog.csdn.net/gubenpeiyuan/article/details/32325691" target="_blank" rel="noopener">http://blog.csdn.net/gubenpeiyuan/article/details/32325691</a></p></div></div></div><div id="outline-container-orgheadline130" class="outline-3"><h3 id="orgheadline130"><span class="section-number-3">9.24</span> <span class="todo NEXT">NEXT</span> 整理一些常见库的交叉编译</h3><div class="outline-text-3" id="text-9-24"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2017-05-04 四 09:42]</span></span></li></ul><p>参考：<a href="#orgheadline25">小米路由器上交叉编译一些常见库</a></p></div></div><div id="outline-container-orgheadline131" class="outline-3"><h3 id="orgheadline131"><a id="ID-33db35c0-3ad7-44c6-bf8c-3d2da526e4ae"></a><span class="section-number-3">9.25</span> <span class="todo NEXT">NEXT</span> leannote</h3><div class="outline-text-3" id="text-9-25"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2017-05-18 四 16:28]</span></span></li></ul></div><div id="outline-container-orgheadline132" class="outline-4"><h4 id="orgheadline132"><a id="ID-d0397bed-4a25-4c57-8588-3c7e0e89ab6a"></a><span class="section-number-4">9.25.1</span> <span class="done DONE">DONE</span> PC上的Leannote编译安装</h4><div class="outline-text-4" id="text-9-25-1"><ul class="org-ul"><li>State "DONE"       from              <span class="timestamp-wrapper"><span class="timestamp">[2017-05-19 五 17:55]</span></span></li><li>State "LATER"      from              <span class="timestamp-wrapper"><span class="timestamp">[2017-04-28 五 10:43]</span></span></li></ul></div><div id="outline-container-orgheadline264" class="outline-5"><h5 id="orgheadline264"><span class="section-number-5">9.25.1.1</span> 下载</h5><div class="outline-text-5" id="text-9-25-1-1"><p>Leannote: <a href="https://github.com/leanote/leanote" target="_blank" rel="noopener">https://github.com/leanote/leanote</a></p><p>Mongodb（如果不使用 <code>apt-get</code> 安装）: <a href="https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.0.1.tgz" target="_blank" rel="noopener">https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.0.1.tgz</a></p></div></div><div id="outline-container-orgheadline267" class="outline-5"><h5 id="orgheadline267"><span class="section-number-5">9.25.1.2</span> 安装</h5><div class="outline-text-5" id="text-9-25-1-2"></div><ol class="org-ol"><li><a id="orgheadline265"></a>安装Mondb和leannote<br><div class="outline-text-6" id="text-9-25-1-2-1"><div class="org-src-container"><pre class="src src-sh">$tar -xzvf leanote-linux-amd64-v2.4.bin.tar.gz$pwd/home/miracle/myinstalled/leanote$sudo apt-get install mongodb$mkdir -p ~/mydata/mongodb_data$mongod --dbpath ~/mydata/mongodb_data...</pre></div><p>注意：如果不使用 <code>apt-get</code> 安装 <code>mongodb</code>, 可下载前面给出的Mongodb的链接，解压后，以将 <code>Mongodb</code> 的执行路径添加到PATH中。</p></div></li><li><a id="orgheadline266"></a>导入Leannote数据<br><div class="outline-text-6" id="text-9-25-1-2-2"><p>不同的Mongodb版本，数据导入略有不同。</p><p>Mongodb v2</p><div class="org-src-container"><pre class="src src-sh">$mongorestore -h localhost -d leanote --directoryperdb /home/miracle/myinstalled/leanote/mongodb_backup/leanote_install_data/</pre></div><p>Mongodb v3</p><div class="org-src-container"><pre class="src src-sh">$mongorestore -h localhost -d leanote --dir /home/miracle/myinstalled/leanote/mongodb_backup/leanote_install_data/</pre></div><p>查看导入的数据</p><div class="org-src-container"><pre class="src src-sh">$ mongoMongoDB shell version: 2.0.4connecting to: test&gt; show dbsleanote 0.203125GBlocal   (empty)&gt; use leanoteswitched to db leanote&gt; show collectionsalbumsattachsblog_commentsblog_likesblog_singlesconfigsemail_logsfilesfind_pwds......</pre></div><p>初始数据users表中已有2个用户:</p><pre class="example">user1 username: admin, password: abc123 (管理员, 只有该用户才有权管理后台, 请及时修改密码)user2 username: demo@leanote.com, password: demo@leanote.com (仅供体验使用)</pre></div></li></ol></div><div id="outline-container-orgheadline268" class="outline-5"><h5 id="orgheadline268"><span class="section-number-5">9.25.1.3</span> 配置Leannote</h5><div class="outline-text-5" id="text-9-25-1-3"><div class="org-src-container"><pre class="src src-sh">$vim conf/app.conf...app.secret=任意值...</pre></div></div></div><div id="outline-container-orgheadline269" class="outline-5"><h5 id="orgheadline269"><span class="section-number-5">9.25.1.4</span> 运行Leannote</h5><div class="outline-text-5" id="text-9-25-1-4"><div class="org-src-container"><pre class="src src-sh">$cd bin$chmod +x run.sh$./run.sh</pre></div></div></div><div id="outline-container-orgheadline270" class="outline-5"><h5 id="orgheadline270"><span class="section-number-5">9.25.1.5</span> 参考</h5><div class="outline-text-5" id="text-9-25-1-5"><p><a href="http://blog.csdn.net/zcf1002797280/article/details/51011040" target="_blank" rel="noopener">http://blog.csdn.net/zcf1002797280/article/details/51011040</a></p></div></div></div><div id="outline-container-orgheadline133" class="outline-4"><h4 id="orgheadline133"><span class="section-number-4">9.25.2</span> 交叉编译适用于小米路由的go环境</h4><div class="outline-text-4" id="text-9-25-2"><p>参考： <a href="#orgheadline30">交叉编译适用于小米路由的go环境</a></p></div></div><div id="outline-container-orgheadline134" class="outline-4"><h4 id="orgheadline134"><span class="section-number-4">9.25.3</span> 交叉编译Mongodb</h4></div><div id="outline-container-orgheadline135" class="outline-4"><h4 id="orgheadline135"><span class="section-number-4">9.25.4</span> 参考</h4><div class="outline-text-4" id="text-9-25-4"><p>安装leanote <a href="https://www.idaybreak.com/install-leanote-server.html" target="_blank" rel="noopener">https://www.idaybreak.com/install-leanote-server.html</a></p><p><a href="https://github.com/leanote/leanote/wiki/Leanote-source-installation-on-Mac-and-Linux-(En)" target="_blank" rel="noopener">https://github.com/leanote/leanote/wiki/Leanote-source-installation-on-Mac-and-Linux-(En)</a></p></div></div></div></div><br><div id="mypostamble" align="right" style="float:right" class="status">    <table> <tbody> <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Author</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">QuietHeart</td>  </tr><tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Email</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">    <a href="mailto:quiet_heart000@126.com" target="_blank" rel="noopener">quiet_heart000@126.com</a>  </td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Date</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">[2016-04-07 四 18:52]</td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Update</td>  <td style="border-style: solid;border-width:1px;border-right:0px;"><2018-03-16 五 10:37:23></2018-03-16></td></tr>    </tbody></table></div><br>]]></content>
    
    <summary type="html">
    
      
      
        

&lt;style type=&quot;text/css&quot;&gt;
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
            
      
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
      <category term="study" scheme="http://0.0.0.0:4000/categories/categories/study/"/>
    
      <category term="linux" scheme="http://0.0.0.0:4000/categories/categories/study/linux/"/>
    
      <category term="misc" scheme="http://0.0.0.0:4000/categories/categories/study/linux/misc/"/>
    
    
  </entry>
  
  <entry>
    <title>关于linux中的时间和时区</title>
    <link href="http://0.0.0.0:4000/2016/02/18/linux_time_timezone/"/>
    <id>http://0.0.0.0:4000/2016/02/18/linux_time_timezone/</id>
    <published>2016-02-17T16:00:00.000Z</published>
    <updated>2019-09-11T08:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">  .title  { text-align: center;             margin-bottom: .2em; }  .subtitle { text-align: center;              font-size: medium;              font-weight: bold;              margin-top:0; }  .todo   { font-family: monospace; color: red; }  .done   { font-family: monospace; color: green; }  .priority { font-family: monospace; color: orange; }  .tag    { background-color: #eee; font-family: monospace;            padding: 2px; font-size: 80%; font-weight: normal; }  .timestamp { color: #bebebe; }  .timestamp-kwd { color: #5f9ea0; }  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }  .org-center { margin-left: auto; margin-right: auto; text-align: center; }  .underline { text-decoration: underline; }  #postamble p, #preamble p { font-size: 90%; margin: .2em; }  p.verse { margin-left: 3%; }  pre {    border: 1px solid #0c0;    box-shadow: 1px 1px 1px #0e0;    padding: 8pt;    font-family: italic monospace;    color: #C7EDCC;    background-color: #111111;    overflow: auto;    margin: 1.2em;  }  pre.src {    position: relative;    overflow: visible;    padding-top: 1.2em;  }  pre.src:before {    display: none;    position: absolute;    background-color: white;    top: -10px;    right: 10px;    padding: 3px;    border: 1px solid black;  }  pre.src:hover:before { display: inline;}  pre.src-sh:before    { content: 'sh'; }  pre.src-bash:before  { content: 'sh'; }  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }  pre.src-R:before     { content: 'R'; }  pre.src-perl:before  { content: 'Perl'; }  pre.src-java:before  { content: 'Java'; }  pre.src-sql:before   { content: 'SQL'; }  table { border-collapse:collapse; }  caption.t-above { caption-side: top; }  caption.t-bottom { caption-side: bottom; }  td, th { vertical-align:top;  }  th.org-right  { text-align: center;  }  th.org-left   { text-align: center;   }  th.org-center { text-align: center; }  td.org-right  { text-align: right;  }  td.org-left   { text-align: left;   }  td.org-center { text-align: center; }  dt { font-weight: bold; }  .footpara { display: inline; }  .footdef  { margin-bottom: 1em; }  .figure { padding: 1em; }  .figure p { text-align: center; }  .inlinetask {    padding: 10px;    border: 2px solid gray;    margin: 10px;    background: #ffffcc;  }  #org-div-home-and-up   { text-align: right; font-size: 70%; white-space: nowrap; }  .linenr { font-size: smaller }  .code-highlighted { background-color: #ffff00; }  .org-info-js_info-navigation { border-style: none; }  #org-info-js_console-label    { font-size: 10px; font-weight: bold; white-space: nowrap; }  .org-info-js_search-highlight    { background-color: #ffff00; color: #000000; font-weight: bold; }    code {        border:groove #555555;border-width:thin;        background-color: #111111;color: #C7EDCC;    }#table-of-contents {    font-size: 9pt;    position: fixed;    right: 10px;    top: 14em;    margin:0;    padding:0;    border-width:1px;    border-style:solid;    background: #000000;    -webkit-box-shadow: 0 0 1em #777777;    -moz-box-shadow: 0 0 1em #777777;    -webkit-border-bottom-left-radius: 5px;    -moz-border-radius-bottomleft: 5px;    text-align: right;    /* ensure doesn't flow off the screen when expanded */    max-height: 60%;    overflow: auto;     z-index: 200;}#table-of-contents h2 {    font-size: 9pt;    max-width: 8em;    font-weight: normal;    padding-left: 0.5em;    padding-top: 0.05em;    padding-bottom: 0.05em; }#table-of-contents ul {    margin-left: 14pt;     margin-bottom: 10pt;    padding: 0}#table-of-contents li {    padding: 0;    margin: 1px;    list-style: none;}#table-of-contents ul>:first-child {    color: blue;}#table-of-contents #text-table-of-contents {    display: none;    text-align: left;}#table-of-contents:hover #text-table-of-contents {    display: block;    padding: 0.5em;    margin-top: -1.5em; }</style><div id="table-of-contents"><h2>Table of Contents</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 基本概念</a><ul><li><a href="#orgheadline2">1.1. 系统时钟和硬件时钟</a></li><li><a href="#orgheadline3">1.2. 硬件时间和系统时间的同步</a></li><li><a href="#orgheadline4">1.3. 时间和时区</a></li></ul></li><li><a href="#orgheadline5">2. 常用命令</a></li><li><a href="#orgheadline6">3. 配置文件与环境变量</a></li><li><a href="#orgheadline7">4. 库函数</a></li><li><a href="#orgheadline8">5. 应用举例</a><ul><li><a href="#orgheadline9">5.1. 在单一进程中修改时区的方法</a></li><li><a href="#orgheadline10">5.2. 时间同步校准</a></li></ul></li><li><a href="#orgheadline11">6. 其它</a><ul><li><a href="#orgheadline12">6.1. 参考</a></li></ul></li></ul></div></div><p>这里主要讲述linux中时间和时区相关的原理。包括设置方法、配置、环境变量、以及库函数，及应用举例。</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 基本概念</h2><div class="outline-text-2" id="text-1"></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> 系统时钟和硬件时钟</h3><div class="outline-text-3" id="text-1-1"><p>Linux时钟分为系统时钟 （System Clock）和硬件（Real Time Clock，简称RTC）时钟。系统时钟是指当前Linux Kernel中的时钟，而硬件时钟则是主板上由电池供电的时钟，这个硬件时钟可以在BIOS中进行设置。当Linux启动时，硬件时钟会去读取系统时钟的设置，然后系统时钟就会独立于硬件运作。</p></div></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">1.2</span> 硬件时间和系统时间的同步</h3><div class="outline-text-3" id="text-1-2"><p>重新启动系统，硬件时间会读取系统时间，实现同步，但是在不重新启动的时候，需要用hwclock或clock命令实现同步。</p></div></div><div id="outline-container-orgheadline4" class="outline-3"><h3 id="orgheadline4"><span class="section-number-3">1.3</span> 时间和时区</h3><div class="outline-text-3" id="text-1-3"><p>UTC：协调世界时，又称世界标准时间，简称UTC，从英文国际时间/法文协调时间”Universal Time/Temps Cordonné”而来。</p><p>时区：反映与UTC的时差问题，中国大陆、香港、澳门、台湾、蒙古国、新加坡、马来西亚、菲律宾、澳洲西部的时间与UTC的时差均为+8，也就是UTC+8。各个地区的时间都是UTC结合地区的时区信息得到的。</p><p>整个地球分为二十四时区，每个时区都有自己的本地时间，他们的关系如下：</p><ol class="org-ol"><li><p>UTC时间 与 GMT时间</p><p>我们可以认为格林威治时间就是时间协调时间（GMT = UTC），格林威治时间和UTC时间都用秒数来计算的。</p></li><li><p>UTC时间与本地时间</p><p>UTC + 时区差 = 本地时间</p><p>时区差东为正，西为负。</p></li><li><p>UTC与Unix时间戳</p><p>在计算机中看到的UTC时间都是从（1970年01月01日 0:00:00)开始计算秒数的。所看到的UTC时间那就是从1970年这个时间点起到具体时间共有多少秒。 这个秒数就是Unix时间戳。</p></li></ol><p>例如： </p><pre class="example">本地（北京）在东八区， 东八区时区差记为 +0800，则：本地（北京）时间 = UTC + (+0800)</pre><p>所以，不同地区， 其本地时间各不相同。</p><p>再如， 对于中国和格林，这两个地区的时区不同，得到的时间也不同。分别如下：</p><pre class="example">CST：中国标准时间（China Standard Time），与UTC时差为8,这个解释可能是针对RedHat Linux。GMT：格林尼治标准时间（旧译格林威治平均时间或格林威治标准时间；英语：Greenwich Mean Time，GMT）是指位于英国伦敦郊区的皇家格林尼治天文台的标准时间，因为本初子午线被定义在通过那里的经线。</pre></div></div></div><div id="outline-container-orgheadline5" class="outline-2"><h2 id="orgheadline5"><span class="section-number-2">2</span> 常用命令</h2><div class="outline-text-2" id="text-2"><p>下面给出的是常见的命令，不同系统可能有不同的命令。</p><p>有关系统时间的命令: data,ntpupdate</p><p>有关硬件时钟的命令: hwclock/clock</p><p>时区相关命令: tzselect</p></div></div><div id="outline-container-orgheadline6" class="outline-2"><h2 id="orgheadline6"><span class="section-number-2">3</span> 配置文件与环境变量</h2><div class="outline-text-2" id="text-3"><p>时区信息一般首先从环境变量中去读，如果没有再从 <code>/etc/TZ</code> 等配置文件中去读。</p><p>所涉及的配置文件和环境变量可能会根据系统有所不同，一般情况如下：</p><ol class="org-ol"><li>时区的配置文件: <i>etc/localtime (可以是/usr/share/zoneinfo</i>&#x2026;的软链接), /etc/TZ, /etc/sysconfig/clock</li><li><p>环境变量： <code>TZ</code>, 使用举例如下:</p><pre class="example">bash中   export TZ="Europe/Moscow"        date -u -s "2011-10-29 21:55:00"cshell中 setenv TZ Europe/Moscow</pre></li></ol></div></div><div id="outline-container-orgheadline7" class="outline-2"><h2 id="orgheadline7"><span class="section-number-2">4</span> 库函数</h2><div class="outline-text-2" id="text-4"><p>这些为有关时间时区的常见系统库函数。</p><ul class="org-ul"><li><p>time_t time(time_t *t)</p><p>返回 <code>time_t</code> 类型，值为UTC时间从0时0分0秒算起到现在所经过的秒数。</p></li><li><p>struct tm*gmtime(const time_t*timep)</p><p>根据传入的 <code>time_t</code> 返回类型为 <code>struct tm</code> 结构，包含时、分、秒、日、周、月、年、日光节约时间标记等信息的时间表示，该时间为GMT时间，未经时区转换。</p></li><li><p>struct tm *localtime(const time_t * timep)</p><p>根据传入的 <code>time_t</code> 返回类型为 <code>struct tm</code> 结构，包含时、分、秒、日、周、月、年、日光节约时间标记等信息的时间表示，该时间为当地时间，已经时区转换。</p></li><li><p>time_t mktime(struct tm * timeptr)</p><p>将 <code>struct tm</code> 类型的时间转换为  <code>time_t</code> 类型，值为UTC时间从0时0分0秒算起到现在所经过的秒数。</p></li><li><p>char *ctime(const time_t *timep)</p><p>将传入的 <code>time_t</code> 类型时间转化为现实世界中的字符串表示形式，例如： <code>Fri, 16 Oct 2015 23:12:18 +0800</code></p></li><li><p>char * asctime(const struct tm * timeptr)</p><p>将传入的 <code>struct tm</code> 结构类型时间转化为现实世界中的字符串表示形式，例如： <code>Fri Oct 16 15:15:54 2015</code></p></li><li><p>int gettimeofday ( struct timeval * tv , struct timezone * tz )</p><p>返回当前时间信息， <code>struct timeval *tv</code> 存放秒和微秒信息， <code>struct timezone *tz</code> 存放时区信息。</p></li><li><p>int settimeofday ( const struct timeval *tv,const struct timezone *tz)</p><p>根据传入的时间信息 <code>struct timeval *tv</code>, 和时区信息 <code>struct timezone *tz</code> 设置当前时间。</p></li></ul><p>总之，time_t 是用秒数表示时间一般在系统时间戳中使用（一般就是UTC时间）；struct tm 使用结构体表示时间，在程序中使用（不同时区可能会有不同值）；而现实中使用字符串来表示时间，字符串格式可以定制。时区信息一般首先从环境变量中去读，如果没有再从 <code>/etc/TZ</code> 等配置文件中去读。</p></div></div><div id="outline-container-orgheadline8" class="outline-2"><h2 id="orgheadline8"><span class="section-number-2">5</span> 应用举例</h2><div class="outline-text-2" id="text-5"></div><div id="outline-container-orgheadline9" class="outline-3"><h3 id="orgheadline9"><span class="section-number-3">5.1</span> 在单一进程中修改时区的方法</h3><div class="outline-text-3" id="text-5-1"><pre class="example">setenv("TZ","Europe/Moscow",1);tzset();</pre></div></div><div id="outline-container-orgheadline10" class="outline-3"><h3 id="orgheadline10"><span class="section-number-3">5.2</span> 时间同步校准</h3><div class="outline-text-3" id="text-5-2"><p>假设安装完系统发现时间与现实时间相差8小时。</p><p>一般是如下原因：安装系统时选择的时区是上海，而系统启动后把bios时间认为是utc时间，再根据上海所处时区，将时间+8小时给我们。这个时候的bios的时间和软件的时间便出现不一致的情况。一个代表 utc 一个代表我们设置的cst（+8时区）。</p><p>可做如下调整（例如系统为center os 6）：</p><ol class="org-ol"><li><p>修改配置文件，将默认环境变量更正为上海所在时区，不使用UTC时间</p><div class="org-src-container"><pre class="src src-sh">$ vi /etc/sysconfig/clock  ZONE="Asia/Shanghai"UTC=false                          ARC=false</pre></div><p>这个文件影响系统启动后默认的时间相关环境变量值，这里主要是 <code>UTC=false</code> 这个选项，设置硬件时钟不是跟utc一致。</p></li><li><p>将linux的时区设置为 上海</p><div class="org-src-container"><pre class="src src-sh">$ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</pre></div><p>加载配置时间环境变量的文件之前，需要指定好该文件的软链接位置，通过这个可在各个时区配置文件下通用的 <code>/etc/localtime</code> 软链接，可使系统能够找到刚刚设置的时区配置文件，并设置好相应的环境变量。</p></li><li><p>对准时间ntp</p><div class="org-src-container"><pre class="src src-sh">$ntpdate 192.43.244.18</pre></div><p>系统启动之后，系统时间通过 <code>ntpdate</code> 工具在网络上获取到。</p></li><li><p>设置硬件时间和软件时间的一致并校准</p><div class="org-src-container"><pre class="src src-sh">/sbin/hwclock -systohc</pre></div><p>通过这个命令，将系统时间同步至硬件始终上，这样我们的linux软件和计算机硬件都是cst时间了－－并且是我们设置的上海时区。</p></li></ol></div></div></div><div id="outline-container-orgheadline11" class="outline-2"><h2 id="orgheadline11"><span class="section-number-2">6</span> 其它</h2><div class="outline-text-2" id="text-6"></div><div id="outline-container-orgheadline12" class="outline-3"><h3 id="orgheadline12"><span class="section-number-3">6.1</span> 参考</h3><div class="outline-text-3" id="text-6-1"><p><code>man 3 tzset</code></p><p><a href="http://www.linuxidc.com/Linux/2015-09/122979.htm" target="_blank" rel="noopener">解决嵌入式Linux中的时区问题</a></p><p><a href="http://bbs.csdn.net/topics/390023846" target="_blank" rel="noopener">linux调整系统时间和时区的方法</a></p><p><a href="http://www.cnblogs.com/dongzhiquan/archive/2012/01/09/2317633.html" target="_blank" rel="noopener">Linux下设置时区（通过shell设置和程序中设置）及程序中设置环境变量</a></p><p><a href="http://blog.chinaunix.net/uid-26495963-id-3198728.html" target="_blank" rel="noopener">linux时区时间问题ntp</a></p><p><a href="http://www.linuxidc.com/Linux/2015-10/124249.htm" target="_blank" rel="noopener">Linux时间时区详解与常用时间函数</a></p><p><a href="http://www.jb51.net/LINUXjishu/158824.html" target="_blank" rel="noopener">linux修改系统时间和linux查看时区、修改时区的方法</a></p></div></div></div><br><div id="mypostamble" align="right" style="float:right" class="status">    <table> <tbody> <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Author</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">QuietHeart</td>  </tr><tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Email</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">    <a href="mailto:quiet_heart000@126.com" target="_blank" rel="noopener">quiet_heart000@126.com</a>  </td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Date</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">[2016-02-18 四 15:45]</td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Update</td>  <td style="border-style: solid;border-width:1px;border-right:0px;"><2016-03-03 四 11:48:01></2016-03-03></td></tr>    </tbody></table></div><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;style type=&quot;text/css&quot;&gt;
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              
      
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
      <category term="study" scheme="http://0.0.0.0:4000/categories/categories/study/"/>
    
      <category term="linux" scheme="http://0.0.0.0:4000/categories/categories/study/linux/"/>
    
      <category term="misc" scheme="http://0.0.0.0:4000/categories/categories/study/linux/misc/"/>
    
    
  </entry>
  
  <entry>
    <title>网文收集201602</title>
    <link href="http://0.0.0.0:4000/2016/02/16/net_articles201602/"/>
    <id>http://0.0.0.0:4000/2016/02/16/net_articles201602/</id>
    <published>2016-02-15T16:00:00.000Z</published>
    <updated>2019-09-11T08:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">  .title  { text-align: center;             margin-bottom: .2em; }  .subtitle { text-align: center;              font-size: medium;              font-weight: bold;              margin-top:0; }  .todo   { font-family: monospace; color: red; }  .done   { font-family: monospace; color: green; }  .priority { font-family: monospace; color: orange; }  .tag    { background-color: #eee; font-family: monospace;            padding: 2px; font-size: 80%; font-weight: normal; }  .timestamp { color: #bebebe; }  .timestamp-kwd { color: #5f9ea0; }  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }  .org-center { margin-left: auto; margin-right: auto; text-align: center; }  .underline { text-decoration: underline; }  #postamble p, #preamble p { font-size: 90%; margin: .2em; }  p.verse { margin-left: 3%; }  pre {    border: 1px solid #0c0;    box-shadow: 1px 1px 1px #0e0;    padding: 8pt;    font-family: italic monospace;    color: #C7EDCC;    background-color: #111111;    overflow: auto;    margin: 1.2em;  }  pre.src {    position: relative;    overflow: visible;    padding-top: 1.2em;  }  pre.src:before {    display: none;    position: absolute;    background-color: black;    top: -10px;    right: 10px;    padding: 3px;    border: 1px solid black;  }  pre.src:hover:before { display: inline;}  pre.src-sh:before    { content: 'sh'; }  pre.src-bash:before  { content: 'sh'; }  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }  pre.src-R:before     { content: 'R'; }  pre.src-perl:before  { content: 'Perl'; }  pre.src-java:before  { content: 'Java'; }  pre.src-sql:before   { content: 'SQL'; }  table { border-collapse:collapse; }  caption.t-above { caption-side: top; }  caption.t-bottom { caption-side: bottom; }  td, th { vertical-align:top;  }  th.org-right  { text-align: center;  }  th.org-left   { text-align: center;   }  th.org-center { text-align: center; }  td.org-right  { text-align: right;  }  td.org-left   { text-align: left;   }  td.org-center { text-align: center; }  dt { font-weight: bold; }  .footpara { display: inline; }  .footdef  { margin-bottom: 1em; }  .figure { padding: 1em; }  .figure p { text-align: center; }  .inlinetask {    padding: 10px;    border: 2px solid gray;    margin: 10px;    background: #ffffcc;  }  #org-div-home-and-up   { text-align: right; font-size: 70%; white-space: nowrap; }  .linenr { font-size: smaller }  .code-highlighted { background-color: #ffff00; }  .org-info-js_info-navigation { border-style: none; }  #org-info-js_console-label    { font-size: 10px; font-weight: bold; white-space: nowrap; }  .org-info-js_search-highlight    { background-color: #ffff00; color: #000000; font-weight: bold; }    code {        border:groove #555555;border-width:thin;        background-color: #111111;color: #C7EDCC;    }#table-of-contents {    font-size: 9pt;    position: fixed;    right: 10px;    top: 14em;    margin:0;    padding:0;    border-width:1px;    border-style:solid;    background: #000000;    -webkit-box-shadow: 0 0 1em #777777;    -moz-box-shadow: 0 0 1em #777777;    -webkit-border-bottom-left-radius: 5px;    -moz-border-radius-bottomleft: 5px;    text-align: right;    /* ensure doesn't flow off the screen when expanded */    max-height: 60%;    overflow: auto;     z-index: 200;}#table-of-contents h2 {    font-size: 9pt;    max-width: 8em;    font-weight: normal;    padding-left: 0.5em;    padding-top: 0.05em;    padding-bottom: 0.05em; }#table-of-contents ul {    margin-left: 14pt;     margin-bottom: 10pt;    padding: 0}#table-of-contents li {    padding: 0;    margin: 1px;    list-style: none;}#table-of-contents ul>:first-child {    color: blue;}#table-of-contents #text-table-of-contents {    display: none;    text-align: left;}#table-of-contents:hover #text-table-of-contents {    display: block;    padding: 0.5em;    margin-top: -1.5em; }</style><div id="table-of-contents"><h2>Table of Contents</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 网文列表</a><ul><li><a href="#orgheadline2">1.1. <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-02-16 二 17:34&gt; </span></span> pkg-config的用法</a></li><li><a href="#orgheadline3">1.2. <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-02-17 三 15:00&gt; </span></span> Scientific Toolworks Understand for linux 的下载</a></li><li><a href="#orgheadline4">1.3. <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-03-02 三 20:00&gt; </span></span> Git Submodule 使用完整教程</a></li><li><a href="#orgheadline5">1.4. <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-05-24 二 14:11&gt; </span></span> Linux内存泄漏查询方法proc/status解释</a></li><li><a href="#orgheadline6">1.5. <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-08-12 五 16:11&gt; </span></span> CMake 入门实战</a></li><li><a href="#orgheadline7">1.6. <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-09-12 一 14:41&gt; </span></span> Android Native/Tombstone Crash Log 详细分析</a></li></ul></li><li><a href="#orgheadline8">2. 其它</a><ul><li><a href="#orgheadline9">2.1. maff存档格式</a></li><li><a href="#orgheadline10">2.2. 分类管理</a></li></ul></li></ul></div></div><p>这里列出任何时候任何内容下收集的感觉有用的网文。</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 网文列表</h2><div class="outline-text-2" id="text-1"></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-02-16 二 17:34&gt; </span></span> <a href="http://blog.sina.com.cn/s/blog_8af6bbd10101hfdj.html" target="_blank" rel="noopener">pkg-config的用法</a></h3><div class="outline-text-3" id="text-1-1"><p>站内链接：<a href="/data/2016-02-16-net_articles201602.files/pkg-config_usage.html">pkg-config_usage.html</a></p><p>存档：<a href="/data/2016-02-16-net_articles201602.files/pkg-config_usage.html.maff">pkg-config_usage.html.maff</a></p></div></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">1.2</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-02-17 三 15:00&gt; </span></span> <a href="http://blog.csdn.net/look85/article/details/7988332" target="_blank" rel="noopener">Scientific Toolworks Understand for linux 的下载</a></h3><div class="outline-text-3" id="text-1-2"><p>站内链接: <a href="/data/2016-02-16-net_articles201602.files/scitools_understand_for_linux.html">scitools_understand_for_linux.html</a></p><p>存档: <a href="/data/2016-02-16-net_articles201602.files/scitools_understand_for_linux.html.maff">scitools_understand_for_linux.html.maff</a></p></div></div><div id="outline-container-orgheadline4" class="outline-3"><h3 id="orgheadline4"><span class="section-number-3">1.3</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-03-02 三 20:00&gt; </span></span> <a href="http://www.kafeitu.me/git/2012/03/27/git-submodule.html" target="_blank" rel="noopener">Git Submodule 使用完整教程</a></h3><div class="outline-text-3" id="text-1-3"><p>站内链接：<a href="/data/2016-02-16-net_articles201602.files/Git_Submodule_tutor-HenryYan.html">Git_Submodule_tutor-HenryYan.html</a> </p><p>存档：<a href="/data/2016-02-16-net_articles201602.files/Git_Submodule_tutor-HenryYan.html.maff">Git_Submodule_tutor-HenryYan.html.maff</a></p></div></div><div id="outline-container-orgheadline5" class="outline-3"><h3 id="orgheadline5"><span class="section-number-3">1.4</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-05-24 二 14:11&gt; </span></span> <a href="http://www.360doc.com/content/15/1118/13/17283_514054063.shtml#" target="_blank" rel="noopener">Linux内存泄漏查询方法proc/status解释</a></h3><div class="outline-text-3" id="text-1-4"><p>站内链接：<a href="/data/2016-02-16-net_articles201602.files/Linux_memory_leak_proc_status.shtml">Linux_memory_leak_proc_status</a></p><p>存档：<a href="/data/2016-02-16-net_articles201602.files/Linux_memory_leak_proc_status.shtml.maff">Linux_memory_leak_proc_status.shtml.maff</a></p><p>注意：可使用 <code>$ ulimit -s</code> 设定栈限制。</p></div></div><div id="outline-container-orgheadline6" class="outline-3"><h3 id="orgheadline6"><span class="section-number-3">1.5</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-08-12 五 16:11&gt; </span></span> <a href="http://www.hahack.com/codes/cmake/" target="_blank" rel="noopener">CMake 入门实战</a></h3><div class="outline-text-3" id="text-1-5"><p>站内链接：<a href="/data/2016-02-16-net_articles201602.files/CMake_usage">CMake_usage</a></p><p>存档：<a href="/data/2016-02-16-net_articles201602.files/CMake_usage.maff">CMake_usage.maff</a></p></div></div><div id="outline-container-orgheadline7" class="outline-3"><h3 id="orgheadline7"><span class="section-number-3">1.6</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-09-12 一 14:41&gt; </span></span> <a href="http://blog.sina.com.cn/s/blog_702c2db50102vc2h.html" target="_blank" rel="noopener">Android Native/Tombstone Crash Log 详细分析</a></h3><div class="outline-text-3" id="text-1-6"><p>站内链接：<a href="/data/2016-02-16-net_articles201602.files/Android_Tombstone_Crash%C2%A0Log_analyzing.html/">Android_Tombstone_Crash Log_analyzing</a></p><p>存档：<a href="/data/2016-02-16-net_articles201602.files/Android_Tombstone_Crash%C2%A0Log_analyzing.html.maff">Android_Tombstone_Crash Log_analyzing.html.maff</a></p></div></div></div><div id="outline-container-orgheadline8" class="outline-2"><h2 id="orgheadline8"><span class="section-number-2">2</span> 其它</h2><div class="outline-text-2" id="text-2"></div><div id="outline-container-orgheadline9" class="outline-3"><h3 id="orgheadline9"><span class="section-number-3">2.1</span> maff存档格式</h3><div class="outline-text-3" id="text-2-1"><p>为基于zip格式的maff文档，maff类似微软的mht都是将当前网页保存成单一离线文件的格式.</p><p>firefox下的MAFF Archive Format插件可以实现保存网页为maff，并且能直接查看对应文件格式.</p><p>另外maff文件格式实质是zip压缩文件,可以将文件解压之后用普通浏览器打开其中的内容(与直接打开maff格式的区别是普通方式打开的网页缺少了源网址来源的信息提示),亦可将解压后的文件夹重新用zip压缩,重命名为xxx.maff用firefox的MAFF Archive Format插件浏览.</p><p>当前存放外部引用网页的方式,可以采取maff方式保存(这要求我们只有使用firefox浏览网页),为便于随时浏览,可将保存的文件用zip解压. 需要时再用zip压缩\重命名为maff再打开.</p></div></div><div id="outline-container-orgheadline10" class="outline-3"><h3 id="orgheadline10"><span class="section-number-3">2.2</span> 分类管理</h3><div class="outline-text-3" id="text-2-2"><p>每个月或几个月整理一次，或者追加文章，将原来的文章整理至特定分类。</p></div></div></div><br><div id="mypostamble" align="right" style="float:right" class="status">    <table> <tbody> <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Author</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">QuietHeart</td>  </tr><tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Email</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">    <a href="mailto:quiet_heart000@126.com" target="_blank" rel="noopener">quiet_heart000@126.com</a>  </td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Date</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">[2016-02-11 四 15:35]</td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Update</td>  <td style="border-style: solid;border-width:1px;border-right:0px;"><2016-09-12 一 14:47:08></2016-09-12></td></tr>    </tbody></table></div><br>]]></content>
    
    <summary type="html">
    
      
      
        

&lt;style type=&quot;text/css&quot;&gt;
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
            
      
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
      <category term="others" scheme="http://0.0.0.0:4000/categories/categories/others/"/>
    
    
  </entry>
  
  <entry>
    <title>模板文件</title>
    <link href="http://0.0.0.0:4000/2016/02/11/template_file/"/>
    <id>http://0.0.0.0:4000/2016/02/11/template_file/</id>
    <published>2016-02-10T16:00:00.000Z</published>
    <updated>2019-09-11T08:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">  .title  { text-align: center;             margin-bottom: .2em; }  .subtitle { text-align: center;              font-size: medium;              font-weight: bold;              margin-top:0; }  .todo   { font-family: monospace; color: red; }  .done   { font-family: monospace; color: green; }  .priority { font-family: monospace; color: orange; }  .tag    { background-color: #eee; font-family: monospace;            padding: 2px; font-size: 80%; font-weight: normal; }  .timestamp { color: #bebebe; }  .timestamp-kwd { color: #5f9ea0; }  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }  .org-center { margin-left: auto; margin-right: auto; text-align: center; }  .underline { text-decoration: underline; }  #postamble p, #preamble p { font-size: 90%; margin: .2em; }  p.verse { margin-left: 3%; }  pre {    border: 1px solid #0c0;    box-shadow: 1px 1px 1px #0e0;    padding: 8pt;    font-family: italic monospace;    color: #C7EDCC;    background-color: #111111;    overflow: auto;    margin: 1.2em;  }  pre.src {    position: relative;    overflow: visible;    padding-top: 1.2em;  }  pre.src:before {    display: none;    position: absolute;    background-color: white;    top: -10px;    right: 10px;    padding: 3px;    border: 1px solid black;  }  pre.src:hover:before { display: inline;}  pre.src-sh:before    { content: 'sh'; }  pre.src-bash:before  { content: 'sh'; }  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }  pre.src-R:before     { content: 'R'; }  pre.src-perl:before  { content: 'Perl'; }  pre.src-java:before  { content: 'Java'; }  pre.src-sql:before   { content: 'SQL'; }  table { border-collapse:collapse; }  caption.t-above { caption-side: top; }  caption.t-bottom { caption-side: bottom; }  td, th { vertical-align:top;  }  th.org-right  { text-align: center;  }  th.org-left   { text-align: center;   }  th.org-center { text-align: center; }  td.org-right  { text-align: right;  }  td.org-left   { text-align: left;   }  td.org-center { text-align: center; }  dt { font-weight: bold; }  .footpara { display: inline; }  .footdef  { margin-bottom: 1em; }  .figure { padding: 1em; }  .figure p { text-align: center; }  .inlinetask {    padding: 10px;    border: 2px solid gray;    margin: 10px;    background: #ffffcc;  }  #org-div-home-and-up   { text-align: right; font-size: 70%; white-space: nowrap; }  .linenr { font-size: smaller }  .code-highlighted { background-color: #ffff00; }  .org-info-js_info-navigation { border-style: none; }  #org-info-js_console-label    { font-size: 10px; font-weight: bold; white-space: nowrap; }  .org-info-js_search-highlight    { background-color: #ffff00; color: #000000; font-weight: bold; }    code {        border:groove #555555;border-width:thin;        background-color: #111111;color: #C7EDCC;    }#table-of-contents {    font-size: 9pt;    position: fixed;    right: 10px;    top: 14em;    margin:0;    padding:0;    border-width:1px;    border-style:solid;    background: #000000;    -webkit-box-shadow: 0 0 1em #777777;    -moz-box-shadow: 0 0 1em #777777;    -webkit-border-bottom-left-radius: 5px;    -moz-border-radius-bottomleft: 5px;    text-align: right;    /* ensure doesn't flow off the screen when expanded */    max-height: 60%;    overflow: auto;     z-index: 200;}#table-of-contents h2 {    font-size: 9pt;    max-width: 8em;    font-weight: normal;    padding-left: 0.5em;    padding-top: 0.05em;    padding-bottom: 0.05em; }#table-of-contents ul {    margin-left: 14pt;     margin-bottom: 10pt;    padding: 0}#table-of-contents li {    padding: 0;    margin: 1px;    list-style: none;}#table-of-contents ul>:first-child {    color: blue;}#table-of-contents #text-table-of-contents {    display: none;    text-align: left;}#table-of-contents:hover #text-table-of-contents {    display: block;    padding: 0.5em;    margin-top: -1.5em; }</style><div id="table-of-contents"><h2>Table of Contents</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 介绍</a><ul><li><a href="#orgheadline2">1.1. 子标题1</a></li><li><a href="#orgheadline3">1.2. 子标题2：</a></li></ul></li><li><a href="#orgheadline4">2. 内容1</a></li><li><a href="#orgheadline5">3. 内容2</a></li><li><a href="#orgheadline6">4. 其它</a></li><li><a href="#orgheadline7">5. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[0/4]</code>(<code>[0%]</code>)</a><ul><li><a href="#orgheadline8">5.1. <span class="todo nilNEXT">NEXT</span> 问题1？</a></li><li><a href="#orgheadline9">5.2. <span class="todo nilNEXT">NEXT</span> 问题2？</a></li></ul></li></ul></div></div><p>本文主要描述orgmode导出到jekyll文件的文章的常见格式。</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 介绍</h2><div class="outline-text-2" id="text-1"><p>文章可以以二级标题开始,便于将来父级追加,这一点不知道是否必要.</p></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> 子标题1</h3><div class="outline-text-3" id="text-1-1"><p>子标题内容</p><ol class="org-ol"><li>列表项目1。</li><li>列表项目2。</li></ol></div></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">1.2</span> 子标题2：</h3><div class="outline-text-3" id="text-1-2"><p>子标题2的内容</p></div></div></div><div id="outline-container-orgheadline4" class="outline-2"><h2 id="orgheadline4"><span class="section-number-2">2</span> 内容1</h2><div class="outline-text-2" id="text-2"><p>规整好的内容1</p></div></div><div id="outline-container-orgheadline5" class="outline-2"><h2 id="orgheadline5"><span class="section-number-2">3</span> 内容2</h2><div class="outline-text-2" id="text-3"><p>规整好的内容2</p></div></div><div id="outline-container-orgheadline6" class="outline-2"><h2 id="orgheadline6"><span class="section-number-2">4</span> 其它</h2><div class="outline-text-2" id="text-4"><p>介绍没有明确规整的内容.</p></div></div><div id="outline-container-orgheadline7" class="outline-2"><h2 id="orgheadline7"><span class="section-number-2">5</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[0/4]</code>(<code>[0%]</code>)</h2><div class="outline-text-2" id="text-5"><p>描述该文章中遗留的问题,有待将来解决.</p></div><div id="outline-container-orgheadline8" class="outline-3"><h3 id="orgheadline8"><span class="section-number-3">5.1</span> <span class="todo NEXT">NEXT</span> 问题1？</h3><div class="outline-text-3" id="text-5-1"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-02-01 一 15:39]</span></span></li></ul></div></div><div id="outline-container-orgheadline9" class="outline-3"><h3 id="orgheadline9"><span class="section-number-3">5.2</span> <span class="todo NEXT">NEXT</span> 问题2？</h3><div class="outline-text-3" id="text-5-2"><ul class="org-ul"><li>State "NEXT"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-02-01 一 15:40]</span></span></li></ul></div></div></div><br><div id="mypostamble" align="right" style="float:right" class="status">    <table> <tbody> <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Author</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">QuietHeart</td>  </tr><tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Email</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">    <a href="mailto:quiet_heart000@126.com" target="_blank" rel="noopener">quiet_heart000@126.com</a>  </td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Date</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">[2016-02-11 四 15:35]</td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Update</td>  <td style="border-style: solid;border-width:1px;border-right:0px;"><2016-02-16 二 17:36:53></2016-02-16></td></tr>    </tbody></table></div><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;style type=&quot;text/css&quot;&gt;
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              
      
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
      <category term="others" scheme="http://0.0.0.0:4000/categories/categories/others/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux杂乱记录</title>
    <link href="http://0.0.0.0:4000/2016/02/09/linux_misc_notes/"/>
    <id>http://0.0.0.0:4000/2016/02/09/linux_misc_notes/</id>
    <published>2016-02-08T16:00:00.000Z</published>
    <updated>2019-09-11T08:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">  .title  { text-align: center;             margin-bottom: .2em; }  .subtitle { text-align: center;              font-size: medium;              font-weight: bold;              margin-top:0; }  .todo   { font-family: monospace; color: red; }  .done   { font-family: monospace; color: green; }  .priority { font-family: monospace; color: orange; }  .tag    { background-color: #eee; font-family: monospace;            padding: 2px; font-size: 80%; font-weight: normal; }  .timestamp { color: #bebebe; }  .timestamp-kwd { color: #5f9ea0; }  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }  .org-center { margin-left: auto; margin-right: auto; text-align: center; }  .underline { text-decoration: underline; }  #postamble p, #preamble p { font-size: 90%; margin: .2em; }  p.verse { margin-left: 3%; }  pre {    border: 1px solid #0c0;    box-shadow: 1px 1px 1px #0e0;    padding: 8pt;    font-family: italic monospace;    color: #C7EDCC;    background-color: #111111;    overflow: auto;    margin: 1.2em;  }  pre.src {    position: relative;    overflow: visible;    padding-top: 1.2em;  }  pre.src:before {    display: none;    position: absolute;    background-color: white;    top: -10px;    right: 10px;    padding: 3px;    border: 1px solid black;  }  pre.src:hover:before { display: inline;}  pre.src-sh:before    { content: 'sh'; }  pre.src-bash:before  { content: 'sh'; }  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }  pre.src-R:before     { content: 'R'; }  pre.src-perl:before  { content: 'Perl'; }  pre.src-java:before  { content: 'Java'; }  pre.src-sql:before   { content: 'SQL'; }  table { border-collapse:collapse; }  caption.t-above { caption-side: top; }  caption.t-bottom { caption-side: bottom; }  td, th { vertical-align:top;  }  th.org-right  { text-align: center;  }  th.org-left   { text-align: center;   }  th.org-center { text-align: center; }  td.org-right  { text-align: right;  }  td.org-left   { text-align: left;   }  td.org-center { text-align: center; }  dt { font-weight: bold; }  .footpara { display: inline; }  .footdef  { margin-bottom: 1em; }  .figure { padding: 1em; }  .figure p { text-align: center; }  .inlinetask {    padding: 10px;    border: 2px solid gray;    margin: 10px;    background: #ffffcc;  }  #org-div-home-and-up   { text-align: right; font-size: 70%; white-space: nowrap; }  .linenr { font-size: smaller }  .code-highlighted { background-color: #ffff00; }  .org-info-js_info-navigation { border-style: none; }  #org-info-js_console-label    { font-size: 10px; font-weight: bold; white-space: nowrap; }  .org-info-js_search-highlight    { background-color: #ffff00; color: #000000; font-weight: bold; }    code {        border:groove #555555;border-width:thin;        background-color: #111111;color: #C7EDCC;    }#table-of-contents {    font-size: 9pt;    position: fixed;    right: 10px;    top: 14em;    margin:0;    padding:0;    border-width:1px;    border-style:solid;    background: #000000;    -webkit-box-shadow: 0 0 1em #777777;    -moz-box-shadow: 0 0 1em #777777;    -webkit-border-bottom-left-radius: 5px;    -moz-border-radius-bottomleft: 5px;    text-align: right;    /* ensure doesn't flow off the screen when expanded */    max-height: 60%;    overflow: auto;     z-index: 200;}#table-of-contents h2 {    font-size: 9pt;    max-width: 8em;    font-weight: normal;    padding-left: 0.5em;    padding-top: 0.05em;    padding-bottom: 0.05em; }#table-of-contents ul {    margin-left: 14pt;     margin-bottom: 10pt;    padding: 0}#table-of-contents li {    padding: 0;    margin: 1px;    list-style: none;}#table-of-contents ul>:first-child {    color: blue;}#table-of-contents #text-table-of-contents {    display: none;    text-align: left;}#table-of-contents:hover #text-table-of-contents {    display: block;    padding: 0.5em;    margin-top: -1.5em; }</style><div id="table-of-contents"><h2>Table of Contents</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. Miscellaneous</a><ul><li><a href="#orgheadline2">1.1. &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2015-10-28 三 11:32] </span></span> Cscope 没有文件的错误------</a></li><li><a href="#orgheadline3">1.2. &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2016-01-31 日 11:12] </span></span> top再H即可list by thread------</a></li><li><a href="#orgheadline4">1.3. &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2016-01-31 日 14:42] </span></span> Linux进程状态机与ps关联------</a></li></ul></li></ul></div></div><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> Miscellaneous</h2><div class="outline-text-2" id="text-1"></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2015-10-28 三 11:32] </span></span> Cscope 没有文件的错误------</h3><div class="outline-text-3" id="text-1-1"><p>From:/home/miracle/mydata/orgmode/gtd/next.org</p><p>参考：<a href="http://www.21qa.net/questions/2699/2699" target="_blank" rel="noopener">http://www.21qa.net/questions/2699/2699</a>Error detected while processing ~/.vimrc:cs_read_prompt EOF: No such file or directoryE609: Cscope error: cscope: cannot read trailer offset from file cscope.outc</p><p>使用cscope查看程序代码遇到一个问题，就是在配置vim中默认打开cscope.out文件出现如上错误，经google后发现的问题是代码所放的文件夹命名中存在了“空格 ”，解决办法就是将文件夹重命名，用‘-’或英文等符号替代空格。</p></div></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">1.2</span> &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2016-01-31 日 11:12] </span></span> top再H即可list by thread------</h3><div class="outline-text-3" id="text-1-2"><p>From:/home/miracle/mydata/orgmode/gtd/_next.org</p></div></div><div id="outline-container-orgheadline4" class="outline-3"><h3 id="orgheadline4"><span class="section-number-3">1.3</span> &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2016-01-31 日 14:42] </span></span> Linux进程状态机与ps关联------</h3><div class="outline-text-3" id="text-1-3"><p>From:/home/miracle/mydata/orgmode/gtd/_next.org</p><p>参考：<a href="http://www.cnblogs.com/zhaoyl/archive/2012/09/04/2671156.html" target="_blank" rel="noopener">http://www.cnblogs.com/zhaoyl/archive/2012/09/04/2671156.html</a></p><p>进程是通过fork系列的系统调用（fork、clone、vfork）来创建的，内核（或内核模块）也可以通过kernel_thread函数创建内核进程。这些创建子进程的函数本质上都完成了相同的功能——将调用进程复制一份，得到子进程。（可以通过选项参数来决定各种资源是共享、还是私有。）那么既然调用进程处于TASK_RUNNING状态（否则，它若不是正在运行，又怎么进行调用？），则子进程默认也处于TASK_RUNNING状态。另外，在系统调用clone和内核函数kernel_thread也接受CLONE_STOPPED选项，从而将子进程的初始状态置为 TASK_STOPPED。</p><p>　　进程创建后，状态可能发生一系列的变化，直到进程退出。而尽管进程状态有好几种，但是进程状态的变迁却只有两个方向——从TASK_RUNNING状态变为非TASK_RUNNING状态、或者从非TASK_RUNNING状态变为TASK_RUNNING状态。总之，TASK_RUNNING是必经之路，不可能两个非RUN状态直接转换。</p><p>也就是说，如果给一个TASK_INTERRUPTIBLE状态的进程发送SIGKILL信号，这个进程将先被唤醒（进入TASK_RUNNING状态），然后再响应SIGKILL信号而退出（变为TASK_DEAD状态）。并不会从TASK_INTERRUPTIBLE状态直接退出。</p><p>　　进程从非TASK_RUNNING状态变为TASK_RUNNING状态，是由别的进程（也可能是中断处理程序）执行唤醒操作来实现的。执行唤醒的进程设置被唤醒进程的状态为TASK_RUNNING，然后将其task_struct结构加入到某个CPU的可执行队列中。于是被唤醒的进程将有机会被调度执行。</p><p>　　而进程从TASK_RUNNING状态变为非TASK_RUNNING状态，则有两种途径：</p><p>　　1、响应信号而进入TASK_STOPED状态、或TASK_DEAD状态；　　2、执行系统调用主动进入TASK_INTERRUPTIBLE状态（如nanosleep系统调用）、或TASK_DEAD状态（如exit系统调用）；或由于执行系统调用需要的资源得不到满　　　　 足，而进入TASK_INTERRUPTIBLE状态或TASK_UNINTERRUPTIBLE状态（如select系统调用）。　　显然，这两种情况都只能发生在进程正在CPU上执行的情况下。</p><p>通过ps命令我们能够查看到系统中存在的进程，以及它们的状态：</p><p>R(TASK_RUNNING)，可执行状态。</p><p>只有在该状态的进程才可能在CPU上运行。而同一时刻可能有多个进程处于可执行状态，这些进程的task_struct结构（进程控制块）被放入对应CPU的可执行队列中（一个进程最多只能出现在一个CPU的可执行队列中）。进程调度器的任务就是从各个CPU的可执行队列中分别选择一个进程在该CPU上运行。只要可执行队列不为空，其对应的CPU就不能偷懒，就要执行其中某个进程。一般称此时的CPU“忙碌”。对应的，CPU“空闲”就是指其对应的可执行队列为空，以致于CPU无事可做。有人问，为什么死循环程序会导致CPU占用高呢？因为死循环程序基本上总是处于TASK_RUNNING状态（进程处于可执行队列中）。除非一些非常极端情况（比如系统内存严重紧缺，导致进程的某些需要使用的页面被换出，并且在页面需要换入时又无法分配到内存……），否则这个进程不会睡眠。所以CPU的可执行队列总是不为空（至少有这么个进程存在），CPU也就不会“空闲”。</p><p>很多操作系统教科书将正在CPU上执行的进程定义为RUNNING状态、而将可执行但是尚未被调度执行的进程定义为READY状态，这两种状态在linux下统一为 TASK_RUNNING状态。</p><p>S(TASK_INTERRUPTIBLE)，可中断的睡眠状态。</p><p>处于这个状态的进程因为等待某某事件的发生（比如等待socket连接、等待信号量），而被挂起。这些进程的task_struct结构被放入对应事件的等待队列中。当这些事件发生时（由外部中断触发、或由其他进程触发），对应的等待队列中的一个或多个进程将被唤醒。</p><p>通过ps命令我们会看到，一般情况下，进程列表中的绝大多数进程都处于TASK_INTERRUPTIBLE状态（除非机器的负载很高）。毕竟CPU就这么一两个，进程动辄几十上百个，如果不是绝大多数进程都在睡眠，CPU又怎么响应得过来。</p><p>D(TASK_UNINTERRUPTIBLE)，不可中断的睡眠状态。</p><p>与TASK_INTERRUPTIBLE状态类似，进程处于睡眠状态，但是此刻进程是不可中断的。不可中断，指的并不是CPU不响应外部硬件的中断，而是指进程不响应异步信号。绝大多数情况下，进程处在睡眠状态时，总是应该能够响应异步信号的。否则你将惊奇的发现，kill -9竟然杀不死一个正在睡眠的进程了！于是我们也很好理解，为什么ps命令看到的进程几乎不会出现TASK_UNINTERRUPTIBLE状态，而总是TASK_INTERRUPTIBLE状态。</p><p>而TASK_UNINTERRUPTIBLE状态存在的意义就在于，内核的某些处理流程是不能被打断的。如果响应异步信号，程序的执行流程中就会被插入一段用于处理异步信号的流程（这个插入的流程可能只存在于内核态，也可能延伸到用户态），于是原有的流程就被中断了（参见《linux异步信号handle浅析》）。在进程对某些硬件进行操作时（比如进程调用read系统调用对某个设备文件进行读操作，而read系统调用最终执行到对应设备驱动的代码，并与对应的物理设备进行交互），可能需要使用TASK_UNINTERRUPTIBLE状态对进程进行保护，以避免进程与设备交互的过程被打断，造成设备陷入不可控的状态。（比如read系统调用触发了一次磁盘到用户空间的内存的DMA，如果DMA进行过程中，进程由于响应信号而退出了，那么DMA正在访问的内存可能就要被释放了。）这种情况下的TASK_UNINTERRUPTIBLE状态总是非常短暂的，通过ps命令基本上不可能捕捉到。</p><p>linux系统中也存在容易捕捉的TASK_UNINTERRUPTIBLE状态。执行vfork系统调用后，父进程将进入TASK_UNINTERRUPTIBLE状态，直到子进程调用exit或exec。通过下面的代码就能得到处于TASK_UNINTERRUPTIBLE状态的进程：#include &lt;unistd.h&gt;void main() {if (!vfork()) sleep(100);}编译运行，然后ps一下：kouu@kouu-one:~/test$ ps -ax | grep a\.out4371 pts/0 D+ 0:00 ./a.out4372 pts/0 S+ 0:00 ./a.out4374 pts/1 S+ 0:00 grep a.out然后我们可以试验一下TASK_UNINTERRUPTIBLE状态的威力。不管kill还是kill -9，这个TASK_UNINTERRUPTIBLE状态的父进程依然屹立不倒。</p><p>T(TASK_STOPPED or TASK_TRACED)，暂停状态或跟踪状态。</p><p>向进程发送一个SIGSTOP信号，它就会因响应该信号而进入TASK_STOPPED状态（除非该进程本身处于TASK_UNINTERRUPTIBLE状态而不响应信号）。（SIGSTOP与SIGKILL信号一样，是非常强制的。不允许用户进程通过signal系列的系统调用重新设置对应的信号处理函数。）向进程发送一个SIGCONT信号，可以让其从TASK_STOPPED状态恢复到TASK_RUNNING状态。</p><p>当进程正在被跟踪时，它处于TASK_TRACED这个特殊的状态。“正在被跟踪”指的是进程暂停下来，等待跟踪它的进程对它进行操作。比如在gdb中对被跟踪的进程下一个断点，进程在断点处停下来的时候就处于TASK_TRACED状态。而在其他时候，被跟踪的进程还是处于前面提到的那些状态。对于进程本身来说，TASK_STOPPED和TASK_TRACED状态很类似，都是表示进程暂停下来。而TASK_TRACED状态相当于在TASK_STOPPED之上多了一层保护，处于TASK_TRACED状态的进程不能响应SIGCONT信号而被唤醒。只能等到调试进程通过ptrace系统调用执行PTRACE_CONT、PTRACE_DETACH等操作（通过ptrace系统调用的参数指定操作），或调试进程退出，被调试的进程才能恢复TASK_RUNNING状态。</p><p>Z(TASK_DEAD - EXIT_ZOMBIE)，退出状态，进程成为僵尸进程。</p><p>进程在退出的过程中，处于TASK_DEAD状态。</p><p>在这个退出过程中，进程占有的所有资源将被回收，除了task_struct结构（以及少数资源）以外。于是进程就只剩下task_struct这么个空壳，故称为僵尸。之所以保留task_struct，是因为task_struct里面保存了进程的退出码、以及一些统计信息。而其父进程很可能会关心这些信息。比如在shell中，$?变量就保存了最后一个退出的前台进程的退出码，而这个退出码往往被作为if语句的判断条件。当然，内核也可以将这些信息保存在别的地方，而将task_struct结构释放掉，以节省一些空间。但是使用task_struct结构更为方便，因为在内核中已经建立了从pid到task_struct查找关系，还有进程间的父子关系。释放掉task_struct，则需要建立一些新的数据结构，以便让父进程找到它的子进程的退出信息。</p><p>父进程可以通过wait系列的系统调用（如wait4、waitid）来等待某个或某些子进程的退出，并获取它的退出信息。然后wait系列的系统调用会顺便将子进程的尸体（task_struct）也释放掉。子进程在退出的过程中，内核会给其父进程发送一个信号，通知父进程来“收尸”。这个信号默认是SIGCHLD，但是在通过clone系统调用创建子进程时，可以设置这个信号。</p><p>通过下面的代码能够制造一个EXIT_ZOMBIE状态的进程：#include &lt;unistd.h&gt;void main() {if (fork())while(1) sleep(100);}编译运行，然后ps一下：kouu@kouu-one:~/test$ ps -ax | grep a\.out10410 pts/0 S+ 0:00 ./a.out10411 pts/0 Z+ 0:00 [a.out] &lt;defunct&gt;10413 pts/1 S+ 0:00 grep a.out</p><p>只要父进程不退出，这个僵尸状态的子进程就一直存在。那么如果父进程退出了呢，谁又来给子进程“收尸”？当进程退出的时候，会将它的所有子进程都托管给别的进程（使之成为别的进程的子进程）。托管给谁呢？可能是退出进程所在进程组的下一个进程（如果存在的话），或者是1号进程。所以每个进程、每时每刻都有父进程存在。除非它是1号进程。</p><p>1号进程，pid为1的进程，又称init进程。linux系统启动后，第一个被创建的用户态进程就是init进程。它有两项使命：1、执行系统初始化脚本，创建一系列的进程（它们都是init进程的子孙）；2、在一个死循环中等待其子进程的退出事件，并调用waitid系统调用来完成“收尸”工作；init进程不会被暂停、也不会被杀死（这是由内核来保证的）。它在等待子进程退出的过程中处于TASK_INTERRUPTIBLE状态，“收尸”过程中则处于TASK_RUNNING状态。</p><p>X(TASK_DEAD - EXIT_DEAD)，退出状态，进程即将被销毁。</p><p>而进程在退出过程中也可能不会保留它的task_struct。比如这个进程是多线程程序中被detach过的进程（进程？线程？参见《linux线程浅析》）。或者父进程通过设置SIGCHLD信号的handler为SIG_IGN，显式的忽略了SIGCHLD信号。（这是posix的规定，尽管子进程的退出信号可以被设置为SIGCHLD以外的其他信号。）此时，进程将被置于EXIT_DEAD退出状态，这意味着接下来的代码立即就会将该进程彻底释放。所以EXIT_DEAD状态是非常短暂的，几乎不可能通过ps命令捕捉到。</p></div></div></div><br><div id="mypostamble" align="right" style="float:right" class="status">    <table> <tbody> <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Author</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">QuietHeart</td>  </tr><tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Email</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">    <a href="mailto:quiet_heart000@126.com" target="_blank" rel="noopener">quiet_heart000@126.com</a>  </td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Date</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">[2016-02-09 二 10:35]</td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Update</td>  <td style="border-style: solid;border-width:1px;border-right:0px;"><2016-02-16 二 17:40:09></2016-02-16></td></tr>    </tbody></table></div><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;style type=&quot;text/css&quot;&gt;
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              
      
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
      <category term="study" scheme="http://0.0.0.0:4000/categories/categories/study/"/>
    
      <category term="linux" scheme="http://0.0.0.0:4000/categories/categories/study/linux/"/>
    
      <category term="misc" scheme="http://0.0.0.0:4000/categories/categories/study/linux/misc/"/>
    
    
  </entry>
  
  <entry>
    <title>实用工具</title>
    <link href="http://0.0.0.0:4000/2016/02/09/useful_tools/"/>
    <id>http://0.0.0.0:4000/2016/02/09/useful_tools/</id>
    <published>2016-02-08T16:00:00.000Z</published>
    <updated>2019-09-11T08:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">  .title  { text-align: center;             margin-bottom: .2em; }  .subtitle { text-align: center;              font-size: medium;              font-weight: bold;              margin-top:0; }  .todo   { font-family: monospace; color: red; }  .done   { font-family: monospace; color: green; }  .priority { font-family: monospace; color: orange; }  .tag    { background-color: #eee; font-family: monospace;            padding: 2px; font-size: 80%; font-weight: normal; }  .timestamp { color: #bebebe; }  .timestamp-kwd { color: #5f9ea0; }  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }  .org-center { margin-left: auto; margin-right: auto; text-align: center; }  .underline { text-decoration: underline; }  #postamble p, #preamble p { font-size: 90%; margin: .2em; }  p.verse { margin-left: 3%; }  pre {    border: 1px solid #0c0;    box-shadow: 1px 1px 1px #0e0;    padding: 8pt;    font-family: italic monospace;    color: #C7EDCC;    background-color: #111111;    overflow: auto;    margin: 1.2em;  }  pre.src {    position: relative;    overflow: visible;    padding-top: 1.2em;  }  pre.src:before {    display: none;    position: absolute;    background-color: white;    top: -10px;    right: 10px;    padding: 3px;    border: 1px solid black;  }  pre.src:hover:before { display: inline;}  pre.src-sh:before    { content: 'sh'; }  pre.src-bash:before  { content: 'sh'; }  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }  pre.src-R:before     { content: 'R'; }  pre.src-perl:before  { content: 'Perl'; }  pre.src-java:before  { content: 'Java'; }  pre.src-sql:before   { content: 'SQL'; }  table { border-collapse:collapse; }  caption.t-above { caption-side: top; }  caption.t-bottom { caption-side: bottom; }  td, th { vertical-align:top;  }  th.org-right  { text-align: center;  }  th.org-left   { text-align: center;   }  th.org-center { text-align: center; }  td.org-right  { text-align: right;  }  td.org-left   { text-align: left;   }  td.org-center { text-align: center; }  dt { font-weight: bold; }  .footpara { display: inline; }  .footdef  { margin-bottom: 1em; }  .figure { padding: 1em; }  .figure p { text-align: center; }  .inlinetask {    padding: 10px;    border: 2px solid gray;    margin: 10px;    background: #ffffcc;  }  #org-div-home-and-up   { text-align: right; font-size: 70%; white-space: nowrap; }  .linenr { font-size: smaller }  .code-highlighted { background-color: #ffff00; }  .org-info-js_info-navigation { border-style: none; }  #org-info-js_console-label    { font-size: 10px; font-weight: bold; white-space: nowrap; }  .org-info-js_search-highlight    { background-color: #ffff00; color: #000000; font-weight: bold; }    code {        border:groove #555555;border-width:thin;        background-color: #111111;color: #C7EDCC;    }#table-of-contents {    font-size: 9pt;    position: fixed;    right: 10px;    top: 14em;    margin:0;    padding:0;    border-width:1px;    border-style:solid;    background: #000000;    -webkit-box-shadow: 0 0 1em #777777;    -moz-box-shadow: 0 0 1em #777777;    -webkit-border-bottom-left-radius: 5px;    -moz-border-radius-bottomleft: 5px;    text-align: right;    /* ensure doesn't flow off the screen when expanded */    max-height: 60%;    overflow: auto;     z-index: 200;}#table-of-contents h2 {    font-size: 9pt;    max-width: 8em;    font-weight: normal;    padding-left: 0.5em;    padding-top: 0.05em;    padding-bottom: 0.05em; }#table-of-contents ul {    margin-left: 14pt;     margin-bottom: 10pt;    padding: 0}#table-of-contents li {    padding: 0;    margin: 1px;    list-style: none;}#table-of-contents ul>:first-child {    color: blue;}#table-of-contents #text-table-of-contents {    display: none;    text-align: left;}#table-of-contents:hover #text-table-of-contents {    display: block;    padding: 0.5em;    margin-top: -1.5em; }</style><div id="table-of-contents"><h2>Table of Contents</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[0/0]</code>(<code>[100%]</code>)</a><ul><li><a href="#orgheadline2">1.1. <span class="todo nilLATER">LATER</span> encfs</a></li><li><a href="#orgheadline3">1.2. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> ccache 增加编译速度</a></li></ul></li></ul></div></div><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[0/0]</code>(<code>[100%]</code>)</h2><div class="outline-text-2" id="text-1"></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> <span class="todo LATER">LATER</span> encfs</h3><div class="outline-text-3" id="text-1-1"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 10:05]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-01-25 一 18:08]</span></span></p><hr><p>加密文件系统，可以对特定的目录和目录中的文件进行加密。实现方式是通过encfs进行。</p><dl class="org-dl"><dt>安装</dt><dd><code>sudo apt-get install encfs</code></dd><dt>挂载加密目录</dt><dd><code>encfs ~/crypt_dir ~/normal_dir</code></dd><dt>卸载加密目录</dt><dd><code>fusermount -u ~/normal_dir</code></dd><dt>修改密码</dt><dd><code>encfsctl</code></dd></dl><p>参考：<a href="https://linux.cn/article-2234-1.html" target="_blank" rel="noopener">https://linux.cn/article-2234-1.html</a></p></div></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">1.2</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> ccache 增加编译速度</h3><div class="outline-text-3" id="text-1-2"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 10:15]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-01-26 二 11:43]</span></span></p><hr></div></div></div><br><div id="mypostamble" align="right" style="float:right" class="status">    <table> <tbody> <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Author</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">QuietHeart</td>  </tr><tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Email</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">    <a href="mailto:quiet_heart000@126.com" target="_blank" rel="noopener">quiet_heart000@126.com</a>  </td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Date</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">[2016-02-09 二 10:08]</td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Update</td>  <td style="border-style: solid;border-width:1px;border-right:0px;"><2016-02-16 二 17:40:10></2016-02-16></td></tr>    </tbody></table></div><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;style type=&quot;text/css&quot;&gt;
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              
      
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
      <category term="study" scheme="http://0.0.0.0:4000/categories/categories/study/"/>
    
      <category term="kits" scheme="http://0.0.0.0:4000/categories/categories/study/kits/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux命令学习记录</title>
    <link href="http://0.0.0.0:4000/2016/02/02/linux_command_tips/"/>
    <id>http://0.0.0.0:4000/2016/02/02/linux_command_tips/</id>
    <published>2016-02-01T16:00:00.000Z</published>
    <updated>2019-09-11T08:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">  .title  { text-align: center;             margin-bottom: .2em; }  .subtitle { text-align: center;              font-size: medium;              font-weight: bold;              margin-top:0; }  .todo   { font-family: monospace; color: red; }  .done   { font-family: monospace; color: green; }  .priority { font-family: monospace; color: orange; }  .tag    { background-color: #eee; font-family: monospace;            padding: 2px; font-size: 80%; font-weight: normal; }  .timestamp { color: #bebebe; }  .timestamp-kwd { color: #5f9ea0; }  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }  .org-center { margin-left: auto; margin-right: auto; text-align: center; }  .underline { text-decoration: underline; }  #postamble p, #preamble p { font-size: 90%; margin: .2em; }  p.verse { margin-left: 3%; }  pre {    border: 1px solid #0c0;    box-shadow: 1px 1px 1px #0e0;    padding: 8pt;    font-family: italic monospace;    color: #C7EDCC;    background-color: #111111;    overflow: auto;    margin: 1.2em;  }  pre.src {    position: relative;    overflow: visible;    padding-top: 1.2em;  }  pre.src:before {    display: none;    position: absolute;    background-color: white;    top: -10px;    right: 10px;    padding: 3px;    border: 1px solid black;  }  pre.src:hover:before { display: inline;}  pre.src-sh:before    { content: 'sh'; }  pre.src-bash:before  { content: 'sh'; }  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }  pre.src-R:before     { content: 'R'; }  pre.src-perl:before  { content: 'Perl'; }  pre.src-java:before  { content: 'Java'; }  pre.src-sql:before   { content: 'SQL'; }  table { border-collapse:collapse; }  caption.t-above { caption-side: top; }  caption.t-bottom { caption-side: bottom; }  td, th { vertical-align:top;  }  th.org-right  { text-align: center;  }  th.org-left   { text-align: center;   }  th.org-center { text-align: center; }  td.org-right  { text-align: right;  }  td.org-left   { text-align: left;   }  td.org-center { text-align: center; }  dt { font-weight: bold; }  .footpara { display: inline; }  .footdef  { margin-bottom: 1em; }  .figure { padding: 1em; }  .figure p { text-align: center; }  .inlinetask {    padding: 10px;    border: 2px solid gray;    margin: 10px;    background: #ffffcc;  }  #org-div-home-and-up   { text-align: right; font-size: 70%; white-space: nowrap; }  .linenr { font-size: smaller }  .code-highlighted { background-color: #ffff00; }  .org-info-js_info-navigation { border-style: none; }  #org-info-js_console-label    { font-size: 10px; font-weight: bold; white-space: nowrap; }  .org-info-js_search-highlight    { background-color: #ffff00; color: #000000; font-weight: bold; }    code {        border:groove #555555;border-width:thin;        background-color: #111111;color: #C7EDCC;    }#table-of-contents {    font-size: 9pt;    position: fixed;    right: 10px;    top: 14em;    margin:0;    padding:0;    border-width:1px;    border-style:solid;    background: #000000;    -webkit-box-shadow: 0 0 1em #777777;    -moz-box-shadow: 0 0 1em #777777;    -webkit-border-bottom-left-radius: 5px;    -moz-border-radius-bottomleft: 5px;    text-align: right;    /* ensure doesn't flow off the screen when expanded */    max-height: 60%;    overflow: auto;     z-index: 200;}#table-of-contents h2 {    font-size: 9pt;    max-width: 8em;    font-weight: normal;    padding-left: 0.5em;    padding-top: 0.05em;    padding-bottom: 0.05em; }#table-of-contents ul {    margin-left: 14pt;     margin-bottom: 10pt;    padding: 0}#table-of-contents li {    padding: 0;    margin: 1px;    list-style: none;}#table-of-contents ul>:first-child {    color: blue;}#table-of-contents #text-table-of-contents {    display: none;    text-align: left;}#table-of-contents:hover #text-table-of-contents {    display: block;    padding: 0.5em;    margin-top: -1.5em; }</style><div id="table-of-contents"><h2>Table of Contents</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. Misc</a><ul><li><a href="#orgheadline2">1.1. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> enca</a></li><li><a href="#orgheadline3">1.2. <span class="todo nilLATER">LATER</span> shasum</a></li><li><a href="#orgheadline4">1.3. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> ifttt</a></li><li><a href="#orgheadline5">1.4. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> tref可查看windows邮件中的dat文件</a></li><li><a href="#orgheadline6">1.5. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> jfbterm &amp; fbterm</a></li><li><a href="#orgheadline7">1.6. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> complete</a></li><li><a href="#orgheadline8">1.7. update-alternatives</a><ul><li><a href="#orgheadline9">1.7.1. java配置举例</a></li><li><a href="#orgheadline10">1.7.2. 添加举例：</a></li></ul></li><li><a href="#orgheadline11">1.8. ps</a></li><li><a href="#orgheadline12">1.9. sudo</a></li></ul></li></ul></div></div><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> Misc</h2><div class="outline-text-2" id="text-1"><p>主要收集各类linux下的命令，内容没有整理，或者正在整理，整理好后会移出去到特定的文档中。</p></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> enca</h3><div class="outline-text-3" id="text-1-1"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:18]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-14 三 11:33]</span></span></p><hr><p>编码转换更好的傻瓜型命令行工具enca，它不但能智能的识别文件的编码，而且还支持成批转换。  　　1.安装  　　$sudo apt-get install enca  　　2.查看当前文件编码  　　enca -L zh_CN ip.txt     Simplified Chinese National Standard; GB2312     Surrounded by/intermixed with non-text data  　　3.转换  　　命令格式如下  　　$enca -L 当前语言 -x 目标编码 文件名  　　例如要把当前目录下的所有文件都转成utf-8  　　enca -L zh_CN -x utf-8 *     检查文件的编码　enca -L zh_CN file   　　 将文件编码转换为"UTF-8"编码　 enca -L zh_CN -x UTF-8 file如果不想覆盖原文件可以这样         enca -L zh_CN -x UTF-8 &lt; file1 &gt; file2 参考：<a href="http://blog.csdn.net/jnbbwyth/article/details/6991425/" target="_blank" rel="noopener">http://blog.csdn.net/jnbbwyth/article/details/6991425/</a></p></div></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">1.2</span> <span class="todo LATER">LATER</span> shasum</h3><div class="outline-text-3" id="text-1-2"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-14 三 10:17]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-13 二 14:21]</span></span></p><hr><p>类似 md5sum的一个命令。</p></div></div><div id="outline-container-orgheadline4" class="outline-3"><h3 id="orgheadline4"><span class="section-number-3">1.3</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> ifttt</h3><div class="outline-text-3" id="text-1-3"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:18]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-30 五 14:59]</span></span></p><hr></div></div><div id="outline-container-orgheadline5" class="outline-3"><h3 id="orgheadline5"><span class="section-number-3">1.4</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> tref可查看windows邮件中的dat文件</h3><div class="outline-text-3" id="text-1-4"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:18]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-05 四 12:06]</span></span></li></ul></div></div><div id="outline-container-orgheadline6" class="outline-3"><h3 id="orgheadline6"><a id="ID-eb28d4fa-a996-4072-815e-393d72cbc413"></a><span class="section-number-3">1.5</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> jfbterm &amp; fbterm</h3><div class="outline-text-3" id="text-1-5"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-18 五 13:36]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-14 一 15:45]</span></span></p><hr><p>可以显示中文的纯字符终端，类似zhcon.</p><p>参考：<a href="http://zhidao.baidu.com/link?url=ImeEdpu_besndXYBaeQohsiyHWognPFRRcBJm4XGcL1CxWYKGA54bwRIPqaPlP_67YBKAgaayDhTN9ZhB9V5Jq" target="_blank" rel="noopener">http://zhidao.baidu.com/link?url=ImeEdpu_besndXYBaeQohsiyHWognPFRRcBJm4XGcL1CxWYKGA54bwRIPqaPlP_67YBKAgaayDhTN9ZhB9V5Jq</a></p><pre class="example">可以尝试使用fbterm安装命令：sudo apt-get install fbterm xfonts-wqyctrl+alt+f1进入的纯字符界面后，先运行fbterm。退出fbterm，可以输入exit命令。如果不起作用，先把当前用户加入video组：sudo usermod -g video [用户名]</pre></div></div><div id="outline-container-orgheadline7" class="outline-3"><h3 id="orgheadline7"><span class="section-number-3">1.6</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> complete</h3><div class="outline-text-3" id="text-1-6"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-18 五 13:40]</span></span></li><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-18 五 13:39]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-16 三 16:51]</span></span></p><hr><p>参考:<a href="http://www.gnu.org/software/global/globaldoc_toc.html" target="_blank" rel="noopener">http://www.gnu.org/software/global/globaldoc_toc.html</a></p><div class="org-src-container"><pre class="src src-sh">$ complete -F funcs global$ global kmem_&lt;TAB&gt;&lt;TAB&gt;kmem_alloc           kmem_alloc_wait      kmem_initkmem_alloc_nofault   kmem_free            kmem_mallockmem_alloc_pageable  kmem_free_wakeup     kmem_suballoc</pre></div></div></div><div id="outline-container-orgheadline8" class="outline-3"><h3 id="orgheadline8"><span class="section-number-3">1.7</span> update-alternatives</h3><div class="outline-text-3" id="text-1-7"><p>当ubuntu中某个软件有多个版本共存与系统之中时，默认采用哪个软件，可以通过 <code>update-alternatives</code> 进行管理。</p></div><div id="outline-container-orgheadline9" class="outline-4"><h4 id="orgheadline9"><span class="section-number-4">1.7.1</span> java配置举例</h4><div class="outline-text-4" id="text-1-7-1"><p>设置默认java环境输入 <code>sudo update-alternatives --display java</code> 可查看信息默认的jdk信息。</p><p>如果只有一个java环境如下设置即可</p><div class="org-src-container"><pre class="src src-sh">$sudo update-alternatives --install /usr/bin/java java  /usr/lib/jvm/jdk1.8.0_65/bin/java 300$sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/jdk1.8.0_65/bin/javac 300</pre></div><p>若有多个版本，需要修改默认的，则再输入</p><div class="org-src-container"><pre class="src src-sh">$sudo update-alternatives --config java$sudo update-alternatives --config javac</pre></div><p>将会提示：要维持当前值[*]请安回车键或者输入选择的编号,输入自己设置的优先级(300)对应的编号，按回车就可以了，再输入display查看，确定默认版本信息。会更新 <code>/etc/alternatives</code> 中的内容。</p><p>参考:<a href="http://blog.csdn.net/gobitan/article/details/24322561" target="_blank" rel="noopener">http://blog.csdn.net/gobitan/article/details/24322561</a> </p><p><a href="http://www.linuxidc.com/Linux/2014-11/109216.htm" target="_blank" rel="noopener">http://www.linuxidc.com/Linux/2014-11/109216.htm</a> </p></div></div><div id="outline-container-orgheadline10" class="outline-4"><h4 id="orgheadline10"><span class="section-number-4">1.7.2</span> 添加举例：</h4><div class="outline-text-4" id="text-1-7-2"><p>假设源代码安装php在 <code>/usr/local/develop/php-5.6.19</code>, 那么<code>sudo update-alternatives --install /usr/bin/php5.6.19 php5.6.19 /usr/local/develop/php-5.6.19/bin/php 49</code></p><p>会导致： <code>/usr/bin/php5.6.19</code> 链接被创建，指向 <code>/etc/alternatives/php5.6.19</code>, 而 <code>/etc/alternatives/php5.6.19</code> 指向 <code>/usr/local/develop/php-5.6.19/bin/php</code>.</p><p><a href="http://blog.csdn.net/baggio1006/article/details/6338623" target="_blank" rel="noopener">http://blog.csdn.net/baggio1006/article/details/6338623</a></p><p><a href="http://persevere.iteye.com/blog/1479524" target="_blank" rel="noopener">http://persevere.iteye.com/blog/1479524</a></p></div></div></div><div id="outline-container-orgheadline11" class="outline-3"><h3 id="orgheadline11"><span class="section-number-3">1.8</span> ps</h3><div class="outline-text-3" id="text-1-8"><p>支持三种类型的选项：Unix风格: 选项可能会被分组，但是必须以 <code>-</code> 开始BSD风格: 选项可能会被分组，不以 <code>-</code> 开始GUN长选项风格: 选项以 =&#x2013;=开始</p><p><code>ps -a</code>列出所有与terminal有关的进程，不包含session leader.</p><p><code>ps a</code>列出所有与terminal有关的进程</p><p><code>ps -A</code> 同 <code>ps -e</code>, 列出所有的进程。</p><p><code>ps x</code>列出所有你拥有的进程</p><p><code>ps ax</code>列出所有进程</p><p>没有 <code>-x</code> 。</p><p><code>ps -u &lt;userlist&gt;</code> 同 <code>ps --user &lt;userlist&gt;列出 EUID为 =&lt;userlist&gt;</code> 对应的名称或者ID的进程。 <code>&lt;userlist&gt;</code> 可以为空格分割的字符串，或者逗号分割。 <code>ps -p "1 2" -p 3,4</code>.</p><p><code>ps u</code>以用户为主显示，结果第一列是用户ID。</p><pre class="example">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND1032      9392  0.0  0.0  10484  1732 pts/11   S+   11:59   0:00 man ps</pre><p><code>ps -U &lt;userlist&gt;</code>列出 RUID为 <code>&lt;userlist&gt;</code> 对应的名称或者ID的进程。 <code>&lt;userlist&gt;</code> 可以为空格分割的字符串，或者逗号分割。 <code>ps -p "1 2" -p 3,4</code>.</p><p><code>ps U &lt;userlist&gt;</code> 同 <code>ps --user &lt;userlist&gt;</code>列出 EUID为 <code>&lt;userlist&gt;</code> 对应的名称或者ID的进程。 <code>&lt;userlist&gt;</code> 可以为空格分割的字符串，或者逗号分割。 <code>ps -p "1 2" -p 3,4</code>.</p></div></div><div id="outline-container-orgheadline12" class="outline-3"><h3 id="orgheadline12"><span class="section-number-3">1.9</span> sudo</h3><div class="outline-text-3" id="text-1-9"><p>以 <code>user</code> 用户而非 <code>root</code> 运行 <code>xxx</code> ， <code>sudo -u user xxx</code></p></div></div></div><br><div id="mypostamble" align="right" style="float:right" class="status">    <table> <tbody> <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Author</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">QuietHeart</td>  </tr><tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Email</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">    <a href="mailto:quiet_heart000@126.com" target="_blank" rel="noopener">quiet_heart000@126.com</a>  </td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Date</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">[2016-02-11 四 17:05]</td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Update</td>  <td style="border-style: solid;border-width:1px;border-right:0px;"><2016-04-16 六 20:15:21></2016-04-16></td></tr>    </tbody></table></div><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;style type=&quot;text/css&quot;&gt;
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              
      
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
      <category term="study" scheme="http://0.0.0.0:4000/categories/categories/study/"/>
    
      <category term="linux" scheme="http://0.0.0.0:4000/categories/categories/study/linux/"/>
    
      <category term="command" scheme="http://0.0.0.0:4000/categories/categories/study/linux/command/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux进程和线程的调度与优先级</title>
    <link href="http://0.0.0.0:4000/2016/02/01/linux_schedule_priority/"/>
    <id>http://0.0.0.0:4000/2016/02/01/linux_schedule_priority/</id>
    <published>2016-01-31T16:00:00.000Z</published>
    <updated>2019-09-11T08:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">  .title  { text-align: center;             margin-bottom: .2em; }  .subtitle { text-align: center;              font-size: medium;              font-weight: bold;              margin-top:0; }  .todo   { font-family: monospace; color: red; }  .done   { font-family: monospace; color: green; }  .priority { font-family: monospace; color: orange; }  .tag    { background-color: #eee; font-family: monospace;            padding: 2px; font-size: 80%; font-weight: normal; }  .timestamp { color: #bebebe; }  .timestamp-kwd { color: #5f9ea0; }  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }  .org-center { margin-left: auto; margin-right: auto; text-align: center; }  .underline { text-decoration: underline; }  #postamble p, #preamble p { font-size: 90%; margin: .2em; }  p.verse { margin-left: 3%; }  pre {    border: 1px solid #0c0;    box-shadow: 1px 1px 1px #0e0;    padding: 8pt;    font-family: italic monospace;    color: #C7EDCC;    background-color: #111111;    overflow: auto;    margin: 1.2em;  }  pre.src {    position: relative;    overflow: visible;    padding-top: 1.2em;  }  pre.src:before {    display: none;    position: absolute;    background-color: white;    top: -10px;    right: 10px;    padding: 3px;    border: 1px solid black;  }  pre.src:hover:before { display: inline;}  pre.src-sh:before    { content: 'sh'; }  pre.src-bash:before  { content: 'sh'; }  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }  pre.src-R:before     { content: 'R'; }  pre.src-perl:before  { content: 'Perl'; }  pre.src-java:before  { content: 'Java'; }  pre.src-sql:before   { content: 'SQL'; }  table { border-collapse:collapse; }  caption.t-above { caption-side: top; }  caption.t-bottom { caption-side: bottom; }  td, th { vertical-align:top;  }  th.org-right  { text-align: center;  }  th.org-left   { text-align: center;   }  th.org-center { text-align: center; }  td.org-right  { text-align: right;  }  td.org-left   { text-align: left;   }  td.org-center { text-align: center; }  dt { font-weight: bold; }  .footpara { display: inline; }  .footdef  { margin-bottom: 1em; }  .figure { padding: 1em; }  .figure p { text-align: center; }  .inlinetask {    padding: 10px;    border: 2px solid gray;    margin: 10px;    background: #ffffcc;  }  #org-div-home-and-up   { text-align: right; font-size: 70%; white-space: nowrap; }  .linenr { font-size: smaller }  .code-highlighted { background-color: #ffff00; }  .org-info-js_info-navigation { border-style: none; }  #org-info-js_console-label    { font-size: 10px; font-weight: bold; white-space: nowrap; }  .org-info-js_search-highlight    { background-color: #ffff00; color: #000000; font-weight: bold; }    code {        border:groove #555555;border-width:thin;        background-color: #111111;color: #C7EDCC;    }#table-of-contents {    font-size: 9pt;    position: fixed;    right: 10px;    top: 14em;    margin:0;    padding:0;    border-width:1px;    border-style:solid;    background: #000000;    -webkit-box-shadow: 0 0 1em #777777;    -moz-box-shadow: 0 0 1em #777777;    -webkit-border-bottom-left-radius: 5px;    -moz-border-radius-bottomleft: 5px;    text-align: right;    /* ensure doesn't flow off the screen when expanded */    max-height: 60%;    overflow: auto;     z-index: 200;}#table-of-contents h2 {    font-size: 9pt;    max-width: 8em;    font-weight: normal;    padding-left: 0.5em;    padding-top: 0.05em;    padding-bottom: 0.05em; }#table-of-contents ul {    margin-left: 14pt;     margin-bottom: 10pt;    padding: 0}#table-of-contents li {    padding: 0;    margin: 1px;    list-style: none;}#table-of-contents ul>:first-child {    color: blue;}#table-of-contents #text-table-of-contents {    display: none;    text-align: left;}#table-of-contents:hover #text-table-of-contents {    display: block;    padding: 0.5em;    margin-top: -1.5em; }</style><div id="table-of-contents"><h2>Table of Contents</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 总述</a><ul><li><a href="#orgheadline2">1.1. 概念：</a></li><li><a href="#orgheadline3">1.2. 方法：</a></li><li><a href="#orgheadline4">1.3. 原理：</a></li></ul></li><li><a href="#orgheadline5">2. 进程优先级概念</a></li><li><a href="#orgheadline6">3. 进程优先级与变动影响因素与原理</a></li><li><a href="#orgheadline7">4. 查看与设置优先级与进程线程信息等的方法</a></li><li><a href="#orgheadline8">5. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[0/4]</code>(<code>[0%]</code>)</a><ul><li><a href="#orgheadline9">5.1. <span class="todo nilNEXT">NEXT</span> 线程优先级是否继承父线程优先级？是否继承父进程优先级？</a></li><li><a href="#orgheadline10">5.2. <span class="todo nilNEXT">NEXT</span> <code>chrt</code> 修改进程优先级，那么该进程的子线程优先级是否改变？</a></li><li><a href="#orgheadline11">5.3. <span class="todo nilNEXT">NEXT</span> <code>chrt</code>, <code>ps</code>, <code>top</code>, <code>pthread_attr_setschedpolicy()</code>, <code>sched_setscheduler()</code> 中的优先级值和含义有什么关系？</a></li><li><a href="#orgheadline12">5.4. <span class="todo nilNEXT">NEXT</span> 考虑将引文中的链接下载到本地</a></li></ul></li></ul></div></div><p>本文主要概述Linux下进程与线程的调度算法和优先级相关内容。</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 总述</h2><div class="outline-text-2" id="text-1"><p>为便于快速了解和复习，本节先给出结论性的大致概述，后面再详细介绍相关内容。关于进程优先级和调度策略的大致信息如下。</p></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> 概念：</h3><div class="outline-text-3" id="text-1-1"><ol class="org-ol"><li>进程优先级值越小，优先级越大。</li><li>进程优先级是PRI值不是Nice值，但是Nice值会影响优先级。</li><li>三类调度策略：RR调度和FIFO调度的进程属于实时进程，以分时调度(OTHER)的进程是非实时进程</li><li>实时进程优先级高于普通进程，实时进程使用静态优先级调度、非实时进程使用动态优先级调度，非实时进程动态优先级通过nice调整、可能受bonus影响。</li></ol></div></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">1.2</span> 方法：</h3><div class="outline-text-3" id="text-1-2"><p>命令行/脚本中可以通过 <code>ps</code>, <code>top</code>, <code>chrt</code> 来查看和修改调度和优先级属性。通过 <code>sched_setscheduler()</code> 设置进程调度和优先级属性。通过 <code>pthread_attr_setschedpolicy()</code> 设置线程调度和优先级属性。</p></div></div><div id="outline-container-orgheadline4" class="outline-3"><h3 id="orgheadline4"><span class="section-number-3">1.3</span> 原理：</h3><div class="outline-text-3" id="text-1-3"><p>一般子进程会继承父进程的调度策略，在Linux  2.6.32之后，可以使用 <code>SCHED_RESET_ON_FORK</code> 按位与参数的方式调用 <code>sched_setscheduler()</code>, 使用之后效果是：如果调用进程使用 <code>SCHED_FIFO</code> 或 <code>SCHED_RR</code> 调度策略，使用 <code>SCHED_RESET_ON_FORK</code> 后fork创建的子进程创建时将会自动重置为 <code>SCHED_OTHER</code> 调度策略；如果调用进程使用负值nice，那么使用  <code>SCHED_RESET_ON_FORK</code> 后fork创建的子进程创建时将会自动将其nice重置为0。 这个标记激活时只有当进程具有 <code>CAP_SYS_NICE</code> 标记时才能被重置，而这个 <code>CAP_SYS_NICE</code> 标记在使用fork()创建子进程后，在子进程中被禁止。</p></div></div></div><div id="outline-container-orgheadline5" class="outline-2"><h2 id="orgheadline5"><span class="section-number-2">2</span> 进程优先级概念</h2><div class="outline-text-2" id="text-2"><ol class="org-ol"><li><p>进程优先级值越小，优先级越大。</p><p>linux下的进程调度优先级是从-20到19，一共40个级别，数字越大，表示进程的优先级越低。默认时候，进程的优先级是0。</p><p>如果不是root权限,则侄只能降调度优先级而不能提高，即使是自己用户的进程，自己把它调高了后，优先级也不能再被调会原来的值了，除非使用root用户来调回去。</p><p>系统重启后，对进程优先级的调整全部失效，所有进程的调度回到默认的初始级别。</p><p>参考：<a href="http://blog.chinaunix.net/uid-25940826-id-2888088.html" target="_blank" rel="noopener">Linux进程优先级的调整方法</a></p></li><li><p>进程优先级是PRI值不是Nice值，但是Nice值会影响优先级</p><p>PRI也还是比较好理解的，即进程的优先级，或者通俗点说就是程序被CPU执行的先后顺序，此值越小进程的优先级别越高。那NI呢？就是我们所要说的nice值了，其表示进程可被执行的优先级的修正数值。如前面所说，PRI值越小越快被执行，那么加入nice值后，将会使得PRI变为：PRI(new)=PRI(old)+nice。</p><p>到目前为止，更需要强调一点的是，进程的nice值不是进程的优先级，他们不是一个概念，但是进程nice值会影响到进程的优先级变化。</p><p>通过调整nice值，更改进程优先级，nice调整范围是 -20~19。</p><p>参考：<a href="http://blog.csdn.net/codestinity/article/details/7496962" target="_blank" rel="noopener">linux进程优先级、进程nice值</a></p></li></ol></div></div><div id="outline-container-orgheadline6" class="outline-2"><h2 id="orgheadline6"><span class="section-number-2">3</span> 进程优先级与变动影响因素与原理</h2><div class="outline-text-2" id="text-3"><ol class="org-ol"><li><p>调度策略：RR调度和FIFO调度的进程属于实时进程，以分时调度(OTHER)的进程是非实时进程。</p><p>FIFO（先进先出）和RR（时间片轮转）用于实时进程，OTHER（分时调度）用于非实时进程；实时进程会抢占普通进程;FIFO会导致同优先级实时进程始终占用CPU，RR会保证同优先级实时进程按时间片轮流执行。</p><p>参考：<a href="http://blog.chinaunix.net/uid-7187477-id-5593.html" target="_blank" rel="noopener">SCHED_OTHER,SCHED_FIFO,SCHED_RR</a></p></li><li><p>实时进程优先级高于普通进程，实时进程使用静态优先级调度、非实时进程使用动态优先级调度，非实时进程动态优先级通过nice调整、可能受bonus影响。</p><p>Linux进程有两种优先级：普通进程优先级（使用SCHED_NORMAL调度策略），以及实时进程优先级（使用SCHED_FIFO或SCHED_RR调度策略）</p><p>不同调度策略的实时进程只有在相同优先级时才有可比性，任何时候，实时进程的优先级都高于普通进程</p><p>Linux对实时进程使用静态优先级调度，对普通的进程（非实时进程），根据动态优先级进行调度。</p><p>实时进程，只有静态优先级(在0~MAX_RT_PRIO-1间，默认MAX_RT_PRIO为100）, 内核不会再根据休眠等因素对其静态优先级做调整； </p><p>实时进程0-99号优先级每一个优先级对应一个优先级队列（链表），先执行数值高的对应的链表（0号最低），可由后面所述的 <code>chrt</code> 以及 相应函数修改该优先级；</p><p>非实时进程静态优先级可通过nice值（-20~19）调整：static_prio=MAX_RT_PRIO + nice + 20。</p><p>nice只影响非实时进程(静态优先级在100~139之间)，nice越大静态优先级值越大，优先级越低。</p><p>非实时进程动态优先级根据静态优先级和bonus计算:dynamic_prio = max (100, min (static_prio - bonus + 5, 139))</p><p>bonus反映进程平均睡眠时间（范围0~10），睡眠时间越多越可能是交互进程，每次轮到它运行时它就越可能不会使用完时间片再释放cpu。</p><p>参考：<a href="http://www.cnblogs.com/zhaoyl/archive/2012/09/04/2671156.html" target="_blank" rel="noopener">Linux进程调度原理</a> 以及 <a href="http://sunnyshineboy.blog.163.com/blog/static/20281511820130664616543/" target="_blank" rel="noopener">给进程设置实时优先级</a></p></li></ol></div></div><div id="outline-container-orgheadline7" class="outline-2"><h2 id="orgheadline7"><span class="section-number-2">4</span> 查看与设置优先级与进程线程信息等的方法</h2><div class="outline-text-2" id="text-4"><ol class="org-ol"><li><p>通过 <code>ps</code> 查看进程信息</p><p><code>ps -el</code> 可查看进程优先级和nice值,命令执行结果：NI列显示的每个进程的nice值（主要针对非实时进程），PRI是进程的优先级（如果是实时进程就是静态优先级，如果是非实时进程，就是动态优先级）。</p><p>参考：<a href="http://www.cnblogs.com/zhaoyl/archive/2012/09/04/2671156.html" target="_blank" rel="noopener">Linux进程调度原理</a></p></li><li><p>通过 <code>top</code> 查看进程信息</p><p>其中的优先级和ps的pri不一样，ps中一般为0的进程，在top中为20，这个优先级应该对应于前面所说的实时进程优先级，实时进程只使用1-99号优先级队列，序号越大优先级越高，0号留给普通进程使用。</p></li><li><p><code>chrt -p &lt;pid&gt;</code> 查看进程属性</p><p>通过 <code>chrt</code> 查看和修改进程调度和优先级属性，它一般也是调用后面的 <code>sched_setscheduler()</code> 实现的。  </p><p>注意： <code>char -o pri command</code> 设置为SCHED_OTHER调度方式优先级别值只能是0表示比任何实时优先级都低，非实时进程不使用该值决定调度行为，普通进程使用自己的调度策略。</p><p>参考： <code>man chrt</code> </p></li><li><p>通过 <code>sched_setscheduler()</code> 设置进程调度和优先级属性</p><p>效果类似 <code>chrt</code>, </p><p>关于priority的注意：这里参数中的pri不是ps的nice也不是priority,而是代码中的sched_priority，用于表示一系列可执行进程列表。实时进程中该值范围为1-99越大表示优先级越高, 非实时只能是0表示始终比实时进程低，并且非实时进程的优先级不由此值确定而是由其内部动态优先级确定。chrt中的pri应该也类似含义，例如： <code>chrt -f -p 10 pid</code> 则ps中pri为-11， <code>chrt -f -p 1 pid</code> 则ps中pri为-2）为0，进程命令为command，其它可以根据选项参数设置。</p><p>关于prioriti的注意：一般子进程会继承父进程的调度策略，在Linux  2.6.32之后，可以使用 <code>SCHED_RESET_ON_FORK</code> 按位与参数的方式调用 <code>sched_setscheduler()</code>, 使用之后效果是：如果调用进程使用 <code>SCHED_FIFO</code> 或 <code>SCHED_RR</code> 调度策略，使用 <code>SCHED_RESET_ON_FORK</code> 后fork创建的子进程创建时将会自动重置为 <code>SCHED_OTHER</code> 调度策略；如果调用进程使用负值nice，那么使用  <code>SCHED_RESET_ON_FORK</code> 后fork创建的子进程创建时将会自动将其nice重置为0。 这个标记激活时只有当进程具有 <code>CAP_SYS_NICE</code> 标记时才能被重置，而这个 <code>CAP_SYS_NICE</code> 标记在使用fork()创建子进程后，在子进程中被禁止。</p><p>参考： <code>man sched_setscheduler</code> 和 <a href="http://blog.chinaunix.net/xmlrpc.php?r=blog/article&amp;uid=20205875&amp;id=3028468" target="_blank" rel="noopener">线程优先级设置</a></p></li><li><p>通过 <code>pthread_attr_setschedpolicy()</code> 设置线程调度和优先级属性</p><p>效果类似 <code>sched_setscheduler()</code>, 但是用于线程而非进程。</p><p>参考： <code>man pthread_attr_setschedpolicy</code></p></li></ol></div></div><div id="outline-container-orgheadline8" class="outline-2"><h2 id="orgheadline8"><span class="section-number-2">5</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[0/4]</code>(<code>[0%]</code>)</h2><div class="outline-text-2" id="text-5"></div><div id="outline-container-orgheadline9" class="outline-3"><h3 id="orgheadline9"><span class="section-number-3">5.1</span> <span class="todo NEXT">NEXT</span> 线程优先级是否继承父线程优先级？是否继承父进程优先级？</h3><div class="outline-text-3" id="text-5-1"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-02-01 一 15:39]</span></span></li></ul></div></div><div id="outline-container-orgheadline10" class="outline-3"><h3 id="orgheadline10"><span class="section-number-3">5.2</span> <span class="todo NEXT">NEXT</span> <code>chrt</code> 修改进程优先级，那么该进程的子线程优先级是否改变？</h3><div class="outline-text-3" id="text-5-2"><ul class="org-ul"><li>State "NEXT"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-02-01 一 15:40]</span></span></li></ul></div></div><div id="outline-container-orgheadline11" class="outline-3"><h3 id="orgheadline11"><span class="section-number-3">5.3</span> <span class="todo NEXT">NEXT</span> <code>chrt</code>, <code>ps</code>, <code>top</code>, <code>pthread_attr_setschedpolicy()</code>, <code>sched_setscheduler()</code> 中的优先级值和含义有什么关系？</h3><div class="outline-text-3" id="text-5-3"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-02-01 一 15:40]</span></span></li></ul></div></div><div id="outline-container-orgheadline12" class="outline-3"><h3 id="orgheadline12"><span class="section-number-3">5.4</span> <span class="todo NEXT">NEXT</span> 考虑将引文中的链接下载到本地</h3><div class="outline-text-3" id="text-5-4"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-02-01 一 15:50]</span></span></li></ul></div></div></div><br><div id="mypostamble" align="right" style="float:right" class="status">    <table> <tbody> <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Author</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">QuietHeart</td>  </tr><tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Email</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">    <a href="mailto:quiet_heart000@126.com" target="_blank" rel="noopener">quiet_heart000@126.com</a>  </td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Date</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">[2016-02-01 一 15:35]</td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Update</td>  <td style="border-style: solid;border-width:1px;border-right:0px;"><2016-02-11 四 16:14:46></2016-02-11></td></tr>    </tbody></table></div><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;style type=&quot;text/css&quot;&gt;
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              
      
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
      <category term="study" scheme="http://0.0.0.0:4000/categories/categories/study/"/>
    
      <category term="os" scheme="http://0.0.0.0:4000/categories/categories/study/os/"/>
    
    
  </entry>
  
  <entry>
    <title>测试orgmode文章导出</title>
    <link href="http://0.0.0.0:4000/2015/12/17/testexport/"/>
    <id>http://0.0.0.0:4000/2015/12/17/testexport/</id>
    <published>2015-12-16T16:00:00.000Z</published>
    <updated>2019-09-11T08:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">  .title  { text-align: center;             margin-bottom: .2em; }  .subtitle { text-align: center;              font-size: medium;              font-weight: bold;              margin-top:0; }  .todo   { font-family: monospace; color: red; }  .done   { font-family: monospace; color: green; }  .priority { font-family: monospace; color: orange; }  .tag    { background-color: #eee; font-family: monospace;            padding: 2px; font-size: 80%; font-weight: normal; }  .timestamp { color: #bebebe; }  .timestamp-kwd { color: #5f9ea0; }  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }  .org-center { margin-left: auto; margin-right: auto; text-align: center; }  .underline { text-decoration: underline; }  #postamble p, #preamble p { font-size: 90%; margin: .2em; }  p.verse { margin-left: 3%; }  pre {    border: 1px solid #0c0;    box-shadow: 1px 1px 1px #0e0;    padding: 8pt;    font-family: italic monospace;    color: #C7EDCC;    background-color: #111111;    overflow: auto;    margin: 1.2em;  }  pre.src {    position: relative;    overflow: visible;    padding-top: 1.2em;  }  pre.src:before {    display: none;    position: absolute;    background-color: white;    top: -10px;    right: 10px;    padding: 3px;    border: 1px solid black;  }  pre.src:hover:before { display: inline;}  pre.src-sh:before    { content: 'sh'; }  pre.src-bash:before  { content: 'sh'; }  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }  pre.src-R:before     { content: 'R'; }  pre.src-perl:before  { content: 'Perl'; }  pre.src-java:before  { content: 'Java'; }  pre.src-sql:before   { content: 'SQL'; }  table { border-collapse:collapse; }  caption.t-above { caption-side: top; }  caption.t-bottom { caption-side: bottom; }  td, th { vertical-align:top;  }  th.org-right  { text-align: center;  }  th.org-left   { text-align: center;   }  th.org-center { text-align: center; }  td.org-right  { text-align: right;  }  td.org-left   { text-align: left;   }  td.org-center { text-align: center; }  dt { font-weight: bold; }  .footpara { display: inline; }  .footdef  { margin-bottom: 1em; }  .figure { padding: 1em; }  .figure p { text-align: center; }  .inlinetask {    padding: 10px;    border: 2px solid gray;    margin: 10px;    background: #ffffcc;  }  #org-div-home-and-up   { text-align: right; font-size: 70%; white-space: nowrap; }  .linenr { font-size: smaller }  .code-highlighted { background-color: #ffff00; }  .org-info-js_info-navigation { border-style: none; }  #org-info-js_console-label    { font-size: 10px; font-weight: bold; white-space: nowrap; }  .org-info-js_search-highlight    { background-color: #ffff00; color: #000000; font-weight: bold; }    code {        border:groove #555555;border-width:thin;        background-color: #111111;color: #C7EDCC;    }#table-of-contents {    font-size: 9pt;    position: fixed;    right: 10px;    top: 14em;    margin:0;    padding:0;    border-width:1px;    border-style:solid;    background: #000000;    -webkit-box-shadow: 0 0 1em #777777;    -moz-box-shadow: 0 0 1em #777777;    -webkit-border-bottom-left-radius: 5px;    -moz-border-radius-bottomleft: 5px;    text-align: right;    /* ensure doesn't flow off the screen when expanded */    max-height: 60%;    overflow: auto;     z-index: 200;}#table-of-contents h2 {    font-size: 9pt;    max-width: 8em;    font-weight: normal;    padding-left: 0.5em;    padding-top: 0.05em;    padding-bottom: 0.05em; }#table-of-contents ul {    margin-left: 14pt;     margin-bottom: 10pt;    padding: 0}#table-of-contents li {    padding: 0;    margin: 1px;    list-style: none;}#table-of-contents ul>:first-child {    color: blue;}#table-of-contents #text-table-of-contents {    display: none;    text-align: left;}#table-of-contents:hover #text-table-of-contents {    display: block;    padding: 0.5em;    margin-top: -1.5em; }</style><div id="table-of-contents"><h2>Table of Contents</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. FAQ <code>[3/8]</code>(<code>[37%]</code>)</a><ul><li><a href="#orgheadline2">1.1. <span class="todo nilINBOX">INBOX</span> 如何设置style文件链接使之在所有文件中可以公用？</a></li><li><a href="#orgheadline3">1.2. <span class="done nilDONE">DONE</span> 如何设置文内引用链接保持在文件路径变化时文件内容不变？</a><ul><li><a href="#orgheadline4">1.2.1. 链接引用文件存放地</a></li><li><a href="#orgheadline5">1.2.2. org文件中引用链接到jekyll导出文件链接的转换</a></li><li><a href="#orgheadline6">1.2.3. 转换实现</a></li></ul></li><li><a href="#orgheadline7">1.3. <span class="done nilDONE">DONE</span> 如何设置图片链接在文件路径变化时保持不变？</a></li><li><a href="#orgheadline8">1.4. <span class="todo nilNEXT">NEXT</span> 如何设置文件中的签名信息？</a></li><li><a href="#orgheadline9">1.5. <span class="done nilDONE">DONE</span> 如何设置文件中jekyll文章的引用位置？</a></li><li><a href="#orgheadline10">1.6. <span class="todo nilNEXT">NEXT</span> 如何为每次更新文章追加设置记录时间戳？</a></li><li><a href="#orgheadline11">1.7. <span class="todo nilNEXT">NEXT</span> 如何放置引用文章链接在文章路径改变时的失效情况发生？</a></li><li><a href="#orgheadline12">1.8. <span class="todo nilNEXT">NEXT</span> 如何为本地orgmode导出文件设置导出引用链接？</a></li></ul></li></ul></div></div><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> FAQ <code>[3/8]</code>(<code>[37%]</code>)</h2><div class="outline-text-2" id="text-1"></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> <span class="todo INBOX">INBOX</span> 如何设置style文件链接使之在所有文件中可以公用？</h3></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><a id="ID-7c5f6554-f86c-4353-8fd6-211896588fd9"></a><span class="section-number-3">1.2</span> <span class="done DONE">DONE</span> 如何设置文内引用链接保持在文件路径变化时文件内容不变？</h3><div class="outline-text-3" id="text-1-2"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-01-11 一 17:08]</span></span></li><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-01-08 五 17:41] </span></span> <br>等待整理</li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-12-17 四 17:42]</span></span></li></ul></div><div id="outline-container-orgheadline4" class="outline-4"><h4 id="orgheadline4"><span class="section-number-4">1.2.1</span> 链接引用文件存放地</h4><div class="outline-text-4" id="text-1-2-1"><p>文章引用的文件，存放在jekyll中data目录的，名为对应文章所在文件扩展名替换为 <code>.files</code> 的目录中。</p><p>假设引用的是一个图片文件， 引用的文章文件名称是 <code>2015-12-17-testexport.org</code>, 导出到jekyll系统中的名称是 <code>2015-12-17-testexport.html</code>, 那么其文章所有被引用的文件都存放在 <code>data/2015-12-17-testexport.files</code> 。</p></div></div><div id="outline-container-orgheadline5" class="outline-4"><h4 id="orgheadline5"><span class="section-number-4">1.2.2</span> org文件中引用链接到jekyll导出文件链接的转换</h4><div class="outline-text-4" id="text-1-2-2"><p>org文件中的引用链接，在导出到jekyll的html需要进行转换才能正确显示，转换方式如下</p></div><div id="outline-container-orgheadline13" class="outline-5"><h5 id="orgheadline13"><span class="section-number-5">1.2.2.1</span> org文章使用链接的方式</h5><div class="outline-text-5" id="text-1-2-2-1"><p>org文章中引用本地外部文件和普通orgmode语法一样，如下</p><pre class="example">[[file:~/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2015-12-17-testexport.files/2015-12-17-editor_study_line.jpg][image file]]</pre></div></div><div id="outline-container-orgheadline14" class="outline-5"><h5 id="orgheadline14"><span class="section-number-5">1.2.2.2</span> 导出的html链接</h5><div class="outline-text-5" id="text-1-2-2-2"><p>导出结果到jekyll对应的html文件后，对应链接变成</p><pre class="example">&lt;a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2015-12-17-testexport.files/2015-12-17-editor_study_line.jpg"&gt;image file&lt;/a&gt;</pre></div></div><div id="outline-container-orgheadline15" class="outline-5"><h5 id="orgheadline15"><span class="section-number-5">1.2.2.3</span> 对导出的html链接进行转换</h5><div class="outline-text-5" id="text-1-2-2-3"><p>这样的结果在jekyll中是无法直接正确显示链接的，需要在导出为html之后，再对相应html文件中相应的链接处进行处理，处理成jekyll可以显示的方式，这里为：</p><pre class="example">&lt;a href="/data/2015-12-17-testexport.files/2015-12-17-editor_study_line.jpg"&gt;image file&lt;/a&gt;</pre><p>处理成功的效果：</p><p><a href="/data/2015-12-17-testexport.files/2015-12-17-editor_study_line.jpg">image file</a></p></div></div></div><div id="outline-container-orgheadline6" class="outline-4"><h4 id="orgheadline6"><span class="section-number-4">1.2.3</span> 转换实现</h4><div class="outline-text-4" id="text-1-2-3"><p>这里实现上述转换的方法是定义一个替换链接的函数，把它做为hook添加到 <code>org-publish-after-publishing-hook</code> 中。</p><p>大致如下：</p><div class="org-src-container"><pre class="src src-elisp">(defun my-update-jekyll-html-link (htmlfile);;replace the local file link to site relative link in jekyll.;;open    (setq htmlbuffer (find-file-existing htmlfile));;search    (goto-char (point-min));;TODO the xxx.files, xxx is better to be replaced by the html file name.    (while (re-search-forward "\\(&lt;a href=.*?\\)\\(file:.*?quietheart/mydoc/prepub/jekyll\\)\\(/data/[0-9]\\{4\\}-[0-1][0-9]-[0-3][0-9]-.*?\.files\\)" nil t)         (replace-match "\\1\\3" nil nil));;save and close    (save-buffer)    (kill-buffer htmlbuffer)))(defun my_after_pub_html_hook (orgfile htmlfile)     (my-update-jekyll-html-link htmlfile))(add-hook 'org-publish-after-publishing-hook 'my_after_pub_html_hook)))</pre></div></div></div></div><div id="outline-container-orgheadline7" class="outline-3"><h3 id="orgheadline7"><span class="section-number-3">1.3</span> <span class="done DONE">DONE</span> 如何设置图片链接在文件路径变化时保持不变？</h3><div class="outline-text-3" id="text-1-3"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-01-11 一 17:55]</span></span></li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-01-11 一 17:40]</span></span></li></ul><p>类似文件链接的转换，<a href="#orgheadline3">如何设置文内引用链接保持在文件路径变化时文件内容不变？</a></p><p>关键添加如下：</p><div class="org-src-container"><pre class="src src-elisp">;;image reference link convert.;;TODO the xxx.files, xxx is better to be replaced by the html file name.(while (re-search-forward "\\(&lt;img .*?src=.*?\\)\\(file:.*?quietheart/mydoc/prepub/orgmode\\)\\(/data/[0-9]\\{4\\}-[0-1][0-9]-[0-3][0-9]-.*?\.files\\)" nil t) (replace-match "\\1\\3" nil nil))</pre></div><p>效果：</p><div class="figure"><p><img src="/data/2015-12-17-testexport.files/2015-12-17-editor_study_line.jpg" alt="2015-12-17-editor_study_line.jpg"></p></div></div></div><div id="outline-container-orgheadline8" class="outline-3"><h3 id="orgheadline8"><span class="section-number-3">1.4</span> <span class="todo NEXT">NEXT</span> 如何设置文件中的签名信息？</h3><div class="outline-text-3" id="text-1-4"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-12-17 四 17:42]</span></span></li></ul></div></div><div id="outline-container-orgheadline9" class="outline-3"><h3 id="orgheadline9"><span class="section-number-3">1.5</span> <span class="done DONE">DONE</span> 如何设置文件中jekyll文章的引用位置？</h3><div class="outline-text-3" id="text-1-5"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-01-11 一 17:39]</span></span></li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-12-17 四 17:42]</span></span></li></ul><p>类似上面导出文件链接的转换，<a href="#orgheadline3">如何设置文内引用链接保持在文件路径变化时文件内容不变？</a></p><p>关键如下：</p><div class="org-src-container"><pre class="src src-elisp">(while (re-search-forward "\\(&lt;a href=.*?\\)\\(file:.*?quietheart/mydoc/prepub/orgmode\\)\\(/.*?\\)\\(_posts/[0-9]\\{4\\}-[0-1][0-9]-[0-3][0-9]-\\)\\(.*?\.html\\)" nil t) (replace-match "\\1\\3\\5" nil nil))</pre></div><p>效果<a href="/categories/note/gtd_with_orgmode.html">gtd method</a></p></div></div><div id="outline-container-orgheadline10" class="outline-3"><h3 id="orgheadline10"><span class="section-number-3">1.6</span> <span class="todo NEXT">NEXT</span> 如何为每次更新文章追加设置记录时间戳？</h3><div class="outline-text-3" id="text-1-6"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-12-17 四 17:42]</span></span></li></ul></div></div><div id="outline-container-orgheadline11" class="outline-3"><h3 id="orgheadline11"><span class="section-number-3">1.7</span> <span class="todo NEXT">NEXT</span> 如何放置引用文章链接在文章路径改变时的失效情况发生？</h3><div class="outline-text-3" id="text-1-7"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-01-11 一 18:00]</span></span></li></ul></div></div><div id="outline-container-orgheadline12" class="outline-3"><h3 id="orgheadline12"><span class="section-number-3">1.8</span> <span class="todo NEXT">NEXT</span> 如何为本地orgmode导出文件设置导出引用链接？</h3><div class="outline-text-3" id="text-1-8"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-01-18 一 18:28]</span></span></li></ul><p>这个和发布不同，日常orgmode管理之时，一般都会将相关文章放到一个目录中，引用的文件也属于该目录的子目录。这种情况下，使用 <code>elisp:</code> 链接的方式来自定义链接的引用。</p><p><a href="(my-link-org-file%20" data image 2010-04-02-editor_study_line.jpg")">imagefile</a></p><div class="org-src-container"><pre class="src src-elisp">;; custom link function for export.(defun my-link-org-file (file_path)  (setq org-file-prefix org-directory)  (find-file (concat org-file-prefix file_path)))(defun my-link-org-img (imgfile_path)  (setq org-file-prefix org-directory)  (find-file (concat org-file-prefix imgfile_path)))</pre></div><pre class="example">[[elisp:(my-link-org-file%20"data/image/2010-04-02-editor_study_line.jpg")][normalfile]][[elisp:(my-link-org-img%20"data/image/2010-04-02-editor_study_line.jpg")][imagefile]]</pre><pre class="example">&lt;a href="(my-link-org-file%20"data/image/2010-04-02-editor_study_line.jpg")"&gt;normalfile&lt;/a&gt;&lt;a href="(my-link-org-img%20"data/image/2010-04-02-editor_study_line.jpg")"&gt;imagefile&lt;/a&gt;</pre></div></div></div><br><div id="mypostamble" align="right" style="float:right" class="status">    <table> <tbody> <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Author</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">QuietHeart</td>  </tr><tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Email</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">    <a href="mailto:quiet_heart000@126.com" target="_blank" rel="noopener">quiet_heart000@126.com</a>  </td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Date</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">[2015-12-25 五 15:00]</td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Update</td>  <td style="border-style: solid;border-width:1px;border-right:0px;"><2016-02-11 四 16:48:40></2016-02-11></td></tr>    </tbody></table></div><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;style type=&quot;text/css&quot;&gt;
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              
      
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
      <category term="others" scheme="http://0.0.0.0:4000/categories/categories/others/"/>
    
    
  </entry>
  
  <entry>
    <title>测试orgmode链接</title>
    <link href="http://0.0.0.0:4000/2015/12/01/test_orglink/"/>
    <id>http://0.0.0.0:4000/2015/12/01/test_orglink/</id>
    <published>2015-11-30T16:00:00.000Z</published>
    <updated>2019-09-11T08:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">  .title  { text-align: center;             margin-bottom: .2em; }  .subtitle { text-align: center;              font-size: medium;              font-weight: bold;              margin-top:0; }  .todo   { font-family: monospace; color: red; }  .done   { font-family: monospace; color: green; }  .priority { font-family: monospace; color: orange; }  .tag    { background-color: #eee; font-family: monospace;            padding: 2px; font-size: 80%; font-weight: normal; }  .timestamp { color: #bebebe; }  .timestamp-kwd { color: #5f9ea0; }  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }  .org-center { margin-left: auto; margin-right: auto; text-align: center; }  .underline { text-decoration: underline; }  #postamble p, #preamble p { font-size: 90%; margin: .2em; }  p.verse { margin-left: 3%; }  pre {    border: 1px solid #0c0;    box-shadow: 1px 1px 1px #0e0;    padding: 8pt;    font-family: italic monospace;    color: #C7EDCC;    background-color: #111111;    overflow: auto;    margin: 1.2em;  }  pre.src {    position: relative;    overflow: visible;    padding-top: 1.2em;  }  pre.src:before {    display: none;    position: absolute;    background-color: black;    top: -10px;    right: 10px;    padding: 3px;    border: 1px solid black;  }  pre.src:hover:before { display: inline;}  pre.src-sh:before    { content: 'sh'; }  pre.src-bash:before  { content: 'sh'; }  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }  pre.src-R:before     { content: 'R'; }  pre.src-perl:before  { content: 'Perl'; }  pre.src-java:before  { content: 'Java'; }  pre.src-sql:before   { content: 'SQL'; }  table { border-collapse:collapse; }  caption.t-above { caption-side: top; }  caption.t-bottom { caption-side: bottom; }  td, th { vertical-align:top;  }  th.org-right  { text-align: center;  }  th.org-left   { text-align: center;   }  th.org-center { text-align: center; }  td.org-right  { text-align: right;  }  td.org-left   { text-align: left;   }  td.org-center { text-align: center; }  dt { font-weight: bold; }  .footpara { display: inline; }  .footdef  { margin-bottom: 1em; }  .figure { padding: 1em; }  .figure p { text-align: center; }  .inlinetask {    padding: 10px;    border: 2px solid gray;    margin: 10px;    background: #ffffcc;  }  #org-div-home-and-up   { text-align: right; font-size: 70%; white-space: nowrap; }  .linenr { font-size: smaller }  .code-highlighted { background-color: #ffff00; }  .org-info-js_info-navigation { border-style: none; }  #org-info-js_console-label    { font-size: 10px; font-weight: bold; white-space: nowrap; }  .org-info-js_search-highlight    { background-color: #ffff00; color: #000000; font-weight: bold; }    code {        border:groove #555555;border-width:thin;        background-color: #111111;color: #C7EDCC;    }#table-of-contents {    font-size: 9pt;    position: fixed;    right: 10px;    top: 14em;    margin:0;    padding:0;    border-width:1px;    border-style:solid;    background: #000000;    -webkit-box-shadow: 0 0 1em #777777;    -moz-box-shadow: 0 0 1em #777777;    -webkit-border-bottom-left-radius: 5px;    -moz-border-radius-bottomleft: 5px;    text-align: right;    /* ensure doesn't flow off the screen when expanded */    max-height: 60%;    overflow: auto;     z-index: 200;}#table-of-contents h2 {    font-size: 9pt;    max-width: 8em;    font-weight: normal;    padding-left: 0.5em;    padding-top: 0.05em;    padding-bottom: 0.05em; }#table-of-contents ul {    margin-left: 14pt;     margin-bottom: 10pt;    padding: 0}#table-of-contents li {    padding: 0;    margin: 1px;    list-style: none;}#table-of-contents ul>:first-child {    color: blue;}#table-of-contents #text-table-of-contents {    display: none;    text-align: left;}#table-of-contents:hover #text-table-of-contents {    display: block;    padding: 0.5em;    margin-top: -1.5em; }</style><div id="table-of-contents"><h2>Table of Contents</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. image links</a></li><li><a href="#orgheadline2">2. audio links</a></li></ul></div></div><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> image links</h2><div class="outline-text-2" id="text-1"><p><a href="/data/2015-12-01-test_orglink.files/image/2015-12-01-test_image.jpg">2015-12-01-test_image.jpg</a></p></div></div><div id="outline-container-orgheadline2" class="outline-2"><h2 id="orgheadline2"><span class="section-number-2">2</span> audio links</h2><div class="outline-text-2" id="text-2"><p><a href="/data/2015-12-01-test_orglink.files/audio/msgcrsky.wav">msgcrsky</a></p><p><a href="/data/2015-12-01-test_orglink.files/audio/songForEver.mp3">songForEver.mp3</a></p></div></div><br><div id="mypostamble" align="right" style="float:right" class="status">    <table> <tbody> <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Author</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">QuietHeart</td>  </tr><tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Email</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">    <a href="mailto:quiet_heart000@126.com" target="_blank" rel="noopener">quiet_heart000@126.com</a>  </td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Date</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">[2015-12-01 二 14:30]</td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Update</td>  <td style="border-style: solid;border-width:1px;border-right:0px;"><2016-05-29 日 14:39:37></2016-05-29></td></tr>    </tbody></table></div><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;style type=&quot;text/css&quot;&gt;
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              
      
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
      <category term="others" scheme="http://0.0.0.0:4000/categories/categories/others/"/>
    
    
  </entry>
  
  <entry>
    <title>使用orgmode进行GTD管理</title>
    <link href="http://0.0.0.0:4000/2015/11/27/gtd_with_orgmode/"/>
    <id>http://0.0.0.0:4000/2015/11/27/gtd_with_orgmode/</id>
    <published>2015-11-26T16:00:00.000Z</published>
    <updated>2019-09-11T08:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">  .title  { text-align: center;             margin-bottom: .2em; }  .subtitle { text-align: center;              font-size: medium;              font-weight: bold;              margin-top:0; }  .todo   { font-family: monospace; color: red; }  .done   { font-family: monospace; color: green; }  .priority { font-family: monospace; color: orange; }  .tag    { background-color: #eee; font-family: monospace;            padding: 2px; font-size: 80%; font-weight: normal; }  .timestamp { color: #bebebe; }  .timestamp-kwd { color: #5f9ea0; }  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }  .org-center { margin-left: auto; margin-right: auto; text-align: center; }  .underline { text-decoration: underline; }  #postamble p, #preamble p { font-size: 90%; margin: .2em; }  p.verse { margin-left: 3%; }  pre {    border: 1px solid #0c0;    box-shadow: 1px 1px 1px #0e0;    padding: 8pt;    font-family: italic monospace;    color: #C7EDCC;    background-color: #111111;    overflow: auto;    margin: 1.2em;  }  pre.src {    position: relative;    overflow: visible;    padding-top: 1.2em;  }  pre.src:before {    display: none;    position: absolute;    background-color: white;    top: -10px;    right: 10px;    padding: 3px;    border: 1px solid black;  }  pre.src:hover:before { display: inline;}  pre.src-sh:before    { content: 'sh'; }  pre.src-bash:before  { content: 'sh'; }  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }  pre.src-R:before     { content: 'R'; }  pre.src-perl:before  { content: 'Perl'; }  pre.src-java:before  { content: 'Java'; }  pre.src-sql:before   { content: 'SQL'; }  table { border-collapse:collapse; }  caption.t-above { caption-side: top; }  caption.t-bottom { caption-side: bottom; }  td, th { vertical-align:top;  }  th.org-right  { text-align: center;  }  th.org-left   { text-align: center;   }  th.org-center { text-align: center; }  td.org-right  { text-align: right;  }  td.org-left   { text-align: left;   }  td.org-center { text-align: center; }  dt { font-weight: bold; }  .footpara { display: inline; }  .footdef  { margin-bottom: 1em; }  .figure { padding: 1em; }  .figure p { text-align: center; }  .inlinetask {    padding: 10px;    border: 2px solid gray;    margin: 10px;    background: #ffffcc;  }  #org-div-home-and-up   { text-align: right; font-size: 70%; white-space: nowrap; }  .linenr { font-size: smaller }  .code-highlighted { background-color: #ffff00; }  .org-info-js_info-navigation { border-style: none; }  #org-info-js_console-label    { font-size: 10px; font-weight: bold; white-space: nowrap; }  .org-info-js_search-highlight    { background-color: #ffff00; color: #000000; font-weight: bold; }    code {        border:groove #555555;border-width:thin;        background-color: #111111;color: #C7EDCC;    }#table-of-contents {    font-size: 9pt;    position: fixed;    right: 10px;    top: 14em;    margin:0;    padding:0;    border-width:1px;    border-style:solid;    background: #000000;    -webkit-box-shadow: 0 0 1em #777777;    -moz-box-shadow: 0 0 1em #777777;    -webkit-border-bottom-left-radius: 5px;    -moz-border-radius-bottomleft: 5px;    text-align: right;    /* ensure doesn't flow off the screen when expanded */    max-height: 60%;    overflow: auto;     z-index: 200;}#table-of-contents h2 {    font-size: 9pt;    max-width: 8em;    font-weight: normal;    padding-left: 0.5em;    padding-top: 0.05em;    padding-bottom: 0.05em; }#table-of-contents ul {    margin-left: 14pt;     margin-bottom: 10pt;    padding: 0}#table-of-contents li {    padding: 0;    margin: 1px;    list-style: none;}#table-of-contents ul>:first-child {    color: blue;}#table-of-contents #text-table-of-contents {    display: none;    text-align: left;}#table-of-contents:hover #text-table-of-contents {    display: block;    padding: 0.5em;    margin-top: -1.5em; }</style><div id="table-of-contents"><h2>Table of Contents</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 任务状态</a></li><li><a href="#orgheadline2">2. 划分文件</a></li><li><a href="#orgheadline3">3. 管理方式:</a><ul><li><a href="#orgheadline4">3.1. 大致思路：</a></li><li><a href="#orgheadline5">3.2. 回顾</a><ul><li><a href="#orgheadline6">3.2.1. 回顾种类</a></li><li><a href="#orgheadline7">3.2.2. 回顾内容：</a></li></ul></li></ul></li><li><a href="#orgheadline8">4. 实现方式</a><ul><li><a href="#orgheadline9">4.1. 实现基本Orgmode任务管理</a><ul><li><a href="#orgheadline10">4.1.1. TODO标题表示任务</a></li><li><a href="#orgheadline11">4.1.2. 按照实现策略进行配置</a></li><li><a href="#orgheadline12">4.1.3. 常用操作</a></li></ul></li><li><a href="#orgheadline13">4.2. 交叉引用</a></li><li><a href="#orgheadline14">4.3. 设置优先级别</a><ul><li><a href="#orgheadline15">4.3.1. 可采用四象限法则，将事情按照重要和紧急两个不同的程度进行划分，分为四个“象限”。</a></li><li><a href="#orgheadline16">4.3.2. 设置优先级</a></li><li><a href="#orgheadline17">4.3.3. 切换优先级</a></li></ul></li><li><a href="#orgheadline18">4.4. Capture-Refile-Archive</a><ul><li><a href="#orgheadline19">4.4.1. 概念</a></li><li><a href="#orgheadline20">4.4.2. 配置</a></li><li><a href="#orgheadline21">4.4.3. 操作</a></li></ul></li><li><a href="#orgheadline22">4.5. 归档</a><ul><li><a href="#orgheadline23">4.5.1. 配置归档位置和归档后附带信息</a></li><li><a href="#orgheadline24">4.5.2. 归档命令</a></li><li><a href="#orgheadline25">4.5.3. 举例</a></li></ul></li><li><a href="#orgheadline26">4.6. 便于整理周报的记录技巧</a></li><li><a href="#orgheadline27">4.7. orgmode与mobile org整合</a><ul><li><a href="#orgheadline28">4.7.1. 配置</a></li><li><a href="#orgheadline29">4.7.2. 原理</a></li><li><a href="#orgheadline30">4.7.3. 同步操作</a></li><li><a href="#orgheadline31">4.7.4. 使用举例</a></li><li><a href="#orgheadline32">4.7.5. 其它</a></li></ul></li></ul></li><li><a href="#orgheadline33">5. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[8/11]</code>(<code>[72%]</code>)</a><ul><li><a href="#orgheadline34">5.1. <span class="done nilDONE">DONE</span> 如何划分任务状态以及存放的文件？</a></li><li><a href="#orgheadline35">5.2. <span class="done nilDONE">DONE</span> 如何实现任务管理的基本管理？</a></li><li><a href="#orgheadline36">5.3. <span class="done nilDONE">DONE</span> 如何设置交叉引用?</a></li><li><a href="#orgheadline37">5.4. <span class="done nilDONE">DONE</span> 如何设置优先级别?</a></li><li><a href="#orgheadline38">5.5. <span class="done nilDONE">DONE</span> 如何迅速捕获临时产生的任务，以及将各个任务标题在状态文件中进行转移？</a></li><li><a href="#orgheadline39">5.6. <span class="done nilDONE">DONE</span> 如何设置归档?</a></li><li><a href="#orgheadline40">5.7. <span class="done nilDONE">DONE</span> 便于整理周回顾?</a></li><li><a href="#orgheadline41">5.8. <span class="done nilDONE">DONE</span> 如何将PC与移动端的orgmode整合?</a></li><li><a href="#orgheadline42">5.9. <span class="todo nilLATER">LATER</span> 杂乱问题</a></li><li><a href="#orgheadline43">5.10. <span class="todo nilNEXT">NEXT</span> 改善归档与done/cancel策略</a></li><li><a href="#orgheadline44">5.11. <span class="todo nilNEXT">NEXT</span> 改善refile的配置方式</a></li></ul></li></ul></div></div><p>这里给出采用orgmode进行gtd管理的策略。</p><pre class="example">注：orgmode工作目录说明文件(orgmode/gtd/readme.org)即此文的副本,此文定期更新同步到orgmode工作目录的说明文件。</pre><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><a id="ID-d9cb9aee-183f-4ff1-a54c-5e0ee730d7bd"></a><span class="section-number-2">1</span> 任务状态</h2><div class="outline-text-2" id="text-1"><p>状态含义同一般GTD系统，这里先不做深入介绍。主要设置如下任务状态：</p><dl class="org-dl"><dt>INBOX</dt><dd>任何未经处理的任务。</dd><dt>NEXT</dt><dd>正在处理的任务。</dd><dt>LATER</dt><dd>被暂缓延迟的任务。</dd><dt>WAIT/FORWARD</dt><dd>等待能够继续处理的条件。</dd><dt>MAYBE/FUTURE</dt><dd>可能会处理，可能不处理的任务。</dd><dt>CANCEL</dt><dd>被取消的任务。</dd><dt>DONE</dt><dd>已完成的任务。</dd></dl></div></div><div id="outline-container-orgheadline2" class="outline-2"><h2 id="orgheadline2"><a id="ID-b12234fe-8e89-4eb0-bbf9-912a4df82c15"></a><span class="section-number-2">2</span> 划分文件</h2><div class="outline-text-2" id="text-2"><p>主要设置如下目录和文件来存放数据：</p><dl class="org-dl"><dt>inbox.org</dt><dd><p>整个体系的输入，产生的任何任务、灵感、想法都会通过快速捕捉命令（例如 <code>C-c c</code> ）默认收集到这里。</p><p>单个文件，因为进入其中的任务迟早会被清空，不会积累。这里的内容是最原始的、迅速捕捉到的内容，待处理，甚至都没有任务状态关键字。每次回顾后，这里的内容要么被移动到相应位置，要么被直接处理，要么归档。</p></dd><dt>next.org</dt><dd><p>这里内容主要存放当前处理的任务。</p><p>单个文件，因为进入其中的任务迟早会被清空，不会积累。处理任务之时，集中在next.org中进行处理，处理之时相应的任务可能会被切换成各种状态，每次经过定期回顾处理后，这个文件其它状态的内容被移动到合适的位置，导致仅包含 <code>NEXT</code> 状态的任务。</p></dd><dt>later.org</dt><dd><p>这里的内容存放 <code>LATER</code> 状态的任务。</p><p>单个文件，因为进入其中的任务迟早会被清空，不会积累。每次回顾之后，可能会有一些新的任务切换成 <code>LATER</code> 状态并进入这个文件；也可能有一些任务被切换至其它状态并移出到对应文件。</p></dd><dt>wait_forward.org</dt><dd><p>这里的内容存放 <code>WAIT/FORWARD</code> 状态的任务。</p><p>单个文件，因为进入其中的任务迟早会被清空，不会积累。每次回顾之后，可能会有一些新的任务切换成 <code>WAIT/FORWARD</code> 状态并进入其中；也可能有一些任务被切换至其它状态并移出这里到对应目录。</p></dd><dt>maybe_future.org</dt><dd><p>这里的内容存放 <code>MAYBE/FUTURE</code> 状态的任务。</p><p>建议为目录，因为其中内容可能会积累。每次回顾之后，可能会有一些新的任务被切换成 <code>MAYBE/FUTURE</code> 状态并进入其中；也可能有一些任务被切换至其它状态并移出这里到对应目录。</p></dd><dt>cancel.org</dt><dd><p>这里的内容存放 <code>CANCEL</code> 状态的任务。</p><p>建议为目录，其中内容可能会积累。每次回顾之后，可能会有一些新的任务切换成 <code>CANCEL</code> 状态并进入其中；也可能有一些任务被切换至其它状态并移出这里到对应目录。</p></dd><dt>done.org</dt><dd><p>这里的内容存放 <code>DONE</code> 状态的任务。</p><p>建议为目录，其中内容可能会积累。每次回顾之后，可能会有一些新的任务切换成 <code>DONE</code> 状态并进入其中；也可能有一些任务被移至其他回顾目录、归档目录、或者加入特定关联信息等。</p></dd><dt>output</dt><dd><p>将处理好的任务转化为文档的地方。</p><p>建议为目录，其中内容可能会积累。主要存放将要整理成笔记的内容，整理好的内容存放到这里，在合适的时候（如回顾之时）会被转移至其它笔记系统；另外为了借助orgmode环境方便集中访问和refile，有些草稿性质的文档，也可为之做成一个软链接，将软链接放在这里，源文档仍在其初始目录。</p></dd><dt>_review</dt><dd><p>存放与任务关联的项目。</p><p>建议为目录，其中内容可能会积累。主要存放之前整理过的、或者不活跃的回顾项目。项目其实是对任务的一种“分类”，每个项目包含多个任务，由gtd系统管理，回顾之时会将相关联的任务组织整理，将其概要信息归结为一条项目，存放在这里。</p></dd><dt>_active</dt><dd><p>存放与任务关联的当前活跃项目。</p><p>建议为目录，其中内容可能会积累。主要存放当前正在整理或者进行的、或者活跃的回顾项目。项目条目的含义同上，是多个相关联的任务的概要索引，便于日后查找参考等，也使得整个gtd中被处理的任务更为有序。</p></dd><dt>_archive</dt><dd><p>归档已完成任务。</p><p>建议为目录，其中内容可能会积累。主要将一些任务归档，减少Agenda视图的冗余，以及备份，具体依实际情况待定。</p></dd></dl></div></div><div id="outline-container-orgheadline3" class="outline-2"><h2 id="orgheadline3"><a id="ID-0c3b1560-a649-4d5a-b914-c6ddd1b43c36"></a><span class="section-number-2">3</span> 管理方式:</h2><div class="outline-text-2" id="text-3"></div><div id="outline-container-orgheadline4" class="outline-3"><h3 id="orgheadline4"><span class="section-number-3">3.1</span> 大致思路：</h3><div class="outline-text-3" id="text-3-1"><dl class="org-dl"><dt>两种划分状态的方式</dt><dd><p>任务的状态既通过其所在的 <b>状态文件名</b> 表示，也通过 <b>TODO关键字标记</b> 表示。</p><p>两种“划分”得到的状态含义大致相同，并且一一对应。</p></dd><dt>回顾阶段与处理阶段</dt><dd><p>为方便信息检索，以及避免信息重复，采用“分阶段”（处理阶段和回顾阶段）方式管理。</p><p>虽然我们划分任务状态的采用的文件名和TODO状态标记两种方式，通过如下方式对处理阶段划分，并不会造成混乱。</p><dl class="org-dl"><dt>处理阶段</dt><dd>在任务处理时进行，将任务切换至合适的TODO关键字标记。</dd><dt>回顾阶段</dt><dd>在系统回顾时进行，将相关TODO关键字标记的任务转移到对应的状态文件中集中存放。</dd></dl></dd></dl></div></div><div id="outline-container-orgheadline5" class="outline-3"><h3 id="orgheadline5"><a id="ID-8d821c98-4d17-4bf3-a5e1-c08916eefbc6"></a><span class="section-number-3">3.2</span> 回顾</h3><div class="outline-text-3" id="text-3-2"></div><div id="outline-container-orgheadline6" class="outline-4"><h4 id="orgheadline6"><span class="section-number-4">3.2.1</span> 回顾种类</h4><div class="outline-text-4" id="text-3-2-1"><dl class="org-dl"><dt>短期回顾</dt><dd><p>比较频繁的，例如“日”回顾，主要用来清理inbox中的内容，以及切换状态。</p><p>对于inbox状态文件，将其中的任务和内容切换到合适状态并refile；对于其它文件的任务，只需切换其状态即可；为简化频繁的文件操作，操作可在orgmode的agenda view下进行。</p></dd><dt>中期回顾</dt><dd><p>根据项目情况定期的，例如“周”回顾，主要用来梳理当前任务的状态和关系。</p><p>主要涉及对任务的refile，以及文档生成等。</p></dd><dt>长期回顾</dt><dd>便于总结复习整理的，例如“月”、“年”回顾，主要用来梳理任务状态、复习曾经整理的内容、归档等等。</dd></dl></div></div><div id="outline-container-orgheadline7" class="outline-4"><h4 id="orgheadline7"><span class="section-number-4">3.2.2</span> 回顾内容：</h4><div class="outline-text-4" id="text-3-2-2"></div><div id="outline-container-orgheadline45" class="outline-5"><h5 id="orgheadline45"><span class="section-number-5">3.2.2.1</span> 短期回顾</h5><div class="outline-text-5" id="text-3-2-2-1"><p>在"短期回顾"中，定期处理inbox中的内容使得收集状态的内容及时被处理。根据情况，可能有如下类型：</p><dl class="org-dl"><dt>立即处理</dt><dd>一般处理过程仅需1-2分钟，直接处理完，让其归结为done状态。</dd><dt>做为任务处理</dt><dd>转移到对应的gtd任务状态中开始对其进行gtd管理，如果任务复杂，可考虑为其创建项目（回顾）来管理相关任务。</dd><dt>不需要处理</dt><dd>直接删除。</dd><dt>归档与笔记</dt><dd>从gtd输出（例如到out目录），或直接转移到对应的笔记系统。</dd></dl><p>对其他状态任务的处理，只需切换相应任务状态，直接在orgmode中的AgendaView中进行可以避免频繁的文件切换。</p></div></div><div id="outline-container-orgheadline46" class="outline-5"><h5 id="orgheadline46"><span class="section-number-5">3.2.2.2</span> 中期回顾</h5><div class="outline-text-5" id="text-3-2-2-2"><p>在"周"回顾中，梳理各种任务状态中的内容，将相关的内容关联起来，将相应的状态内容移动到对应的文件等等。处理方式类似对于inbox的处理，可能有如下类型：</p><dl class="org-dl"><dt>立即处理</dt><dd>将已完成的任务梳理，并且从其它文件中移动到"done"，需要添加项目回顾关联的，则添加相应的关联信息。</dd><dt>做为任务处理</dt><dd>没有完成的任务，视情况将其放置到合适的状态和位置，必要时可能会追加更详细的任务属性（如优先级、截止日期、重复间隔等等）。</dd><dt>不需要处理</dt><dd>将不需要继续进行的任务，放置到cancel状态中，将其取消。</dd><dt>归档与笔记</dt><dd>将一些有必要归档的内容归档（减少agenda的负担），以及将特定内容移动到特定的笔记系统（内容管理）。</dd></dl></div></div></div></div></div><div id="outline-container-orgheadline8" class="outline-2"><h2 id="orgheadline8"><span class="section-number-2">4</span> 实现方式</h2><div class="outline-text-2" id="text-4"><p>下面给出实现上述管理主要需要注意的几个部分。</p></div><div id="outline-container-orgheadline9" class="outline-3"><h3 id="orgheadline9"><a id="ID-2d674513-e8de-4e33-8d44-95296d9c18f0"></a><span class="section-number-3">4.1</span> 实现基本Orgmode任务管理</h3><div class="outline-text-3" id="text-4-1"></div><div id="outline-container-orgheadline10" class="outline-4"><h4 id="orgheadline10"><span class="section-number-4">4.1.1</span> TODO标题表示任务</h4><div class="outline-text-4" id="text-4-1-1"><dl class="org-dl"><dt>TODO标题是一种包含状态的特殊标题</dt><dd><p>在标题标记后面加上相应状态名，便成为TODO项目。状态默认为TODO和DONE，可以自行配置。</p><pre class="example">* TODO 这是一个TODO项目** TODO 这是TODO的子项目</pre></dd><dt>带有统计子项目的TODO项目</dt><dd><p>在一个待办标题中添加子待办标题，然后在待办标题中添加 <code>[%]</code> 或者 <code>[%]</code> 。 每当子标题更新时，父标题上面的相应比例会自动统计变化，如果强制刷新，则在父标题相应的比例标记上输入 <code>C-c C-c</code> 。</p><pre class="example">* TODO 这是一个统计子项的TODO项目 [0/2]** TODO 这是TODO的子项目1** TODO 这是TODO的子项目2</pre><p>当然这样也行：</p><pre class="example">* TODO 这是一个统计子项的TODO项目 [0/2] ([0%])** TODO 这是TODO的子项目1** TODO 这是TODO的子项目2</pre></dd></dl></div></div><div id="outline-container-orgheadline11" class="outline-4"><h4 id="orgheadline11"><span class="section-number-4">4.1.2</span> 按照实现策略进行配置</h4><div class="outline-text-4" id="text-4-1-2"><ul class="org-ul"><li><p>增加TODO状态在配置文件中加入类似如下代码：</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;set status for TODO.(setq org-todo-keywords     '((sequence "INBOX" "NEXT" "LATER" "WAIT/FORWARD" "MAYBE/FUTURE" "|" "CANCEL" "DONE")))</pre></div></li><li><p>配置状态颜色通过org-todo-keyword-faces的设置实现，添加内容如下</p><div class="org-src-container"><pre class="src src-emacs-lisp">;; color for todo keywords(setq org-todo-keyword-faces '(("INBOX" . (:foreground "blue" :weight bold)) ("NEXT" . org-warning)("LATER" . "yellow")("WAIT/FORWARD" . "blue")("MAYBE/FUTURE" . "purple")("DONE" . "green")("CANCEL" . "grey")))</pre></div></li><li><p>配置状态快捷切换键通过定义状态时将快捷按键放在状态后面，用‘（）’括起来，添加内容如下：</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;set status for TODO.(setq org-todo-keywords '((sequence                          "INBOX"                         "NEXT(n)"                         "LATER(l)"                         "WAIT/FORWARD(w)"                         "MAYBE/FUTURE(m)"                         "|" "CANCEL(c)" "DONE(d)"                         )) )</pre></div></li><li><p>配置状态切换的跟踪时间戳当TODO列表切换到结束状态时，会自动为其添加一个结束时候的时间戳（转变为非结束状态时会将其移除）。</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;add timestamp when todo change to done.(setq org-log-done 'time)</pre></div></li></ul></div></div><div id="outline-container-orgheadline12" class="outline-4"><h4 id="orgheadline12"><span class="section-number-4">4.1.3</span> 常用操作</h4><div class="outline-text-4" id="text-4-1-3"><p>TODO项目相关操作：</p><ul class="org-ul"><li><code>M-S-Ret</code> 当前位置插入TODO项目，默认状态和上一条统计TODO状态一样</li><li><code>C-S-Ret</code> 当前级别子树后面插入TODO项目</li><li><code>C-c C-t</code> 当前所在TODO项目状态切换(不一定要在TODO标题上面)</li></ul><p>默认状态下，循环切换次序是TODO-&gt;Done-&gt;普通标题（只有*）。</p><ul class="org-ul"><li><code>S-RIGHT/S-LEFT</code> 当前所处TODO标题上进行状态切换，默认状态下，循环切换次序是：TODO-&gt;DONE-&gt;普通标题</li><li><code>C-c</code> , 修改优先级（包括A,B,C三个级别，不一定在TODO标题上面）</li><li><code>S-UP/S-DOWN</code> 切换优先级，默认次序是A-&gt;B-&gt;C-&gt;无。</li><li><code>C-u C-c C-t</code> 快捷切换状态，输入后会提示你要输入的状态，可以支持Tab补全，可以用快捷按键替代。</li><li id="刷新子项目完成情况统计">光标停留在 <code>[%]</code> 或者 <code>[%]</code> 之上，输入 <code>C-c C-c</code></li></ul></div></div></div><div id="outline-container-orgheadline13" class="outline-3"><h3 id="orgheadline13"><a id="ID-47112c75-8f88-4bc4-8a4e-ab596d340d2f"></a><span class="section-number-3">4.2</span> 交叉引用</h3><div class="outline-text-3" id="text-4-2"><p>因任务可能会在不同的文件与标题间迁移，所以需要为每一条目采用与文件与位置无关的id，即采用全局唯一id链接的方式实现交叉引用。</p><ol class="org-ol"><li><p>首先配置全局链接</p><p>类似如下：</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;Settings for global id link.(require 'org-id)(setq org-id-link-to-org-use-id t)</pre></div></li><li><p>为被引用标题创建全局链接id保存链接内容的同时也创建了相应的链接。当然，这需要事先配置好保存链接快捷键</p><div class="org-src-container"><pre class="src src-emacs-lisp">(global-set-key "\C-cl" 'org-store-link)</pre></div><p>输入 <code>C-c l</code> 之后便创建好了相应的全局链接，类似如下：</p><pre class="example">* 子树标题   :PROPERTIES: :ID:       60b13787-86e8-43a3-9a33-73d3eb7e6f58 :END:</pre></li><li><p>引用链接像正常插入链接一样，输入 <code>C-c C-l</code> 即可，默认插入最近一次保存的链接。</p><p>引用的格式举例 </p><pre class="example">[[id:60b13787-86e8-43a3-9a33-73d3eb7e6f58][子树标题]]</pre></li></ol></div></div><div id="outline-container-orgheadline14" class="outline-3"><h3 id="orgheadline14"><a id="ID-8d069a29-a8c1-440b-bfa5-5f1faad9accc"></a><span class="section-number-3">4.3</span> 设置优先级别</h3><div class="outline-text-3" id="text-4-3"></div><div id="outline-container-orgheadline15" class="outline-4"><h4 id="orgheadline15"><span class="section-number-4">4.3.1</span> 可采用四象限法则，将事情按照重要和紧急两个不同的程度进行划分，分为四个“象限”。</h4><div class="outline-text-4" id="text-4-3-1"><dl class="org-dl"><dt>第一象限</dt><dd><p>重要但不紧急的事。</p><p>法则重点，这才是最需要做的事。需要制定计划，按时完成。可以让你进入良性循环的做法！</p></dd><dt>第二象限</dt><dd><p>重要并紧急的事。</p><p>需要优先解决，这也是没有计划的做法，无休止地一直在“瞎忙”。</p></dd><dt>第三象限</dt><dd><p>不重要但紧急的事。</p><p>会让我们产生“这事很重要”的错觉。实际上就算重要也是对别人而言。我们花很多时间在这个里面打转。自以为是在第一象限，其实不过是在满足 别人的期望与标准。</p></dd><dt>第四象限</dt><dd><p>不紧急也不重要的事。</p><p>浪费时间，或者完全对自己完全无意义的事。如果有可能，交给别人去做。</p></dd></dl><p>我们把事项进行一些梳理，就会清楚自己的时间和精力主要应该用在什么地方了。</p></div></div><div id="outline-container-orgheadline16" class="outline-4"><h4 id="orgheadline16"><span class="section-number-4">4.3.2</span> 设置优先级</h4><div class="outline-text-4" id="text-4-3-2"><p>通过如下方式：</p><div class="org-src-container"><pre class="src src-elisp">;;set priority(setq org-highest-priority ?A)(setq org-lowest-priority ?D)(setq org-default-priority ?A)(setq org-priority-faces '(                           (?A . org-warning)                           (?B . (:background "DodgerBlue" :foreground "black" :weight bold))                            (?C . (:foreground "SkyBlue" :weight bold))                           (?D . (:foreground "DodgerBlue" :weight bold))                            ))</pre></div></div></div><div id="outline-container-orgheadline17" class="outline-4"><h4 id="orgheadline17"><span class="section-number-4">4.3.3</span> 切换优先级</h4><div class="outline-text-4" id="text-4-3-3"><p>在标题上输入 <code>S-&lt;up&gt;/&lt;down&gt;</code> </p><p>5w1h分析</p></div></div></div><div id="outline-container-orgheadline18" class="outline-3"><h3 id="orgheadline18"><a id="ID-ac3797e8-b3ec-41de-bf6b-79f3cfbb636d"></a><span class="section-number-3">4.4</span> Capture-Refile-Archive</h3><div class="outline-text-3" id="text-4-4"></div><div id="outline-container-orgheadline19" class="outline-4"><h4 id="orgheadline19"><span class="section-number-4">4.4.1</span> 概念</h4><div class="outline-text-4" id="text-4-4-1"><p>Capture用来迅速收集一些临时产生的想法，尽可能少的打断当前的工作状态。通过指定好快捷方式和相应的Capture目标位置后，在任意时间运行捕获命令会将这些临时的记录存放在一个指定的位置，空闲之时再做进一步整理。</p><p>Refile以特定的命令，用来将之前Capture的内容直接转移到特定的地方，避免了手动剪切（复制）和粘帖。</p></div></div><div id="outline-container-orgheadline20" class="outline-4"><h4 id="orgheadline20"><span class="section-number-4">4.4.2</span> 配置</h4><div class="outline-text-4" id="text-4-4-2"></div><div id="outline-container-orgheadline47" class="outline-5"><h5 id="orgheadline47"><span class="section-number-5">4.4.2.1</span> Capture的配置</h5><div class="outline-text-5" id="text-4-4-2-1"><p>不同的管理方式可能会导致不同的配置，但是一般都包含两个方面：首先设置好一个启动Capture的快捷方式，再配置用于存储Capture信息的目的地。这里以gtd管理为例给出一个配置例子：</p><pre class="example">;;Setting for gtd captures;;Directory for capture files.(setq org-directory "~/mydata/orgmode/");;Default capture files.(setq org-default-notes-file (concat org-directory "gtd/inbox.org"));;Capture template(setq org-capture-templates '(      ("t" "Tasks" entry (file+headline "gtd/inbox.org" "Tasks") "* INBOX %?\nTime:%T\nFrom:%F\n")      ("p" "Projects" entry (file+headline "gtd/inbox.org" "Projects")  "* %?\nTime:%U\nFrom:%F\n")      ("i" "Item notes" item (file+headline "gtd/inbox.org" "Items")  "+ %?\n  Time:%U\n  From:%F\n")      ("m" "Misc notes" plain (file+headline "misc.org" "Notes")  "-----------------------------------------------------\nTime:%U\n %?")     )) ;;set tags;;where?(h/o/w),what?(c/l/s),when?(gtd|immeiately,wait,action),who?(my gtd,others),why?how?(delete/archieve/schedule)(setq org-tag-alist '(                    (:startgroup . nil)                         ("home" . ?r) ("office" . ?o) ("way" . ?w)                    (:endgroup . nil)                    ("职业" . ?c)                    ("生活" . ?l)                     ("学习" . ?s)                    ))</pre></div></div><div id="outline-container-orgheadline48" class="outline-5"><h5 id="orgheadline48"><span class="section-number-5">4.4.2.2</span> Refile的配置</h5><div class="outline-text-5" id="text-4-4-2-2"><p>主要配置两个方面的内容：Refile的目标（org-refile-targets），以及Refile时选择目标的策略(org-refile-use-outline-path会自动补全文件名以及标题，目标的格式类似文件路径的格式，包含文件和标题)。org-refile-targets对应的可以是路径可以是列表，具体参考其中的文档，需要注意的是：</p><dl class="org-dl"><dt>如果是列表</dt><dd>该变量中的文件路径需要是全路径；文件中需要有一个标题才能在做 <code>C-c C-w</code> 补全的时候显示出来，空文件不行。</dd><dt>如果是一个文件路径</dt><dd>如果org-refile-targets是一个文件，则：这个文件可以是一个文件列表，使用这个列表的文件做为refile目标; 每个文件项占一行（不要有""），文件项可以是对于org-directory的相对路径; 这样文件内容变化之后，不用重新载入配置也能在 <code>C-c C-w</code> 中显示出新增的文件; 如果有一项是文件目录，那么不要再次包含该目录下的文件，因为这样会在agenda view中导致重复显示。</dd></dl><div class="org-src-container"><pre class="src src-emacs-lisp">;;targets for refile(setq org-refile-targets (quote (                                 (nil :maxlevel . 9)                                 (org-agenda-files :maxlevel . 9)                                )                         ));;outline path for refile(setq org-refile-use-outline-path 'full-file-path);;org-outline-path-complete-in-steps(setq org-outline-path-complete-in-steps t);;create new parents while refile(setq org-refile-allow-creating-parent-nodes 'confirm)</pre></div></div></div></div><div id="outline-container-orgheadline21" class="outline-4"><h4 id="orgheadline21"><span class="section-number-4">4.4.3</span> 操作</h4><div class="outline-text-4" id="text-4-4-3"><p>基于以上配置，我们可以操作如下：</p><ul class="org-ul"><li>启动Capture输入 <code>C-c c</code>输入之后会提示选择捕获何种类型的信息，提示信息和选择命令取决于之前设置的配置变量 <code>org-capture-templates</code> 。</li><li>选择将待捕获的信息存于"Tasks"标题之下输入 <code>t</code>具体如何输入取决之前的配置如何，这里输入之后会打开一个Capture Buffer，用于输入将要被记录的信息，其中按照预先配置好的模板，已经预先插入了一些基本信息（如时间、捕获信息时所处位置等等）。</li><li>完成Capture输入 <code>C-c C-c</code>输入之后，会将buffer中相应的信息插入到之前配置好的位置（例如某个文件中的某个标题之下），然后回到之前被中断的工作状态。</li><li>取消Capture输入 <code>C-c C-k</code>取消捕获的动作，回到之前被中断的工作状态。</li><li>访问存放Capture的文件Buffer输入 <code>C-u C-c c</code>输入之后，会提示和 <code>C-c c</code> 一样的信息，选择相应的捕获类型后，会直接打开相关的文件，具体是何文件，取决于事先设置的信息。</li><li>访问上次捕获所处的文件Buffer输入 <code>C-u C-u C-c c</code>类似前面，捕获访问的是记录上次捕获的文件Buffer，并自动定位到其中上次捕获的信息之上。</li><li>以剪切方式Refile输入 <code>C-c C-w</code>输入之后，会提示Refile的目标位置（在org-agenda-files中列出），支持Tab补全，选择好相应的文件之后，可以继续将文件内的标题也类似路径的方式输入（也支持TAB补全），选择好之后，回车会将相应的内容移动到对应的目标位置。注意：移动的内容可以是用Mark方式选择的区域，或者当前光标所在的子树，在执行 <code>C-c C-w</code> 之后有提示。</li><li>以复制方式Refile输入 <code>C-c M-w</code>输入之后，会提示Refile的目标位置（在org-agenda-files中列出），支持Tab补全，选择好相应的文件之后，可以继续将文件内的标题也类似路径的方式输入（也支持TAB补全），选择好之后，回车会将相应的内容复制到对应的目标位置。注意：复制的内容可以是用Mark方式选择的区域，或者当前光标所在的子树，在执行 <code>C-c C-w</code> 之后有提示。</li><li>访问Refile的目标对应Buffer输入 <code>C-u C-c C-w</code>输入之后，会提示和 <code>C-c C-w</code> 一样的信息，选择相应的位置后，会直接打开相关的文件。</li><li>访问上次Refile所处的文件Buffer输入 <code>C-u C-u C-c C-w</code>类似前面，访问的是记录上次Refile的文件Buffer，并自动定位到上次Refile目标的信息之上。</li></ul></div></div></div><div id="outline-container-orgheadline22" class="outline-3"><h3 id="orgheadline22"><a id="ID-feb83282-6a52-4123-81fc-8ab19a5978e2"></a><span class="section-number-3">4.5</span> 归档</h3><div class="outline-text-3" id="text-4-5"><p>具体配置方式可以参见： <code>C-h v org-archive-default-command</code>, <code>C-h v org-archive-location</code>, <code>C-h v org-archive-save-context-info</code></p></div><div id="outline-container-orgheadline23" class="outline-4"><h4 id="orgheadline23"><span class="section-number-4">4.5.1</span> 配置归档位置和归档后附带信息</h4><div class="outline-text-4" id="text-4-5-1"><p>将内容根据“年-月-日-包含文件名的标题-被归档的标题”的层次，归档在指定的_archive/session&lt;年月&gt;_archive.org文件中，归档之后，被归档节点属性包含：时间、文件、标签、todo状态、分类、节点在归档前的路径等信息。</p><div class="org-src-container"><pre class="src src-elisp">;;location for archive(setq org-archive-location (concat org-directory "gtd/_archive/" (format-time-string "%Y%m") "_archive.org::datetree/* Archive from %s"));;information added to property when a subtree is moved(setq org-archive-save-context-info '(time file ltags itags todo category olpath))</pre></div><p>注意，以上归档文件名为类似 <code>session201511_archive.org</code> ，这里的时间应该是启动Emacs会话的时间并非归档操作的时间。</p></div></div><div id="outline-container-orgheadline24" class="outline-4"><h4 id="orgheadline24"><span class="section-number-4">4.5.2</span> 归档命令</h4><div class="outline-text-4" id="text-4-5-2"><p>输入 <code>C-c C-x C-s</code></p></div></div><div id="outline-container-orgheadline25" class="outline-4"><h4 id="orgheadline25"><span class="section-number-4">4.5.3</span> 举例</h4><div class="outline-text-4" id="text-4-5-3"><p>如上配置之后，例如</p><pre class="example">*Title1**DONE sub title1 CLOSED: [2015-11-27 五 14:17]- State "DONE"       from              [2015-11-27 五 14:17]***subsub title1****DONE subsubsub title1CLOSED: [2015-11-27 五 14:18]- State "DONE"       from              [2015-11-27 五 14:18]****subsubsub title2****subsubsub title3***subsub title2**sub title2</pre><p>注意以上格式中，标题前面应该和'*' 之间有一个空格。执行 <code>C-c C-x C-s</code> 之后，会在相应路径生成一个201510_archive.org文件，追加了如下内容：</p><pre class="example">*2015**2015-11 十一月***2015-11-27 星期五****Archive from orgmodetest.org*****DONE subsubsub title1CLOSED: [2015-11-27 五 14:18]:PROPERTIES::ARCHIVE_TIME: 2015-11-27 五 14:23:ARCHIVE_FILE: ~/test/emacs/orgmodetest.org:ARCHIVE_TODO: DONE:ARCHIVE_CATEGORY: orgmodetest:ARCHIVE_OLPATH: Title1/sub title1/subsub title1:END:- State "DONE"       from              [2015-11-27 五 14:18]</pre></div></div></div><div id="outline-container-orgheadline26" class="outline-3"><h3 id="orgheadline26"><a id="ID-ef89e6de-7e65-4aec-b99f-55ae6adba1bb"></a><span class="section-number-3">4.6</span> 便于整理周报的记录技巧</h3><div class="outline-text-3" id="text-4-6"><ul class="org-ul"><li>按照时间列出处理情况</li></ul><p>为便于整理工作周报，可以将每天的记录工作首先按日期时间在每个TODO项目上创建子标题。每个子标题下记录详细工作日记日志。</p><p>例如：</p><pre class="example">*[2015-10-30 五 09:43] xxxxxx</pre><p>如果需要在agenda中列出时间，那么使用激活的时间戳即可。标题尽量简单叙述当前的工作情况。写周报的时候只看这个地方就行了。</p><p>另外，每个TODO任务中如果设置了状态切换的日志，这样可能会和处理进度的子标题有些意义冲突，目前对此不做过多考虑，不会在状态切换日志中记录过多信息，并且状态切换日志仅在wait和cancel中记录。</p><p>经过以上方式之后，做周报时，大致可以按照每个TODO项的日期时间标题来进行搜集。</p></div></div><div id="outline-container-orgheadline27" class="outline-3"><h3 id="orgheadline27"><a id="ID-7bbee725-6c9a-443d-8d85-c85e8cca6075"></a><span class="section-number-3">4.7</span> orgmode与mobile org整合</h3><div class="outline-text-3" id="text-4-7"><p>MobileOrg是Mobile端的一个应用程序，运行在Android（也有IOS的MobileOrg）;Org是PC端Emacs的一个插件应用，对应其Orgmode模式。</p><p>对其具体操作方式在orgmode的文档中有专门的介绍，并且不断更新，这里讲述相对固定的管理方式方面的内容。描述如何用Org创建可以通过MobileOrg显示的文档格式，以及如何将Mobile端的MobileOrg中修改和捕获的笔记，集成到PC端的“主” Org mode系统中（即Org与MobileOrg的同步），不涉及Agenda相关的操作。</p></div><div id="outline-container-orgheadline28" class="outline-4"><h4 id="orgheadline28"><span class="section-number-4">4.7.1</span> 配置</h4><div class="outline-text-4" id="text-4-7-1"><p>为了在MobileOrg中能够修改tags和TODO状态，你应该在PC端设置好自定义变量： <code>org-todo-keywords</code> 和 <code>org-tag-alist</code> ，使它们包含所有需要修改的重要的tags和TODO keywords，哪怕每个文件只使用其中的部分内容。MobileOrg也能通过in-buffer settings来为你提供TODO和tags设置，但是它只能读懂这些变量中的那些设置好的TODO状态集合以及tags。</p><p>假设我们想要使PC上的Org与移动设备上的MobileOrg保持内容同步（底层通过git机制，也可以是云存储、ssh、ftp等机制）。这里给出为实现这个目的，在PC需要做的配置工作(移动端的MobileOrg做为辅助工具，其配置和操作非常简单，在适当的时候会提及)。</p></div><div id="outline-container-orgheadline49" class="outline-5"><h5 id="orgheadline49"><span class="section-number-5">4.7.1.1</span> 在PC上添加使用MobileOrg的emacs配置</h5><div class="outline-text-5" id="text-4-7-1-1"><p>主要包括对Emacs中org-mode模块的加载以及与MobileOrg同步的路径。例如:</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;Sync with mobileorg(require 'org-mobile);;mobile stage(setq org-mobile-directory "/home/miracle/mygitrepo/pocket/MobileOrg")</pre></div><p>另外，可以通过 <code>org-mobile-encryption-password</code> 设置加密方面的内容。<br>在后面我们可知，在PC上的orgmode中有特定的命令将相关内容推送到这个目录中。</p></div></div><div id="outline-container-orgheadline53" class="outline-5"><h5 id="orgheadline53"><span class="section-number-5">4.7.1.2</span> 在PC上添加同步orgmode和MobileOrg的emacs配置</h5><div class="outline-text-5" id="text-4-7-1-2"><p>主要包括PC端和MobileOrg端状态与标记的设置，PC上被推送orgmode内容的源文件路径，以及PC上接收MobileOrg修改的缓存路径设置。</p></div><ol class="org-ol"><li><a id="orgheadline50"></a>为被推送文件定义只属于该文件的状态和标记<br><div class="outline-text-6" id="text-4-7-1-2-1"><p>被推送的文件可使用文件选项定义相关的状态和标签（实践发现不用定义文件的状态和标签也行），定义内容最好和PC上的相关状态变量(即 <code>setq org-todo-keywords</code> )一致，或者是其子集。如果使用文件定义状态，那么可以将用于push到MobileOrg的文件中的状态设置选项如下：</p><pre class="example">#+TODO: INBOX(i!) NEXT(n!) LATER(l!) WAIT/FORWARD(w@/!) MAYBE/FUTURE(m!) | CANCEL(c!) DONE(d!)</pre><p>标记的设置类似。</p></div></li><li><a id="orgheadline51"></a>设置状态关键字和被推送至MobileOrg的文件列表路径<br><div class="outline-text-6" id="text-4-7-1-2-2"><p>如下</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;set status for TODO.(setq org-todo-keywords '((sequence "INBOX(i!)""NEXT(n!)""LATER(l!)""WAIT/FORWARD(w@/!)""MAYBE/FUTURE(m!)""|" "CANCEL(c!)" "DONE(d!)")))   ;;mobile push(setq org-mobile-files (list (concat org-directory "gtd/mobile_org")))</pre></div></div></li><li><a id="orgheadline52"></a>设置接收来自MobileOrg内容的“缓存”目标文件路径<br><div class="outline-text-6" id="text-4-7-1-2-3"><p>如下</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;mobile pull(setq org-mobile-inbox-for-pull (concat org-directory "gtd/from_mobile.org"))</pre></div></div></li></ol></div></div><div id="outline-container-orgheadline29" class="outline-4"><h4 id="orgheadline29"><span class="section-number-4">4.7.2</span> 原理</h4><div class="outline-text-4" id="text-4-7-2"></div><div id="outline-container-orgheadline54" class="outline-5"><h5 id="orgheadline54"><span class="section-number-5">4.7.2.1</span> Mobile端的Mobile Org与PC端的Org同步</h5><div class="outline-text-5" id="text-4-7-2-1"><p>当我们在MobileOrg中与PC端的Org同步时，需要知道它不仅仅是从PC端获取（mobile端的pull）相应org文件用于浏览，同时也会追加(mobile端的push)被captured的entries，并且指向被标记和修改的entries，这些内容被汇总在同步目录( <code>org-mobile-directory</code> )中的 <code>mobileorg.org</code> 文件里。</p></div></div><div id="outline-container-orgheadline57" class="outline-5"><h5 id="orgheadline57"><span class="section-number-5">4.7.2.2</span> PC端的Org与Mobile端的MobileOrg同步</h5><div class="outline-text-5" id="text-4-7-2-2"></div><ol class="org-ol"><li><a id="orgheadline55"></a>PC端的Pull<br><div class="outline-text-6" id="text-4-7-2-2-1"><p>获取MobileOrg修改内容(PC端的pull)的时候，会将这些信息从 <code>mobileorg.org</code> 先转移到到 <code>org-mobile-inbox-for-pull</code> 对应的文件中，并对指向的被标记的内容进行进一步操作，进而将能够自动处理内容同步到对应的文件中。Pull的过程大致过程如下:</p><ol class="org-ol"><li>Org将会将 <code>mobileorg.org</code> 中的所有entries移动到 <code>org-mobile-inbox-for-pull</code> 所指向的文件（假设为mobileinbox），每个被捕获的entry和编辑事件都会被做为这个mobileinbox中的顶级entry而存在。（进行操作之后， <code>mobileorg.org</code> 将会被清空）</li><li>当将entries移动到 <code>org-mobile-inbox-for-pull</code> 指向的文件之后，Org将会开始执行在MobileOrg进行的修改。有些修改直接就会被应用了不需要额外的用户交互（例如修改tag、TODO状态、标题、正文文本可以被简单的应用）。而需要额外动作的entries会接收到一个:FLAGGED:的tag，这样它们才会很容易地被找到。当应用修改或者寻找一个entry之时出现了问题，目标entry将会保持在 <code>org-mobile-inbox-for-pull</code> 中，并且被标记一个错误信息，我们需要之后手动解决这些问题，并将对应内容(entry)转移到期望的位置。</li><li>(不熟悉)Org之后会生成一个包含所有flagged的entries的agenda view，用户可以遍历这些entries来做一些必要的动作。如果在对MobileOrg中的entry进行标记的时候一个note已经存储了，那么这个note会在光标处于对应agenda line的时候在回显区域显示出来。<br>关于 ?<br>在哪个特定的agenda中按下 <code>?</code> 将会在另外一个windows中显示整个被标记的笔记(flagging note)，也会将它push到kill ring中。所以，你可以在这个entry中使用 <code>?z C-y C-c C-c</code> 保存哪个标记笔记为普通笔记。连续键入 <code>?</code> 两次将会体同将 :FLAGGED:标签联通记录的标记笔记（flagging note）（在一个属性中被保存）一起被移走。这样，你可以用此来表示这个 flagged entry的处理已经完成。如果你不能够直接处理所有的flagged entries，你可以通过 <code>C-c a</code> 回到这个agenda view。</li></ol></div></li><li><a id="orgheadline56"></a>PC端的Push<br><div class="outline-text-6" id="text-4-7-2-2-2"><p>推送内容到MobileOrg端(PC端的push)的时候，会推送PC上设置的 <code>org-mobile-files</code> 对应的文件，该变量对应的文件路径是相对 <code>org-directory</code> 的路径，默认使用 <code>org-agenda-files</code> ,被退送的目标是 <code>org-mobile-directory</code> 设定的位置。Push的过程大致如下：</p><ol class="org-ol"><li>拷贝 <code>org-mobile-files</code> 中的内容到同步目录 <code>org-mobile-directory</code> 中，文档中提到，如果待推送的文件是一个链接文件，那么链接文件名称需要和源名称一致。</li><li>创建特定的agendas.org文件，这些文件可以是用户自定义的agenda view，由 <code>org-mobile-agendas</code> 来设定。</li><li>最后，orgmode会写一个 <code>index.org</code> 文件，这个文件包含所有到其他文件的链接，Mobile首先在Server中读取这个文件，然后把这个文件中列出的所有agendas文件和org文件下载下来，为了加速下载过程，MobileOrg只读取checksums3被改变的文件。</li></ol></div></li></ol></div><div id="outline-container-orgheadline58" class="outline-5"><h5 id="orgheadline58"><span class="section-number-5">4.7.2.3</span> Org与MobileOrg的同步目录</h5><div class="outline-text-5" id="text-4-7-2-3"><p>我们需要注意，在前面的讲述中所涉及到的同步，其实暗含了两种同步：</p><ol class="org-ol"><li>Mobile端的MobileOrg与PC端的Org之间的同步（通过设定一个同步目录做为中转）这个前面也讲到，主要是Mobile端的Sync（包含Push/Pull）操作，以及PC端的Push/Pull操作。</li><li><p>同步目录在云端与PC/Mobile端的同步前面MobileOrg和Org同步之时，需要经过它们之间的一个共通的“同步目录”。这个目录在Mobile端和PC端的内容和结构需要首先保持一致，才能保证后续MobileOrg和Org之间数据的同步一致。所以，我们在同步PC端的Org与Mobile端的MobileOrg之前，先将PC端和Mobile端的目录通过某种方式进行同步。</p><p>这里同步目录的方式使用用git进行，PC端和Mobile端之间的同步目录用某个git托管服务器进行管理（例如github、bitbucket、或者自己的服务器），任意端的同步目录中数据发生变化后都要推送到托管服务器中，而任意端要读取最新数据都需要从托管服务器中拉取数据，同步目录中的数据更新之后，再进行后续MobileOrg和Org的数据更新。我们也可使用其它方式管理同步目录，比如云存储（百度云、DropBox等）、或者ftp、webdav、ssh等。</p><p>另外，Mobile端的git可以使用pocketgit工具。</p></li></ol></div></div></div><div id="outline-container-orgheadline30" class="outline-4"><h4 id="orgheadline30"><span class="section-number-4">4.7.3</span> 同步操作</h4><div class="outline-text-4" id="text-4-7-3"></div><div id="outline-container-orgheadline59" class="outline-5"><h5 id="orgheadline59"><span class="section-number-5">4.7.3.1</span> PC端的Org推送（Pull）</h5><div class="outline-text-5" id="text-4-7-3-1"><p>命令如下：<br><code>M-x org-mobile-push</code> <br>推送之后，会在同步目录（即 <code>org-mobile-directory</code> 对应的路径）中建立 <code>org-mobile-files</code> 对应文件列表的路径结构，并拷贝相应文件到其中。</p></div></div><div id="outline-container-orgheadline60" class="outline-5"><h5 id="orgheadline60"><span class="section-number-5">4.7.3.2</span> PC端的Org拉取（Push）</h5><div class="outline-text-5" id="text-4-7-3-2"><p>命令如下：<br><code>M-x org-mobile-pull</code> <br>运行之后，其对应的 <code>org-mobile-files</code> 便包含了和MobileOrg同步的内容。</p></div></div><div id="outline-container-orgheadline61" class="outline-5"><h5 id="orgheadline61"><span class="section-number-5">4.7.3.3</span> Mobile端的MobileOrg同步（Sync）</h5><div class="outline-text-5" id="text-4-7-3-3"><p>这里使用Android版本的MobileOrg，大致如下：<br>首先设置好同步目录，然后选择软件界面中的"Sync"按钮，即可完成同步（包含Pull和Push）。</p></div></div></div><div id="outline-container-orgheadline31" class="outline-4"><h4 id="orgheadline31"><span class="section-number-4">4.7.4</span> 使用举例</h4><div class="outline-text-4" id="text-4-7-4"><ol class="org-ol"><li>PC上配置好相关变量和目录</li><li>手机上安装好MobileOrg也设置好同步目录</li><li>将PC和手机上的同步目录用github/bitbucket管理</li><li>PC上同步目录更新： <code>git/pull</code></li><li>PC上记录之前运行： <code>org-mobile-pull</code> 可以看到手机上修改的内容。</li><li>PC上记录，记录之后运行： <code>org-mobile-push</code></li><li>PC上的git同步目录上传修改： <code>git add/commit/push</code></li><li>手机上的git同步目录下载更新： <code>git pull</code></li><li>手机上的MobileOrg同步(点击Sync)</li><li>手机上看到PC修改的内容</li><li>手机上修改并同步（点击Sync）</li><li>手机上更新同步目录： <code>git add/commit/push</code></li><li>回到步骤4。</li></ol></div></div><div id="outline-container-orgheadline32" class="outline-4"><h4 id="orgheadline32"><span class="section-number-4">4.7.5</span> 其它</h4><div class="outline-text-4" id="text-4-7-5"><p>目前发现，该功能列表中的段落，无法识别断行？对复杂的管理不是非常实用，相对而言，mobile org中Capture功能相对实用一些，可以将片段捕捉下来，同步到电脑上(但是同步的过程也比较繁琐)。</p><p>参考相关文档：<a href="http://orgmode.org/manual/MobileOrg.html#MobileOrg" target="_blank" rel="noopener">MobileOrg</a></p></div><div id="outline-container-orgheadline62" class="outline-5"><h5 id="orgheadline62"><span class="section-number-5">4.7.5.1</span> 改进</h5><div class="outline-text-5" id="text-4-7-5-1"><ul class="org-ul"><li>已经将状态文件冠以 <code>_</code> 前缀，便于在Agenda View中集中浏览，例如: <code>_inbox.org</code>, <code>_next.org</code> &#x2026;。</li><li><p>每一步处理中，处理子项的步骤可以按照层次冠以 <code>----</code> 前缀， n层子处理步骤冠以n个 =-&#x2014;=前缀。例如：</p><pre class="example">**NEXT test1***----&lt;2015-12-21 一 16:17&gt; xxx1***----&lt;2015-12-21 一 16:17&gt; xxx2****--------&lt;2015-12-21 一 16:17&gt;xxx2.1****--------&lt;2015-12-21 一 16:17&gt;xxx2.2</pre><p>这样显示便于在Agenda中一目了然哪些是子待办事项，以4个为单位因为4个字符比较容易输入。</p></li><li>回顾的细化：短期回顾简单处理时，会将特定状态关键字的任务从状态文件间迁移，稍复杂的处理会将任务直接迁移至特定文档中（在该文档中做为属于该文档的任务）；中期处理之时，除了对应状态关键字和状态文件，也对状态关键字的任务必要时迁出状态文件进入特定文档中。</li></ul></div></div></div></div></div><div id="outline-container-orgheadline33" class="outline-2"><h2 id="orgheadline33"><span class="section-number-2">5</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[8/11]</code>(<code>[72%]</code>)</h2><div class="outline-text-2" id="text-5"><ul class="org-ul"><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 15:07] </span></span> <br>Wait for all done.</li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 15:07]</span></span></li></ul></div><div id="outline-container-orgheadline34" class="outline-3"><h3 id="orgheadline34"><span class="section-number-3">5.1</span> <span class="done DONE">DONE</span> 如何划分任务状态以及存放的文件？</h3><div class="outline-text-3" id="text-5-1"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-08 四 10:23]</span></span></li></ul><p>参见: <a href="#orgheadline1">任务状态</a> 和 <a href="#orgheadline2">划分文件</a></p></div></div><div id="outline-container-orgheadline35" class="outline-3"><h3 id="orgheadline35"><span class="section-number-3">5.2</span> <span class="done DONE">DONE</span> 如何实现任务管理的基本管理？</h3><div class="outline-text-3" id="text-5-2"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 16:13]</span></span></li><li>State "WAIT/FORWARD" from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 16:13] </span></span> <br>wait for more</li><li>State "LATER"      from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 16:13]</span></span></li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 16:13]</span></span></li></ul><p>参见:<a href="#orgheadline9">实现Orgmode任务管理的基本管理</a></p></div></div><div id="outline-container-orgheadline36" class="outline-3"><h3 id="orgheadline36"><span class="section-number-3">5.3</span> <span class="done DONE">DONE</span> 如何设置交叉引用?</h3><div class="outline-text-3" id="text-5-3"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-26 四 17:51]</span></span></li></ul><p>参考：<a href="#orgheadline13">交叉引用</a></p></div></div><div id="outline-container-orgheadline37" class="outline-3"><h3 id="orgheadline37"><span class="section-number-3">5.4</span> <span class="done DONE">DONE</span> 如何设置优先级别?</h3><div class="outline-text-3" id="text-5-4"><ul class="org-ul"><li>State "DONE"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-26 四 18:00]</span></span></li></ul><p>参考：<a href="#orgheadline14">设置优先级别</a></p></div></div><div id="outline-container-orgheadline38" class="outline-3"><h3 id="orgheadline38"><span class="section-number-3">5.5</span> <span class="done DONE">DONE</span> 如何迅速捕获临时产生的任务，以及将各个任务标题在状态文件中进行转移？</h3><div class="outline-text-3" id="text-5-5"><ul class="org-ul"><li>State "DONE"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-30 一 10:38]</span></span></li></ul><p>参见：<a href="#orgheadline18">Capture-Refile-Archive</a></p></div></div><div id="outline-container-orgheadline39" class="outline-3"><h3 id="orgheadline39"><span class="section-number-3">5.6</span> <span class="done DONE">DONE</span> 如何设置归档?</h3><div class="outline-text-3" id="text-5-6"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 14:54]</span></span></li></ul><p>参见：<a href="#orgheadline22">归档</a></p></div></div><div id="outline-container-orgheadline40" class="outline-3"><h3 id="orgheadline40"><span class="section-number-3">5.7</span> <span class="done DONE">DONE</span> 便于整理周回顾?</h3><div class="outline-text-3" id="text-5-7"><ul class="org-ul"><li>State "DONE"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 10:35]</span></span></li></ul><p>参见：<a href="#orgheadline26">便于整理周报的记录技巧</a></p></div></div><div id="outline-container-orgheadline41" class="outline-3"><h3 id="orgheadline41"><span class="section-number-3">5.8</span> <span class="done DONE">DONE</span> 如何将PC与移动端的orgmode整合?</h3><div class="outline-text-3" id="text-5-8"><ul class="org-ul"><li>State "DONE"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 11:02]</span></span></li></ul><p>参见：<a href="#orgheadline27">orgmode与mobile org整合</a></p></div></div><div id="outline-container-orgheadline42" class="outline-3"><h3 id="orgheadline42"><span class="section-number-3">5.9</span> <span class="todo LATER">LATER</span> 杂乱问题</h3><div class="outline-text-3" id="text-5-9"><ul class="org-ul"><li>State "LATER"      from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 16:13]</span></span></li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 15:29]</span></span></li></ul><p>这里描述一些无法分类是杂乱问题。</p><ul class="org-ul"><li><p>进入 inbox.org的 <code>INBOX</code> 的任务，在回顾的时候，首先切换其状态，然后再refile到对应的状态文件？</p><p>目前是对于到状态文件的任务，是先切换，再refile；对应其它特殊文档内部的TODO任务，refile与切换次序随意。</p></li><li><p>每个状态，工作日志记录到有状态切换的日志中，还是也可能根据自己情况记录工作日志？</p><p>不用都加note，也可每个状态切换都加详细的note。折衷起见，主要处理信息还是列在后面。状态切换的列表中，可以添加每次关键的一些步骤。比如NEXT状态中，又获取到一些新的信息，可以切换状态增加NEXT-&gt;NEXT的时间戳，然后附上一个简短笔记“xxx发生了”。</p></li></ul></div></div><div id="outline-container-orgheadline43" class="outline-3"><h3 id="orgheadline43"><span class="section-number-3">5.10</span> <span class="todo NEXT">NEXT</span> 改善归档与done/cancel策略</h3><div class="outline-text-3" id="text-5-10"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-02-03 三 09:43]</span></span></li></ul><p>之前都是将done和cancel状态的内容放置目录中，按照月份存放相应状态内容，原因是相应状态的内容是属于不断积累增多的，不可能只放在一个文件中。</p><p>考虑到归档的功能，其实将done/cancel内容放置在一个文件也可，只需要定期进行归档即可，积累的内容会不断地移动到归档中，而归档又可根据日期来进行划分。</p><p>而wait/forward中的内容，需要再考虑如何进行，目前暂不设定归档， 设置的方式也仍然采用目录的方式，以便学习时能够知道目录目标的设置方式。</p></div></div><div id="outline-container-orgheadline44" class="outline-3"><h3 id="orgheadline44"><span class="section-number-3">5.11</span> <span class="todo NEXT">NEXT</span> 改善refile的配置方式</h3><div class="outline-text-3" id="text-5-11"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-02-03 三 09:46]</span></span></li></ul><p>将refile目标放置到一个文件中，有时候会出现问题，目前不再使用这个方法。直接将refile的目标配置到配置文件中，这样更为保险。</p><div class="org-src-container"><pre class="src src-elisp">;;set agenda files(setq org-agenda-files (list                         (concat org-directory "gtd/_next.org")                         (concat org-directory "gtd/_later.org")                         (concat org-directory "gtd/_wait_forward.org")                         (concat org-directory "gtd/_maybe_future/")                         (concat org-directory "gtd/_cancel.org")                        (concat org-directory "gtd/_done.org")                         (concat org-directory "gtd/mobile_org/_mobile_inbox.org")                         (concat org-directory "gtd/_active")                         (concat org-directory "gtd/_review")                         (concat org-directory "gtd/output/")                       ))</pre></div></div></div></div><br><div id="mypostamble" align="right" style="float:right" class="status">    <table> <tbody> <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Author</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">QuietHeart</td>  </tr><tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Email</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">    <a href="mailto:quiet_heart000@126.com" target="_blank" rel="noopener">quiet_heart000@126.com</a>  </td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Date</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">[2015-11-27 五]</td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Update</td>  <td style="border-style: solid;border-width:1px;border-right:0px;"><2016-02-03 三 16:42:04></2016-02-03></td></tr>    </tbody></table></div><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;style type=&quot;text/css&quot;&gt;
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              
      
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
      <category term="note" scheme="http://0.0.0.0:4000/categories/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>GTD管理方式</title>
    <link href="http://0.0.0.0:4000/2015/11/03/GTD_Manage_Method/"/>
    <id>http://0.0.0.0:4000/2015/11/03/GTD_Manage_Method/</id>
    <published>2015-11-02T16:00:00.000Z</published>
    <updated>2019-09-11T08:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">  .title  { text-align: center;             margin-bottom: .2em; }  .subtitle { text-align: center;              font-size: medium;              font-weight: bold;              margin-top:0; }  .todo   { font-family: monospace; color: red; }  .done   { font-family: monospace; color: green; }  .priority { font-family: monospace; color: orange; }  .tag    { background-color: #eee; font-family: monospace;            padding: 2px; font-size: 80%; font-weight: normal; }  .timestamp { color: #bebebe; }  .timestamp-kwd { color: #5f9ea0; }  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }  .org-center { margin-left: auto; margin-right: auto; text-align: center; }  .underline { text-decoration: underline; }  #postamble p, #preamble p { font-size: 90%; margin: .2em; }  p.verse { margin-left: 3%; }  pre {    border: 1px solid #0c0;    box-shadow: 1px 1px 1px #0e0;    padding: 8pt;    font-family: italic monospace;    color: #C7EDCC;    background-color: #111111;    overflow: auto;    margin: 1.2em;  }  pre.src {    position: relative;    overflow: visible;    padding-top: 1.2em;  }  pre.src:before {    display: none;    position: absolute;    background-color: black;    top: -10px;    right: 10px;    padding: 3px;    border: 1px solid black;  }  pre.src:hover:before { display: inline;}  pre.src-sh:before    { content: 'sh'; }  pre.src-bash:before  { content: 'sh'; }  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }  pre.src-R:before     { content: 'R'; }  pre.src-perl:before  { content: 'Perl'; }  pre.src-java:before  { content: 'Java'; }  pre.src-sql:before   { content: 'SQL'; }  table { border-collapse:collapse; }  caption.t-above { caption-side: top; }  caption.t-bottom { caption-side: bottom; }  td, th { vertical-align:top;  }  th.org-right  { text-align: center;  }  th.org-left   { text-align: center;   }  th.org-center { text-align: center; }  td.org-right  { text-align: right;  }  td.org-left   { text-align: left;   }  td.org-center { text-align: center; }  dt { font-weight: bold; }  .footpara { display: inline; }  .footdef  { margin-bottom: 1em; }  .figure { padding: 1em; }  .figure p { text-align: center; }  .inlinetask {    padding: 10px;    border: 2px solid gray;    margin: 10px;    background: #ffffcc;  }  #org-div-home-and-up   { text-align: right; font-size: 70%; white-space: nowrap; }  .linenr { font-size: smaller }  .code-highlighted { background-color: #ffff00; }  .org-info-js_info-navigation { border-style: none; }  #org-info-js_console-label    { font-size: 10px; font-weight: bold; white-space: nowrap; }  .org-info-js_search-highlight    { background-color: #ffff00; color: #000000; font-weight: bold; }    code {        border:groove #555555;border-width:thin;        background-color: #111111;color: #C7EDCC;    }#table-of-contents {    font-size: 9pt;    position: fixed;    right: 10px;    top: 14em;    margin:0;    padding:0;    border-width:1px;    border-style:solid;    background: #000000;    -webkit-box-shadow: 0 0 1em #777777;    -moz-box-shadow: 0 0 1em #777777;    -webkit-border-bottom-left-radius: 5px;    -moz-border-radius-bottomleft: 5px;    text-align: right;    /* ensure doesn't flow off the screen when expanded */    max-height: 60%;    overflow: auto;     z-index: 200;}#table-of-contents h2 {    font-size: 9pt;    max-width: 8em;    font-weight: normal;    padding-left: 0.5em;    padding-top: 0.05em;    padding-bottom: 0.05em; }#table-of-contents ul {    margin-left: 14pt;     margin-bottom: 10pt;    padding: 0}#table-of-contents li {    padding: 0;    margin: 1px;    list-style: none;}#table-of-contents ul>:first-child {    color: blue;}#table-of-contents #text-table-of-contents {    display: none;    text-align: left;}#table-of-contents:hover #text-table-of-contents {    display: block;    padding: 0.5em;    margin-top: -1.5em; }</style><div id="table-of-contents"><h2>Table of Contents</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 前言</a></li><li><a href="#orgheadline2">2. 概述</a><ul><li><a href="#orgheadline3">2.1. 执行平台</a></li><li><a href="#orgheadline4">2.2. 良好GTD系统应该具备的特性</a></li><li><a href="#orgheadline5">2.3. 主要内容</a></li></ul></li><li><a href="#orgheadline6">3. 任务和项目</a><ul><li><a href="#orgheadline7">3.1. 项目</a></li><li><a href="#orgheadline8">3.2. 任务</a></li><li><a href="#orgheadline9">3.3. 举例说明</a></li></ul></li><li><a href="#orgheadline10">4. 管理思路</a><ul><li><a href="#orgheadline11">4.1. 任务管理</a></li><li><a href="#orgheadline12">4.2. 项目管理</a></li></ul></li><li><a href="#orgheadline13">5. 执行方式</a><ul><li><a href="#orgheadline14">5.1. 任务状态</a><ul><li><a href="#orgheadline15">5.1.1. 支持的任务状态</a></li><li><a href="#orgheadline16">5.1.2. 任务状态与生命周期</a></li></ul></li><li><a href="#orgheadline17">5.2. 项目与回顾</a><ul><li><a href="#orgheadline18">5.2.1. 项目状态</a></li><li><a href="#orgheadline19">5.2.2. 项目生命周期</a></li></ul></li></ul></li><li><a href="#orgheadline20">6. 建议</a><ul><li><a href="#orgheadline21">6.1. 原则</a><ul><li><a href="#orgheadline22">6.1.1. 不要将任务状态设置太多</a></li><li><a href="#orgheadline23">6.1.2. 任务不一定全部要处理完毕</a></li><li><a href="#orgheadline24">6.1.3. 任务从“收集”中拿出后，不应该再放回去</a></li><li><a href="#orgheadline25">6.1.4. 进行的任务要先移动至“下一步”状态，再进行处理。</a></li><li><a href="#orgheadline26">6.1.5. 处于“下一步”状态的任务不宜过多</a></li><li><a href="#orgheadline27">6.1.6. 处于“稍后”状态的任务，要么会回到“下一步”，要么会被放置其它状态</a></li><li><a href="#orgheadline28">6.1.7. 大多数GTD管理不需要过于复杂的特性</a></li><li><a href="#orgheadline29">6.1.8. 多操作多整理多回顾有助获得正能量</a></li><li><a href="#orgheadline30">6.1.9. 在特定环境下可借助特定工具扩展GTD来提高效率</a></li></ul></li><li><a href="#orgheadline31">6.2. 推荐</a><ul><li><a href="#orgheadline32">6.2.1. Orgmode</a></li><li><a href="#orgheadline33">6.2.2. DGT GTD</a></li><li><a href="#orgheadline34">6.2.3. 任意一个带有分类功能的便签</a></li></ul></li></ul></li><li><a href="#orgheadline35">7. 其他</a><ul><li><a href="#orgheadline36">7.1. 使用GTD思想进行内容管理</a><ul><li><a href="#orgheadline37">7.1.1. “任务管理”方面</a></li><li><a href="#orgheadline38">7.1.2. “内容管理”方面</a></li></ul></li><li><a href="#orgheadline39">7.2. 将GTD管理中产生的数据进行内容管理</a><ul><li><a href="#orgheadline40">7.2.1. 管理思路</a></li><li><a href="#orgheadline41">7.2.2. 举例</a></li></ul></li><li><a href="#orgheadline42">7.3. 使用GTD标签管理信息</a><ul><li><a href="#orgheadline43">7.3.1. GTD标签</a></li><li><a href="#orgheadline44">7.3.2. 实现方式</a></li><li><a href="#orgheadline45">7.3.3. 扩展</a></li><li><a href="#orgheadline46">7.3.4. 关键</a></li></ul></li><li><a href="#orgheadline47">7.4. 使用GTD方式管理邮件</a><ul><li><a href="#orgheadline48">7.4.1. 实现思路</a></li><li><a href="#orgheadline49">7.4.2. 实现举例</a></li></ul></li><li><a href="#orgheadline50">7.5. 使用GTD方式管理工作文件</a><ul><li><a href="#orgheadline51">7.5.1. 思路</a></li><li><a href="#orgheadline52">7.5.2. 实现举例</a></li></ul></li><li><a href="#orgheadline53">7.6. 杂乱</a><ul><li><a href="#orgheadline54">7.6.1. 任务状态</a></li><li><a href="#orgheadline55">7.6.2. 任务属性</a></li><li><a href="#orgheadline56">7.6.3. 任务性质</a></li><li><a href="#orgheadline57">7.6.4. 优先级划分</a></li><li><a href="#orgheadline58">7.6.5. 劳逸结合</a></li><li><a href="#orgheadline59">7.6.6. 回顾的解释</a></li><li><a href="#orgheadline60">7.6.7. 管理回顾的经验</a></li><li><a href="#orgheadline61">7.6.8. 关于参考</a></li><li><a href="#orgheadline62">7.6.9. 如何处理“项目分类”与“状态分类”实现的冲突</a></li><li><a href="#orgheadline63">7.6.10. 自我管理的演化过程</a></li></ul></li><li><a href="#orgheadline64">7.7. 参考资料</a></li></ul></li><li><a href="#orgheadline65">8. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[%]</code> <code>[/]</code></a><ul><li><a href="#orgheadline66">8.1. <span class="todo nilNEXT">NEXT</span> 如何通过orgMobile进行管理？</a></li><li><a href="#orgheadline67">8.2. <span class="todo nilINBOX">INBOX</span> 回顾的内容，没有完成的可以用链接的方式将任务与回顾相互引用，任务完成之后，可以考虑将其直接集成到回顾中，不用链接，防止过于分散。</a></li></ul></li></ul></div></div><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 前言</h2><div class="outline-text-2" id="text-1"><p>这篇文章并不是以教程目的存在，其实是在本人实践GTD方式半年多的时间里，总结的文档。其中肯定有不确切或者错误之处，但是理解的方式因人而异，希望此文能够为学习GTD以及想高效组织和管理自身生活的朋友们带来一些提示。</p><p>文中全部基于文本方式实现并无配图，配图可能会让理解更为直观，但是目前看来更多只能做为点缀，细读本文的读者应该不用借助配图便能获取其中的思想，配图可能会在将来更新之时给出。</p><p>文本原始格式是Orgmode文本，如果看到网页本版或者其它更多格式的本文，应该都是基于该语法导出的文章。采用git方式进行版本管理，所以可能会在完善更新过程中不断发布新的版本。</p></div></div><div id="outline-container-orgheadline2" class="outline-2"><h2 id="orgheadline2"><span class="section-number-2">2</span> 概述</h2><div class="outline-text-2" id="text-2"><p>GTD是一种思路和方法，它可以渗透在我们生活的方方面面，而不仅仅做为任务管理的手段而存在。这里给出的只是是众多GTD管理方式的一种，是基于个人目前应用与实践情况而采用的GTD管理方式；GTD管理并不依赖特定工具，它可以在个人实践过程中，根据情况逐渐完善与改进；不同场景和环境下可能会借助不同的方式或工具来使用GTD，但是这些方式或者工具等都具有一种共性，这个共性就是GTD的思想。</p></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">2.1</span> 执行平台</h3><div class="outline-text-3" id="text-2-1"><p>本文中叙述的GTD方法是基于一些常见的可分类、可贴标签、具有内部引用链接等功能的笔记进行，如为知笔记；但是讲述的方法会尽量避免依赖外部环境的特性（比如标签和引用的功能不一定在所有的工具中都有，Windows下的记事本就只能支持文本编辑）而强调方法的通用。</p></div></div><div id="outline-container-orgheadline4" class="outline-3"><h3 id="orgheadline4"><span class="section-number-3">2.2</span> 良好GTD系统应该具备的特性</h3><div class="outline-text-3" id="text-2-2"><p>添加对特定环境的特性依赖能使得在该环境下的GTD管理更有效率，但是对于一个良好的GTD方式，个人认为应该具有如下特性：</p><ul class="org-ul"><li>在现有环境中，应该能够方便地添加适合当前环境的特性依赖以提高GTD系统的效率。</li><li>更换环境之时，原有的GTD系统应该能方便地迁移到新的环境下继续运行。</li><li>切换到新环境之后，应该能方便地去掉对原有环境特性的依赖。</li></ul><p>其实，这几点分别是对GTD系统扩展性、通用型、灵活性方面的要求，具有这些特性，有助于增强其健壮与稳定。任何系统在完善之前，首先要保证它有足够强的生存能力，最简单情况下，可以只凭借分类的文件系统、或纸质笔记、甚至只凭借自身的记忆（如果能够保证不会遗忘的话），实现GTD的管理。^_^</p></div></div><div id="outline-container-orgheadline5" class="outline-3"><h3 id="orgheadline5"><a id="ID-856021f2-992d-45db-966c-32aac0679cee"></a><span class="section-number-3">2.3</span> 主要内容</h3><div class="outline-text-3" id="text-2-3"><ul class="org-ul"><li>任务和项目</li><li>管理思路</li><li>执行方式</li><li>建议</li><li>其他</li></ul></div></div></div><div id="outline-container-orgheadline6" class="outline-2"><h2 id="orgheadline6"><span class="section-number-2">3</span> 任务和项目</h2><div class="outline-text-2" id="text-3"></div><div id="outline-container-orgheadline7" class="outline-3"><h3 id="orgheadline7"><span class="section-number-3">3.1</span> 项目</h3><div class="outline-text-3" id="text-3-1"><p>这里的项目，是一个需要处理的事情、计划、或过程。它是日常生活、工作、学习中，我们所有要处理的、一系列相关的事务的统称，不同的项目代表不同类的事务。项目使得我们日常凌乱的处理事务，有了一个明确的归类。</p></div></div><div id="outline-container-orgheadline8" class="outline-3"><h3 id="orgheadline8"><span class="section-number-3">3.2</span> 任务</h3><div class="outline-text-3" id="text-3-2"><p>这里的任务不像项目那样笼统，而一定是可以明确执行的一个步骤，它可能属于某个项目。确定的任务可以让我们平时行动之时，目标明确，精力集中，无需被更多琐碎的处理判断归纳分类等而分心。</p></div></div><div id="outline-container-orgheadline9" class="outline-3"><h3 id="orgheadline9"><span class="section-number-3">3.3</span> 举例说明</h3><div class="outline-text-3" id="text-3-3"><p>例如：</p><pre class="example">“学习英语”，这就不是一个任务，它是包含许多步骤的过程，对应这里所讲述的项目；  而“背诵5个单词”，就是一个具体的任务，它属于“学习英语”这个项目的一个子步骤；  我们每完成“学习英语”中的一个任务，就距离“学习英语”这个项目的目标更近一步了。  我们在真正学习英语的时候，每一个时刻其实都是在集中精力做其中的一个任务，期间不可能还做其它的事情；比如“背诵5个单词”的时候，我们不应该还要分出心来思考：“学习英语需要先背诵一定的单词，然后尝试阅读，学习祈使句语法……”；我们只需要背诵完这5个单词，别的事情是规划的问题，会在完成当前“背诵5个单词”的任务之后，来专门集中决策一下下一步需要做的事情。</pre><p>总之，项目是需要规划的，任务是需要执行的，而规划是确定任务的。在一个项目中，将规划和执行分开，可能会提高完成的效率，而能够高效的完成所有的项目，会提高我们的生活质量。另外，并不是所有的项目都一定要完成，GTD只是让完成的效率尽量高，尽量减少压力，而非一定要将其中的项目完成。</p></div></div></div><div id="outline-container-orgheadline10" class="outline-2"><h2 id="orgheadline10"><span class="section-number-2">4</span> 管理思路</h2><div class="outline-text-2" id="text-4"><p>这里的GTD系统，实际重点在于管理任务的方式，项目在GTD中主要是用来反映将其中相互关联的任务集中起来便于回顾，对于复杂项目的管理方式，可能需要额外考虑。目前大致采用如下方式管理项目和任务，今后有好的方式会逐渐改善。</p></div><div id="outline-container-orgheadline11" class="outline-3"><h3 id="orgheadline11"><span class="section-number-3">4.1</span> 任务管理</h3><div class="outline-text-3" id="text-4-1"><p>每条任务使用单独一条笔记来表示，所有的任务都有自己的状态，状态通过目录来管理，具体见后面。</p><p>使用本方式管理任务，目前比较弱势的方面是缺乏时间提和醒方面的内容(也许是为了增强其简洁并且可移植，而导致的缺陷)，无法让任务随时间而迁移状态，无法合适的指明任务的时间属性，以及无法合适的在恰当的时间进行提醒。所以日常经常进行的、并且对时间提醒方面依赖不大的任务可集中在这里进行（例如工作日志）。而需要依赖其他特性(如提醒)的任务内容，可考虑借助工具辅助完成，如DGT GTD、中华万年历、等等。</p></div></div><div id="outline-container-orgheadline12" class="outline-3"><h3 id="orgheadline12"><span class="section-number-3">4.2</span> 项目管理</h3><div class="outline-text-3" id="text-4-2"><p>每一个项目用一条回顾来表示，而每条回顾用一条笔记来表示，而所有项目类似任务，通过项目的状态目录来管理，具体见后面。</p><p>使用本方式管理项目，目前比较弱势的方面是暂时还无其它合适的方式管理，因为项目也是随时间动态变化的，随着时间的推移我们会遇到的新的项目和计划，所以用目录或标签来表示项目也不太合适（经常建立新标签或者目录会使得系统越来越复杂），这里暂时用回顾表示一个总体的项目，每个回顾用一条笔记表示，期间的产生的各个行动步骤变成特定状态的GTD任务进行管理。执行任务时的一些关键的步骤会纳入到这个回顾系统中，回顾作为总体索引，也用来表示一个计划，期间会引用到本GTD系统内的任意一个其它的任务或者回顾等，也有助于保持整个GTD系统的有序。</p></div></div></div><div id="outline-container-orgheadline13" class="outline-2"><h2 id="orgheadline13"><span class="section-number-2">5</span> 执行方式</h2><div class="outline-text-2" id="text-5"></div><div id="outline-container-orgheadline14" class="outline-3"><h3 id="orgheadline14"><span class="section-number-3">5.1</span> 任务状态</h3><div class="outline-text-3" id="text-5-1"><p>每种任务同一时间只可处于一种状态，所以可以考虑用目录方式实现任务状态。  </p></div><div id="outline-container-orgheadline15" class="outline-4"><h4 id="orgheadline15"><span class="section-number-4">5.1.1</span> 支持的任务状态</h4><div class="outline-text-4" id="text-5-1-1"><dl class="org-dl"><dt>“收集”</dt><dd>当遇到一个需要处理的任务之时，我们需要首先迅速把它记录下来，可以只简单给出一个标题以便提示等等，之后在空闲时会对其进行进一步处理。这个最初出现的任务，可以没有经过任何整理，此时它处于“收集”状态。它是任务出现的初始状态，是所有内容流入GTD系统的入口。</dd><dt>“下一步”</dt><dd>同一时段我们一般只能处理有限的任务，根据实际情况，我们可能会从所有任务中选出一部分进行处理，这些已经开始进行处理的的任务，便存在这里，处于“下一步”状态。它是推动GTD系统运作的动力，使我们更集中精力于应该做的事情上来，而不被其它还没有开始的任务扰乱心神。</dd><dt>“稍后”</dt><dd>这里的任务也是应该做的，但是由于日程或者其它原因，需要将一些相对不重要的任务暂停，推迟一段时间再做，这时任务便处于“稍后”状态，它在GTD中起到缓冲紧张度的作用。</dd><dt>“等待委派”</dt><dd>有些任务在自己这里已经没有什么可以做的了，需要等待其它方的处理之后才能继续确认下一步的进行状态，或者转交给其他人处理，这可以将任务转给别人，这样的任务就处于“等待委派”状态，它可减轻GTD系统的负担。</dd><dt>“将来也许”</dt><dd>类似推迟，不过这里的内容表示没有一个期限的“推迟”，这里的任务相对推迟的任务来说也更显得“不重要”一些，这些“以后用空再做”的任务都放在这里，处于“将来也许”的状态。这个分类可以允许我们大胆的将想做的列出，并且可以不用对列出的事情“负责”，想做就做，不做也不会消失，它能大大减少GTD系统的拥塞程度。</dd><dt>“已完成”</dt><dd>一个任务完成之后，可能以后也会引用，也可能不会，这些已经处理完毕的任务，便成为“已完成”状态，它是GTD系统的历史。</dd><dt>“取消”</dt><dd>有些任务开始可能在“下一步”，过后又变成“推迟”了，再过后又“将来也许”，再过后，可能都没有必要执行它了，不删除它们，是因为可能它们将来还会有用，这些任务便处于“取消”的状态，相当于GTD系统的回收站。</dd></dl></div></div><div id="outline-container-orgheadline16" class="outline-4"><h4 id="orgheadline16"><span class="section-number-4">5.1.2</span> 任务状态与生命周期</h4><div class="outline-text-4" id="text-5-1-2"><p>在上述状态下，我们给出一个描述任务生命周期的例子。</p><pre class="example">a.阅读英文文档时，忽然发现需要背诵一些特定的英语单词，于是向“收集”状态目录中，添加一条“背诵英语单词”，然后继续工作。b.空闲时，对“收集”状态的任务处理，这时发现“背诵英语单词”这条任务比较重要，于是把它纳入到“下一步”，准备之后就进行。c.开始处理任务时，首先看“下一步”是否有任务，发现“背诵英语单词”这条任务， 于是开始进行学习，学习过程中不断的对该任务对应的笔记进行记录总结汇总更新等。d.学习一定时间后单词还没有背完，但是在"下一步"又有其它的任务更为重要需要处理，于是开始处理其它的任务。e.在处理“下一步”状态中的任务时，不断的有其它更多的重要任务需要处理，学习英语单词暂时还不能继续，于是把它从“下一步”移动到“稍后”状态，待处理完手头的任务之后再继续处理此任务。f.处理“下一步”状态的任务时，不断的有新的比背诵英语单词更重要的任务，由于有重要的任务在先，被移动到“稍后”状态。g.待“下一步”的任务处理完成后，再看"稍后"状态的任务，找到其中重要的任务，将它重新迁移到“下一步”中，准备进行处理。h.处理完“下一步”的任务，再次从“稍后”状态的任务中， 选出重点的进行处理，这时发现“背诵英语单词”这条任务优先级很低，可能短期内不会再进行了，于是将它移动到“将来也许”中。i.某日实在清闲，在“将来也许”中随便拿出一个叫做“背诵英语单词”的任务，放到“下一步”之前，发现它没有必要了，于是放到“取消”中，表示这个任务不执行了。j.很久以后，浏览“取消”的任务，发现“背诵英语单词”，感觉最近要做，于是放到“下一步”。k.到“下一步”中，取出一条“背诵英语单词”的任务，开始进行，直至完成后，将其移至“已完成”中。至此，“背诵英语单词”这条任务结束。</pre></div></div></div><div id="outline-container-orgheadline17" class="outline-3"><h3 id="orgheadline17"><span class="section-number-3">5.2</span> 项目与回顾</h3><div class="outline-text-3" id="text-5-2"><p>项目回顾是对GTD系统中任务的有机组织，每条回顾都包含相关的其它子项目或者计划、以及诸多任务处理状况的汇总。它可以使GTD系统更为有序，也便于将来跟踪相关的任务和情况。  </p><p>由于项目是一系列相关任务的组合，所以每个项目借助一条回顾来表示；而我们遇到的项目的分类和数目经常随时间变化，所以用每条笔记而非目录表示一个回顾，进而表示一个新的项目。同时，类似于任务的管理，由于状态是所有项目相对通用和固定的属性，所以我们用不同的目录来表示项目状态，存放所有项目，为便于区分，表示项目的目录以“#”作为前缀。</p></div><div id="outline-container-orgheadline18" class="outline-4"><h4 id="orgheadline18"><span class="section-number-4">5.2.1</span> 项目状态</h4><div class="outline-text-4" id="text-5-2-1"><p>这里用来存放项目回顾的主要状态目录有：  </p><dl class="org-dl"><dt>“#活跃”</dt><dd>有些任务，如学习计划等可能需要反复执行，或者有些项目正处于活跃处理过程中，从中会不断衍生出新的任务到相应的任务状态。这样的项目便处于"#活跃中"状态，当项目进行到一定程度不再特别活跃的时候，可能会进入“#项目回顾”状态。</dd><dt>“#回顾”</dt><dd>是对相对不活跃的项目汇总，包含已经完成或者基本明朗的项目。在进行任务时，并不是所有任务都要建立回顾。当发现一些任务需要梳理其关系和追踪的时候，为这些相关的任务建立一个回顾，可起索引汇总的作用，在日后回顾这些复杂的任务之间相关的过程之时也可参考。</dd></dl><p>实际上有些项目，开始是做为任务进入到“收集”状态的，执行一段时间之后，知道了它可以做为一个项目回顾后，便将其放置到相应的项目回顾目录中。从这点上来讲也可看出，其实收集既是项目的初始状态，也是任务的初始状态，是任务进入整个GTD系统的入口。</p></div></div><div id="outline-container-orgheadline19" class="outline-4"><h4 id="orgheadline19"><span class="section-number-4">5.2.2</span> 项目生命周期</h4><div class="outline-text-4" id="text-5-2-2"><p>项目的生命周期一般是：收集、活跃、回顾；而需要重复执行的项目，其回顾放在"#活跃"目录中。</p></div></div></div></div><div id="outline-container-orgheadline20" class="outline-2"><h2 id="orgheadline20"><span class="section-number-2">6</span> 建议</h2><div class="outline-text-2" id="text-6"></div><div id="outline-container-orgheadline21" class="outline-3"><h3 id="orgheadline21"><span class="section-number-3">6.1</span> 原则</h3><div class="outline-text-3" id="text-6-1"><p>建议在实现GTD时，能遵循如下的原则：  </p></div><div id="outline-container-orgheadline22" class="outline-4"><h4 id="orgheadline22"><span class="section-number-4">6.1.1</span> 不要将任务状态设置太多</h4><div class="outline-text-4" id="text-6-1-1"><p>过多的状态会导致GTD系统的复杂，处理任务时反而会因此分散精力。</p></div></div><div id="outline-container-orgheadline23" class="outline-4"><h4 id="orgheadline23"><span class="section-number-4">6.1.2</span> 任务不一定全部要处理完毕</h4><div class="outline-text-4" id="text-6-1-2"><p>GTD不是为了完成任务，而是为了减轻压力，使用GTD还能辅助记忆和梳理，减轻大脑记忆的负担。</p></div></div><div id="outline-container-orgheadline24" class="outline-4"><h4 id="orgheadline24"><span class="section-number-4">6.1.3</span> 任务从“收集”中拿出后，不应该再放回去</h4><div class="outline-text-4" id="text-6-1-3"><p>收集箱是暂存新流入和产生的任务，它是GTD内容的主要来源，而非为状态迁移而存在。</p></div></div><div id="outline-container-orgheadline25" class="outline-4"><h4 id="orgheadline25"><span class="section-number-4">6.1.4</span> 进行的任务要先移动至“下一步”状态，再进行处理。</h4><div class="outline-text-4" id="text-6-1-4"><p>这样能保证正在进行的任务集中在“下一步”状态，将精力只集中在“下一步”中的任务，而无需分散精力在其它状态中寻找需要处理的任务。</p></div></div><div id="outline-container-orgheadline26" class="outline-4"><h4 id="orgheadline26"><span class="section-number-4">6.1.5</span> 处于“下一步”状态的任务不宜过多</h4><div class="outline-text-4" id="text-6-1-5"><p>“下一步”是当前真正正在处理的任务，能够同时处理的任务是有限的，这里的任务不宜逗留过久，迟早会被处理成其它状态。过多的“下一步”任务，会为大脑和心里造成很大压力，同时。</p></div></div><div id="outline-container-orgheadline27" class="outline-4"><h4 id="orgheadline27"><span class="section-number-4">6.1.6</span> 处于“稍后”状态的任务，要么会回到“下一步”，要么会被放置其它状态</h4><div class="outline-text-4" id="text-6-1-6"><p>一些相对比较重要但是还来不及处理的任务，不放在“下一步”而是放在“稍后”中，可以起到缓冲压力的作用。这里的内容实质是被推迟的任务，如果不会被推迟很久，迟早会回到“下一步”状态；如果它可能会被推迟很久，那干脆将它放置“将来也许”甚至“取消”中。</p></div></div><div id="outline-container-orgheadline28" class="outline-4"><h4 id="orgheadline28"><span class="section-number-4">6.1.7</span> 大多数GTD管理不需要过于复杂的特性</h4><div class="outline-text-4" id="text-6-1-7"><p>执行GTD不应当过度依赖工具，只要可以创建内容（表示任务），并且能将内容归类（表示状态），完全可以手动完成绝大多数GTD管理。</p></div></div><div id="outline-container-orgheadline29" class="outline-4"><h4 id="orgheadline29"><span class="section-number-4">6.1.8</span> 多操作多整理多回顾有助获得正能量</h4><div class="outline-text-4" id="text-6-1-8"><p>经常回顾和整理自己的GTD系统，可以保持系统有序，还能给自己反馈正能量。GTD中表示待办任务，处理任务时便有一种做事情，也看到了效果的感觉。有一种说法是，这些“成就”会被大脑做为努力一段时间的“奖赏”，在手动处理GTD的同时会不断地有一种亲身获得“奖赏”的感觉。直观一点说，执行任务之前，会在心里不自觉地讨厌列在表上的任务条目，当完成任务之后，手动管理会亲身体会到将讨厌的那一条任务删除的成就感，尽管每次的成就很少，但是众多这样的反馈不断的激励着大脑，却能给自己带来意想不到的力量。</p></div></div><div id="outline-container-orgheadline30" class="outline-4"><h4 id="orgheadline30"><span class="section-number-4">6.1.9</span> 在特定环境下可借助特定工具扩展GTD来提高效率</h4><div class="outline-text-4" id="text-6-1-9"><p>除了基本的GTD功能，对于特定工作环境，一些高级属性借助工具扩展，可能会有助提升效率。如今日待办、或者提醒，场景或任务跟踪等等，在一些工具中有特定的表示和组织方式，设置好相关属性后，任务会自动迁移、或者提醒等等，避免了手动设置。尽管几乎不用进行手动设置了，但是想要保持自己GTD的有序和获取更多的执行动力，还是要经常回顾。可以借助相关的GTD管理工具，这里介绍几个：</p></div><div id="outline-container-orgheadline68" class="outline-5"><h5 id="orgheadline68"><span class="section-number-5">6.1.9.1</span> DGT GTD：</h5><div class="outline-text-5" id="text-6-1-9-1"><p>是安卓系统下非常全面的GTD工具，操作便捷，记录迅速，自定制功能丰富，支持备份，自定义同步等，只是刚开始需要稍微熟悉一下其操作的方式。简单说，两个特点：“丑”（不是很丑）、“好用”（非常好用）。</p></div></div><div id="outline-container-orgheadline69" class="outline-5"><h5 id="orgheadline69"><span class="section-number-5">6.1.9.2</span> Doit.im：</h5><div class="outline-text-5" id="text-6-1-9-2"><p>支持多平台，云同步，界面简洁便于初学者使用和理解GTD的工作流程，但是有些功能需要收费才能实现。</p></div></div><div id="outline-container-orgheadline70" class="outline-5"><h5 id="orgheadline70"><span class="section-number-5">6.1.9.3</span> Omnifocus：</h5><div class="outline-text-5" id="text-6-1-9-3"><p>没有亲自用过，根据许多文章中的介绍，可以知道这是一款重量级的华丽版的IOS下的GTD管理工具，入门门槛高，但是功能极其强大。</p></div></div><div id="outline-container-orgheadline71" class="outline-5"><h5 id="orgheadline71"><span class="section-number-5">6.1.9.4</span> 2Do：</h5><div class="outline-text-5" id="text-6-1-9-4"><p>也是一款IOS下好用的GTD管理工具，功能强大，入门相对简单。</p></div></div><div id="outline-container-orgheadline72" class="outline-5"><h5 id="orgheadline72"><span class="section-number-5">6.1.9.5</span> Wunderlist(奇妙清单)：</h5><div class="outline-text-5" id="text-6-1-9-5"><p>简洁的界面，不过在国内同步功能比较慢。</p></div></div><div id="outline-container-orgheadline73" class="outline-5"><h5 id="orgheadline73"><span class="section-number-5">6.1.9.6</span> toodledo</h5><div class="outline-text-5" id="text-6-1-9-6"><p>IOS下一个比较流行的GTD工具。</p></div></div><div id="outline-container-orgheadline74" class="outline-5"><h5 id="orgheadline74"><span class="section-number-5">6.1.9.7</span> Orgmode：</h5><div class="outline-text-5" id="text-6-1-9-7"><p>这个其实是基于文本的标记语言，是Emacs的一款著名的编辑模式插件，但是功能非常强大，目前已经在许多地方支持（如vim、github、IOS、Android应用上等）。它的初衷是项目管理相关的目的，其中就包括能够实现GTD管理的相关内容，但是功能不仅限此，它也可以用来记录笔记，记录的笔记基于大纲模式，有一定的所见即所得功能，但是更强大的是“所想即所得”的特性，是word远不能及的。这个工具/语言不限于平台，只需遵循orgmode语法即可，配合Emacs进行使用会使得效率极高、扩展性几近无限。Orgmode能够完成的功能也会随掌握程度的提升而丰富：如果简单掌握，那么Orgmode属于轻量级标记语言中的一种；但是如果需要更多的功能（如导出发布为各种格式），则需要进一步的学习。关键的是，Orgmode文件是纯文本格式，只需纯文本格式的内容便能实现它的全部功能。</p></div></div></div></div><div id="outline-container-orgheadline31" class="outline-3"><h3 id="orgheadline31"><span class="section-number-3">6.2</span> 推荐</h3><div class="outline-text-3" id="text-6-2"><p>这里算是给本文以及实际中习惯的工具做一个“广告”吧。具体如何理解和接受，还要看各位读者的喜好。结合实际经验，这里给出用于GTD管理的工具或方法选取的建议。</p><p>如果一个工具或方法它存放数据的形式越原始，越开放，记录越便捷，其适用度越高，也越容易被人接受（我想相对于直观的文本格式内容，哪些数据库格式、或压缩格式、或版本控制数据格式、以及更多其他特定格式的数据文件，更容易让人接收应当是文本格式的内容吧）。毕竟数据是自己的，工具只是外壳；访问数据的便捷可能需要借助特定的工具或方法，但是如果脱离了特定的工具方法，数据仍然不受影响才是多数人关心的。</p><p>对于GTD管理的工具和方法，做如下推荐：</p></div><div id="outline-container-orgheadline32" class="outline-4"><h4 id="orgheadline32"><span class="section-number-4">6.2.1</span> Orgmode</h4><div class="outline-text-4" id="text-6-2-1"><p>它其实已经超出了工具的范围，它实际属于一种语言或者规则、方法，功能比较全面，不仅可以GTD管理，还能做项目管理、内容管理等等。Orgmode可以让我们记录的数据以最原始的方式（直观的文本方式）来展示出来，而访问数据的方式一方面可以通过Emacs的orgmode高效进行，另一方面也可脱离相关工具，只要掌握Orgmode的一些约定语法我们仍可以用最原始的方式（如记事本）访问我们的数据，更能结合使用各种版本控制工具来管理我们的数据等。另外，我们还能将Orgmode的数据导出为当前流行的各种格式（如Html、pdf等），当然，越复杂的功能，就越需要更长时间的学习，如果我们没有足够的时间，Orgmode的简单功能也是够用的。因为期间会涉及到Emacs的使用以及Orgmode的配置等，篇幅关系会有专门的文档对Orgmode进行介绍，这里不详细说了。</p></div></div><div id="outline-container-orgheadline33" class="outline-4"><h4 id="orgheadline33"><span class="section-number-4">6.2.2</span> DGT GTD</h4><div class="outline-text-4" id="text-6-2-2"><p>在安卓系统上，它也将其工具的特性发挥到了极致。几乎支持所有你能想得到的GTD管理信息，也支持数据导出、共享、备份等等，最重要的是，记录非常方便，非常适合记录一些瞬间涌现的灵感等等，当然，为避免日后可能会迁移数据引起的问题，重要的数据还是尽早导出到一种通用的存储方式组织好（例如OrgMode）。</p></div></div><div id="outline-container-orgheadline34" class="outline-4"><h4 id="orgheadline34"><span class="section-number-4">6.2.3</span> 任意一个带有分类功能的便签</h4><div class="outline-text-4" id="text-6-2-3"><p>毕竟不是所有人都使用Android系统，如果找不到或者没有或者不想学像DGT GTD那样的工具，可能会有些不方便，即便如此我们仍然可以进行GTD管理。我们各自的系统中一般也都能找到一个类似“便签”、“记事本”的工具，如果没有，一般也都能够找到对应系统的一款相关软件。最后一个方法，也就是：结合本文中介绍的方法以及你当前系统上已有的某个相对便捷的、带有“分类”特性的记事软件，也能实现基础的GTD管理。方法很简单，就是将本文中提到的几个GTD状态做为分类，每一篇的笔记内容做为GTD任务（例如，可以使用比较常用的云笔记、中华万年历、为知笔记、evernote、甚至系统自带便签来进行）。如果以上提到的环境都不具备，也并不代表不能进行GTD的管理了。毕竟GTD只是一种方法，如何使用它，还是要看使用这个方法的人。正如前面已经提到的，每个人都有自己的方法来实现GTD，只有一个纸和一支笔，甚至只有一个好的记忆方式，也一样能实现GTD的管理。因为实现GTD最本质的东西只需两个条件：记录和分类。</p></div></div></div></div><div id="outline-container-orgheadline35" class="outline-2"><h2 id="orgheadline35"><span class="section-number-2">7</span> 其他</h2><div class="outline-text-2" id="text-7"><p>本文介绍的只是一个实现GTD的核心思想，但是并不包括全部。还有许多基于此的应用场景、和变通的方法（如邮件管理、内容管理、工作项目等等），本文不做过多介绍，会在日后相应的机会下可能有所介绍。</p><p>使用GTD后一段时间的感受：好的工具能够提高你的效率，但是世界上没有最好的工具，因为总会有新的思想来创造出更好的工具，摆脱工具控的限制，用知识来充实自己的思想。</p><p>这里给出几个利用GTD思想进行管理的实例：</p></div><div id="outline-container-orgheadline36" class="outline-3"><h3 id="orgheadline36"><span class="section-number-3">7.1</span> 使用GTD思想进行内容管理</h3><div class="outline-text-3" id="text-7-1"><p>这里所说的内容管理是对知识体系的一种组织形式，是日常存放积累知识的体系，实现完整的内容管理和GTD管理类似，也需要一些特定的方法（比如通过云存储、云笔记、版本控制、文件管理等等）。这里不对内容管理的方面做过多介绍，虽然内容管理与任务管理是两个方面的内容，但是它们之间也并非没有联系，这里着重讲述如何将GTD思想应用到内容管理上。</p><p>在没有一个比较系统的方式管理我们积累的内容之前，这些内容可能会显得杂乱、无章，虽然也经常会进行定期的清理和组织（比如，对分类系统的重构、重新定义，将某些分类中的内容进行修改、或迁移等等），但是整理的过程比较耗时耗力，并且不同时刻整理之时采用的思路和策略（很多都是临时想到的方法）也可能有所不同，尤其是对于“非专业”的内容管理，每次整理后，之前整理的策略也很快会忘记，新的内容又会导致内容系统逐渐重新归于混乱，甚至整个知识体系的结构都会发生翻天覆地的变化。随着时间的推移，和越来越多的内容“堆积”，很容易让人产生疲劳和沮丧。</p><p>其实我们可以将这些问题归结为两点：</p><ul class="org-ul"><li>需要不断地完善更新这些内容的组织方式</li><li>需要一个好的方法来完善更新相应的内容组织方式</li></ul><p>前者属于知识本身的结构化（成长）问题，它可能会随时间、以及我们每个人知识系统的不断扩充而变化，管理策略可以采用内容管理方面涉及的各类方法和手段；而后者属于任务管理的方面，对应的任务便是对内容的管理。内容管理和任务管理之间没有明确界限，其中又有许多相互交叉的方面，所以我们可以将任务管理和内容管理结合起来（任务管理为辅，内容管理为主）管理我们的内容。</p><p>随着我们知识内容结构的变化，可能不同阶段会需要不同的方法来管理内容，所以可以考虑选择一种相对固定的、不变的方法或思路进行“任务管理”，管理的任务便是“内容”，而管理的方式采用不同阶段涉及到的“内容管理”相关技术。这样，无论内容结构如何变化如何需要调整，由于更新内容所采用的“任务管理”手段相对固定，便能在已有体系基础上让一切有序的进行了。</p><p>随着对管理技术的深入实践理解，采用的管理策略也会更趋向合理。这里抛砖引玉，给出目前我采用的一种方式^_^：</p><p>如果GTD管理体系本身就做为内容管理体系的一部分存于其中，例如为知笔记用来管理内容，GTD与其中内容管理共存，此时可将用于GTD的内容 分类冠以"GTD_xxx"，所有GTD相关操作都在该分类中进行。关键是要将内容管理和GTD管理区分开来，分类的作用也可以是区分功能，不再局限于内容属性（这里是普通分类名称上加上特殊前缀等等，用以该分类用于功能属性）。</p></div><div id="outline-container-orgheadline37" class="outline-4"><h4 id="orgheadline37"><span class="section-number-4">7.1.1</span> “任务管理”方面</h4><div class="outline-text-4" id="text-7-1-1"><p>使用GTD方法将“内容管理”做为任务进行管理:</p><dl class="org-dl"><dt>收集</dt><dd>如果日常生活中，遇见有些内容值得记录至内容系统，那么及时迅速地将这些内容记录在某些固定的位置，先不用做更多处理。 记录的位置可以是事先设置好的一个内容管理默认分类，或者GTD中的收集箱，总之这样的地方根据自身情况只有几个，例如：手机中的便签、笔记中的“默认分类”或者“未分类”目录、收藏网页网址的工具、甚至是手动人为创建的“收集”目录等等，只要能方便、快速地将相关内容进行分享记录（例如通过手机中的“分享”菜单，电脑中的鼠标右键）即可。</dd><dt>整理</dt><dd>闲暇之时（如公交车上、排队等待等空余场合），到之前“收集”对应的那些地方，将曾经收集到的来不及整理的东西一一整理到对应的合适位置上去。具体整理的策略可能根据内容管理的方式而有所变化，但是既然采用GTD方式进行整理，那么整理过程中也必然会在每个整理的子任务中包含“收集”、“下一步”、“稍后”、“将来也许”、“等待委派”、“取消”、“完成”这些类似的状态，将每个整理任务都走完这样的状态，便能有条不紊地让内容越来越趋于有序。具体方式需要在内容管理中才能解释的更清晰，这里不做过多介绍。</dd></dl></div></div><div id="outline-container-orgheadline38" class="outline-4"><h4 id="orgheadline38"><span class="section-number-4">7.1.2</span> “内容管理”方面</h4><div class="outline-text-4" id="text-7-1-2"><p>采用多种方式结合，内容保证集中存放、便于访问、灵活通用、可移植，有一个或者两个主要的知识系统，其它做为分支和辅助。</p><p>内容管理应该属于和GTD时间管理“并行”的另一方面管理内容，比如“云笔记”（如为知笔记，麦库记事，有道，evernote，onenote，mynoteskeeper等）、“云存储”（如百度云，微云，Megalink等）、“本地存储”（存放一些私有数据资料）、“分布式版本控制”（如git本地存放私有内容，）、“版本控制系统托管服务”（github，bitbucket托管不敏感内容的git库）、“发布系统”（博客、Jekyll建站、Orgmode或Markdown便于分享的内容等）、以及其它（如便签、笔记、记事本、Pocket网页收集）等等。这里不过多介绍。</p></div></div></div><div id="outline-container-orgheadline39" class="outline-3"><h3 id="orgheadline39"><span class="section-number-3">7.2</span> 将GTD管理中产生的数据进行内容管理</h3><div class="outline-text-3" id="text-7-2"><p>这里介绍的是基于本文中提到的GTD方法，如何将其中的数据与内容管理系统衔接。</p></div><div id="outline-container-orgheadline40" class="outline-4"><h4 id="orgheadline40"><span class="section-number-4">7.2.1</span> 管理思路</h4><div class="outline-text-4" id="text-7-2-1"><p>在使用GTD方式处理日常任务时，一些的“已处理”状态中的任务，有些值得记录至自己的知识体系系统中，那么可以尝试一下这个方式：</p><dl class="org-dl"><dt>如果该任务没有对应的回顾引用到它</dt><dd>那么直接将它从GTD系统中移动（或复制）到知识管理体系当中，根据自己的情况选择移动还是复制。</dd><dt>如果该任务有对应的回顾引用到它</dt><dd>那么不是将该任务内容简单移动或复制到相应笔记位置，而是将其复制到相应笔记处并添加一些引用信息，这样可以防止破坏原有GTD中回顾项目的链接。另外，最好也在GTD中记录一下复制到了哪里，下次更新之时，可以同时更新跟踪；同时内容记录之处，保留到回顾项目的反向引用链接。</dd></dl><p>操作的时候，最好不要让GTD系统的回顾引用到GTD以外的内容。</p></div></div><div id="outline-container-orgheadline41" class="outline-4"><h4 id="orgheadline41"><span class="section-number-4">7.2.2</span> 举例</h4><div class="outline-text-4" id="text-7-2-2"><p>例如GTD中，有一条已经完成的任务（单词任务），该任务有对应的项目回顾（单词任务），并且这条任务已经整理到内容管理系统中的某个位置，则可采用类似如下方式处理（实际只需在相应的“已处理”任务中添加整理至何处的信息）。</p></div><div id="outline-container-orgheadline78" class="outline-5"><h5 id="orgheadline78"><span class="section-number-5">7.2.2.1</span> GTD系统项目回顾中对应的条目</h5><div class="outline-text-5" id="text-7-2-2-1"></div><ol class="org-ol"><li><a id="orgheadline75"></a>路径<br><div class="outline-text-6" id="text-7-2-2-1-1"><p>回顾条目路径为： <code>我的任务/GTD/#回顾/英语学习回顾</code>  </p></div></li><li><a id="orgheadline76"></a>内容：<br><div class="outline-text-6" id="text-7-2-2-1-2"><p>回顾条目内容如下:</p><pre class="example">xxxxxxx阅读任务单词任务语法积累任务xxxxxxx</pre></div></li><li><a id="orgheadline77"></a>注意：<br><div class="outline-text-6" id="text-7-2-2-1-3"><p>列出的任务可以是链接，但是显示的名字要与对应的任务名一致，便于在不支持链接的笔记系统中查找</p></div></li></ol></div><div id="outline-container-orgheadline82" class="outline-5"><h5 id="orgheadline82"><span class="section-number-5">7.2.2.2</span> GTD系统“已处理”状态中对应的任务：</h5><div class="outline-text-5" id="text-7-2-2-2"></div><ol class="org-ol"><li><a id="orgheadline79"></a>路径：<br><div class="outline-text-6" id="text-7-2-2-2-1"><p>任务条目路径为： <code>我的任务/GTD/已处理/单词任务</code></p></div></li><li><a id="orgheadline80"></a>内容：<br><div class="outline-text-6" id="text-7-2-2-2-2"><p>任务条目内容如下：</p><pre class="example">已整理至：学习/英语/单词任务英语学习回顾XXXXXX</pre></div></li><li><a id="orgheadline81"></a>注意：<br><div class="outline-text-6" id="text-7-2-2-2-3"><p>被整理至内容管理系统中的任务，整理之时，也在任务顶部追加“已整理至xxxx位置”之类的字样，最好名字也和实际笔记的名字一致，便于日后查找。</p></div></li></ol></div><div id="outline-container-orgheadline86" class="outline-5"><h5 id="orgheadline86"><span class="section-number-5">7.2.2.3</span> 内容管理系统中对应的内容：</h5><div class="outline-text-5" id="text-7-2-2-3"></div><ol class="org-ol"><li><a id="orgheadline83"></a>路径：<br><div class="outline-text-6" id="text-7-2-2-3-1"><p>笔记路径为： <code>学习/英语/单词任务</code></p></div></li><li><a id="orgheadline84"></a>内容：<br><div class="outline-text-6" id="text-7-2-2-3-2"><p>笔记内容如下：</p><pre class="example">英语学习回顾XXXXXX</pre></div></li><li><a id="orgheadline85"></a>注意：<br><div class="outline-text-6" id="text-7-2-2-3-3"><p>在内容管理系统中，保留回顾链接，可以链接至GTD系统中的对应回顾条目。</p></div></li></ol></div></div></div><div id="outline-container-orgheadline42" class="outline-3"><h3 id="orgheadline42"><span class="section-number-3">7.3</span> 使用GTD标签管理信息</h3><div class="outline-text-3" id="text-7-3"><p>对于有标签功能的系统、软件、工具，其中的信息可以通过这个方式来整理，整理只能使相应的信息趋于有序，而每次的整理不会受上次整理的影响也不会对下次整理产生影响，简而言之，如果想用这个方式整理，那么内容会更有序，如果过段时间不用这个方式了，整理了一部分的内容，也不会因为半途而废而导致信息更混乱。</p></div><div id="outline-container-orgheadline43" class="outline-4"><h4 id="orgheadline43"><span class="section-number-4">7.3.1</span> GTD标签</h4><div class="outline-text-4" id="text-7-3-1"><p>首先理解这个概念，GTD标签，可以用来辅助整理信息，如果某条信息没贴GTD标签则表示没有被整理过，也即“收集”状态，贴标签的的表示内容已由GTD标签辅助处理过，状态就是标签对应指示的状态。  </p><p>采用这个方法，需要信息所处环境支持标签功能，并且将信息所处的环境的标签看做有两类:GTD标签,以及普通标签。普通标签就是平时我们使用的标签;而GTD标签是从普通标签中预留一些特殊标签（如标题前加GTD_），用做该方法的GTD整理。只有普通标签不代表已由GTD法处理过，并且不能同时贴两个同一体系的GTD标签，只有GTD标签表示暂不关注整理的分类。</p></div></div><div id="outline-container-orgheadline44" class="outline-4"><h4 id="orgheadline44"><span class="section-number-4">7.3.2</span> 实现方式</h4><div class="outline-text-4" id="text-7-3-2"><p>这种方法的原则是：采用此法整理过的内容，一定存在GTD标签，没有GTD标签的，视为没整理过（即收集状态）。即没贴GTD标签的，就是没整理的，整理好后，若不用借助GTD标签可保持有序，则可以不再贴GTD标签，过段时间又乱了可以重拾GTD标签辅助整理。  </p><p>GTD标签举例</p><ul class="org-ul"><li>gtd_下一步</li><li>gtd_稍后</li><li>gtd_将来也许</li><li>gtd_取消</li><li>gtd_已处理</li></ul><p>当信息已处理后（例如借助GTD整理好分类），可以只有已处理，或者同时有GTD标签和普通标签。这种方式适合无分类的信息管理，或者分类及标签混乱，但是还没应用GTD标签，借助GTD标签来管理内容。（例如pocket）</p></div></div><div id="outline-container-orgheadline45" class="outline-4"><h4 id="orgheadline45"><span class="section-number-4">7.3.3</span> 扩展</h4><div class="outline-text-4" id="text-7-3-3"><p>若分类大变，或者再次细化整理，则换一套管理思路，管理方式仍旧采用gtd方式管理.</p><p>例如丢弃之前的gtd标签，采用新的gtd标签：</p><ul class="org-ul"><li>gtd方式2_下一步</li><li>gtd方式2_稍后</li><li>gtd方式2_将来也许</li><li>gtd方式2_取消</li><li>gtd方式2_已处理</li></ul><p>这样扩展之后，就算之前应用过GTD标签，如果想换一条整理思路，那么重新换一套标签就行了，之前的标签忽略即可。</p><p>建议软件能显示所有未贴标签的内容。建议能修改标签名。建议能批量加标签。标签和分类的区别是先有文章后有标签，但先有分类后有文章</p></div></div><div id="outline-container-orgheadline46" class="outline-4"><h4 id="orgheadline46"><span class="section-number-4">7.3.4</span> 关键</h4><div class="outline-text-4" id="text-7-3-4"><p>使用该方式，最好相应的环境能支持如下功能：</p><ul class="org-ul"><li>能显示所有未贴标签的内容。</li><li>能过滤显示出没贴特定标签的内容（如没贴GTD标签，却贴了普通标签的分类）。</li><li>能修改标签名。</li><li>能批量增、删改标签。</li></ul></div></div></div><div id="outline-container-orgheadline47" class="outline-3"><h3 id="orgheadline47"><span class="section-number-3">7.4</span> 使用GTD方式管理邮件</h3><div class="outline-text-3" id="text-7-4"><p>如果是采取GTD方式管理自己的工作方式，其中邮件中的内容处理之后，可过滤到GTD系统中。而对邮件，也可采用GTD类似的方式来进行过滤，这样自己的GTD管理系统像是分层的一样，但是不宜过于复杂。</p></div><div id="outline-container-orgheadline48" class="outline-4"><h4 id="orgheadline48"><span class="section-number-4">7.4.1</span> 实现思路</h4><div class="outline-text-4" id="text-7-4-1"><p>大多数邮件客户端都有标签显示的功能，基于此，我们可以先定下如下规则：</p><p>未贴标签的邮件，就是杂乱的不重要的邮件，而贴了标签的邮件，是需要关注的。</p></div></div><div id="outline-container-orgheadline49" class="outline-4"><h4 id="orgheadline49"><span class="section-number-4">7.4.2</span> 实现举例</h4><div class="outline-text-4" id="text-7-4-2"><p>设置如下类似GTD的系统标签：</p><dl class="org-dl"><dt>未读邮件</dt><dd>类似GTD中的收集，这个状态在一般邮件客户端中都默认存在，所以并不对应什么标签名称，需要特别注意的是，收集是未读状态的无GTD标签邮件，而非无GTD标签邮件，这样保证收集的邮件不至于堆积。</dd><dt>下一步</dt><dd>该标签表示还来不及读取，只是通过标题等能确认是重点邮件，读取之后会变成后面的对应分类。类似GTD的“下一步”，需要过后进一步处理的邮件，这个分类的内容在整体中应该不多，处理后去掉标签或迁移到其它标签中，或重要邮件放到合适的位置、或者标签已办事项中。</dd><dt>稍后</dt><dd>相对下一步，可以稍后延缓处理的邮件。该标签邮件的处理方式类似前面，对应于GTD的“稍后”状态。</dd><dt>将来也许</dt><dd>不确定是否会用到，看起来像是重点，先堆积到这里。该标签邮件处理方式类似前面，对应于GTD中的“将来也许”状态。</dd><dt>等待委派</dt><dd>委派给别人处理或等待回复。该标签邮件处理方式类似前面，对应于GTD中的“等待委派”状态。</dd><dt>已经处理的相关标签</dt><dd>已处理邮件，不用贴上“已处理”标签，将其相应的GTD状态标签去掉即可，一般是已读的、未贴GTD标签的邮件，如果邮件比较重要，则建立一些根据自己情况的分类来重点存放。例如<dl class="org-dl"><dt>开发注意</dt><dd>本项目发布，开发过程中的一些注意事项。该标签邮件处理方式类似前面，对应于GTD中的“将来也许”状态。</dd><dt>项目文档</dt><dd>项目开发、管理、会议、讨论等中发布的一些文档</dd><dt>开发技巧</dt><dd>日常开发的一些小技巧、说明等。</dd><dt>通用技术</dt><dd>一些比较通用的，不仅限于当前项目的技术内容，可以日后进一步学习或者有长远的作用的内容。</dd><dt>公司事务</dt><dd>一些公司事务信息，如人力资源相关、薪资、一些注意事项说明、出差、报销、福利等。</dd><dt>重要信息</dt><dd>暂时没有办法分类，但是感觉需要终点关注的邮件，比如阶段性的进展或者计划等。</dd></dl></dd></dl><p>另外，有些系统中可用添加星标的方式标注邮件，这时候，一些临时性有期限的阶段重点可以用星标标注（比如上次release到了哪个版本，这次应该从上次的开始，那么每次release的时候为其添加星标，下次的时候就不会为了一个上次版本号，海量搜索所有邮件了），便于近期跟踪，相对重要信息，这类邮件的生命周期较短。</p><p>这样处理邮件后，处理好的内容（转移至其它系统如GTD系统中继续也表示邮件处理完了）‍，要么就是添加上合适的标签，要么就是去掉标签表示不用关注。但是如前所述，如果感觉处理后还是很重要，那就加上星标。或者放到一个“重要邮件”的标签中。</p><p>不同的客户端可能显示标签的方式不同，例如对于outlook，为了便于分类显示邮件，我们可以建立一个基于标签的搜索目录；而对于thunderbird，我们可以直接通过将标签添加到快速访问栏过滤显示；等等。其实添加标签后，标签基本上就可以预示分类了，但是如果标签感觉不是十分牢靠（可能一不小心点一下，就没有标签了）所以一些重要的没有过时的东西，可以按照意愿自建目录，转移到特定目录中。</p></div></div></div><div id="outline-container-orgheadline50" class="outline-3"><h3 id="orgheadline50"><span class="section-number-3">7.5</span> 使用GTD方式管理工作文件</h3><div class="outline-text-3" id="text-7-5"><p>有时候我们处理问题不一定全部在某一个GTD系统中进行，期间可能会涉及到访问电脑文件系统的相关操作。对文件系统采用GTD的方式管理，能避免文件系统的内容因文件杂乱导致的混乱。</p></div><div id="outline-container-orgheadline51" class="outline-4"><h4 id="orgheadline51"><span class="section-number-4">7.5.1</span> 思路</h4><div class="outline-text-4" id="text-7-5-1"><p>类似前面讲述的GTD标签的方式，我们可以创建一些GTD分类，将需要处理的资料流经这些分类最终归并到其他的合适的普通分类中。</p><p>比如，查看邮件时，发现一个待处理的问题。这封邮件中包含一些附件，比如处理问题时参考的文档、处理时的日志、以及测试报告、测试程序；处理问题之时，又可能会查阅其它地方，将其它相关参考资料整理至本地（比如上网下载一个处理该问题的软件或者数据文件）；甚至会自己写一些文档记录当前处理的内容，比如设计文档、流程图、设计图等等。这些内容如果很多，那么可能会将自己的文件系统搞的乱七八糟。</p><p>显然目前似乎也很难将这些内容的管理集成到现有的GTD系统中，或者也可以集成，但是需要再为现有的GTD系统添加一些额外的处理方式（这个方式可以因人而异，这里也不做介绍，可能将来会给出一套方案来解决这个问题）。如果我们不愿意花费精力将自己的这个GTD系统弄得很庞大复杂，为简便起见，我们可以给出一个折衷方案，自己习惯的方式，直接将相关的内容在本地文件系统中进行操作，但是操作之时，对文件系统采用GTD的思路划分。</p></div></div><div id="outline-container-orgheadline52" class="outline-4"><h4 id="orgheadline52"><span class="section-number-4">7.5.2</span> 实现举例</h4><div class="outline-text-4" id="text-7-5-2"><p>比如，我们给自己的文件系统划分为如下GTD分类目录：</p><pre class="example">$ls -p1_inbox/  3_later/  5_maybe_future/  7_cancel/ 2_next/   4_wait/   6_done/  readme  ...</pre><p>目录内容如下：</p><dl class="org-dl"><dt>1_inbox/</dt><dd>用于将所有处理问题过程中临时下载、获取的资料集中在这里存放，内容不能堆积要及时整理到其他目录。</dd><dt>2_next/</dt><dd>在整理文件系统时，将正在进行工作所需的资料汇集至此，不同内容可处于不同子目录中。</dd><dt>3_later/</dt><dd>在整理文件系统时，需要被推迟的事情所涉及的资料汇集至此，不同内容可处于不同子目录中。</dd><dt>4_wait/</dt><dd>在整理文件系统时，由于等待而被阻塞的事情汇集至此，不同内容可处于不同子目录中。</dd><dt>5_maybe_future/</dt><dd>在整理文件时，将不重要的以后可能会用到的资料堆积在这里，不同内容可处于不同子目录中。</dd><dt>6_done/</dt><dd>在整理文件系统时，已完成工作相关资料暂积于此，这里包含各种完成任务所涉及资料，将来可能进一步整理。</dd><dt>7_cancel/</dt><dd>在整理文件系统时，将取消的任务涉及的资料都汇集到这里，将来可能会被清理。</dd><dt>readme</dt><dd>对当前处理的目录结构的进一步说明。</dd><dt>其它目录</dt><dd>任何自己定义的目录。与以上GTD分类不冲突，GTD分类做为过滤，采用GTD方法，经过前面几个GTD分类的过滤（状态切换后）后，最终整理好的资料可以汇集于其他自己习惯的目录中。</dd></dl></div></div></div><div id="outline-container-orgheadline53" class="outline-3"><h3 id="orgheadline53"><span class="section-number-3">7.6</span> 杂乱</h3><div class="outline-text-3" id="text-7-6"><p>任何经验知识等叙述到一定程度，总有一些无法具体归类的杂项内容，哪怕是某方面知识体系中的一小部分，也很难一下子把所知以及真正的内容全部完美的表达出来。本文也是如此，所以在这里列出暂时堆积一些无法放置的，可能有待进一步整理也可能不会再整理的内容。</p></div><div id="outline-container-orgheadline54" class="outline-4"><h4 id="orgheadline54"><span class="section-number-4">7.6.1</span> 任务状态</h4><div class="outline-text-4" id="text-7-6-1"><p>GTD系统不是一成不变的，但是大多数GTD系统，应当具有如下几个类似的状态：收集、下一步、将来也许、已完成。</p><dl class="org-dl"><dt>收集箱</dt><dd>用于快速存放所有临时想到的任务，有时间再将其进一步整理，细化任务属性，但是其中内容不要堆积。</dd><dt>下一步</dt><dd>便于集中精力，只存放当前处理的任务，其中内容不要过多。</dd><dt>将来也许</dt><dd>任务堆积的地方，可能做可能不做又不想遗忘的、没处理的任务，都可以先堆积在这里。</dd><dt>已完成</dt><dd>已完成的任务，做为备份或归档，可能将来回顾或进一步组织整理。</dd></dl></div></div><div id="outline-container-orgheadline55" class="outline-4"><h4 id="orgheadline55"><span class="section-number-4">7.6.2</span> 任务属性</h4><div class="outline-text-4" id="text-7-6-2"><p>除了前面的任务状态，根据所处环境、工具与方法的不同，GTD任务还可能具有的属性也有所不同。比较基本的有任务所属的“任务名称”、“项目分类”；有时候根据情况还需要其他扩展的属性如：“场景”、“开始/结束时间”、“是否重复”、“提醒”、“备注”、“优先级”等等。</p><p>不同属性具有不同用途，实现方式也不同。</p><p>比如：“项目分类”和“场景”可能用分类目录或者标签的方式来实现，如果采用分类目录，需要注意此时与状态分类并不冲突，因为分类不仅是对内容状态、属性的分类，也是对任务场景的分类。任务的“项目分类”一般在回顾的时候会经常用到；任务的“情景”一般在处于不同场合的时候用到（如@家里、@办公室、@外出等）；这些一般都可根据个人习惯进行设置，只要便于快速过滤到适合该情况下需要关注的任务即可。</p><p>又如：“开始/结束时间”、“是否重复”、“提醒”……这类时间相关的信息，可能根据软件场合的不同也有不同的实现。比如Orgmode可以用时间戳和SCHEDULE属性等来标记这些信息等等。而有些工具在特定的时候，又可能会根据时间信息，对任务进行自动的处理，比如将任务贴上标签，设置好起始结束日后，过期或者特定时间，自动将任务移动到特定的状态或项目等分类中（有许多GTD管理工具中都有一项”今日待办“之类的分类就类似如此)，或者反复提醒。对于简单的GTD管理，如记事本方式，可能就很难直接实现这类根据时间有所动作的任务管理。</p></div></div><div id="outline-container-orgheadline56" class="outline-4"><h4 id="orgheadline56"><span class="section-number-4">7.6.3</span> 任务性质</h4><div class="outline-text-4" id="text-7-6-3"><p>如果对任务，需要时间方面的属性进行辅助管理，这里给出一些经验性的建议：</p><dl class="org-dl"><dt>提醒</dt><dd>不用什么都设提醒，必须在指定时间做的事情，或重要的事情才值得提醒；提醒的功能可以任找类似闹钟功能的方便软件辅助即可（如中华万年历），不用必须集成到GTD中实现。</dd><dt>日程</dt><dd>有些任务虽然不需提醒，但是也对时间比较敏感，比如今日待办，明日待办，指定日期代办，将来待办等，虽然有些并不一定是要执行，但是都有一个期限，有些工具在日历中会将其标记出来。</dd><dt>待办</dt><dd>对时间不敏感的任务。有些任务对时间信息不是很敏感，或无法指定究竟什么时候需要做、需要完成，但是能确定的是它应该被做，这类任务可以称为待办。</dd></dl><p>前面所述的，是对任务性质方面的划分，并不是必须的分类方式，这里真正做了划分的，我们在GTD中看到的各个任务的状态，大多状态的任务都具有以上之一的性质。对任务性质进行这样的划分之后，一些比较让人迷惑的概念应该比较容易澄清了。</p><p>例如：日历、提醒、备忘、日程、待办……这几个概念经常在叙述的时候出现，如果不对其专门规定和提取，有时候连自己都会对其比较迷惑。经过上面的性质划分之后，我们可以这样理解：“日程”就是有时间安排的任务，它可以在“日历”中被标记出来。“备忘”有些是需要提醒的，有些不用“提醒”只要做为“待办”即可。</p></div></div><div id="outline-container-orgheadline57" class="outline-4"><h4 id="orgheadline57"><span class="section-number-4">7.6.4</span> 优先级划分</h4><div class="outline-text-4" id="text-7-6-4"><p>任务都有一个优先级的问题，有一个为任务优先级分类的方式：四象限法则。该方法不具体介绍，大致是将任务按照“紧急度”与“重要度”划分为四个象限：</p><dl class="org-dl"><dt>第一象限</dt><dd><p>重要不紧急</p><p>需要制定计划，按时完成的内容，是最重要的事情，它可以帮助我们进入良性循环。建议占用约65%-80%的精力。</p></dd><dt>第二象限</dt><dd><p>重要且紧急</p><p>需要优先解决，这也是没有经过适当计划的内容，可能因为之前的安排不合理，导致一些任务从第一象限随着时间的推移被迁移到第二象限，可能导致我们无休止地一直在“瞎忙”。建议占用约20%-25%的精力。</p></dd><dt>第三象限</dt><dd><p>紧急不重要</p><p>会让我们产生“这事很重要”的错觉的事件，实际上其实事件只是对别人而言很重要。建议占用约15%的精力。</p></dd><dt>第四象限</dt><dd><p>不重要不紧急</p><p>浪费时间的事情，如果可能，交给别人去做。建议占用&lt;1%的精力。</p></dd></dl></div></div><div id="outline-container-orgheadline58" class="outline-4"><h4 id="orgheadline58"><span class="section-number-4">7.6.5</span> 劳逸结合</h4><div class="outline-text-4" id="text-7-6-5"><p>划分任务状态很大一部分也是为了集中我们的精力，将处理任务时精力集中在下一步，回顾时精力集中在任务的划分等等。而真正在处理任务之时，精力不一定能保证一直集中；集中过久又可能会导致之后的处理效率低下。所以可以考虑番茄工作法来改善这样的状况。</p><p>番茄工作法是一种相对于GTD更微观的时间管理方法。大致如下：将每次做事情，比喻成番茄，休息和番茄交替进行。大致如下原则：</p><ol class="org-ol"><li>一个番茄时间（25分钟）不可分割，不存在半个或一个半番茄时间。</li><li>一个番茄时间内如果做与任务无关的事情，则该番茄时间作废。</li><li>永远不要在非工作时间内使用《番茄工作法》。（例如：用3个番茄时间陪儿子下的棋、用5个番茄时间钓鱼，等等。）</li><li>不要拿自己的番茄数据与他人的番茄数据比较。</li><li>番茄的数量不可能决定任务最终的成败。</li><li>必须有一份适合自己的作息时间表。</li></ol><p>通用的方式是：每个番茄25分钟，休息5分钟，但是也可根据自身情况而定。工作时准备好一个定时器，每次过一个番茄，一定休息，休息完毕，就下一个番茄，每次休息和番茄之间，通过定时器来提醒，防止“越界”。</p></div></div><div id="outline-container-orgheadline59" class="outline-4"><h4 id="orgheadline59"><span class="section-number-4">7.6.6</span> 回顾的解释</h4><div class="outline-text-4" id="text-7-6-6"><p>如果某项任务比较复杂，处理完毕后，最好能有一个汇总的文档，整理期间处理的情况，类似索引。便于以后参考引用，以及追加索引处理更新情况，也可能没有用处，这就是一条回顾，也是项目。</p><p>回顾最初可能是以任务的形式出现的，将任务处理到一定程度后，发现其中可以划分为许多子部分，而最初的“任务”可以用来做为一个回顾索引，来引用到处理任务时涉及的的各个子部分。这个时候，“任务”就变成了“回顾”，将新建立的回顾放在相应的“回顾”分类中（如“活跃的回顾”、“普通的回顾”等），之后的处理全在“回顾”以及其引用的相应的任务中记录和复习，并不是说进入到“回顾”中了，就相应的条目就不能更新了，回顾是对项目的划分，这里存在的是项目而非任务，回顾并非任务的终结状态，它是一系列相关任务的处理情况记录和索引，便于今后理解和参考。</p></div></div><div id="outline-container-orgheadline60" class="outline-4"><h4 id="orgheadline60"><span class="section-number-4">7.6.7</span> 管理回顾的经验</h4><div class="outline-text-4" id="text-7-6-7"><p>这里有些，可以借鉴，不是必须的：</p><ul class="org-ul"><li>回顾可能没有结尾，但是一定条理清晰，便于追加编辑，和索引。</li><li>每条回顾中可能包含多条对任务的索引，索引内容不能太多，更多相关的内容可以在该索引对应的链接内容中体现。</li><li>每条回顾对应一个项目，不同的回顾代表不同项目，每个项目是对相关任务的汇集。</li><li>并不是所有的任务都需要回顾和汇总，一些单一简单的任务，其本身处理完放入到已处理中，本身就可当作回顾。</li><li>回顾中索引引用的任务或者内容，最好和相应的任务或内容对应的笔记的题目一致，以便于在无支持链接的情况下移植。</li><li>回顾和所引用的任务之间最好能够交叉引用。创建相关任务的时候，首先将回顾的链接附上。等待任务处理到一定程度之时，可以重新命名一个好的标题，然后再将任务链接贴在回顾中。</li><li>理想情况下，回顾中只包含相关的任务标题链接，有时候实在需要进一步说明，也可在回顾相应的索引链接处中给出一些提示性的内容表征任务的大致情况。</li><li>如果回顾对应的项目仍需继续，那么就不要将相关的所有任务清除为已处理，以免丢失对任务的跟踪。也就是说，没有完成，或达到一定阶段的项目，要保持其中有一项未完成状态的任务(例如长时间不做了，可以将其设置为推迟、将来也许、甚至不了了之的任务确认后放入取消)。</li><li>活跃的回顾是指当前进行的项目，随着项目的进行可能会在其中不断衍生出新的任务，例如一些重复性的任务，如“周报”，一般每周都要写，短期内不会终止，所以它可被看作一个活跃的项目。</li><li>回顾所引用的一般是处于各个状态的任务，不一定只有任务，也可能是其他的回顾，但是一定是GTD系统中的内容。</li><li>回顾的内容与回顾所引用的内容应该能相互引用，便于参考时的跳转。</li></ul></div></div><div id="outline-container-orgheadline61" class="outline-4"><h4 id="orgheadline61"><span class="section-number-4">7.6.8</span> 关于参考</h4><div class="outline-text-4" id="text-7-6-8"><p>参考既不是任务，也不是回顾，但是它又处于GTD系统当中。它主要是在回顾，或者处理时不是中间任务性质的半参考文档性质的内容。例如导致接收任务的邮件片段、期间的交互证据、网址文献等等。按理说应该有相关的时间、地点（可以是email地址）、人物、事件（起因/经过/结果）。在目前看来，参考在本文所述的GTD中可以被去掉，归并到已处理分类中，但是也可根据个人需要与喜好单独列出来一个分类用来管理这些内容。</p><p>如何处理“回顾”、“任务”、“参考”的关系？</p><ul class="org-ul"><li>任务是可以执行事情的分割单位，其中包含处理该任务是的一些总结性质的东西，是深入处理相关任务时做的杂乱记录。</li><li>回顾是对一系列相关任务的汇集整理，本事就是一个项目，整理任务处理期间的关系以及处理的大致情况和索引，便于今后跟踪和参考。</li><li>参考可能是回顾会引用的，或者是任务中会引用到的一些资料，例如导致接收任务的邮件、期间的交互证据，网址文献等等。</li></ul></div></div><div id="outline-container-orgheadline62" class="outline-4"><h4 id="orgheadline62"><span class="section-number-4">7.6.9</span> 如何处理“项目分类”与“状态分类”实现的冲突</h4><div class="outline-text-4" id="text-7-6-9"><p>先给出问题，在列出思考实现的过程，最后给出采用当前的方案的原因。</p><p>正常收集过来的任务直接放在收集箱，进行进一步处理之后放在相应的项目分类中，随着时间的推移再进入到下一步状态，但是该任务仍然属于之前所设置的项目分类。也就是说，任务的项目分类是不变的，状态却可能随着处理改变成其它状态（如下一步）。任务的状态是以目录形式存在，所以对于项目分类的管理方式如果也以目录的方式管理可能就导致目录混乱。</p><p>考虑到项目分类是随时间动态增长的，而目录分类不宜过多；相对的，标签是文章之后动态创建的，将项目用标签表示可能更灵活好用一些；或者在每一个状态目录中建立子目录表示项目，或者使用标签来实现对任务即可用状态的角度来分类，又可用项目角度来分类……然而，这些方式都会到至笔记的分类复杂，并且并不是所有的工具都支持标签。</p><p>前面的局限在于，认为分类只能是对同一角度内容的分类，所以将项目和状态同时用分类来表示的时候，会混淆。当前采用的方式将状态和项目全都用分类来表示，但是分类不是在一个角度上进行分类，可以是管理状态的分类，或者管理项目的分类……不同方面，有各自的分类方式，可以用分类名前缀，或者自己的习惯来理解不同的分类方式就行。这样，将“分类”进行分类之后，不同方面的分类可以存在于同一个笔记系统中，就不会引起混乱。它是，对于项目这类变化比较大的（基本是只增不减）内容，采用分类又有些不妥，所以项目干脆用笔记来表示，每个项目分类只是一个笔记，然后将所有项目归结到项目状态中。</p></div></div><div id="outline-container-orgheadline63" class="outline-4"><h4 id="orgheadline63"><span class="section-number-4">7.6.10</span> 自我管理的演化过程</h4><div class="outline-text-4" id="text-7-6-10"><p>随着时间的过去，我们从学校进入到职场，从个人变成了组建的家庭，所处理和面对的事务也变得越来越复杂。如果不做合理规划，工作、生活、学习各个方面会变得越来越糟糕。希望能有一个高效的生活方式的我们，可能会经历如下的管理过程阶段，希望能给大家一个参考。</p></div><div id="outline-container-orgheadline87" class="outline-5"><h5 id="orgheadline87"><span class="section-number-5">7.6.10.1</span> 记事本阶段(笔记本子，或者Windows上的记事本，博客等)</h5><div class="outline-text-5" id="text-7-6-10-1"><p>将平时涉及的一切写到一个记事本中，可以是电子版的，或者纸质的，也有时候为分享和方便记录到博客等网络平台中。在随后的讲述中我们会发现，这些内容渐渐变得越来越复杂分散，简单的记录已不再适应。</p></div></div><div id="outline-container-orgheadline88" class="outline-5"><h5 id="orgheadline88"><span class="section-number-5">7.6.10.2</span> 待办清单与文档（任何设备、系统上自带的工具）</h5><div class="outline-text-5" id="text-7-6-10-2"><p>记事本，可能包含了能够记录的一切，但是其中记录的内容各不相同，而且数据量越来越大，我们真正所需的，其实是在适当的时候将其提取出来，总结起来发现大致有两类事情：</p><ul class="org-ul"><li>一类是平时记录的技巧、经验、资料、文档等等</li><li>另一类是影响自己行动的计划、待办事项、约会、提醒等等。</li></ul><p>于是产生了两种方式的记录：待办清单和文档。</p><dl class="org-dl"><dt>待办清单</dt><dd>其实是行动管理的雏形。罗列了需要处理的事情，需要进行某些事情的时候，浏览一下这个清单，处理完将其划掉，日常的生活在清单不断地增减中度过。</dd><dt>文档</dt><dd>其实是内容管理的雏形。那些经验、技巧、文档类的内容，被整理至某个笔记系统或目录结构中，为不同的内容建立相应的分类，分门别类存放，需要之时直接到对应地方查阅即可。</dd></dl><p>在任何我们手中的系统和设备中（比如手机的Android和IOS、PC的Window和Linux等等），总有一款待办清单方面的工具，以及笔记记录方面的工具，供我们这时所需。</p></div></div><div id="outline-container-orgheadline89" class="outline-5"><h5 id="orgheadline89"><span class="section-number-5">7.6.10.3</span> 丰富的待办清单与文档系统(中华万年历与为知笔记)</h5><div class="outline-text-5" id="text-7-6-10-3"><p>随着时间迁移，在待办清单和文档，终于有一个像样的名称，内容管理和行动管理。</p><ul class="org-ul"><li><p>行动管理方面</p><p>待办清单变得越来越长，往往想确定下一步做什么的时候，需要先浏览一遍长长的清单，然后找到需要的内容，于是产生了对待办清单改善的需要：需要一些新的工具，或者在原来的待办清单上改善和扩展。一是添加提醒，一些事情到特定时间后自动通过闹钟或者其他方式提醒我们去看，手机、电脑上有许多类似的工具；二是划分优先级，那些待办事项中，总有一些是重要的、一些是不重要的、一些是过时的等等，四象限法则就是一个划分优先级的好方法，在我所用过的工具里，中华万年历是这个时候不错的选择，它还附带了一个简单的云笔记功能。</p></li><li><p>内容管理方面</p><p>总是觉得之前的分类变得越来越复杂，文件系统越来越乱，内容越来越多，并且分散在各处（手机、电脑等），都有不不同的文档系统，而且有时候想要记录的时候，东西不在身边，当有现成的环境之时，却又想不起该记录什么了。这需要对内容管理方式有一个改善，改善分类的方式，让分类简单；增加记录与访问的便携与集中性，比如各类云笔记（麦库、有道、为知、evernote）等等可以随时记录访问，也可根据需要的内容，搜索检索相应的笔记，根据我的经验，为知笔记在这个方面做的非常不错。</p></li></ul></div></div><div id="outline-container-orgheadline90" class="outline-5"><h5 id="orgheadline90"><span class="section-number-5">7.6.10.4</span> 轻重结合(轻量级的系统便签或笔记工具、与为知、中华万年历)</h5><div class="outline-text-5" id="text-7-6-10-4"><p>在管理内容和行动方面的信息的同时，不断寻求新的更强大的工具，最终会感觉到，自己的手机、电脑、越来越慢，访问所需的等待时间往往超过了我们的忍耐限度，为了临时记录一点东西，我们可能会花费1、2分钟的时间启动我们的系统和软件，启动的时间内，我们往往可能已经能够把相应的事务处理完毕了。</p><p>这要求我们对所管理的信息有一种便捷的访问方式。各类系统平台上一般都会有那么几款轻量级别的记录工具，记事便签、记事本等等，再添加上分类的功能使之不要过于弱。重量级和轻量级工具同时使用，我们经常访问的信息就存于轻量级别的工具中，空闲之时在重量级工具与轻量级工具之间同步数据。</p></div></div><div id="outline-container-orgheadline97" class="outline-5"><h5 id="orgheadline97"><span class="section-number-5">7.6.10.5</span> 需有体系的信息管理组织方式（GTD与Git）</h5><div class="outline-text-5" id="text-7-6-10-5"><p>便携性意味着功能的减弱，功能强则会减弱便携性。两者综合起来应用，又会涉及到同步和数据移植行的问题。这时候管理信息已经不是工具方面的问题了，而是方法和存储。</p></div><ol class="org-ol"><li><a id="orgheadline91"></a>采用的方式：<br><div class="outline-text-6" id="text-7-6-10-5-1"><dl class="org-dl"><dt>行动管理方面</dt><dd>方法是GTD方法，为所有任务定义好状态。工具则任意款便携、可移植的工具即可。</dd><dt>内容管理方面</dt><dd>原生文本格式方式增强数据移植性；Git分布式管理增强便携安全与版本控制；用现有大型网站托管资料（如github、bitbucket等等）增强集中与同步性。</dd></dl></div></li><li><a id="orgheadline95"></a>数据格式、访问、存储与管理方式<br><div class="outline-text-6" id="text-7-6-10-5-2"><p>工具可以尽量简单，方法选择适合自己的方法，而数据的格式也是一个问题。如果做过软件开发的人，可能会觉得，这有点类似软件中的MVC方法问题（M是数据模型、V是数据访问视图、C是数据控制方式）。</p></div><ol class="org-ol"><li><a id="orgheadline92"></a>数据格式-Orgmode<br><div class="outline-text-7" id="text-7-6-10-5-2-1"><p>为了便于将来环境的切换，数据存储的格式是一个比较重要的内容。</p><dl class="org-dl"><dt>文本格式</dt><dd>实践发现，最通用的数据格式不是.doc、音视频、图片、pdf、或者各类笔记专有数据格式等等，而是文本，文本格式也便于版本控制管理。</dd><dt>标记语言</dt><dd>对于文本格式，xml、html就是文本标记语言，latex也是，但是通用性强了、可阅读性也必不可少，这些文本格式对于非专业人员，几乎是天书般的存在。</dd><dt>轻量级标记语言</dt><dd>各类轻量级的标记语言如markdown、orgmode等等，可以做为数据存储的格式，学习成本也低、而且文本的数据格式也便于直接阅读。</dd><dt>Markdown与Orgmode</dt><dd><p>学习成本太低，便意味着功能的有限，反之亦然。</p><p>markdown的学习成本很低，相对orgmode更流行，但是若用它写复杂的文档，还是有些勉强只能写一些简单的博客性文章；orgmode是这里极力推荐的方式，它可以变得很轻量级，但是如果你多学习，它又能变得非常强大，既能内容管理，又能行动管理，还能导出为其他各种格式远不止于此。</p></dd></dl></div></li><li><a id="orgheadline93"></a>访问方式-工具控<br><div class="outline-text-7" id="text-7-6-10-5-2-2"><p>总结起来，这个阶段，工具不是重点，Emacs、Vim、记事本、任意一款可以编辑的工具都可做为数据访问的方式。</p><p>如果只考虑工具，又不想自己主动耗费精力思考方法，降低学习成本，这个阶段有两个工具建议可用：</p><dl class="org-dl"><dt>行动管理</dt><dd>采用dgt gtd，安卓下的工具，可以导出数据，并且便携记录。</dd><dt>内容管理</dt><dd>仍然采用为知笔记。</dd><dt>做为辅助</dt><dd>对访问速度要求高时，可以用系统上的任意便签工具做为中转。</dd></dl></div></li><li><a id="orgheadline94"></a>管理方式-GTD与分布式版本控制<br><div class="outline-text-7" id="text-7-6-10-5-2-3"><p>方法才是核心，管理方法往往说起来很简单：GTD管理任务，Git分布式管理内容并版本控制，当然肯定也会有其它的方法或者分布式管理。</p></div></li></ol></li><li><a id="orgheadline96"></a>总结<br><div class="outline-text-6" id="text-7-6-10-5-3"><p>总之，如果用最直接的方式来描述一个特定的管理方式，目前而言，我采用的方式是：</p><ul class="org-ul"><li>emacs的扩展性满足了工具控的需要，可以当作任何想到的工具访问数据；</li><li>markdown和orgmode这类文本标记语言相结合，表示数据，使之符合人阅读的原生文本格式，orgmode还能方便转换为各种其它格式；</li><li>任意款分布式版本控制工具（比较流行的是git）可以当作云存储与管理内容的方式;</li><li>gtd方法做为灵魂，做为管理行动的方式（管理数据的组织方式也是诸多行动的一种），</li></ul><p>其它一切都是浮云。</p></div></li></ol></div><div id="outline-container-orgheadline98" class="outline-5"><h5 id="orgheadline98"><span class="section-number-5">7.6.10.6</span> 其它</h5><div class="outline-text-5" id="text-7-6-10-6"><p>前面的过程，其实总结起来，可能是这个样子的：杂乱的信息-任务管理/内容管理。</p><p>当管理达到一定阶段，满足现状的时候，还可能会发生其他的事情，比如，数据、工具、方法都有了，我们要做什么？</p><p>也许，下一步就是目标管理了吧？因为我也听说过SWOT方法、5w1h方法等等，又或许，还需更好的方式在组织这些。</p></div></div></div></div><div id="outline-container-orgheadline64" class="outline-3"><h3 id="orgheadline64"><span class="section-number-3">7.7</span> 参考资料</h3><div class="outline-text-3" id="text-7-7"><p>一些值得参考的一些文章：</p><p><a href="http://www.mifengtd.cn/categories/time-management/" target="_blank" rel="noopener">褪墨・时间管理</a></p><p><a href="http://blog.sina.com.cn/s/blog_6495e9c90101evo7.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_6495e9c90101evo7.html</a></p><p><a href="http://www.mifengtd.cn/articles/gtd-grab-the-destiny.html" target="_blank" rel="noopener">http://www.mifengtd.cn/articles/gtd-grab-the-destiny.html</a></p></div></div></div><div id="outline-container-orgheadline65" class="outline-2"><h2 id="orgheadline65"><span class="section-number-2">8</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[%]</code> <code>[/]</code></h2><div class="outline-text-2" id="text-8"><ul class="org-ul"><li>State "WAIT/FORWARD" from              <span class="timestamp-wrapper"><span class="timestamp">[2016-06-12 日 17:16] </span></span> <br>wait for all done.</li></ul></div><div id="outline-container-orgheadline66" class="outline-3"><h3 id="orgheadline66"><span class="section-number-3">8.1</span> <span class="todo NEXT">NEXT</span> 如何通过orgMobile进行管理？</h3><div class="outline-text-3" id="text-8-1"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-30 三 09:40]</span></span></li></ul></div></div><div id="outline-container-orgheadline67" class="outline-3"><h3 id="orgheadline67"><span class="section-number-3">8.2</span> <span class="todo INBOX">INBOX</span> 回顾的内容，没有完成的可以用链接的方式将任务与回顾相互引用，任务完成之后，可以考虑将其直接集成到回顾中，不用链接，防止过于分散。</h3><div class="outline-text-3" id="text-8-2"><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-05-25 三 10:30]</span></span></p><hr><p>如果过大过复杂的内容，或者没有办法很好的组织的内容，可以用链接的方式对其进行关联。否则就尽量不要使用链接，使用链接的内容，都是没有弄完的内容，弄完之后把链接去掉。</p></div></div></div><br><div id="mypostamble" align="right" style="float:right" class="status">    <table> <tbody> <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Author</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">QuietHeart</td>  </tr><tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Email</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">    <a href="mailto:quiet_heart000@126.com" target="_blank" rel="noopener">quiet_heart000@126.com</a>  </td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Date</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">[2015-11-30 一]</td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Update</td>  <td style="border-style: solid;border-width:1px;border-right:0px;"><2016-06-12 日 17:17:48></2016-06-12></td></tr>    </tbody></table></div><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;style type=&quot;text/css&quot;&gt;
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              
      
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
      <category term="note" scheme="http://0.0.0.0:4000/categories/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>Emacs Orgmode学习笔记</title>
    <link href="http://0.0.0.0:4000/2015/09/11/emacs_orgmode_tips/"/>
    <id>http://0.0.0.0:4000/2015/09/11/emacs_orgmode_tips/</id>
    <published>2015-09-10T16:00:00.000Z</published>
    <updated>2019-09-11T08:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">  .title  { text-align: center;             margin-bottom: .2em; }  .subtitle { text-align: center;              font-size: medium;              font-weight: bold;              margin-top:0; }  .todo   { font-family: monospace; color: red; }  .done   { font-family: monospace; color: green; }  .priority { font-family: monospace; color: orange; }  .tag    { background-color: #eee; font-family: monospace;            padding: 2px; font-size: 80%; font-weight: normal; }  .timestamp { color: #bebebe; }  .timestamp-kwd { color: #5f9ea0; }  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }  .org-center { margin-left: auto; margin-right: auto; text-align: center; }  .underline { text-decoration: underline; }  #postamble p, #preamble p { font-size: 90%; margin: .2em; }  p.verse { margin-left: 3%; }  pre {    border: 1px solid #0c0;    box-shadow: 1px 1px 1px #0e0;    padding: 8pt;    font-family: italic monospace;    color: #C7EDCC;    background-color: #111111;    overflow: auto;    margin: 1.2em;  }  pre.src {    position: relative;    overflow: visible;    padding-top: 1.2em;  }  pre.src:before {    display: none;    position: absolute;    background-color: white;    top: -10px;    right: 10px;    padding: 3px;    border: 1px solid black;  }  pre.src:hover:before { display: inline;}  pre.src-sh:before    { content: 'sh'; }  pre.src-bash:before  { content: 'sh'; }  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }  pre.src-R:before     { content: 'R'; }  pre.src-perl:before  { content: 'Perl'; }  pre.src-java:before  { content: 'Java'; }  pre.src-sql:before   { content: 'SQL'; }  table { border-collapse:collapse; }  caption.t-above { caption-side: top; }  caption.t-bottom { caption-side: bottom; }  td, th { vertical-align:top;  }  th.org-right  { text-align: center;  }  th.org-left   { text-align: center;   }  th.org-center { text-align: center; }  td.org-right  { text-align: right;  }  td.org-left   { text-align: left;   }  td.org-center { text-align: center; }  dt { font-weight: bold; }  .footpara { display: inline; }  .footdef  { margin-bottom: 1em; }  .figure { padding: 1em; }  .figure p { text-align: center; }  .inlinetask {    padding: 10px;    border: 2px solid gray;    margin: 10px;    background: #ffffcc;  }  #org-div-home-and-up   { text-align: right; font-size: 70%; white-space: nowrap; }  .linenr { font-size: smaller }  .code-highlighted { background-color: #ffff00; }  .org-info-js_info-navigation { border-style: none; }  #org-info-js_console-label    { font-size: 10px; font-weight: bold; white-space: nowrap; }  .org-info-js_search-highlight    { background-color: #ffff00; color: #000000; font-weight: bold; }    code {        border:groove #555555;border-width:thin;        background-color: #111111;color: #C7EDCC;    }#table-of-contents {    font-size: 9pt;    position: fixed;    right: 10px;    top: 14em;    margin:0;    padding:0;    border-width:1px;    border-style:solid;    background: #000000;    -webkit-box-shadow: 0 0 1em #777777;    -moz-box-shadow: 0 0 1em #777777;    -webkit-border-bottom-left-radius: 5px;    -moz-border-radius-bottomleft: 5px;    text-align: right;    /* ensure doesn't flow off the screen when expanded */    max-height: 60%;    overflow: auto;     z-index: 200;}#table-of-contents h2 {    font-size: 9pt;    max-width: 8em;    font-weight: normal;    padding-left: 0.5em;    padding-top: 0.05em;    padding-bottom: 0.05em; }#table-of-contents ul {    margin-left: 14pt;     margin-bottom: 10pt;    padding: 0}#table-of-contents li {    padding: 0;    margin: 1px;    list-style: none;}#table-of-contents ul>:first-child {    color: blue;}#table-of-contents #text-table-of-contents {    display: none;    text-align: left;}#table-of-contents:hover #text-table-of-contents {    display: block;    padding: 0.5em;    margin-top: -1.5em; }</style><div id="table-of-contents"><h2>Table of Contents</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 标题与大纲</a><ul><li><a href="#orgheadline2">1.1. 语法</a></li><li><a href="#orgheadline3">1.2. 配置</a><ul><li><a href="#orgheadline4">1.2.1. 调整大纲缩进显示</a></li></ul></li><li><a href="#orgheadline5">1.3. 操作</a></li></ul></li><li><a href="#orgheadline6">2. TODO项目</a><ul><li><a href="#orgheadline7">2.1. 语法</a></li><li><a href="#orgheadline8">2.2. 配置</a></li><li><a href="#orgheadline9">2.3. 操作</a></li></ul></li><li><a href="#orgheadline10">3. 格式</a><ul><li><a href="#orgheadline11">3.1. 段落</a></li><li><a href="#orgheadline12">3.2. 字体</a></li><li><a href="#orgheadline13">3.3. 硬换行</a></li></ul></li><li><a href="#orgheadline14">4. 列表</a><ul><li><a href="#orgheadline15">4.1. 语法</a></li><li><a href="#orgheadline16">4.2. 操作</a></li></ul></li><li><a href="#orgheadline17">5. 表格</a><ul><li><a href="#orgheadline18">5.1. 语法</a></li><li><a href="#orgheadline19">5.2. 操作</a></li></ul></li><li><a href="#orgheadline20">6. 块标记</a><ul><li><a href="#orgheadline21">6.1. 语法</a></li><li><a href="#orgheadline22">6.2. 操作</a></li></ul></li><li><a href="#orgheadline23">7. 链接</a><ul><li><a href="#orgheadline24">7.1. 语法</a></li><li><a href="#orgheadline25">7.2. 配置</a></li><li><a href="#orgheadline26">7.3. 操作</a></li></ul></li><li><a href="#orgheadline27">8. 时间戳</a><ul><li><a href="#orgheadline28">8.1. <span class="todo nilNEXT">NEXT</span> 语法</a></li><li><a href="#orgheadline29">8.2. 操作</a></li></ul></li><li><a href="#orgheadline30">9. 标签</a><ul><li><a href="#orgheadline31">9.1. 语法</a></li><li><a href="#orgheadline32">9.2. 配置</a></li><li><a href="#orgheadline33">9.3. 操作</a></li></ul></li><li><a href="#orgheadline34">10. Capture-Refile-Archive</a><ul><li><a href="#orgheadline35">10.1. 概念</a></li><li><a href="#orgheadline36">10.2. 配置</a><ul><li><a href="#orgheadline37">10.2.1. Capture的配置</a></li><li><a href="#orgheadline38">10.2.2. Refile的配置</a></li></ul></li><li><a href="#orgheadline39">10.3. 操作</a></li></ul></li><li><a href="#orgheadline40">11. Agenda</a><ul><li><a href="#orgheadline41">11.1. 操作</a><ul><li><a href="#orgheadline42">11.1.1. 交互操作</a></li><li><a href="#orgheadline43">11.1.2. 交互命令：</a></li></ul></li></ul></li><li><a href="#orgheadline44">12. 导出</a><ul><li><a href="#orgheadline45">12.1. 操作</a></li></ul></li><li><a href="#orgheadline46">13. 其它</a><ul><li><a href="#orgheadline47">13.1. 建议</a><ul><li><a href="#orgheadline48">13.1.1. 列表与标题</a></li><li><a href="#orgheadline49">13.1.2. 列表与换行</a></li></ul></li><li><a href="#orgheadline50">13.2. 感想</a></li><li><a href="#orgheadline51">13.3. 注意</a></li><li><a href="#orgheadline52">13.4. orgmode与mobile org整合</a><ul><li><a href="#orgheadline53">13.4.1. 配置</a></li><li><a href="#orgheadline54">13.4.2. 原理</a></li><li><a href="#orgheadline55">13.4.3. 同步操作</a></li><li><a href="#orgheadline56">13.4.4. 使用举例</a></li><li><a href="#orgheadline57">13.4.5. 其它</a></li></ul></li><li><a href="#orgheadline58">13.5. orgmode与jekyll的结合</a><ul><li><a href="#orgheadline59">13.5.1. 部署</a></li><li><a href="#orgheadline60">13.5.2. 配置</a></li><li><a href="#orgheadline61">13.5.3. 被导出文件与jekyll的集成</a></li><li><a href="#orgheadline62">13.5.4. 为待发布文章添加兼容jekyll显示的信息</a></li><li><a href="#orgheadline63">13.5.5. 发布命令</a></li><li><a href="#orgheadline64">13.5.6. 其他</a></li></ul></li><li><a href="#orgheadline65">13.6. Misc collection</a><ul><li><a href="#orgheadline66">13.6.1. &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 14:55] </span></span> Agenda view------</a></li></ul></li></ul></li><li><a href="#orgheadline67">14. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[35/111]</code>(<code>[31%]</code>)</a><ul><li><a href="#orgheadline68">14.1. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> 如何隐藏"标题星星"？</a></li><li><a href="#orgheadline69">14.2. <span class="todo nilLATER">LATER</span> 搜索子树相关</a></li><li><a href="#orgheadline70">14.3. <span class="done nilDONE">DONE</span> 各个级别标题列表如何缩进？</a></li><li><a href="#orgheadline71">14.4. <span class="done nilDONE">DONE</span> 各个级别列表标题中的内容段落如何缩进？</a></li><li><a href="#orgheadline72">14.5. <span class="todo nilLATER">LATER</span> 如何显示图片</a></li><li><a href="#orgheadline73">14.6. <span class="done nilDONE">DONE</span> 如何删除标题或者项目以及子树下的内容？</a></li><li><a href="#orgheadline74">14.7. <span class="done nilDONE">DONE</span> 如何链接文件和位置之类的？</a></li><li><a href="#orgheadline75">14.8. <span class="done nilDONE">DONE</span> 如何行内转义引用?</a></li><li><a href="#orgheadline76">14.9. <span class="done nilDONE">DONE</span> 如何设置启动时的自动折叠？</a></li><li><a href="#orgheadline77">14.10. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> 如何预览效果？</a></li><li><a href="#orgheadline78">14.11. <span class="done nilDONE">DONE</span> 标签的预定义</a></li><li><a href="#orgheadline79">14.12. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> 如何自动对齐ORGMODE文件的格式？</a></li><li><a href="#orgheadline80">14.13. <span class="done nilDONE">DONE</span> 如何在标题间跳转？</a></li><li><a href="#orgheadline81">14.14. <span class="done nilDONE">DONE</span> 如何缩进列表段落？</a></li><li><a href="#orgheadline82">14.15. <span class="todo nilLATER">LATER</span> 貌似自动刷新功能还是没有完全实现</a></li><li><a href="#orgheadline83">14.16. <span class="done nilDONE">DONE</span> 如何增加状态？</a></li><li><a href="#orgheadline84">14.17. <span class="done nilDONE">DONE</span> 如何定制状态的各种属性？</a></li><li><a href="#orgheadline85">14.18. <span class="done nilDONE">DONE</span> 如何设置和进行TODO的状态快捷切换？</a></li><li><a href="#orgheadline86">14.19. <span class="done nilDONE">DONE</span> 如何按状态搜索TODO项目？</a></li><li><a href="#orgheadline87">14.20. <span class="todo nilLATER">LATER</span> 如何实现代码原样引用？</a></li><li><a href="#orgheadline88">14.21. <span class="done nilDONE">DONE</span> 配置折叠状态编辑的动作</a></li><li><a href="#orgheadline89">14.22. <span class="todo nilLATER">LATER</span> 按照TAG进行搜索</a></li><li><a href="#orgheadline90">14.23. <span class="todo nilLATER">LATER</span> 导出与发布</a></li><li><a href="#orgheadline91">14.24. <span class="done nilDONE">DONE</span> 如何调整大纲缩进显示</a></li><li><a href="#orgheadline92">14.25. <span class="done nilDONE">DONE</span> 如何写行内引用的文字，类似markdown中的``。</a></li><li><a href="#orgheadline93">14.26. <span class="done nilDONE">DONE</span> 如何确保硬换行</a></li><li><a href="#orgheadline94">14.27. <span class="done nilDONE">DONE</span> 如何保存一个与文件位置无关的链接？ <code>C-c l</code> 相关参数？</a></li><li><a href="#orgheadline95">14.28. <span class="done nilDONE">DONE</span> 如何简化列表标题等文档复杂度</a></li><li><a href="#orgheadline96">14.29. <span class="done nilCANCEL">CANCEL</span> 如何定制插入的时间戳格式？</a></li><li><a href="#orgheadline97">14.30. <span class="todo nilLATER">LATER</span> 如何在Refile的时候新建一个标题？org-refile-allow-creating-parent-nodes?</a></li><li><a href="#orgheadline98">14.31. <span class="done nilDONE">DONE</span> 恢复到默认的大纲内容模式还不太好用</a></li><li><a href="#orgheadline99">14.32. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 是否可以org-agenda-files只使用一个文件，对应文件中列出所有agenda文件？</a></li><li><a href="#orgheadline100">14.33. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 如何设置问题Open的时间？</a></li><li><a href="#orgheadline101">14.34. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 确认一下agenda的配置文件是否可以配置目录？</a></li><li><a href="#orgheadline102">14.35. <span class="todo nilLATER">LATER</span> 考虑使用F1-n设置自己日常使用的自定义快捷方式，并且保证不要与其它冲突。</a></li><li><a href="#orgheadline103">14.36. <span class="todo nilLATER">LATER</span> 标题如何添加序号？</a></li><li><a href="#orgheadline104">14.37. <span class="todo nilLATER">LATER</span> 如何直接插入一个子标题？</a></li><li><a href="#orgheadline105">14.38. <span class="done nilDONE">DONE</span> 参考并整理结构编辑的相关操作：</a></li><li><a href="#orgheadline106">14.39. <span class="done nilDONE">DONE</span> 如何对一个子树进行导出？</a></li><li><a href="#orgheadline107">14.40. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> 注意，断行要用'\\'，要么就空白一行。</a></li><li><a href="#orgheadline108">14.41. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 如何解决输入下划线的时候，自动转换为下标？（想要不转换）</a></li><li><a href="#orgheadline109">14.42. <span class="todo nilLATER">LATER</span> orgmode refile如何创建新的文件和条目，如何定位设置之外的路径</a></li><li><a href="#orgheadline110">14.43. <span class="done nilDONE">DONE</span> orgmode如何只对一个指定的子标题生成html等导出文件？</a></li><li><a href="#orgheadline111">14.44. <span class="done nilDONE">DONE</span> 如何在capture模板中将时间戳设置为非活跃时间戳，以减少Agenda的显示负担？</a></li><li><a href="#orgheadline112">14.45. <span class="done nilDONE">DONE</span> orgmode如何插入带有时间（而不仅仅是日期）的时间戳？</a></li><li><a href="#orgheadline113">14.46. <span class="todo nilLATER">LATER</span> 整理一下emacs_orgmodeusage的文档格式</a></li><li><a href="#orgheadline114">14.47. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> 如何在活跃与非活跃时间戳之间进行切换？</a></li><li><a href="#orgheadline115">14.48. <span class="todo nilNEXT">NEXT</span> 如何打开链接的时候不新开一个窗口？</a></li><li><a href="#orgheadline116">14.49. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> orgmode 的BEGIN_SRC总是导出错误，提示输入的语言参数，如何确定有哪些语言参数？</a></li><li><a href="#orgheadline117">14.50. <span class="todo nilLATER">LATER</span> 如果Agenda对应TODO状态发生变化，如何刷新Agenda view?</a></li><li><a href="#orgheadline118">14.51. <span class="done nilDONE">DONE</span> orgmode有没有离线帮助手册在emacs中直接使用？</a></li><li><a href="#orgheadline119">14.52. <span class="todo nilLATER">LATER</span> 如何自由切换orgmode的活跃和非活跃时间戳？</a></li><li><a href="#orgheadline120">14.53. <span class="todo nilLATER">LATER</span> 如何在orgmode中调整已有列表条目的缩进级别？</a></li><li><a href="#orgheadline121">14.54. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> Orgmode表格格式如何自动添加分割横线？为何导出时没有列分割？</a></li><li><a href="#orgheadline122">14.55. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> Agenda view不折行？</a></li><li><a href="#orgheadline123">14.56. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> 如何格式化块？如删除块？</a></li><li><a href="#orgheadline124">14.57. <span class="todo nilLATER">LATER</span> 如何自动触发状态变化？</a></li><li><a href="#orgheadline125">14.58. <span class="done nilDONE">DONE</span> orgmode与mobile org整合</a></li><li><a href="#orgheadline126">14.59. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> Orgmode refile如何到特定的标题上而非仅仅追加或者插入？</a></li><li><a href="#orgheadline127">14.60. <span class="done nilCANCEL">CANCEL</span> orgmode attachment的内容需要看一下</a></li><li><a href="#orgheadline128">14.61. <span class="todo nilNEXT">NEXT</span> 如何在orgmode中打开链接的时候不会自动新开窗口而是使用已有窗口？</a></li><li><a href="#orgheadline129">14.62. <span class="todo nilLATER">LATER</span> orgmode 如何修改时间戳？直接编辑？</a></li><li><a href="#orgheadline130">14.63. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> agenda如何不扫描有些状态，如done、cancel、maybe/future</a></li><li><a href="#orgheadline131">14.64. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> orgmode的块是否可以嵌套？比如quote块内是否可以quote？</a></li><li><a href="#orgheadline132">14.65. <span class="todo nilLATER">LATER</span> orgmode如何在导出子树的时候自动以标题命名？</a></li><li><a href="#orgheadline133">14.66. <span class="todo nilLATER">LATER</span> orgmode如何指定导出的路径和文件名称？</a></li><li><a href="#orgheadline134">14.67. <span class="todo nilLATER">LATER</span> orgmode光标如何定位到下一个链接？</a></li><li><a href="#orgheadline135">14.68. <span class="todo nilLATER">LATER</span> orgmode如何实现任务自动触发定时切换以及refile</a></li><li><a href="#orgheadline136">14.69. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 列表与换行</a></li><li><a href="#orgheadline137">14.70. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> orgmode建议</a></li><li><a href="#orgheadline138">14.71. <span class="todo nilLATER">LATER</span> Orgmode中checkbox和header也可以结合使用</a></li><li><a href="#orgheadline139">14.72. <span class="todo nilLATER">LATER</span> 确认一下orgmode中的引用块相关细节，例如begin example和begin quote之间的区别</a></li><li><a href="#orgheadline140">14.73. <span class="done nilCANCEL">CANCEL</span> 考虑orgmode中，是否应该每一个状态添加!，将处理信息和状态信息集成。</a></li><li><a href="#orgheadline141">14.74. <span class="todo nilLATER">LATER</span> orgmode 如何递归折叠光标所在节点？</a></li><li><a href="#orgheadline142">14.75. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> emacs markdown 导出</a></li><li><a href="#orgheadline143">14.76. <span class="done nilDONE">DONE</span> orgmode与jekyll的结合</a></li><li><a href="#orgheadline144">14.77. <span class="todo nilLATER">LATER</span> orgmode如何输入成块的原样文字而不解释、缩进之类的？</a></li><li><a href="#orgheadline145">14.78. <span class="todo nilLATER">LATER</span> 为什么orgmode定义好的refile如果是单个文件，那么这个文件内容会自动变化？</a></li><li><a href="#orgheadline146">14.79. <span class="todo nilLATER">LATER</span> Jekyll与orgmode结合的问题</a></li><li><a href="#orgheadline147">14.80. <span class="todo nilNEXT">NEXT</span> 如何为orgmode导出添加作者信息？</a></li><li><a href="#orgheadline148">14.81. <span class="todo nilLATER">LATER</span> emacs如何导出的时候不缓存上次修改差异而直接强制导出？</a></li><li><a href="#orgheadline149">14.82. <span class="done nilDONE">DONE</span> 是否应该为取消的项目在切换到取消之前添加备注，类似wait/forward，指明为什么取消？</a></li><li><a href="#orgheadline150">14.83. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> orgmode多文件文档</a></li><li><a href="#orgheadline151">14.84. <span class="todo nilLATER">LATER</span> orgmode中导出时的include关键字所基于的路径能否配置？</a></li><li><a href="#orgheadline152">14.85. <span class="todo nilLATER">LATER</span> 如何在orgmode中时间戳中选择特定的时间插入？需要知道相关的指令和按键，而非手动修改。</a></li><li><a href="#orgheadline153">14.86. <span class="todo nilNEXT">NEXT</span> orgmode导出utf8问题</a></li><li><a href="#orgheadline154">14.87. <span class="done nilCANCEL">CANCEL</span> orgmode sub task and summary.</a></li><li><a href="#orgheadline155">14.88. <span class="done nilDONE">DONE</span> 切换和设置优先级</a></li><li><a href="#orgheadline156">14.89. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> archive</a><ul><li><a href="#orgheadline157">14.89.1. 配置</a></li><li><a href="#orgheadline158">14.89.2. 操作</a></li><li><a href="#orgheadline159">14.89.3. 举例</a></li></ul></li><li><a href="#orgheadline160">14.90. <span class="todo nilNEXT">NEXT</span> orgmode中为何example块中的标题还遵从orgmode的格式？</a></li><li><a href="#orgheadline161">14.91. <span class="todo nilNEXT">NEXT</span> orgmode导出为utf8报告错误</a></li><li><a href="#orgheadline162">14.92. <span class="todo nilLATER">LATER</span> orgmode在引用块中缩进的标题问题</a></li><li><a href="#orgheadline163">14.93. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> orgmode导出markdown有太多的引用标记，如何尽可能原样展示而非很多的'style'类似的东西？</a></li><li><a href="#orgheadline164">14.94. <span class="todo nilLATER">LATER</span> orgmode 番茄钟、时间记录</a></li><li><a href="#orgheadline165">14.95. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> orgmode为什么refile 目标会跟踪软链接到其他目录中？</a></li><li><a href="#orgheadline166">14.96. <span class="todo nilLATER">LATER</span> 属性</a><ul><li><a href="#orgheadline167">14.96.1. 操作</a></li></ul></li><li><a href="#orgheadline168">14.97. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> ormode项目管理</a></li><li><a href="#orgheadline169">14.98. <span class="done nilDONE">DONE</span> orgmode考虑是否应该将状态文件以'_' 做为前缀，便于angenda中一目了然不和其他文件混淆？</a></li><li><a href="#orgheadline170">14.99. <span class="todo nilNEXT">NEXT</span> orgmode应用聚合有哪些场景？ <code>[2/7]</code></a></li><li><a href="#orgheadline171">14.100. <span class="todo nilLATER">LATER</span> orgmode记时功能可以提高集中力</a></li><li><a href="#orgheadline172">14.101. <span class="todo nilNEXT">NEXT</span> Orgmode如何官方发问？</a><ul><li><a href="#orgheadline173">14.101.1. 订阅邮件列表</a></li><li><a href="#orgheadline174">14.101.2. 参考</a></li></ul></li><li><a href="#orgheadline175">14.102. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> Ascii art</a></li><li><a href="#orgheadline176">14.103. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> artist mode in emacs</a></li><li><a href="#orgheadline177">14.104. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> Emacs中的plantuml配置如何与ascii art格式图形结合？</a></li><li><a href="#orgheadline178">14.105. <span class="todo nilLATER">LATER</span> orgmode画图</a></li><li><a href="#orgheadline179">14.106. <span class="todo nilLATER">LATER</span> pdflatex for orgmode</a></li><li><a href="#orgheadline180">14.107. <span class="todo nilNEXT">NEXT</span> mobileorg的加密功能，可以防止隐私的泄漏；orgmode的加密功能既能管理工作又能防止工作隐私泄漏。</a></li><li><a href="#orgheadline181">14.108. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> orgmode中图片链接导出之时如何不是文字链接而直接图片？</a></li><li><a href="#orgheadline182">14.109. <span class="todo nilLATER">LATER</span> orgmode表格导出之后，文本或者html没有竖线只有横线</a></li><li><a href="#orgheadline183">14.110. <span class="todo nilNEXT">NEXT</span> orgmode导出文章pdf问题</a></li><li><a href="#orgheadline184">14.111. <span class="todo nilLATER">LATER</span> orgmode中搜索相关命令的整理</a></li></ul></li><li><a href="#orgheadline185">15. 参考资料：</a></li></ul></div></div><p>这里是学习Emacs Orgmode过程记录的笔记，可供日后查阅以及参考。</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 标题与大纲</h2><div class="outline-text-2" id="text-1"></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> 语法</h3><div class="outline-text-3" id="text-1-1"><p>一级标题用"* "，二级标题用"** "，以此类推，最多10级，注意'*'后面的空格。</p></div></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">1.2</span> 配置</h3><div class="outline-text-3" id="text-1-2"><p><a id="orgtarget1"></a></p><ul class="org-ul"><li><p>配置默认启动的折叠方式</p><p>如果对全局起作用，需要设置org-startup-folded变量，设置值可参见 <code>C-h v org-startup-folded</code> ，在emacs启动配置中添加如下类似值：</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;set initial folded state.(setq org-startup-folded 'content)</pre></div><p>如果仅对一个文件起作用，则为文件添加如下类似元数据：</p><pre class="example">#+STARTUP: overview#+STARTUP: content#+STARTUP: showall#+STARTUP: showeverything</pre></li><li><p>配置折叠状态下的编辑动作</p><p>实践发现，在折叠的时候删除或者追加，有些影响可能会在展开的时候才能看见。比如删除一个字符等等，所以不知道的情况下建议不要在折叠的时候删除字符。但是我们可以添加配置来修改这时的行为。配置变量是org-catch-invisible-edits，可以通过查看 <code>C-h v org-catch-invisible-edit</code> 来查看设置的值含义。</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;set action when edit invisible content(setq org-catch-invisible-edits 'show-and-error)</pre></div></li></ul></div><div id="outline-container-orgheadline4" class="outline-4"><h4 id="orgheadline4"><span class="section-number-4">1.2.1</span> 调整大纲缩进显示</h4><div class="outline-text-4" id="text-1-2-1"><ul class="org-ul"><li>默认显示缩进好的大纲内容<ul class="org-ul"><li><p>加入如下配置</p><div class="org-src-container"><pre class="src src-emacs-lisp">(setq org-startup-indented t)</pre></div></li><li><p>或者加入如下选项到文件使得只在当前文件生效：</p><div class="org-src-container"><pre class="src src-emacs-lisp">#+STARTUP: indent</pre></div></li></ul></li></ul></div></div></div><div id="outline-container-orgheadline5" class="outline-3"><h3 id="orgheadline5"><a id="ID-daccea43-eb76-4ea2-90b2-e3f4beb243aa"></a><span class="section-number-3">1.3</span> 操作</h3><div class="outline-text-3" id="text-1-3"><ul class="org-ul"><li><p>展开、折叠所有章节</p><p>输入 <code>S+Tab</code></p></li><li><p>对光标所在章节进行展开、折叠</p><p>输入 <code>Tab</code></p></li><li><p>对当前子树标题使用大纲方式显示</p><p>输入 <code>C-c C-k</code></p></li><li><p>切换到初始的浏览状态，也就是org-startup-folded设定的状态。</p><p>输入 <code>C-u C-u TAB</code></p></li><li><p>显示全部，包括Drawers。</p><p>输入 <code>C-u C-u C-u TAB</code></p></li><li><p>跳转至上级标题</p><p>输入 <code>C-c C-u</code></p></li><li><p>跳转至上一个/下一个标题（无视级别）</p><p>输入 <code>C-c C-p/n</code></p></li><li><p>跳转至上一个/下一个标题（同级别）</p><p>输入 <code>C-c C-f/b</code></p></li><li><p>当前标题升级/降级，不包括子树</p><p>输入 <code>M-LEFT/RIGHT</code></p></li><li><p>当前标题以及子树升级/降级</p><p>输入 <code>M-S-LEFT/RIGHT</code></p></li><li><p>当前标题上移下移??</p><p>输入 <code>M-UP/DOWN</code></p></li><li><p>当前子树上移下移??</p><p>输入 <code>M-S-UP/DOWN</code></p></li><li><p>在光标处插入当前级别标题</p><p>输入 <code>M-Ret</code></p><p>光标在文本中，则将内容一分为二，换行后插入同级别标题;在空白则在之下插入当前所在级别标题。</p></li><li><p>在当前标题子树后插入同级别标题</p><p>输入 <code>C-Ret</code> </p></li><li><p>切换到大纲浏览状态</p><p>输入 <code>C-c C-j</code> </p><p>进入大纲浏览状态之后，状态栏有提示，右侧也会新开一个buffer提示有特殊的大纲浏览状态帮助命令。例如：</p><ul class="org-ul"><li><p>切换上一条/下一条标题</p><p>输入 <code>Up/Down</code></p></li><li><p>直接进入相应标题并退出大纲浏览状态</p><p>输入 <code>Ret</code></p></li><li><p>搜索</p><p>输入 <code>/</code></p></li><li><p>在某标题上循环切换视图</p><p>输入 <code>Tab</code></p></li><li><p>退出大纲浏览视图</p><p>输入 <code>C-g</code></p></li></ul><p>另外直接输入文字也可进行搜索。</p></li><li><p>切换标题和正文状态</p><p>输入 <code>C-c *</code></p><p>输入之后，会进行标题切换，将文本、区域、或条目转换成相应位置下的子标题，或反之。</p></li><li><p>选择当前Entry</p><p>输入 <code>M-h</code></p><p>输入之后，会高亮显示当前光标所在entry的内容。例如光标在标题上，则高亮标题以及子树内容，持续按 <code>M-h</code> 会继续以同级别下entry为单位，扩展选择范围，这里的entry可以是段落、标题、列表项等等，取决于光标所停留的位置。</p></li><li><p>选择当前光标所处标题以及子树</p><p>输入 <code>C-c @</code></p><p>输入之后，会高亮显示当前光标所在子树的内容，不论光标是否停留在标题上。</p></li><li><p>删除当前所在标题及子树</p><p>输入 <code>C-c C-x C-w</code></p><p>输入之后，无论光标是否在标题上，都会将其所在标题连同子树删除（剪切）。</p></li><li><p>复制当前所在标题及子树</p><p>输入 <code>C-c C-x M-w</code></p><p>输入之后，无论光标是否在标题上，都会将其所在标题连同子树复制。</p></li></ul></div></div></div><div id="outline-container-orgheadline6" class="outline-2"><h2 id="orgheadline6"><a id="ID-da6fcb4d-15d1-4be9-8495-ed5453d209c1"></a><span class="section-number-2">2</span> TODO项目</h2><div class="outline-text-2" id="text-2"></div><div id="outline-container-orgheadline7" class="outline-3"><h3 id="orgheadline7"><span class="section-number-3">2.1</span> 语法</h3><div class="outline-text-3" id="text-2-1"><ul class="org-ul"><li><p>TODO是一种包含状态的特殊标题</p><p>在标题标记后面加上相应状态名，便成为TODO项目。状态默认为TODO和DONE，可以自行配置。</p><pre class="example">* TODO 这是一个TODO项目** TODO 这是TODO的子项目</pre></li><li><p>带有统计子项目的TODO项目</p><p>在一个待办标题中添加子待办标题，然后在待办标题中添加 <code>[%]</code> 或者 <code>[%]</code> 。 每当子标题更新时，父标题上面的相应比例会自动统计变化，如果强制刷新，则在父标题相应的比例标记上输入 <code>C-c C-c</code> 。</p><pre class="example">* TODO 这是一个统计子项的TODO项目 [0/2]** TODO 这是TODO的子项目1** TODO 这是TODO的子项目2</pre><p>当然这样也行：</p><pre class="example">* TODO 这是一个统计子项的TODO项目 [0/2] ([0%])** TODO 这是TODO的子项目1** TODO 这是TODO的子项目2</pre></li></ul></div></div><div id="outline-container-orgheadline8" class="outline-3"><h3 id="orgheadline8"><a id="ID-3e265587-330e-4452-ac13-9cfd1c7da3f2"></a><span class="section-number-3">2.2</span> 配置</h3><div class="outline-text-3" id="text-2-2"><ul class="org-ul"><li><p>增加TODO状态</p><p>在配置文件中加入类似如下代码：</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;set status for TODO.(setq org-todo-keywords     '((sequence "INBOX" "NEXT" "LATER" "WAIT/FORWARD" "MAYBE/FUTURE" "|" "CANCEL" "DONE")))</pre></div></li><li><p>配置状态颜色</p><p>通过org-todo-keyword-faces的设置实现，添加内容如下</p><div class="org-src-container"><pre class="src src-emacs-lisp">;; color for todo keywords(setq org-todo-keyword-faces '(("INBOX" . (:foreground "blue" :weight bold)) ("NEXT" . org-warning)("LATER" . "yellow")("WAIT/FORWARD" . "blue")("MAYBE/FUTURE" . "purple")("DONE" . "green")("CANCEL" . "grey")))</pre></div></li><li><p>配置状态快捷切换键</p><p>通过定义状态时将快捷按键放在状态后面，用‘（）’括起来，添加内容如下：</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;set status for TODO.(setq org-todo-keywords '((sequence                          "INBOX"                         "NEXT(n)"                         "LATER(l)"                         "WAIT/FORWARD(w)"                         "MAYBE/FUTURE(m)"                         "|" "CANCEL(c)" "DONE(d)"                         )) )</pre></div></li><li><p>配置状态切换的跟踪时间戳</p><p>当TODO列表切换到结束状态时，会自动为其添加一个结束时候的时间戳（转变为非结束状态时会将其移除）。</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;add timestamp when todo change to done.(setq org-log-done 'time)</pre></div></li><li>配置优先级颜色和内容</li></ul><p>设置如下：</p><div class="org-src-container"><pre class="src src-elisp">;;set priority(setq org-highest-priority ?A)(setq org-lowest-priority ?D)(setq org-default-priority ?A)(setq org-priority-faces '(                           (?A . org-warning)                           (?B . (:background "DodgerBlue" :foreground "black" :weight bold))                            (?C . (:foreground "SkyBlue" :weight bold))                           (?D . (:foreground "DodgerBlue" :weight bold))                            ))</pre></div></div></div><div id="outline-container-orgheadline9" class="outline-3"><h3 id="orgheadline9"><a id="ID-183494fa-7e40-401b-8196-7d5422b208cd"></a><span class="section-number-3">2.3</span> 操作</h3><div class="outline-text-3" id="text-2-3"><p>TODO项目相关操作：</p><ul class="org-ul"><li><p><code>M-S-Ret</code></p><p>当前位置插入TODO项目，默认状态和上一条统计TODO状态一样</p></li><li><code>C-S-Ret</code>   当前级别子树后面插入TODO项目</li><li><p><code>C-c C-t</code> </p><p>当前所在TODO项目状态切换(不一定要在TODO标题上面)</p><p>默认状态下，循环切换次序是TODO-&gt;Done-&gt;普通标题（只有*）。</p></li><li><p><code>S-RIGHT/S-LEFT</code> </p><p>当前所处TODO标题上进行状态切换</p><p>默认状态下，循环切换次序是：TODO-&gt;DONE-&gt;普通标题</p></li><li><p><code>C-c</code> </p><p>修改优先级（包括A,B,C三个级别，不一定在TODO标题上面）</p></li><li><p><code>S-UP/S-DOWN</code> </p><p>切换优先级</p><p>默认次序是A-&gt;B-&gt;C-&gt;无。</p></li><li><p><code>C-u C-c C-t</code> </p><p>快捷切换状态，输入后会提示你要输入的状态，可以支持Tab补全，可以用快捷按键替代。</p></li><li><p>刷新子项目完成情况统计</p><p>光标停留在 <code>[%]</code> 或者 <code>[%]</code> 之上，输入 <code>C-c C-c</code></p></li></ul></div></div></div><div id="outline-container-orgheadline10" class="outline-2"><h2 id="orgheadline10"><span class="section-number-2">3</span> 格式</h2><div class="outline-text-2" id="text-3"><p><a id="orgtarget2"></a></p></div><div id="outline-container-orgheadline11" class="outline-3"><h3 id="orgheadline11"><span class="section-number-3">3.1</span> 段落</h3><div class="outline-text-3" id="text-3-1"><p>一个独立段落需要段落之上有一个空行。如果没有空行则上一段的换行符号自动变成空格。如果强制换行而不用空行则在行尾输入 <code>\\</code> 。</p></div></div><div id="outline-container-orgheadline12" class="outline-3"><h3 id="orgheadline12"><span class="section-number-3">3.2</span> 字体</h3><div class="outline-text-3" id="text-3-2"><p>字体格式一般会采用特定标记来实现，标记界限周围要和其他字符隔开，不能紧邻其他字符。</p><pre class="example">*粗体*+删除线+_下划线_=等宽= 或 ~等宽~ /斜体/</pre><p>注意，等宽字体可以做为行内代码引用使用。例如： <code>input</code></p></div></div><div id="outline-container-orgheadline13" class="outline-3"><h3 id="orgheadline13"><a id="ID-ac2b22e9-eed3-4ae2-a34d-b9bb3bb3a8e1"></a><span class="section-number-3">3.3</span> 硬换行</h3><div class="outline-text-3" id="text-3-3"><p>注意，列表内或者其他部分，非段落的硬换行需要将相应行尾插入 <code>\\</code> ，否则就需要用空行来另起一段落。直接换行会在输出特定格式的时候直接变成一个空白。</p></div></div></div><div id="outline-container-orgheadline14" class="outline-2"><h2 id="orgheadline14"><span class="section-number-2">4</span> 列表</h2><div class="outline-text-2" id="text-4"></div><div id="outline-container-orgheadline15" class="outline-3"><h3 id="orgheadline15"><span class="section-number-3">4.1</span> 语法</h3><div class="outline-text-3" id="text-4-1"><p>Org 能够识别有序列表、无序列表和描述列表。</p><p>无序列表项以‘-’、‘+’或者‘*‘开头。</p><p>有序列表项以‘1.’或者‘1)’开头。</p><p>描述列表用‘::’将项和描述分开。</p><p>有序列表和无序列表都以缩进表示层级。只要对齐缩进，不管是换行还是分块都认为是处于当前列表项。同一列表中的项的第一行必须缩进相同程度。当下一行的缩进与列表项的的开头的符号或者数字相同或者更小时，这一项就结束了。当所有的项都关上时，或者后面有两个空行时，列表就结束了。</p><p>例如：</p><pre class="example">+ 列表如何处理缩进  这样处理  - 子列表    子列表缩进    * 子子列表      子子列表缩进内容，一般而言，尽量不用'*'做为列表的项目    子列表内容  列表内容</pre><p>总之，列表项下的内容，如果属于该列表项，那么就将其缩进成大于该列表项首行的标号再输入相应文字。</p><p>另外，某一列表可以带有checkbox成为任务列表，实际就是在列表项开始加入一对中间有空格的方括号[ ]。任务列表可以有子任务，如果想要显示任务的完成情况计算总进度，只需要在总任务后面添加一对方括号，里面加上%或/ 如<code>[%]</code>,<code>[/]</code>。</p></div></div><div id="outline-container-orgheadline16" class="outline-3"><h3 id="orgheadline16"><a id="ID-756f1e0d-bba3-4081-bc4b-3859d16e266e"></a><span class="section-number-3">4.2</span> 操作</h3><div class="outline-text-3" id="text-4-2"><ul class="org-ul"><li><code>M-RET</code> 插入同级列表项</li><li><code>C-RET</code> 当前子树尾部插入同级别列表项</li><li><code>M-S-RET</code> 插入有 checkbox的同级列表项</li><li><code>C-c C-c</code> 改变 checkbox状态</li><li><code>C-c -</code> 更换列表标记，如果当前项不是列表，会被转化成列表。</li><li><code>S-LEFT/RIGHT</code> 更换列表标记，类似 <code>C-c -</code> 。</li><li><code>M-left/right</code> 改变列表项层级关系，不包括子项</li><li><code>M-S-left/right</code> 改变列表项层级关系，包括子项构成的子树</li><li><code>M-up/dowm</code> 上下移动列表项</li><li><p>=TAB（新的空的列表条目中） 调整缩进级别</p><p>如果新的条目中还没有文字，TAB 会调整到合适的级别。比如，我们在一个列表下新开一空行，然后TAB，这样之后敲入的内容将在相应的缩进之中（实践发现，如果Tab之前敲入内容了，那么Tab不会缩进）。如果列表项下事先已经有了未缩进的内容（即缩进级别和列表项目标号一样），那么该内容应该不属于相应列表项之内，如果逻辑上让其属于列表项，需要将其缩进。缩进的方法不是直接在相应位置或者行敲 <code>TAB</code> ，有两种方法将这部分内容调整缩进使之属于列表项：</p><ol class="org-ol"><li>在内容前插入一空行，然后空行内敲入 <code>TAB</code> ，然后空行尾 <code>DEL</code> 或 <code>C-k</code> 将空行下的内容自动‘拉上来’实现缩进。</li></ol><p>2）在相应内容上插入一个 <code>SPC</code> ，然后再键入 =TAB=。</p><p>注意，以上缩进方式缩进的级别自动和上一行缩进成同样级别。</p></li></ul></div></div></div><div id="outline-container-orgheadline17" class="outline-2"><h2 id="orgheadline17"><span class="section-number-2">5</span> 表格</h2><div class="outline-text-2" id="text-5"></div><div id="outline-container-orgheadline18" class="outline-3"><h3 id="orgheadline18"><span class="section-number-3">5.1</span> 语法</h3></div><div id="outline-container-orgheadline19" class="outline-3"><h3 id="orgheadline19"><span class="section-number-3">5.2</span> 操作</h3><div class="outline-text-3" id="text-5-2"><ul class="org-ul"><li><p>输入表格</p><p>需要输入表头如 <code>|Name|Pone|Age</code> 之后，按C-c RET,就可以生成整个表格的结构(也可输入Tab调整)。</p></li><li><p>输入表格分割线</p><p>输入 <code>|-</code> 之后，按C-c RET,就可以生成整个表格的结构(也可输入Tab调整)。</p></li><li><p>创建表格</p><p>输入 <code>C-c |</code> ，会提示生成指定行列的表格。</p></li><li><p>在下一行创建表格分割线</p><p>在当前表格中输入 <code>C-c -</code> 。</p></li><li><p>跳转下一项</p><p>输入 <code>TAB</code> 可以自动调整表格对齐并且跳转到下一栏，如果是一行末则新开一行并跳入新行第一栏。</p><p>输入之后，产生类似如下表格：</p><table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"><colgroup><col class="org-left"></colgroup><tbody><tr><td class="org-left">te</td></tr><tr><td class="org-left">&#xa0;</td></tr></tbody></table></li></ul><ul class="org-ul"><li><p>在单元格内换行</p><p>输入 <code>M-Ret</code></p></li></ul><ul class="org-ul"><li><p>将区域转换成表格</p><p>输入 <code>C-c |</code></p><p>这里，对一片区域，每行用空格或者TAB分割开，选中该区域后，输入这个命令，便会将相应的内容转换成表格。</p></li></ul><ul class="org-ul"><li><p>移动光标到当前所在单元格首部</p><p>输入 <code>M-a</code></p></li><li><p>移动光标到当前所在单元格尾部</p><p>输入 <code>M-e</code></p></li><li><p>将当前光标所在表格项设置为空<br></p><p>输入 <code>C-c &lt;SPC&gt;</code></p></li><li><p>删除当前光标所在列</p><p>输入 <code>M-S-&lt;Left&gt;</code></p></li><li><p>在当前光标所在列左插入一列</p><p>输入 <code>M-S-&lt;Right&gt;</code></p><p>这里注意，如果光标在表格最后一列的右面，运行这个命令就是在表格最右侧追加一列。</p></li><li><p>左/右移动当前光标所在列</p><p>输入 <code>M-&lt;left&gt;/&lt;right&gt;</code></p></li></ul></div></div></div><div id="outline-container-orgheadline20" class="outline-2"><h2 id="orgheadline20"><span class="section-number-2">6</span> 块标记</h2><div class="outline-text-2" id="text-6"></div><div id="outline-container-orgheadline21" class="outline-3"><h3 id="orgheadline21"><span class="section-number-3">6.1</span> 语法</h3><div class="outline-text-3" id="text-6-1"><p>单行的例子内容以": "开头，注意后面的空格。</p></div></div><div id="outline-container-orgheadline22" class="outline-3"><h3 id="orgheadline22"><span class="section-number-3">6.2</span> 操作</h3><div class="outline-text-3" id="text-6-2"><ul class="org-ul"><li><p>加入"#+BEGIN_SRC和#+END_SRC"配对：</p><p>行首输入`&lt;s Tab`</p></li><li><p>加入"#+BEGIN_EXAMPLE和#+END_EXAMPLE"配对：</p><p>行首输入`&lt;e Tab`</p></li><li><p>加入"#+BEGIN_HTML和#+END_HTML"配对：</p><p>行首输入`&lt;h Tab`</p></li><li id="对已经输入的语法块参数补全"><p>输入 <code>M-TAB</code></p><p>例如:</p><pre class="example">#+BEGIN_SRC eli#+END_SRC</pre><p>键入 <code>eli</code> 后输入 <code>M-TAB</code>, 即可补全出选项，例如：</p><pre class="example">#+BEGIN_SRC elisp#+END_SRC</pre></li><li><p>对代码块进行求职</p><p>在代码块上输入 <code>C-c C-v C-e</code></p></li></ul></div></div></div><div id="outline-container-orgheadline23" class="outline-2"><h2 id="orgheadline23"><a id="ID-ea1d10d3-277a-48d0-bf43-465ef2bfae1d"></a><span class="section-number-2">7</span> 链接</h2><div class="outline-text-2" id="text-7"></div><div id="outline-container-orgheadline24" class="outline-3"><h3 id="orgheadline24"><span class="section-number-3">7.1</span> 语法</h3><div class="outline-text-3" id="text-7-1"><ul class="org-ul"><li><p>脚注</p><p>用 <code>[fn:1]</code> 的方式插入脚注，要求脚注定义放在第0列，不能有缩进而在相应的解释部分插入类似如下：</p><pre class="example">[fn:1]本文参考自xxx。</pre><p>其中 <code>[fn:1]</code> 部分是可以点击相互切换的。</p><p>例如：</p><pre class="example">The Org homepage[fn:1] now looks a lot better than it used to....[fn:1] The link is: http://orgmode.org</pre></li><li><p>外部链接</p><p>链接的格式是：</p><pre class="example">[[链接地址][链接内容]]</pre><p>如：</p><pre class="example">[[http://orgmode.org/orgguide.pdf][grgguid.pdf]][[file:/home/maple/图片/test.jpg][a picture]]</pre><p>如果去掉标签，则能直接显示图片：</p><pre class="example">[[file:/home/maple/图片/test.jpg]]</pre><p>这里，为了便于展示源代码， 我加上了转义，用于对单行例子的引用，如果没有": "转移字符，那么直接会在orgmode显示解析后的结果。</p></li></ul></div></div><div id="outline-container-orgheadline25" class="outline-3"><h3 id="orgheadline25"><a id="ID-03d301bb-ad25-4667-a12f-e2ab46f5c14b"></a><span class="section-number-3">7.2</span> 配置</h3><div class="outline-text-3" id="text-7-2"><ul class="org-ul"><li><p>保存链接的配置：</p><div class="org-src-container"><pre class="src src-emacs-lisp">(global-set-key "\C-cl" 'org-store-link)</pre></div><p>配置之后，每次输入 <code>C-c l</code> 之后会将当前位置所在的条目链接保存起来，之后输入 <code>C-c C-l</code> 的时候，会提示选择已保存的链接，默认选择最近一次保存的条目链接。</p></li><li><p>启用全局唯一id链接配置</p><p>如果启用了 <code>org-id.el</code> 以及设置了 <code>org-id-link-to-org-use-id</code> 那么运行 <code>C-c C-l</code> 会保存两个链接：一个是用户可读的链接（包含文件名和标题，当标题的文件和位置变化可能会导致原引用该处的链接不可用）；一个是具有全局唯一id的链接（在相应标题子树被转移到其它位置的时候，这个链接仍然不变）。</p><p>其实保存链接内容的同时也创建了相应的链接，为创建全局唯一id的链接，运行之后，会导致相应子树标题下追加了如下属性：</p><pre class="example">* 子树标题    :PROPERTIES:  :ID:       60aaa787-86e8-43a3-9a33-73d3eb7e6f58  :END:</pre><p>引用的格式举例 </p><pre class="example">[[id:60aaa787-86e8-43a3-9a33-73d3eb7e6f58][子树标题]]</pre><p>下面给出一个配置的例子：</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;Settings for global id link.(require 'org-id)(setq org-id-link-to-org-use-id t)</pre></div></li></ul></div></div><div id="outline-container-orgheadline26" class="outline-3"><h3 id="orgheadline26"><span class="section-number-3">7.3</span> 操作</h3><div class="outline-text-3" id="text-7-3"><ul class="org-ul"><li><p>保存链接</p><p>输入 <code>C-c l</code></p><p>这项功能需要事先配置好 <code>org-store-link</code> 按键映射，配置好后这个动作会将当前位置所在条目的链接保存起来，供之后插入链接等使用。</p></li><li><p>插入链接</p><p>输入: <code>C-c C-l</code></p><p>这样会列出已经保存的链接供选择，也会在底部回显区会提示你输入链接网址和描述文字（支持事先保存的链接补全），输入或选择完成后，链接插入完毕。另外，在已有链接上输入该命令，可以在已有链接上进行修改。如果选择了具有全局唯一id的链接形式，不会因相应子树所处的文件等信息的改变而失效。</p></li><li><p>内部链接引用和定义下面是内部链接引用和定义的例子</p><pre class="example">[[inner][内部链接引用]]#&lt;&lt;inner&gt;&gt;</pre></li><li><p>记录内部链接地址</p><p>输入 <code>C-c %</code></p></li><li><p>跳转到已记录的内部链接地址</p><p>输入 <code>C-c &amp;</code></p><p>不断地输入会不断地跳转到已经记录和定义的内部链接，可以跨buffer。</p></li><li><p>新建脚注</p><p>输入： <code>C-c C-x f</code></p><p>输入之后，如果当前光标已有脚注，那么会在定义和第一个引用之处跳转，否则新建一个脚注。</p><p>新建的脚注会在文档底部，有一个新开的标题"Footnotes"，新建的脚注编辑好定义之后，再输入 <code>C-c &amp;</code> 可以跳回刚才插入脚注的位置。</p></li></ul></div></div></div><div id="outline-container-orgheadline27" class="outline-2"><h2 id="orgheadline27"><span class="section-number-2">8</span> 时间戳</h2><div class="outline-text-2" id="text-8"></div><div id="outline-container-orgheadline28" class="outline-3"><h3 id="orgheadline28"><span class="section-number-3">8.1</span> <span class="todo NEXT">NEXT</span> 语法</h3><div class="outline-text-3" id="text-8-1"><p>时间戳是一个具有特定格式的日期（可能带有时间和时间段）说明， 时间戳可以出现在树条目的标题和正文的任何地方，它能使条目只在特定的日期才出现在议程列表中。主要有如下一些类型：</p><ul class="org-ul"><li><p>普通时间戳；可用于事件、约会简单地给一个条目加上时间和日期，指明事件或约会发生的时间：</p><pre class="example">* Meet Peter at the movies &lt;2006-11-01 Wed 19:15&gt;* Discussion on climate change &lt;2006-11-02 Thu 20:00-22:00&gt;</pre></li><li><p>具有时间间隔的时间戳：可用于周期重复的内容</p><p>时间戳可以包含一个时间间隔，表示事件不只在指定的时间发生，还在每隔一个特定的时间如 N 天（d）、周（w）、月（m）或者年（y）之后重复发生。如以下表示从2007-05-15开始每周2发生的会议事件</p><pre class="example">* Pick up Sam at school &lt;2007-05-16 Wed 12:30 +1w&gt;</pre></li><li><p>日记样式的 sexp 条目</p><p>Orgmode 为支持更复杂的时间，支持的Emacs 日历/日记包（calendar/diary package）中的日记条目</p><pre class="example">* The nerd meeting on every 2nd Thursday of the month&lt;%%(diary-float t 4 2)&gt;</pre></li><li><p>时间/日期段</p><p>两个时间戳用‘–’连接起来就定义了一个时间段.</p><pre class="example">** Meeting in Amsterdam&lt;2004-08-23 Mon&gt;--&lt;2004-08-26 Thu&gt;</pre></li><li><p>非激活的时间戳</p><p>在方括号而不是尖括号中的时间戳，是未激活的，只是一个时间戳记录信息，它不会让一个条目显示在议程中。</p><pre class="example">* Gillian comes late for the fifth time [2006-11-01 Wed]</pre><p>时间戳前面可以加一些关键字来协助计划安排。例如表示任务应该完成的日期的截止期限（DEADLINE）,用于指定任务开始日期的日程安排（SCHEDULE）。</p><p>参考:<a href="http://www.cnblogs.com/Open_Source/archive/2011/07/17/2108747.html#sec-8" target="_blank" rel="noopener">http://www.cnblogs.com/Open_Source/archive/2011/07/17/2108747.html#sec-8</a> </p><p><a href="http://members.optusnet.com.au/~charles57/GTD/org_dates/index.html" target="_blank" rel="noopener">http://members.optusnet.com.au/~charles57/GTD/org_dates/index.html</a></p><p>进行提取</p></li></ul></div></div><div id="outline-container-orgheadline29" class="outline-3"><h3 id="orgheadline29"><a id="ID-3ec4a2aa-e0d2-400b-bfb9-81719e363ecf"></a><span class="section-number-3">8.2</span> 操作</h3><div class="outline-text-3" id="text-8-2"><ul class="org-ul"><li><p>插入一个时间戳</p><p>输入 <code>C-c .</code></p><p>输入之后，会进入一个交互模式，默认是当前时间，可以通过 <code>S-LEFT/RIGHT/UP/DOWN</code> 选择一个指定的时间戳，插入之后的时间戳是激活的，会以'&lt;&gt;'括起来，只有日期信息没有时间，可以在日程视图中显示。</p><pre class="example">Calendar NavigationShift-RIGHTGo forward a dayShift-LEFTGo backward a dayShift-UPGo to previous weekShift-DOWNGo to next week&lt;Scroll calendar back 1 month&gt;Scroll calendar forward 1 month.Go to Today</pre></li><li><p>插入一个非激活的时间戳</p><p>输入 <code>C-c !</code></p><p>命令类似 <code>C-c .</code> 不过这条命令插入的时间戳是非激活状态的，不会在Agenda中显示。</p></li><li><p>插入一个包含日期和时间的时间戳</p><p>输入 <code>C-u C-c .</code></p><p>输入这个命令也会插入时间戳，与 <code>C-c .</code> 不同的是它插入的时间戳不仅包含日期信息，还包含时间信息。</p></li><li><p>插入一个包含日期和时间的非激活时间戳</p><p>输入 <code>C-u C-c !</code></p><p>命令类似 <code>C-u C-c .</code> 只是插入的时间戳是非激活的。</p></li></ul><ul class="org-ul"><li><p>修改插入的时间戳</p><p>光标停在待修改的项目上(年/月/日/时/分/秒)输入 <code>S-UP</code> / <code>S-DOWN</code> , 如果 <code>S-LEFT</code> / <code>S-RIGHT</code> 则是修改日期。</p></li><li><p>插入设置为SCHEDULE的时间戳</p><p>输入 <code>C-c C-s</code></p><p>会在当前标题下面插入一个带有"SCHEDULE"的时间戳，同样可以通过 <code>S-LEFT/RIGHT/UP/DOWN</code> 选择一个指定的时间。</p></li><li><p>插入设置为DEADLINE的时间戳</p><p>输入 <code>C-c C-d</code></p><p>会在当前标题下面插入一个带有"DEADLINE"的时间戳，同样可以通过 <code>S-LEFT/RIGHT/UP/DOWN</code> 选择一个指定的时间。</p></li><li><p>插入一个非激活的时间戳</p><p>输入 <code>C-c !</code></p><p>输入之后，类似上面，通过 <code>S-LEFT/RIGHT/UP/DOWN</code> 选择日期插入。插入的时间戳不是激活的，会以'[]'括起来，不在日程视图中显示。</p></li><li><p>打开Emacs Clendar</p><p>输入 <code>C-c &gt;</code></p></li><li><p>插入Emacs Calendar光标所在的日期到光标所在处</p><p>输入 <code>C-c &lt;</code> </p></li><li><p>计算光标所在time range之间的天数</p><p>输入 <code>C-c C-y</code></p></li><li><p>记录工作时间</p><p>在任务开始、结束、中断的时候可以使用Org在相应的任务标题下添加一个时间日志，动态记录时间信息。相关指令如下：</p><pre class="example">C-c C-x C-i开始当前条目的计时（clock-in）。这会插入一个 CLOCK 关键字和一个时间戳。加上 C-u 前缀，从当前已经计时的任务中选择任务。C-c C-x C-o停止计时（clock-out）。这会在开始计时的地方插入另一个时间戳。它会直接计算使用时间并插入到时间段的后面如 “=&gt; HH:MM”。C-c C-x C-e为当前的计时任务更新进度。C-c C-x C-x取消当前的计时。当你误操作打开一个计时时，或者转而去做其他事情时，这个命令就很有用。C-c C-x C-j跳转到包含当前正在运行的计时的任务条目。用 C-uf前缀从当前计时的任务中选择。C-c C-x C-r在当前文件插入一个包含像 Org 表格一样的计时报告的动态块。当光标正处于一个存在的块上时，更新它。C-c C-c在一个已经存在的计时表格之上时，更新它。 更新动态块。光标需要置于动态块 #+BEGIN 这行。</pre></li></ul></div></div></div><div id="outline-container-orgheadline30" class="outline-2"><h2 id="orgheadline30"><span class="section-number-2">9</span> 标签</h2><div class="outline-text-2" id="text-9"></div><div id="outline-container-orgheadline31" class="outline-3"><h3 id="orgheadline31"><span class="section-number-3">9.1</span> 语法</h3><div class="outline-text-3" id="text-9-1"><p>标签以":"做为开头和结尾，可以连续定义多个。例如：</p><pre class="example">:boss:notes:</pre></div></div><div id="outline-container-orgheadline32" class="outline-3"><h3 id="orgheadline32"><a id="ID-0bc1ad74-407a-4c03-99de-c09b5e2f0330"></a><span class="section-number-3">9.2</span> 配置</h3><div class="outline-text-3" id="text-9-2"><p>标签是动态增加的，也可预定义，预定义的方式如下：</p><ul class="org-ul"><li>使用#+TAGS元数据进行标记，仅对当前文件有效：</li></ul><pre class="example">#+TAGS: { 桌面(d) 服务器(s) }  编辑器(e) 浏览器(f) 多媒体(m) 压缩(z)</pre><ul class="org-ul"><li>修改.emaxcs配置</li></ul><div class="org-src-container"><pre class="src src-emacs-lisp">;;set tags(setq org-tag-alist '(                    (:startgroup . nil)                         ("room" . ?r) ("outside" . ?o)                    (:endgroup . nil)                    ("工作" . ?w)                    ("生活" . ?l)                     ("学习" . ?s)                    ))</pre></div></div></div><div id="outline-container-orgheadline33" class="outline-3"><h3 id="orgheadline33"><span class="section-number-3">9.3</span> 操作</h3><div class="outline-text-3" id="text-9-3"><p>键入 <code>:</code> 后， <code>M-Tab</code> 自动提供标签的补齐。更方便的做法是在正文部分用 <code>C-c C-q</code> 或直接在标题上用 <code>C-c C-c</code> 创建标签，这种方式可以列出所有预定义的标签以便选取。</p></div></div></div><div id="outline-container-orgheadline34" class="outline-2"><h2 id="orgheadline34"><span class="section-number-2">10</span> Capture-Refile-Archive</h2><div class="outline-text-2" id="text-10"></div><div id="outline-container-orgheadline35" class="outline-3"><h3 id="orgheadline35"><span class="section-number-3">10.1</span> 概念</h3><div class="outline-text-3" id="text-10-1"><p>Capture用来迅速收集一些临时产生的想法，尽可能少的打断当前的工作状态。通过指定好快捷方式和相应的Capture目标位置后，在任意时间运行捕获命令会将这些临时的记录存放在一个指定的位置，空闲之时再做进一步整理。</p><p>Refile以特定的命令，用来将之前Capture的内容直接转移到特定的地方，避免了手动剪切（复制）和粘帖。</p></div></div><div id="outline-container-orgheadline36" class="outline-3"><h3 id="orgheadline36"><span class="section-number-3">10.2</span> 配置</h3><div class="outline-text-3" id="text-10-2"></div><div id="outline-container-orgheadline37" class="outline-4"><h4 id="orgheadline37"><span class="section-number-4">10.2.1</span> Capture的配置</h4><div class="outline-text-4" id="text-10-2-1"><p>不同的管理方式可能会导致不同的配置，但是一般都包含两个方面：首先设置好一个启动Capture的快捷方式，再配置用于存储Capture信息的目的地。这里以gtd管理为例给出一个配置例子：</p><pre class="example">;;Setting for gtd captures;;Directory for capture files.(setq org-directory "~/mydata/orgmode/");;Default capture files.(setq org-default-notes-file (concat org-directory "gtd/inbox.org"));;Capture template(setq org-capture-templates '(      ("t" "Tasks" entry (file+headline "gtd/inbox.org" "Tasks") "* INBOX %?\nTime:%T\nFrom:%F\n")      ("p" "Projects" entry (file+headline "gtd/inbox.org" "Projects")  "* %?\nTime:%U\nFrom:%F\n")      ("i" "Item notes" item (file+headline "gtd/inbox.org" "Items")  "+ %?\n  Time:%U\n  From:%F\n")      ("m" "Misc notes" plain (file+headline "misc.org" "Notes")  "-----------------------------------------------------\nTime:%U\n %?")     )) ;;set tags;;where?(h/o/w),what?(c/l/s),when?(gtd|immeiately,wait,action),who?(my gtd,others),why?how?(delete/archieve/schedule)(setq org-tag-alist '(                    (:startgroup . nil)                         ("home" . ?r) ("office" . ?o) ("way" . ?w)                    (:endgroup . nil)                    ("职业" . ?c)                    ("生活" . ?l)                     ("学习" . ?s)                    ))</pre></div></div><div id="outline-container-orgheadline38" class="outline-4"><h4 id="orgheadline38"><span class="section-number-4">10.2.2</span> Refile的配置</h4><div class="outline-text-4" id="text-10-2-2"><p>主要配置两个方面的内容：Refile的目标（org-refile-targets），以及Refile时选择目标的策略(org-refile-use-outline-path会自动补全文件名以及标题，目标的格式类似文件路径的格式，包含文件和标题)。org-refile-targets对应的可以是路径可以是列表，具体参考其中的文档，需要注意的是：</p><dl class="org-dl"><dt>如果是列表</dt><dd>该变量中的文件路径需要是全路径；文件中需要有一个标题才能在做 <code>C-c C-w</code> 补全的时候显示出来，空文件不行。</dd><dt>如果是一个文件路径</dt><dd>如果org-refile-targets是一个文件，则：这个文件可以是一个文件列表，使用这个列表的文件做为refile目标; 每个文件项占一行（不要有""），文件项可以是对于org-directory的相对路径; 这样文件内容变化之后，不用重新载入配置也能在 <code>C-c C-w</code> 中显示出新增的文件; 如果有一项是文件目录，那么不要再次包含该目录下的文件，因为这样会在agenda view中导致重复显示。</dd></dl><div class="org-src-container"><pre class="src src-emacs-lisp">;;targets for refile(setq org-refile-targets (quote (                                 (nil :maxlevel . 9)                                 (org-agenda-files :maxlevel . 9)                                )                         ));;outline path for refile(setq org-refile-use-outline-path 'full-file-path);;org-outline-path-complete-in-steps(setq org-outline-path-complete-in-steps t);;create new parents while refile(setq org-refile-allow-creating-parent-nodes 'confirm)</pre></div></div></div></div><div id="outline-container-orgheadline39" class="outline-3"><h3 id="orgheadline39"><span class="section-number-3">10.3</span> 操作</h3><div class="outline-text-3" id="text-10-3"><p>基于以上配置，我们可以操作如下：</p><ul class="org-ul"><li><p>启动Capture</p><p>输入 <code>C-c c</code></p><p>输入之后会提示选择捕获何种类型的信息，提示信息和选择命令取决于之前设置的配置变量 <code>org-capture-templates</code> 。</p></li><li><p>选择将待捕获的信息存于"Tasks"标题之下</p><p>输入 <code>t</code></p><p>具体如何输入取决之前的配置如何，这里输入之后会打开一个Capture Buffer，用于输入将要被记录的信息，其中按照预先配置好的模板，已经预先插入了一些基本信息（如时间、捕获信息时所处位置等等）。</p></li><li><p>完成Capture</p><p>输入 <code>C-c C-c</code></p><p>输入之后，会将buffer中相应的信息插入到之前配置好的位置（例如某个文件中的某个标题之下），然后回到之前被中断的工作状态。</p></li><li><p>取消Capture</p><p>输入 <code>C-c C-k</code></p><p>取消捕获的动作，回到之前被中断的工作状态。</p></li><li><p>访问存放Capture的文件Buffer</p><p>输入 <code>C-u C-c c</code></p><p>输入之后，会提示和 <code>C-c c</code> 一样的信息，选择相应的捕获类型后，会直接打开相关的文件，具体是何文件，取决于事先设置的信息。</p></li><li><p>访问上次捕获所处的文件Buffer</p><p>输入 <code>C-u C-u C-c c</code></p><p>类似前面，捕获访问的是记录上次捕获的文件Buffer，并自动定位到其中上次捕获的信息之上。</p></li><li><p>以剪切方式Refile</p><p>输入 <code>C-c C-w</code></p><p>输入之后，会提示Refile的目标位置（在org-agenda-files中列出），支持Tab补全，选择好相应的文件之后，可以继续将文件内的标题也类似路径的方式输入（也支持TAB补全），选择好之后，回车会将相应的内容移动到对应的目标位置。注意：移动的内容可以是用Mark方式选择的区域，或者当前光标所在的子树，在执行 <code>C-c C-w</code> 之后有提示。</p></li><li><p>以复制方式Refile</p><p>输入 <code>C-c M-w</code></p><p>输入之后，会提示Refile的目标位置（在org-agenda-files中列出），支持Tab补全，选择好相应的文件之后，可以继续将文件内的标题也类似路径的方式输入（也支持TAB补全），选择好之后，回车会将相应的内容复制到对应的目标位置。注意：复制的内容可以是用Mark方式选择的区域，或者当前光标所在的子树，在执行 <code>C-c C-w</code> 之后有提示。</p></li><li><p>访问Refile的目标对应Buffer</p><p>输入 <code>C-u C-c C-w</code></p><p>输入之后，会提示和 <code>C-c C-w</code> 一样的信息，选择相应的位置后，会直接打开相关的文件。</p></li><li><p>访问上次Refile所处的文件Buffer</p><p>输入 <code>C-u C-u C-c C-w</code></p><p>类似前面，访问的是记录上次Refile的文件Buffer，并自动定位到上次Refile目标的信息之上。</p></li></ul></div></div></div><div id="outline-container-orgheadline40" class="outline-2"><h2 id="orgheadline40"><span class="section-number-2">11</span> Agenda</h2><div class="outline-text-2" id="text-11"></div><div id="outline-container-orgheadline41" class="outline-3"><h3 id="orgheadline41"><a id="ID-19048f24-4631-4a93-b11f-9b4cfccaa24a"></a><span class="section-number-3">11.1</span> 操作</h3><div class="outline-text-3" id="text-11-1"><ul class="org-ul"><li><p>调出Agenda显示交互界面</p><p>输入 <code>C-c a</code></p><p>输入之后，根据提示选择想要显示的视图种类。</p></li></ul></div><div id="outline-container-orgheadline42" class="outline-4"><h4 id="orgheadline42"><span class="section-number-4">11.1.1</span> 交互操作</h4><div class="outline-text-4" id="text-11-1-1"><p>调出Agenda交互界面之后，可以进行如下交互操作（注意：操作作用范围是相应的agenda文件）。</p><ul class="org-ul"><li><p>限定Agenda显示内容的范围</p><p>输入 <code>&lt;</code></p><p>输入之后，会切换Agenda视图的搜索范围，依次为“没有限定”、“限定当前buffer”、"限定当前子树"。</p></li><li><p>取消对Agenda view的范围限定</p><p>输入 <code>&gt;</code></p></li><li><p>列出所有TODO项目</p><p>输入 <code>t</code></p></li><li><p>列出特定状态的TODO项目</p><p>输入 <code>T</code></p><p>输入之后，需要进一步输入需要列出的状态关键字，以完成显示。</p></li><li><p>搜索包含指定字符串的标题</p><p>输入 <code>s</code></p><p>输入之后，再输入待搜索字符串即可列出所有包含该字符串的标题（字符串可能在内容中）</p></li><li><p>搜索TODO项目字符串</p><p>输入 <code>S</code></p><p>同上，不同之处是，搜索的是TODO标题项目，而不是普通标题。</p></li><li><p>搜索字符串</p><p>输入 <code>/</code></p><p>输入之后，再输入待搜索字符串将会列出所有包含该字符串的地方。</p></li></ul></div></div><div id="outline-container-orgheadline43" class="outline-4"><h4 id="orgheadline43"><span class="section-number-4">11.1.2</span> 交互命令：</h4><div class="outline-text-4" id="text-11-1-2"><p>进入Agenda中后，会有如下提示：</p><pre class="example">Global list of TODO items of type: ALLAvailable with `N r': (0)[ALL] (1)INBOX (2)NEXT (3)LATER (4)WAIT/FORWARD (5)MAYBE/FUTURE (6)CANCEL (7)DONE</pre><ul class="org-ul"><li><p>只显示某一项，如只显示NEXT的内容</p><p>输入 <code>2 r</code></p></li><li><p>重新刷新当前 Agenda</p><p>输入 <code>r</code></p></li><li><p>切换是否显示当前行所在buffer内容</p><p>输入 <code>&lt;</code></p></li></ul></div></div></div></div><div id="outline-container-orgheadline44" class="outline-2"><h2 id="orgheadline44"><span class="section-number-2">12</span> 导出</h2><div class="outline-text-2" id="text-12"></div><div id="outline-container-orgheadline45" class="outline-3"><h3 id="orgheadline45"><a id="ID-6f90dc8f-5825-4a39-8f2d-77d8ff78919a"></a><span class="section-number-3">12.1</span> 操作</h3><div class="outline-text-3" id="text-12-1"><ul class="org-ul"><li><p>导出为特定格式</p><p>输入 <code>C-c C-e</code> </p><p>输入之后，会默认将当前Buffer导出为特定格式，期间需要输入交互信息指定导出为html还是pdf；如果需要其它的导出选项，比如将当前子标题导出为特定格式，需要根据交互命令来做（比如C-s是切换导出范围）。</p></li></ul></div></div></div><div id="outline-container-orgheadline46" class="outline-2"><h2 id="orgheadline46"><a id="ID-995cfcce-24d3-4c8f-a881-27f55dc20259"></a><span class="section-number-2">13</span> 其它</h2><div class="outline-text-2" id="text-13"><ul class="org-ul"><li><p>搜索sparse tree</p><p>输入 <code>C-c /</code> </p><p>输入之后，会提示你搜索对应的内容，输入你想搜索的内容后可以看到相关内容以及相关的tree。</p></li><li><p>导出</p><p>输入 <code>C-c C-e</code></p><p>输入之后，进入交互命令，可以选择各种需要导出的格式。</p></li></ul></div><div id="outline-container-orgheadline47" class="outline-3"><h3 id="orgheadline47"><a id="ID-86f5b7aa-1499-4e35-9835-277d0950d34a"></a><span class="section-number-3">13.1</span> 建议</h3><div class="outline-text-3" id="text-13-1"></div><div id="outline-container-orgheadline48" class="outline-4"><h4 id="orgheadline48"><span class="section-number-4">13.1.1</span> 列表与标题</h4><div class="outline-text-4" id="text-13-1-1"><ul class="org-ul"><li><p>建议少用列表，多用标题。</p><p>列表中的段落尽可能少，层次尽可能浅；多用标题也方便定位和缩进(标题过多，会导致目录复杂?)。</p></li><li>建议少用断行，多用段落。</li></ul></div></div><div id="outline-container-orgheadline49" class="outline-4"><h4 id="orgheadline49"><span class="section-number-4">13.1.2</span> 列表与换行</h4><div class="outline-text-4" id="text-13-1-2"><p><span class="timestamp-wrapper"><span class="timestamp">[2015-10-19 一 07:52]</span></span></p><p>想到一个方法解决列表内多段落的问题。</p><ul class="org-ul"><li><p>换行</p><p>杜绝硬换行的习惯, 尽量使用空行表示换行。</p><p>硬换行用“\\”，但是输入不便且有些情况不支持（如MobileOrg），所以想要换行，就新起一段落，那么新行前多一个空行。</p><p>这是一个新行，也是新段落。</p><p>一个段落，实际就是一行。逻辑关系有标点表示。</p></li></ul><ul class="org-ul"><li><p>列表内换行</p><p>用描述列表</p><p>有时为美观，列表第一换行若用一空行则显得与列表项标题相距有点远，并且第一行内容一般也很少，一般都是总体描述性文字。所以，建议第一行是简短描述时用描述列表，第一行在描述的“::”后，之后的段落也用空行。若直接第一行就很长不是描述，那么不用描述列表，并且宁可与列表项标题多空一行，也不用断行符。</p></li></ul></div></div></div><div id="outline-container-orgheadline50" class="outline-3"><h3 id="orgheadline50"><span class="section-number-3">13.2</span> 感想</h3><div class="outline-text-3" id="text-13-2"><p>学习orgmode主要分为如下几个阶段：</p><ul class="org-ul"><li><p>基本标记语法阶段 </p><p>可以在简单场合写作简短的评论、文章使用，需要关注的内容可以是：标题、格式、列表、链接、表格、块标记</p></li><li><p>日程管理阶段 </p><p>对基本标记语法掌握之后，进一步掌握日程管理并利用其中的功能，需要关注的内容可以是：</p></li><li><p>发布阶段 </p><p>对已有内容整理、组织、发布成公开格式</p></li></ul></div></div><div id="outline-container-orgheadline51" class="outline-3"><h3 id="orgheadline51"><span class="section-number-3">13.3</span> 注意</h3><div class="outline-text-3" id="text-13-3"><p>如果Checkbox，则最好一行，如果是多行的Checkbox, 那么导出的效果将会把 <code>+ [ ]</code> 放到第一行，其它的全在新行开始。</p></div></div><div id="outline-container-orgheadline52" class="outline-3"><h3 id="orgheadline52"><a id="ID-c9bdf0a1-9a0e-49ee-a880-1183e1b3f47e"></a><span class="section-number-3">13.4</span> orgmode与mobile org整合</h3><div class="outline-text-3" id="text-13-4"><p>参考相关文档：<a href="http://orgmode.org/manual/MobileOrg.html#MobileOrg" target="_blank" rel="noopener">MobileOrg</a>学习本文之前，需要首先了解Orgmode相关知识，至少应该知道：Orgmode可用于轻量级文档标记、项目管理、以及内容发布。</p><p>MobileOrg是一个使用Org mode的移动端应用程序。目前支持IOS和Android系统。MobileOrg提供离线浏览(Viewing)和捕获(Capture)在真实计算机上的Org mode系统内容。它允许你为已有的entries记录修改。</p><p>本文中：MobileOrg是Mobile端的一个应用程序，运行在Android（也有IOS的MobileOrg）;Org是PC端Emacs的一个插件应用，对应其Orgmode模式。</p><p>文档中描述如何用Org创建可以通过MobileOrg显示的文档格式，以及如何将Mobile端的MobileOrg中修改和捕获的笔记，集成到PC端的“主” Org mode系统中（即Org与MobileOrg的同步），不涉及Agenda相关的操作。</p></div><div id="outline-container-orgheadline53" class="outline-4"><h4 id="orgheadline53"><span class="section-number-4">13.4.1</span> 配置</h4><div class="outline-text-4" id="text-13-4-1"><p>为了在MobileOrg中能够修改tags和TODO状态，你应该在PC端设置好自定义变量： <code>org-todo-keywords</code> 和 <code>org-tag-alist</code> ，使它们包含所有需要修改的重要的tags和TODO keywords，哪怕每个文件只使用其中的部分内容。MobileOrg也能通过in-buffer settings来为你提供TODO和tags设置，但是它只能读懂这些变量中的那些设置好的TODO状态集合以及tags。</p><p>假设我们想要使PC上的Org与移动设备上的MobileOrg保持内容同步（底层通过git机制，也可以是云存储、ssh、ftp等机制）。这里给出为实现这个目的，在PC需要做的配置工作(移动端的MobileOrg做为辅助工具，其配置和操作非常简单，在适当的时候会提及)。</p></div><div id="outline-container-orgheadline186" class="outline-5"><h5 id="orgheadline186"><span class="section-number-5">13.4.1.1</span> 在PC上添加使用MobileOrg的emacs配置</h5><div class="outline-text-5" id="text-13-4-1-1"><p>主要包括对Emacs中org-mode模块的加载以及与MobileOrg同步的路径。例如:</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;Sync with mobileorg(require 'org-mobile);;mobile stage(setq org-mobile-directory "/home/miracle/mygitrepo/pocket/MobileOrg")</pre></div><p>另外，可以通过 <code>org-mobile-encryption-password</code> 设置加密方面的内容。<br>在后面我们可知，在PC上的orgmode中有特定的命令将相关内容推送到这个目录中。</p></div></div><div id="outline-container-orgheadline190" class="outline-5"><h5 id="orgheadline190"><span class="section-number-5">13.4.1.2</span> 在PC上添加同步orgmode和MobileOrg的emacs配置</h5><div class="outline-text-5" id="text-13-4-1-2"><p>主要包括PC端和MobileOrg端状态与标记的设置，PC上被推送orgmode内容的源文件路径，以及PC上接收MobileOrg修改的缓存路径设置。</p></div><ol class="org-ol"><li><a id="orgheadline187"></a>为被推送文件定义只属于该文件的状态和标记<br><div class="outline-text-6" id="text-13-4-1-2-1"><p>被推送的文件可使用文件选项定义相关的状态和标签（实践发现不用定义文件的状态和标签也行），定义内容最好和PC上的相关状态变量(即 <code>setq org-todo-keywords</code> )一致，或者是其子集。如果使用文件定义状态，那么可以将用于push到MobileOrg的文件中的状态设置选项如下：</p><pre class="example">#+TODO: INBOX(i!) NEXT(n!) LATER(l!) WAIT/FORWARD(w@/!) MAYBE/FUTURE(m!) | CANCEL(c!) DONE(d!)</pre><p>标记的设置类似。</p></div></li><li><a id="orgheadline188"></a>设置状态关键字和被推送至MobileOrg的文件列表路径<br><div class="outline-text-6" id="text-13-4-1-2-2"><p>如下</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;set status for TODO.(setq org-todo-keywords '((sequence "INBOX(i!)""NEXT(n!)""LATER(l!)""WAIT/FORWARD(w@/!)""MAYBE/FUTURE(m!)""|" "CANCEL(c!)" "DONE(d!)")))   ;;mobile push(setq org-mobile-files (list (concat org-directory "gtd/mobile_org")))</pre></div></div></li><li><a id="orgheadline189"></a>设置接收来自MobileOrg内容的“缓存”目标文件路径<br><div class="outline-text-6" id="text-13-4-1-2-3"><p>如下</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;mobile pull(setq org-mobile-inbox-for-pull (concat org-directory "gtd/from_mobile.org"))</pre></div></div></li></ol></div></div><div id="outline-container-orgheadline54" class="outline-4"><h4 id="orgheadline54"><span class="section-number-4">13.4.2</span> 原理</h4><div class="outline-text-4" id="text-13-4-2"></div><div id="outline-container-orgheadline191" class="outline-5"><h5 id="orgheadline191"><span class="section-number-5">13.4.2.1</span> Mobile端的Mobile Org与PC端的Org同步</h5><div class="outline-text-5" id="text-13-4-2-1"><p>当我们在MobileOrg中与PC端的Org同步时，需要知道它不仅仅是从PC端获取（mobile端的pull）相应org文件用于浏览，同时也会追加(mobile端的push)被captured的entries(之后captured的内容会消失)，并且指向被标记和修改的entries，这些内容被汇总在同步目录( <code>org-mobile-directory</code> )中的 <code>mobileorg.org</code> 文件里。</p></div></div><div id="outline-container-orgheadline194" class="outline-5"><h5 id="orgheadline194"><span class="section-number-5">13.4.2.2</span> PC端的Org与Mobile端的MobileOrg同步</h5><div class="outline-text-5" id="text-13-4-2-2"></div><ol class="org-ol"><li><a id="orgheadline192"></a>PC端的Pull<br><div class="outline-text-6" id="text-13-4-2-2-1"><p>获取MobileOrg修改内容(PC端的pull)的时候，会将这些信息从 <code>mobileorg.org</code> 先转移到到 <code>org-mobile-inbox-for-pull</code> 对应的文件中，并对指向的被标记的内容进行进一步操作，进而将能够自动处理内容同步到对应的文件中。Pull的过程大致过程如下:</p><ol class="org-ol"><li>Org将会将 <code>mobileorg.org</code> 中的所有entries移动到 <code>org-mobile-inbox-for-pull</code> 所指向的文件（假设为mobileinbox），每个被捕获的entry和编辑事件都会被做为这个mobileinbox中的顶级entry而存在。（进行操作之后， <code>mobileorg.org</code> 将会被清空）</li><li>当将entries移动到 <code>org-mobile-inbox-for-pull</code> 指向的文件之后，Org将会开始执行在MobileOrg进行的修改。有些修改直接就会被应用了不需要额外的用户交互（例如修改tag、TODO状态、标题、正文文本可以被简单的应用）。而需要额外动作的entries会接收到一个:FLAGGED:的tag，这样它们才会很容易地被找到。当应用修改或者寻找一个entry之时出现了问题，目标entry将会保持在 <code>org-mobile-inbox-for-pull</code> 中，并且被标记一个错误信息，我们需要之后手动解决这些问题，并将对应内容(entry)转移到期望的位置。</li><li>(不熟悉)Org之后会生成一个包含所有flagged的entries的agenda view，用户可以遍历这些entries来做一些必要的动作。如果在对MobileOrg中的entry进行标记的时候一个note已经存储了，那么这个note会在光标处于对应agenda line的时候在回显区域显示出来。<br>关于 ?<br>在哪个特定的agenda中按下 <code>?</code> 将会在另外一个windows中显示整个被标记的笔记(flagging note)，也会将它push到kill ring中。所以，你可以在这个entry中使用 <code>?z C-y C-c C-c</code> 保存哪个标记笔记为普通笔记。连续键入 <code>?</code> 两次将会体同将 :FLAGGED:标签联通记录的标记笔记（flagging note）（在一个属性中被保存）一起被移走。这样，你可以用此来表示这个 flagged entry的处理已经完成。如果你不能够直接处理所有的flagged entries，你可以通过 <code>C-c a</code> 回到这个agenda view。</li></ol></div></li><li><a id="orgheadline193"></a>PC端的Push<br><div class="outline-text-6" id="text-13-4-2-2-2"><p>推送内容到MobileOrg端(PC端的push)的时候，会推送PC上设置的 <code>org-mobile-files</code> 对应的文件，该变量对应的文件路径是相对 <code>org-directory</code> 的路径，默认使用 <code>org-agenda-files</code> ,被退送的目标是 <code>org-mobile-directory</code> 设定的位置。Push的过程大致如下：</p><ol class="org-ol"><li>拷贝 <code>org-mobile-files</code> 中的内容到同步目录 <code>org-mobile-directory</code> 中，文档中提到，如果待推送的文件是一个链接文件，那么链接文件名称需要和源名称一致。</li><li>创建特定的agendas.org文件，这些文件可以是用户自定义的agenda view，由 <code>org-mobile-agendas</code> 来设定。</li><li>最后，orgmode会写一个 <code>index.org</code> 文件，这个文件包含所有到其他文件的链接，Mobile首先在Server中读取这个文件，然后把这个文件中列出的所有agendas文件和org文件下载下来，为了加速下载过程，MobileOrg只读取checksums3被改变的文件。</li></ol></div></li></ol></div><div id="outline-container-orgheadline195" class="outline-5"><h5 id="orgheadline195"><span class="section-number-5">13.4.2.3</span> Org与MobileOrg的同步目录</h5><div class="outline-text-5" id="text-13-4-2-3"><p>我们需要注意，在前面的讲述中所涉及到的同步，其实暗含了两种同步：</p><ol class="org-ol"><li>Mobile端的MobileOrg与PC端的Org之间的同步（通过设定一个同步目录做为中转）这个前面也讲到，主要是Mobile端的Sync（包含Push/Pull）操作，以及PC端的Push/Pull操作。</li><li><p>同步目录在云端与PC/Mobile端的同步前面MobileOrg和Org同步之时，需要经过它们之间的一个共通的“同步目录”。这个目录在Mobile端和PC端的内容和结构需要首先保持一致，才能保证后续MobileOrg和Org之间数据的同步一致。所以，我们在同步PC端的Org与Mobile端的MobileOrg之前，先将PC端和Mobile端的目录通过某种方式进行同步。</p><p>这里同步目录的方式使用用git进行，PC端和Mobile端之间的同步目录用某个git托管服务器进行管理（例如github、bitbucket、或者自己的服务器），任意端的同步目录中数据发生变化后都要推送到托管服务器中，而任意端要读取最新数据都需要从托管服务器中拉取数据，同步目录中的数据更新之后，再进行后续MobileOrg和Org的数据更新。我们也可使用其它方式管理同步目录，比如云存储（百度云、DropBox等）、或者ftp、webdav、ssh等。</p><p>另外，Mobile端的git可以使用pocketgit工具。</p></li></ol></div></div></div><div id="outline-container-orgheadline55" class="outline-4"><h4 id="orgheadline55"><span class="section-number-4">13.4.3</span> 同步操作</h4><div class="outline-text-4" id="text-13-4-3"></div><div id="outline-container-orgheadline196" class="outline-5"><h5 id="orgheadline196"><span class="section-number-5">13.4.3.1</span> PC端的Org推送（Pull）</h5><div class="outline-text-5" id="text-13-4-3-1"><p>命令如下：<br><code>M-x org-mobile-push</code> <br>推送之后，会在同步目录（即 <code>org-mobile-directory</code> 对应的路径）中建立 <code>org-mobile-files</code> 对应文件列表的路径结构，并拷贝相应文件到其中。</p></div></div><div id="outline-container-orgheadline197" class="outline-5"><h5 id="orgheadline197"><span class="section-number-5">13.4.3.2</span> PC端的Org拉取（Push）</h5><div class="outline-text-5" id="text-13-4-3-2"><p>命令如下：<br><code>M-x org-mobile-pull</code> <br>运行之后，其对应的 <code>org-mobile-files</code> 便包含了和MobileOrg同步的内容。</p></div></div><div id="outline-container-orgheadline198" class="outline-5"><h5 id="orgheadline198"><span class="section-number-5">13.4.3.3</span> Mobile端的MobileOrg同步（Sync）</h5><div class="outline-text-5" id="text-13-4-3-3"><p>这里使用Android版本的MobileOrg，大致如下：<br>首先设置好同步目录，然后选择软件界面中的"Sync"按钮，即可完成同步（包含Pull和Push）。</p></div></div></div><div id="outline-container-orgheadline56" class="outline-4"><h4 id="orgheadline56"><span class="section-number-4">13.4.4</span> 使用举例</h4><div class="outline-text-4" id="text-13-4-4"><ol class="org-ol"><li>PC上配置好相关变量和目录</li><li>手机上安装好MobileOrg也设置好同步目录</li><li>将PC和手机上的同步目录用github/bitbucket管理</li><li>PC上同步目录更新： <code>git/pull</code></li><li>PC上记录之前运行： <code>org-mobile-pull</code> 可以看到手机上修改的内容。</li><li>PC上记录，记录之后运行： <code>org-mobile-push</code></li><li>PC上的git同步目录上传修改： <code>git add/commit/push</code></li><li>手机上的git同步目录下载更新： <code>git pull</code></li><li>手机上的MobileOrg同步(点击Sync)</li><li>手机上看到PC修改的内容</li><li>手机上修改并同步（点击Sync）</li><li>手机上更新同步目录： <code>git add/commit/push</code></li><li>回到步骤4。</li></ol><p>缺点：列表中的段落，无法识别断行？</p></div></div><div id="outline-container-orgheadline57" class="outline-4"><h4 id="orgheadline57"><span class="section-number-4">13.4.5</span> 其它</h4><div class="outline-text-4" id="text-13-4-5"></div><div id="outline-container-orgheadline199" class="outline-5"><h5 id="orgheadline199"><span class="section-number-5">13.4.5.1</span> 关于Agenda</h5><div class="outline-text-5" id="text-13-4-5-1"><p>在手机端的Mobileorg上，看到的agenda内容是在 <code>org-mobile-files</code> 范围内的内容。</p></div></div><div id="outline-container-orgheadline200" class="outline-5"><h5 id="orgheadline200"><span class="section-number-5">13.4.5.2</span> MobileOrg的实用之处-Capture</h5><div class="outline-text-5" id="text-13-4-5-2"><p>MobileOrg的特长目前看来非编辑和阅读，因为编辑和阅读所支持的格式不全，并且一般都在pc上进行编辑。MobileOrg存在的一个亮点是Capture。</p><p>在MobileOrg上直接捕获(Capture)， 不设置父标题（即新建笔记到Capture下），在PC端运行 <code>org-mobile-pull</code> 的时候，直接将其抓取到 <code>inbox-from-mobile</code> 中，同步后MobileOrg上的相应Capture也会消失。</p><p>这样，手机中随手记下简短的内容，再汇集到PC上整理。</p></div></div></div></div><div id="outline-container-orgheadline58" class="outline-3"><h3 id="orgheadline58"><a id="ID-8d71b667-e32a-4b90-bda7-f20e44154a43"></a><span class="section-number-3">13.5</span> orgmode与jekyll的结合</h3><div class="outline-text-3" id="text-13-5"><p>主要介绍使用orgmode的发布功能生成html文件，然后将orgmode的发布功能与jekyll结合。</p></div><div id="outline-container-orgheadline59" class="outline-4"><h4 id="orgheadline59"><span class="section-number-4">13.5.1</span> 部署</h4><div class="outline-text-4" id="text-13-5-1"></div><div id="outline-container-orgheadline201" class="outline-5"><h5 id="orgheadline201"><span class="section-number-5">13.5.1.1</span> jekyll环境</h5><div class="outline-text-5" id="text-13-5-1-1"><p>路径为 <code>~/mygitrepo/quietheart/mydoc/prepub/jekyll/</code></p></div></div><div id="outline-container-orgheadline202" class="outline-5"><h5 id="orgheadline202"><span class="section-number-5">13.5.1.2</span> orgmode文档环境</h5><div class="outline-text-5" id="text-13-5-1-2"><p>路径为 <code>~/mygitrepo/quietheart/mydoc/prepub/orgmode/</code></p></div></div><div id="outline-container-orgheadline203" class="outline-5"><h5 id="orgheadline203"><span class="section-number-5">13.5.1.3</span> 关键文件结构</h5><div class="outline-text-5" id="text-13-5-1-3"><ul class="org-ul"><li><p>包含各自说明目录的作用</p><pre class="example">~/mygitrepo/quietheart/mydoc/prepub/jekyll/readme~/mygitrepo/quietheart/mydoc/prepub/orgmode/readme</pre></li><li><p>orgmode文档路径中待发布到jekyll的内容在如下路径：</p><pre class="example">~/mygitrepo/quietheart/mydoc/prepub/orgmode/_posts/~/mygitrepo/quietheart/mydoc/prepub/orgmode/data</pre><p>对应的目录内的结构应该是jekyll的镜像子集。</p></li><li><p>其它路径</p><p>其他路径作用会根据需要确定。</p><p>如 <code>~/mygitrepo/quietheart/mydoc/prepub/orgmode/categories/</code> 当前暂时在_posts中写文，完成的文章可能会转移至categories。</p><p>又如 <code>~/mygitrepo/quietheart/mydoc/prepub/orgmode/_includes</code> 这个里面包含为兼容jekyll显示，定义的样式，是html代码片段。</p></li></ul></div></div></div><div id="outline-container-orgheadline60" class="outline-4"><h4 id="orgheadline60"><span class="section-number-4">13.5.2</span> 配置</h4><div class="outline-text-4" id="text-13-5-2"><p>做如下配置，使得orgmode导出的文件直接被导出到jekyll中：</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;;;Publish;;;;;;(require 'org-publish);;old;;(require 'org-html);;old;;(require htmlize);;??(require 'ox-publish)(require 'ox-html)(setq org-publish-project-alist '(    ("org-docs"    :base-directory "~/mygitrepo/quietheart/mydoc/prepub/orgmode/_posts/"    :base-extension "org"    :publishing-directory "~/mygitrepo/quietheart/mydoc/prepub/jekyll/_posts/"    :recursive t    :publishing-function org-html-publish-to-html    :headline-levels 4             ; Just the default for this project.    :language zh-CN    :html-extension "html"    :body-only t ;; Only export section between &lt;body&gt; &lt;/body&gt;        ;;:auto-preamble t    ;;:section-numbers nil     :with-toc nil    :with-smart-quotes t        ;;:with-fixed-width nil    ;;:with-tables t    ;;:with-tasks t    ;;:with-todo-keywords t    ;;:with-timestamps t    ;;:with-footnotes t    ;;:author QuietHeart    ;;:email quiet_heart000@126.com    ;;:with-email t    )    ("org-data"    :base-directory "~/mygitrepo/quietheart/mydoc/prepub/orgmode/data/"    :base-extension "css\\|js\\|png\\|jpg\\|gif\\|pdf\\|mp3\\|ogg\\|swf\\|tgz\\|gz\\|tar\\|zip\\|rar\\|7z"    :publishing-directory "~/mygitrepo/quietheart/mydoc/prepub/jekyll/data/"    :recursive t    :publishing-function org-publish-attachment    )    ("org" :components ("org-docs" "org-data")) ))</pre></div></div></div><div id="outline-container-orgheadline61" class="outline-4"><h4 id="orgheadline61"><span class="section-number-4">13.5.3</span> 被导出文件与jekyll的集成</h4><div class="outline-text-4" id="text-13-5-3"><p>被导出文件按照类似jekyll的方式命名，即 <code>日期-文章名.org</code> ，再经过上述配置，orgmode导出的文件是只包含 <code>body</code> 部分的相同文件名但是扩展名为 <code>.html</code> 的文件。</p><p>这个时候，生成的文件已经能够直接被jekyll应用，集成到jekyll框架内生成的站点中，但是生成的文件格式还是可能有些错乱，而且没有包含jekyll所需的头信息（ <code>YAML Front Matter</code> 信息）。</p></div></div><div id="outline-container-orgheadline62" class="outline-4"><h4 id="orgheadline62"><span class="section-number-4">13.5.4</span> 为待发布文章添加兼容jekyll显示的信息</h4><div class="outline-text-4" id="text-13-5-4"><p>为使得发布的文章能够更好的兼容jekyll信息，需要对待发布的 <code>*.org</code> 文章， 从最开始，依次添加如下额外信息。</p></div><div id="outline-container-orgheadline204" class="outline-5"><h5 id="orgheadline204"><span class="section-number-5">13.5.4.1</span> orgmode html选项</h5><div class="outline-text-5" id="text-13-5-4-1"><p>首先添加文档选项信息，这些信息不直接体现在文章内容上。可以先输入 <code>C-c C-e # html</code> 以便插入html模板，插入的信息类似如下：</p><pre class="example">#+OPTIONS: html-link-use-abs-url:nil html-postamble:auto#+OPTIONS: html-preamble:t html-scripts:t html-style:t#+OPTIONS: html5-fancy:nil tex:t#+HTML_DOCTYPE: xhtml-strict#+HTML_CONTAINER: div#+DESCRIPTION:#+KEYWORDS:#+HTML_LINK_HOME:#+HTML_LINK_UP:#+HTML_MATHJAX:#+HTML_HEAD:#+HTML_HEAD_EXTRA:#+SUBTITLE:#+INFOJS_OPT:#+CREATOR: &lt;a href="http://www.gnu.org/software/emacs/"&gt;Emacs&lt;/a&gt; 23.3.1 (&lt;a href="http://orgmode.org"&gt;Org&lt;/a&gt; mode 8.3.1)#+LATEX_HEADER:</pre><p>不同版本，可能产生的内容有所不同，根据个人需要对此进行修改，如果不需要，那么就不加这个步骤。这里给出一个实例：</p><pre class="example">#+TITLE:GTD管理方式#+AUTHOR:QuietHeart#+DATE:[2015-11-03 二 12:16]</pre></div></div><div id="outline-container-orgheadline205" class="outline-5"><h5 id="orgheadline205"><span class="section-number-5">13.5.4.2</span> jekyll所需的 <code>YAML Front Matter</code></h5><div class="outline-text-5" id="text-13-5-4-2"><p>之后再添加用于jekyll识别的 <code>YAML Front Matter</code> 信息，信息位于 <code>#+BEGIN_HTML...#+END_HTML</code> 之间，必须将信息包含在两对 <code>---</code> 行内，这样生成的导出文件，最开始便是相应的 <code>YAML Front Matter</code> 信息了。具体参见jekyll相关文档。这里给出一个例子：</p><pre class="example">#+BEGIN_HTML---layout: poststitle: GTD管理方式categories: [categories, note]comments: true---#+END_HTML</pre></div></div><div id="outline-container-orgheadline206" class="outline-5"><h5 id="orgheadline206"><span class="section-number-5">13.5.4.3</span> 包含兼容jekyll显示的css样式信息</h5><div class="outline-text-5" id="text-13-5-4-3"><p>再后添加导出html样式信息，该信息是html代码片段而非css文件的包含。由默认 <code>C-c C-e hh</code> 导出的单html文件样式修改而来，修改之时结合jekyll的CSS配置，将这个配置插入到导出的html中，便可使导出的文件样式更好地兼容整个jekyll环境中所定义的样式。</p><p>如前面所述，这里会将该代码片段存成文件 <code>jekyll_orgmode_style.ext</code> ，部署到 <code>orgmode/_includes/</code> 中，并被包含的待发布的文章中，如下：</p><pre class="example">#+INCLUDE: "../_includes/jekyll_orgmode_style.ext"</pre><p>关于样式代码片段内容，根据个人的jekyll样式定义，以及orgmode导出的html样式各有不同，需要自行修改，这里给出一个例子：</p><pre class="example">#+BEGIN_HTML&lt;style type="text/css"&gt;.title  { text-align: center;           margin-bottom: .2em; }.subtitle { text-align: center;            font-size: medium;            font-weight: bold;            margin-top:0; }.todo   { font-family: monospace; color: red; }.done   { font-family: monospace; color: green; }.priority { font-family: monospace; color: orange; }.tag    { background-color: #eee; font-family: monospace;          padding: 2px; font-size: 80%; font-weight: normal; }.timestamp { color: #bebebe; }.timestamp-kwd { color: #5f9ea0; }.org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }.org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }.org-center { margin-left: auto; margin-right: auto; text-align: center; }.underline { text-decoration: underline; }#postamble p, #preamble p { font-size: 90%; margin: .2em; }p.verse { margin-left: 3%; }pre {  border: 1px solid #0c0;  box-shadow: 1px 1px 1px #0e0;  padding: 8pt;  font-family: italic monospace;  color: #C7EDCC;  background-color: #111111;  overflow: auto;  margin: 1.2em;}pre.src {  position: relative;  overflow: visible;  padding-top: 1.2em;}pre.src:before {  display: none;  position: absolute;  background-color: white;  top: -10px;  right: 10px;  padding: 3px;  border: 1px solid black;}pre.src:hover:before { display: inline;}pre.src-sh:before    { content: 'sh'; }pre.src-bash:before  { content: 'sh'; }pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }pre.src-R:before     { content: 'R'; }pre.src-perl:before  { content: 'Perl'; }pre.src-java:before  { content: 'Java'; }pre.src-sql:before   { content: 'SQL'; }table { border-collapse:collapse; }caption.t-above { caption-side: top; }caption.t-bottom { caption-side: bottom; }td, th { vertical-align:top;  }th.org-right  { text-align: center;  }th.org-left   { text-align: center;   }th.org-center { text-align: center; }td.org-right  { text-align: right;  }td.org-left   { text-align: left;   }td.org-center { text-align: center; }dt { font-weight: bold; }.footpara { display: inline; }.footdef  { margin-bottom: 1em; }.figure { padding: 1em; }.figure p { text-align: center; }.inlinetask {  padding: 10px;  border: 2px solid gray;  margin: 10px;  background: #ffffcc;}#org-div-home-and-up { text-align: right; font-size: 70%; white-space: nowrap; }.linenr { font-size: smaller }.code-highlighted { background-color: #ffff00; }.org-info-js_info-navigation { border-style: none; }#org-info-js_console-label  { font-size: 10px; font-weight: bold; white-space: nowrap; }.org-info-js_search-highlight{ background-color: #ffff00; color: #000000; font-weight: bold; }  &lt;/style&gt;#+END_HTML</pre></div></div><div id="outline-container-orgheadline207" class="outline-5"><h5 id="orgheadline207"><span class="section-number-5">13.5.4.4</span> 添加文章内容目录索引</h5><div class="outline-text-5" id="text-13-5-4-4"><p>为保证用于jekyll的 <code>YAML Front Matter</code> 位于文件最前，前面的 <code>:with-toc nil</code> 配置可以确保orgmode不会自动将目录插入到文件开始，但是如果需要为文章加入目录信息，可以手动通过 <code>#+TOC: headlines 3</code> 在需要之处插入目录。实例如下：</p><pre class="example">#+TOC: headlines 3</pre></div></div><div id="outline-container-orgheadline208" class="outline-5"><h5 id="orgheadline208"><span class="section-number-5">13.5.4.5</span> 需要添加信息的汇总</h5><div class="outline-text-5" id="text-13-5-4-5"><p>这里为清晰起见，做一个汇总，经过前面添加的过程，最终我们在所要发布的 <code>*.org</code> 文章里添加的信息举例如下：</p><pre class="example">#+TITLE:GTD管理方式#+AUTHOR:QuietHeart#+DATE:[2015-11-03 二 12:16]#+BEGIN_HTML---layout: poststitle: GTD管理方式categories: [categories, note]comments: true---#+END_HTML#+INCLUDE: "../_includes/jekyll_orgmode_style.ext" #+TOC: headlines 3</pre><p>注意，文章内容中的链接全部用相对于orgmode配置的发布源路径的相对链接。</p></div></div></div><div id="outline-container-orgheadline63" class="outline-4"><h4 id="orgheadline63"><span class="section-number-4">13.5.5</span> 发布命令</h4><div class="outline-text-4" id="text-13-5-5"><p>配置好信息之后，直接运行orgmode的发布命令即可将相应orgmode文件转换为html文件：<code>M-x org-publish-project RET org RET</code></p><p>或者输入 <code>C-c C-e P x</code></p><p>注意，因为缓存的关系，如果没有被修改的文件，有时候可能不会被重新发布，可以只发布当前文件： <code>C-c C-e P f</code></p></div></div><div id="outline-container-orgheadline64" class="outline-4"><h4 id="orgheadline64"><span class="section-number-4">13.5.6</span> 其他</h4><div class="outline-text-4" id="text-13-5-6"><p>参考资料：<a href="http://orgmode.org/worg/org-tutorials/org-jekyll.html" target="_blank" rel="noopener">http://orgmode.org/worg/org-tutorials/org-jekyll.html</a></p><p><a href="http://higrid.net/c-art-orgmode_jeklly_github.htm" target="_blank" rel="noopener">http://higrid.net/c-art-orgmode_jeklly_github.htm</a></p><p><a href="http://orgmode.org/worg/org-tutorials/org-publish-html-tutorial.html" target="_blank" rel="noopener">http://orgmode.org/worg/org-tutorials/org-publish-html-tutorial.html</a></p><p>自行配置的时候，可能在执行的时候发布命令会报错，</p><pre class="example">Publishing file /home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/_posts/2015-11-03-GTD_Manage_Method.org using `org-publish-org-to-html'find-buffer-visiting: Wrong type argument: stringp, (:base-directory "~/mygitrepo/quietheart/mydoc/prepub/orgmode/_posts/" :base-extension "org" :publishing-directory "~/mygitrepo/quietheart/mydoc/prepub/jekyll/_posts/" :recursive t :publishing-function org-publish-org-to-html ...)</pre><p>这时候可以参考如下信息：</p><p><a href="http://www.cnblogs.com/banjia/archive/2012/09/29/2708966.html" target="_blank" rel="noopener">http://www.cnblogs.com/banjia/archive/2012/09/29/2708966.html</a></p><p><a href="http://comments.gmane.org/gmane.emacs.orgmode/76412" target="_blank" rel="noopener">http://comments.gmane.org/gmane.emacs.orgmode/76412</a></p><p><a href="http://orgmode.org/worg/org-8.0.html" target="_blank" rel="noopener">http://orgmode.org/worg/org-8.0.html</a></p></div></div></div><div id="outline-container-orgheadline65" class="outline-3"><h3 id="orgheadline65"><span class="section-number-3">13.6</span> Misc collection</h3><div class="outline-text-3" id="text-13-6"><p>杂乱无章的收集的文档，暂时无法分类可能待整理?</p></div><div id="outline-container-orgheadline66" class="outline-4"><h4 id="orgheadline66"><span class="section-number-4">13.6.1</span> &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 14:55] </span></span> Agenda view------</h4><div class="outline-text-4" id="text-13-6-1"><p>From:/home/miracle/mydata/orgmode/gtd/inbox.org</p><ul class="org-ul"><li><p>把当前buffer加入到agenda files中</p><p><code>C-c [</code></p></li><li><p>把当前buffer从agenda files中移除</p><p><code>C-c ]</code></p></li></ul></div></div></div></div><div id="outline-container-orgheadline67" class="outline-2"><h2 id="orgheadline67"><span class="section-number-2">14</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[35/111]</code>(<code>[31%]</code>)</h2><div class="outline-text-2" id="text-14"><ul class="org-ul"><li>State "WAIT/FORWARD" from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 15:10] </span></span> <br>wait for all finishied.</li></ul></div><div id="outline-container-orgheadline68" class="outline-3"><h3 id="orgheadline68"><span class="section-number-3">14.1</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> 如何隐藏"标题星星"？</h3><div class="outline-text-3" id="text-14-1"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-23 一 17:53]</span></span></li></ul><p>参考下面的资料：</p><pre class="example">啊，十分感谢，果然也可以隐藏星星，而且没有INDENT所带来的问题，虽然在某级别下行输入普通文本不会自动缩进，不过已经很好了。  另，开启这个变量的方式是在.EMACS文件中加入(SETQ ORG-HIDE-LEADING-STARS T)【 在 UNKNOWNZERX 的大作中提到: 】: 话说有个ORG-HIDE-LEADING-STARS变量</pre></div></div><div id="outline-container-orgheadline69" class="outline-3"><h3 id="orgheadline69"><span class="section-number-3">14.2</span> <span class="todo LATER">LATER</span> 搜索子树相关</h3><div class="outline-text-3" id="text-14-2"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:33]</span></span></li></ul><p>C-c / d 建立一个包含所有deadline的TODO项目的sparse treeC-c / b 建立一个包含deadline在指定日期前的TODO项目的sparse treeC-c / a 建立一个包含deadline在指定日期后的TODO项目的sparse tree </p></div></div><div id="outline-container-orgheadline70" class="outline-3"><h3 id="orgheadline70"><span class="section-number-3">14.3</span> <span class="done DONE">DONE</span> 各个级别标题列表如何缩进？</h3><div class="outline-text-3" id="text-14-3"><p>用调整的级别的命令即可。例如参考：<a href="#orgheadline5">标题大纲操作</a> 和 <a href="#orgheadline16">列表操作</a> 相关命令。</p></div></div><div id="outline-container-orgheadline71" class="outline-3"><h3 id="orgheadline71"><span class="section-number-3">14.4</span> <span class="done DONE">DONE</span> 各个级别列表标题中的内容段落如何缩进？</h3><div class="outline-text-3" id="text-14-4"><p>可以参考<a href="#orgheadline16">列表操作</a> 相关命令。</p></div></div><div id="outline-container-orgheadline72" class="outline-3"><h3 id="orgheadline72"><span class="section-number-3">14.5</span> <span class="todo LATER">LATER</span> 如何显示图片</h3><div class="outline-text-3" id="text-14-5"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:33]</span></span></li></ul></div></div><div id="outline-container-orgheadline73" class="outline-3"><h3 id="orgheadline73"><span class="section-number-3">14.6</span> <span class="done DONE">DONE</span> 如何删除标题或者项目以及子树下的内容？</h3><div class="outline-text-3" id="text-14-6"><ul class="org-ul"><li>State "DONE"       from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-20 五 12:14]</span></span></li></ul><p>目前可以在大纲状态下标记某部分成活动区域，然后删除便会连同子树一并删除。</p><p>输入 <code>C-c C-x C-w</code> ，具体参考 <a href="#orgheadline5">标题大纲操作</a></p></div></div><div id="outline-container-orgheadline74" class="outline-3"><h3 id="orgheadline74"><span class="section-number-3">14.7</span> <span class="done DONE">DONE</span> 如何链接文件和位置之类的？</h3><div class="outline-text-3" id="text-14-7"><p>参考 <a href="#orgheadline23">链接</a></p></div></div><div id="outline-container-orgheadline75" class="outline-3"><h3 id="orgheadline75"><span class="section-number-3">14.8</span> <span class="done DONE">DONE</span> 如何行内转义引用?</h3><div class="outline-text-3" id="text-14-8"><p>参考<a href="#orgtarget2">格式</a>部分的内容</p></div></div><div id="outline-container-orgheadline76" class="outline-3"><h3 id="orgheadline76"><span class="section-number-3">14.9</span> <span class="done DONE">DONE</span> 如何设置启动时的自动折叠？</h3><div class="outline-text-3" id="text-14-9"><p>可以参考<a href="#orgtarget1">标题大纲配置</a></p></div></div><div id="outline-container-orgheadline77" class="outline-3"><h3 id="orgheadline77"><span class="section-number-3">14.10</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> 如何预览效果？</h3><div class="outline-text-3" id="text-14-10"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:33]</span></span></li></ul></div></div><div id="outline-container-orgheadline78" class="outline-3"><h3 id="orgheadline78"><span class="section-number-3">14.11</span> <span class="done DONE">DONE</span> 标签的预定义</h3><div class="outline-text-3" id="text-14-11"><p>参考 <a href="#orgheadline32">标签配置</a></p></div></div><div id="outline-container-orgheadline79" class="outline-3"><h3 id="orgheadline79"><span class="section-number-3">14.12</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> 如何自动对齐ORGMODE文件的格式？</h3><div class="outline-text-3" id="text-14-12"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:33]</span></span></li></ul></div></div><div id="outline-container-orgheadline80" class="outline-3"><h3 id="orgheadline80"><span class="section-number-3">14.13</span> <span class="done DONE">DONE</span> 如何在标题间跳转？</h3><div class="outline-text-3" id="text-14-13"><p>参考 <a href="#orgheadline5">标题大纲操作</a></p></div></div><div id="outline-container-orgheadline81" class="outline-3"><h3 id="orgheadline81"><span class="section-number-3">14.14</span> <span class="done DONE">DONE</span> 如何缩进列表段落？</h3><div class="outline-text-3" id="text-14-14"><p>可以参考<a href="#orgheadline16">列表操作</a> 相关命令。</p></div></div><div id="outline-container-orgheadline82" class="outline-3"><h3 id="orgheadline82"><span class="section-number-3">14.15</span> <span class="todo LATER">LATER</span> 貌似自动刷新功能还是没有完全实现</h3><div class="outline-text-3" id="text-14-15"><ul class="org-ul"><li>State "LATER"      from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 16:32]</span></span></li></ul><p>在refile的时候会体现出来，还需要 <code>C-x C-v</code> 手动进行。</p></div></div><div id="outline-container-orgheadline83" class="outline-3"><h3 id="orgheadline83"><span class="section-number-3">14.16</span> <span class="done DONE">DONE</span> 如何增加状态？</h3><div class="outline-text-3" id="text-14-16"><p>参考 <a href="#orgheadline8">TODO配置</a></p></div></div><div id="outline-container-orgheadline84" class="outline-3"><h3 id="orgheadline84"><span class="section-number-3">14.17</span> <span class="done DONE">DONE</span> 如何定制状态的各种属性？</h3><div class="outline-text-3" id="text-14-17"><p>配置属性参考： <a href="#orgheadline8">TODO配置</a></p></div></div><div id="outline-container-orgheadline85" class="outline-3"><h3 id="orgheadline85"><span class="section-number-3">14.18</span> <span class="done DONE">DONE</span> 如何设置和进行TODO的状态快捷切换？</h3><div class="outline-text-3" id="text-14-18"><p>快捷切换参考:TODO<a href="#orgheadline9">操作</a> </p></div></div><div id="outline-container-orgheadline86" class="outline-3"><h3 id="orgheadline86"><span class="section-number-3">14.19</span> <span class="done DONE">DONE</span> 如何按状态搜索TODO项目？</h3><div class="outline-text-3" id="text-14-19"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 16:21]</span></span></li></ul><p>输入 <code>C-c a T</code>具体参见<a href="#orgheadline41">Agenda操作</a></p></div></div><div id="outline-container-orgheadline87" class="outline-3"><h3 id="orgheadline87"><span class="section-number-3">14.20</span> <span class="todo LATER">LATER</span> 如何实现代码原样引用？</h3><div class="outline-text-3" id="text-14-20"><p>对于:#+BEGIN_SRC  emacs-lisp:#+END_SRC</p><p>:#+BEGIN_EXAMPLE:#+END_EXAMPLE这样的代码块，最好在相关的引用块中缩进一下。</p></div></div><div id="outline-container-orgheadline88" class="outline-3"><h3 id="orgheadline88"><span class="section-number-3">14.21</span> <span class="done DONE">DONE</span> 配置折叠状态编辑的动作</h3><div class="outline-text-3" id="text-14-21"><p>参考：<a href="#orgtarget1">标题大纲配置</a></p></div></div><div id="outline-container-orgheadline89" class="outline-3"><h3 id="orgheadline89"><span class="section-number-3">14.22</span> <span class="todo LATER">LATER</span> 按照TAG进行搜索</h3><div class="outline-text-3" id="text-14-22"><ul class="org-ul"><li>State "LATER"      from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 16:32]</span></span></li></ul></div></div><div id="outline-container-orgheadline90" class="outline-3"><h3 id="orgheadline90"><span class="section-number-3">14.23</span> <span class="todo LATER">LATER</span> 导出与发布</h3></div><div id="outline-container-orgheadline91" class="outline-3"><h3 id="orgheadline91"><span class="section-number-3">14.24</span> <span class="done DONE">DONE</span> 如何调整大纲缩进显示</h3><div class="outline-text-3" id="text-14-24"><p>需要设置org=startup-indented，或者indent选项，参考<a href="#orgtarget1">标题大纲配置</a></p></div></div><div id="outline-container-orgheadline92" class="outline-3"><h3 id="orgheadline92"><span class="section-number-3">14.25</span> <span class="done DONE">DONE</span> 如何写行内引用的文字，类似markdown中的``。</h3><div class="outline-text-3" id="text-14-25"><p>等宽字体即可，参考：<a href="#orgtarget2">格式</a></p></div></div><div id="outline-container-orgheadline93" class="outline-3"><h3 id="orgheadline93"><span class="section-number-3">14.26</span> <span class="done DONE">DONE</span> 如何确保硬换行</h3><div class="outline-text-3" id="text-14-26"><p>列表或其他行尾插入 <code>\\</code>具体参考：<a href="#orgheadline13">硬换行</a></p></div></div><div id="outline-container-orgheadline94" class="outline-3"><h3 id="orgheadline94"><span class="section-number-3">14.27</span> <span class="done DONE">DONE</span> 如何保存一个与文件位置无关的链接？ <code>C-c l</code> 相关参数？</h3><div class="outline-text-3" id="text-14-27"><p>配置全局链接。参考:<a href="#orgheadline25">链接配置</a></p></div></div><div id="outline-container-orgheadline95" class="outline-3"><h3 id="orgheadline95"><span class="section-number-3">14.28</span> <span class="done DONE">DONE</span> 如何简化列表标题等文档复杂度</h3><div class="outline-text-3" id="text-14-28"><p>简化结构。参考：<a href="#orgheadline47">建议</a></p></div></div><div id="outline-container-orgheadline96" class="outline-3"><h3 id="orgheadline96"><span class="section-number-3">14.29</span> <span class="done CANCEL">CANCEL</span> 如何定制插入的时间戳格式？</h3><div class="outline-text-3" id="text-14-29"><ul class="org-ul"><li>State "CANCEL"     from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-20 五 12:15]</span></span></li><li>State "LATER"      from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-22 四 09:54]</span></span></li></ul></div></div><div id="outline-container-orgheadline97" class="outline-3"><h3 id="orgheadline97"><span class="section-number-3">14.30</span> <span class="todo LATER">LATER</span> 如何在Refile的时候新建一个标题？org-refile-allow-creating-parent-nodes?</h3><div class="outline-text-3" id="text-14-30"><ul class="org-ul"><li>State "LATER"      from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-09 五 15:29]</span></span></li></ul></div></div><div id="outline-container-orgheadline98" class="outline-3"><h3 id="orgheadline98"><span class="section-number-3">14.31</span> <span class="done DONE">DONE</span> 恢复到默认的大纲内容模式还不太好用</h3><div class="outline-text-3" id="text-14-31"><p>使用 <code>C-u C-u TAB</code> 参考：<a href="#orgheadline5">大纲操作</a>。</p></div></div><div id="outline-container-orgheadline99" class="outline-3"><h3 id="orgheadline99"><span class="section-number-3">14.32</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 是否可以org-agenda-files只使用一个文件，对应文件中列出所有agenda文件？</h3><div class="outline-text-3" id="text-14-32"><ul class="org-ul"><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-09 五 15:33] </span></span> <br>wait for move to appropriate place.</li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-09 五 15:29]</span></span></li></ul><p>可以参考如下设置：</p><div class="org-src-container"><pre class="src src-emacs-lisp">(setq org-agenda-files (concat org-directory "gtd/agendafiles"))</pre></div><p>对应的文件类似如下：</p><pre class="example">gtd/gtd/next.orggtd/later.orggtd/maybe_future/gtd/cancel/gtd/done/gtd/_active/gtd/_review/gtd/output/</pre></div></div><div id="outline-container-orgheadline100" class="outline-3"><h3 id="orgheadline100"><span class="section-number-3">14.33</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 如何设置问题Open的时间？</h3><div class="outline-text-3" id="text-14-33"><ul class="org-ul"><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 16:22] </span></span> <br>没有完全解决，需要将有用信息转移的合适位置，没有解决的部分视情况切换状态。</li><li>直接方式<br></li></ul><p>目前来说，如果直接插入一个TODO项目就暂时没有相应的时间戳，只能间接实现，如后面所述。</p><ul class="org-ul"><li>间接方式<br></li></ul><p>设置如下参数：</p><div class="org-src-container"><pre class="src src-emacs-lisp">(setq org-todo-keywords '((sequence                            "INBOX(i!)"                           "NEXT(n!)"                           "LATER(l!)"                           "WAIT/FORWARD(w@/!)"                           "MAYBE/FUTURE(m!)"                           "|" "CANCEL(c!)" "DONE(d!)"                           )))</pre></div><p>注意其中的'!'表示添加时间戳信息。这样插入一个普通项目之后，可以通过切换成INBOX状态达到自动插入时间戳的目的。这样设置之后，也会导致任何的状态切换会自动在相应的TODO项目标题下添加一个时间戳和状态切换信息。</p></div></div><div id="outline-container-orgheadline101" class="outline-3"><h3 id="orgheadline101"><span class="section-number-3">14.34</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 确认一下agenda的配置文件是否可以配置目录？</h3><div class="outline-text-3" id="text-14-34"><ul class="org-ul"><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 16:29] </span></span> <br>等待整理至合适位置</li></ul><p>将org-agenda-files变量设置成单文件后，将采用这个文件内容列出的文件列表做为agenda的备选文件，目前实践看来可以将这个文件中某项文件列表写成目录路径。</p></div></div><div id="outline-container-orgheadline102" class="outline-3"><h3 id="orgheadline102"><span class="section-number-3">14.35</span> <span class="todo LATER">LATER</span> 考虑使用F1-n设置自己日常使用的自定义快捷方式，并且保证不要与其它冲突。</h3><div class="outline-text-3" id="text-14-35"><ul class="org-ul"><li>State "LATER"      from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 16:32]</span></span></li></ul></div></div><div id="outline-container-orgheadline103" class="outline-3"><h3 id="orgheadline103"><span class="section-number-3">14.36</span> <span class="todo LATER">LATER</span> 标题如何添加序号？</h3><div class="outline-text-3" id="text-14-36"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:33]</span></span></li></ul></div></div><div id="outline-container-orgheadline104" class="outline-3"><h3 id="orgheadline104"><span class="section-number-3">14.37</span> <span class="todo LATER">LATER</span> 如何直接插入一个子标题？</h3><div class="outline-text-3" id="text-14-37"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-09 五 15:18]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-10-09 五 15:16]</span></span></li></ul><p>目前的方法是先用 <code>C-Ret</code> 插入一个同级标题，然后没有移动光标的情况下直接用 <code>TAB</code> 缩进到合适级别，或者用特定的标题操作缩进。</p></div></div><div id="outline-container-orgheadline105" class="outline-3"><h3 id="orgheadline105"><a id="ID-3be776f5-573d-4c0f-9ff9-0d84243cd343"></a><span class="section-number-3">14.38</span> <span class="done DONE">DONE</span> 参考并整理结构编辑的相关操作：</h3><div class="outline-text-3" id="text-14-38"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-20 五 12:15]</span></span></li></ul><p>参考网址为：<a href="http://orgmode.org/manual/Structure-editing.html#Structure-editingo" target="_blank" rel="noopener">http://orgmode.org/manual/Structure-editing.html#Structure-editingo</a>整理至：<a href="#orgheadline5">大纲操作</a></p></div></div><div id="outline-container-orgheadline106" class="outline-3"><h3 id="orgheadline106"><a id="ID-398b913b-0ac4-4ece-b19d-167e76f4d07e"></a><span class="section-number-3">14.39</span> <span class="done DONE">DONE</span> 如何对一个子树进行导出？</h3><div class="outline-text-3" id="text-14-39"><ul class="org-ul"><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-17 二 16:38]</span></span></li></ul><p>输入 <code>C-c C-e</code> 之后，再输入 <code>C-s</code> 选择导出范围。</p></div></div><div id="outline-container-orgheadline107" class="outline-3"><h3 id="orgheadline107"><span class="section-number-3">14.40</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> 注意，断行要用'\\'，要么就空白一行。</h3><div class="outline-text-3" id="text-14-40"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-17 二 16:39]</span></span></li></ul></div></div><div id="outline-container-orgheadline108" class="outline-3"><h3 id="orgheadline108"><span class="section-number-3">14.41</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 如何解决输入下划线的时候，自动转换为下标？（想要不转换）</h3><div class="outline-text-3" id="text-14-41"><ul class="org-ul"><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-19 一 12:02] </span></span> <br>等待整理至合适位置</li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-12 一 09:36]</span></span></li><li>State "INBOX"      from              [2015-10-08 四 14:48</li></ul><p>对于上下标引导(_和^)字符，只解释后面'{}'括起来的文字为上下标，其余不解释。设置如下：</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;don't interpret"-" and "^" for display(interpret with "{}").(setq org-use-sub-superscripts '{})(setq org-export-with-sub-superscripts '{})</pre></div><p>变量 <code>org-use-sub-superscripts</code> 用来控制是否显示之时解释 <code>-</code> 引导的下标，还是 <code>^</code> 引导的上标；如果解释值为t，则始终对引导的内容解释成上下标；如果不解释，则值为nil；如果只在将文字用'{}'括起来的时候才解释，则设置为'{}； </p><p>变量 <code>org-export-with-sub-superscripts</code> 类似，不过解释的时机为导出之时解释，而非显示。8.0这两个变量互相为对方的别名，后来不是了。</p><p>对于导出html格式，如果设置 <code>org-use-sub-superscripts</code> 不管用，设置 <code>org-export-with-sub-superscripts</code> 才管用。</p><p>效果：</p><pre class="example">正常文字_正常文字正常文字_{下标}正常文字^正常文字正常文字^{上标}normal_normalnormal_{sub}normal^normalnormal^{sup}</pre></div></div><div id="outline-container-orgheadline109" class="outline-3"><h3 id="orgheadline109"><span class="section-number-3">14.42</span> <span class="todo LATER">LATER</span> orgmode refile如何创建新的文件和条目，如何定位设置之外的路径</h3><div class="outline-text-3" id="text-14-42"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:33]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">&lt;2015-10-02 五 14:10&gt;</span></span></p></div></div><div id="outline-container-orgheadline110" class="outline-3"><h3 id="orgheadline110"><span class="section-number-3">14.43</span> <span class="done DONE">DONE</span> orgmode如何只对一个指定的子标题生成html等导出文件？</h3><div class="outline-text-3" id="text-14-43"><ul class="org-ul"><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-17 二 16:41]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">&lt;2015-10-07 三 11:12&gt;</span></span>参考：<a href="#orgheadline45">导出操作</a></p></div></div><div id="outline-container-orgheadline111" class="outline-3"><h3 id="orgheadline111"><span class="section-number-3">14.44</span> <span class="done DONE">DONE</span> 如何在capture模板中将时间戳设置为非活跃时间戳，以减少Agenda的显示负担？</h3><div class="outline-text-3" id="text-14-44"><ul class="org-ul"><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-09 五 15:26]</span></span></li></ul><p>在模板中使用 <code>%u/%U</code> 来替代 <code>%t/%T</code> ，例如：</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;Capture template(setq org-capture-templates '(;;                            ("t" "Tasks" entry (file+headline "gtd/inbox.org" "Tasks") "* INBOX %?\nTime:%T\n")                              ("t" "Tasks" entry (file+headline "gtd/inbox.org" "Tasks") "* INBOX %?\nTime:%U\n")                              ("p" "Projects" entry (file+headline "gtd/inbox.org" "Projects")  "* %?\nTime:%U\n")                              ("i" "Item notes" item (file+headline "gtd/inbox.org" "Items")  "+ %?\n  Time:%U\n  From:%F\n")                              ("m" "Misc notes" entry (file+headline "gtd/inbox.org" "Notes")  "* ------Time:%U------\nFrom:%F\n%?")                             ))</pre></div></div></div><div id="outline-container-orgheadline112" class="outline-3"><h3 id="orgheadline112"><a id="ID-082a67ca-18ae-4b61-8a35-2de45929fa86"></a><span class="section-number-3">14.45</span> <span class="done DONE">DONE</span> orgmode如何插入带有时间（而不仅仅是日期）的时间戳？</h3><div class="outline-text-3" id="text-14-45"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-22 四 09:55]</span></span></li><li>State "NEXT"       from "DONE"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-09 五 15:26]</span></span></li><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-09 五 14:26]</span></span></li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-09 五 09:41]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-09 五 09:37]</span></span>具体参考：<a href="#orgheadline29">时间戳操作</a>使用 <code>C-u C-c !</code></p></div></div><div id="outline-container-orgheadline113" class="outline-3"><h3 id="orgheadline113"><span class="section-number-3">14.46</span> <span class="todo LATER">LATER</span> 整理一下emacs_orgmodeusage的文档格式</h3><div class="outline-text-3" id="text-14-46"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-17 二 16:41]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">&lt;2015-10-09 五 09:36&gt;</span></span></p></div></div><div id="outline-container-orgheadline114" class="outline-3"><h3 id="orgheadline114"><span class="section-number-3">14.47</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> 如何在活跃与非活跃时间戳之间进行切换？</h3><div class="outline-text-3" id="text-14-47"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:33]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-10-09 五 15:26]</span></span></li></ul></div></div><div id="outline-container-orgheadline115" class="outline-3"><h3 id="orgheadline115"><span class="section-number-3">14.48</span> <span class="todo NEXT">NEXT</span> 如何打开链接的时候不新开一个窗口？</h3><div class="outline-text-3" id="text-14-48"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-17 二 16:41]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-10-09 五 15:09]</span></span></li></ul></div></div><div id="outline-container-orgheadline116" class="outline-3"><h3 id="orgheadline116"><span class="section-number-3">14.49</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> orgmode 的BEGIN_SRC总是导出错误，提示输入的语言参数，如何确定有哪些语言参数？</h3><div class="outline-text-3" id="text-14-49"><ul class="org-ul"><li>State "WAIT/FORWARD" from "DONE"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 16:15] </span></span> <br>need move to right place.</li><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 16:14]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-09 五 14:26]</span></span>参考：<a href="http://orgmode.org/manual/Languages.html#Languages" target="_blank" rel="noopener">orgmode相关文档网址</a>目前大致支持如下格式：</p><table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"><colgroup><col class="org-left"><col class="org-left"></colgroup><thead><tr><th scope="col" class="org-left">Language</th><th scope="col" class="org-left">Identifier</th></tr></thead><tbody><tr><td class="org-left">Awk</td><td class="org-left">awk</td></tr></tbody><tbody><tr><td class="org-left">C++</td><td class="org-left">C++</td></tr></tbody><tbody><tr><td class="org-left">CSS</td><td class="org-left">css</td></tr></tbody><tbody><tr><td class="org-left">ditaa</td><td class="org-left">ditaa</td></tr></tbody><tbody><tr><td class="org-left">Emacs Calc</td><td class="org-left">calc</td></tr></tbody><tbody><tr><td class="org-left">Fortran</td><td class="org-left">fortran</td></tr></tbody><tbody><tr><td class="org-left">Haskell</td><td class="org-left">haskell</td></tr></tbody><tbody><tr><td class="org-left">Javascript</td><td class="org-left">js</td></tr></tbody><tbody><tr><td class="org-left">Ledger</td><td class="org-left">ledger</td></tr></tbody><tbody><tr><td class="org-left">Lilypond</td><td class="org-left">lilypond</td></tr></tbody><tbody><tr><td class="org-left">Mscgen</td><td class="org-left">mscgen</td></tr></tbody><tbody><tr><td class="org-left">Octave</td><td class="org-left">octave</td></tr></tbody><tbody><tr><td class="org-left">Oz</td><td class="org-left">oz</td></tr></tbody><tbody><tr><td class="org-left">Plantuml</td><td class="org-left">plantuml</td></tr></tbody><tbody><tr><td class="org-left">Python</td><td class="org-left">python</td></tr></tbody><tbody><tr><td class="org-left">Ruby</td><td class="org-left">ruby</td></tr></tbody><tbody><tr><td class="org-left">Scheme</td><td class="org-left">scheme</td></tr></tbody><tbody><tr><td class="org-left">Sed</td><td class="org-left">sed</td></tr></tbody><tbody><tr><td class="org-left">SQL</td><td class="org-left">sql</td></tr></tbody><tbody><tr><td class="org-left">SQLite</td><td class="org-left">sqlite</td></tr></tbody><tbody><tr><td class="org-left">Asymptote</td><td class="org-left">asymptote</td></tr></tbody><tbody><tr><td class="org-left">C</td><td class="org-left">C</td></tr></tbody><tbody><tr><td class="org-left">Clojure</td><td class="org-left">clojure</td></tr></tbody><tbody><tr><td class="org-left">D</td><td class="org-left">d</td></tr></tbody><tbody><tr><td class="org-left">Graphviz</td><td class="org-left">dot</td></tr></tbody><tbody><tr><td class="org-left">Emacs Lisp</td><td class="org-left">emacs-lisp</td></tr></tbody><tbody><tr><td class="org-left">gnuplot</td><td class="org-left">gnuplot</td></tr></tbody><tbody><tr><td class="org-left">Java</td><td class="org-left">java</td></tr></tbody><tbody><tr><td class="org-left">LaTeX</td><td class="org-left">latex</td></tr></tbody><tbody><tr><td class="org-left">Lisp</td><td class="org-left">lisp</td></tr></tbody><tbody><tr><td class="org-left">MATLAB</td><td class="org-left">matlab</td></tr></tbody><tbody><tr><td class="org-left">Objective Caml</td><td class="org-left">ocaml</td></tr></tbody><tbody><tr><td class="org-left">Org mode</td><td class="org-left">org</td></tr></tbody><tbody><tr><td class="org-left">Perl</td><td class="org-left">perl</td></tr></tbody><tbody><tr><td class="org-left">Processing.js</td><td class="org-left">processing</td></tr></tbody><tbody><tr><td class="org-left">R</td><td class="org-left">R</td></tr></tbody><tbody><tr><td class="org-left">Sass</td><td class="org-left">sass</td></tr></tbody><tbody><tr><td class="org-left">GNU Screen</td><td class="org-left">screen</td></tr></tbody><tbody><tr><td class="org-left">shell</td><td class="org-left">sh</td></tr></tbody></table><p>例如，如果使用Emacs Lisp的格式那么这样：</p><pre class="example">#+BEGIN_SRC emacs-lispxxx#+END_SRC</pre></div></div><div id="outline-container-orgheadline117" class="outline-3"><h3 id="orgheadline117"><span class="section-number-3">14.50</span> <span class="todo LATER">LATER</span> 如果Agenda对应TODO状态发生变化，如何刷新Agenda view?</h3><div class="outline-text-3" id="text-14-50"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 16:26]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 16:21]</span></span></p><hr><p>在Agenda的TODO筛选界面（如 <code>C-c a T</code> ）上按照提示操作 (如 <code>r</code> )。</p></div></div><div id="outline-container-orgheadline118" class="outline-3"><h3 id="orgheadline118"><span class="section-number-3">14.51</span> <span class="done DONE">DONE</span> orgmode有没有离线帮助手册在emacs中直接使用？</h3><div class="outline-text-3" id="text-14-51"><ul class="org-ul"><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-17 二 16:41]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-09 五 14:27]</span></span></p><p>输入 <code>M-x info</code> ， 之后能够看到orgmode相关的文档。</p></div></div><div id="outline-container-orgheadline119" class="outline-3"><h3 id="orgheadline119"><span class="section-number-3">14.52</span> <span class="todo LATER">LATER</span> 如何自由切换orgmode的活跃和非活跃时间戳？</h3><div class="outline-text-3" id="text-14-52"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:34]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-09 五 15:46]</span></span></p></div></div><div id="outline-container-orgheadline120" class="outline-3"><h3 id="orgheadline120"><span class="section-number-3">14.53</span> <span class="todo LATER">LATER</span> 如何在orgmode中调整已有列表条目的缩进级别？</h3><div class="outline-text-3" id="text-14-53"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:35]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-09 五 16:11]</span></span></p></div></div><div id="outline-container-orgheadline121" class="outline-3"><h3 id="orgheadline121"><span class="section-number-3">14.54</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> Orgmode表格格式如何自动添加分割横线？为何导出时没有列分割？</h3><div class="outline-text-3" id="text-14-54"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:34]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 12:05]</span></span></p><hr></div></div><div id="outline-container-orgheadline122" class="outline-3"><h3 id="orgheadline122"><span class="section-number-3">14.55</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> Agenda view不折行？</h3><div class="outline-text-3" id="text-14-55"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:34]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 16:36]</span></span></p><hr><p>例如 <code>C-c a T</code></p></div></div><div id="outline-container-orgheadline123" class="outline-3"><h3 id="orgheadline123"><span class="section-number-3">14.56</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> 如何格式化块？如删除块？</h3><div class="outline-text-3" id="text-14-56"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:35]</span></span></li></ul></div></div><div id="outline-container-orgheadline124" class="outline-3"><h3 id="orgheadline124"><span class="section-number-3">14.57</span> <span class="todo LATER">LATER</span> 如何自动触发状态变化？</h3><div class="outline-text-3" id="text-14-57"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:35]</span></span></li></ul><p>例如自动触发状态切换，自动触发refile之类的？</p></div></div><div id="outline-container-orgheadline125" class="outline-3"><h3 id="orgheadline125"><span class="section-number-3">14.58</span> <span class="done DONE">DONE</span> orgmode与mobile org整合</h3><div class="outline-text-3" id="text-14-58"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 10:49]</span></span></li></ul><p>目前感觉不是非常好用，mobile org中Capture功能相对实用一些，可以将片段捕捉下来，同步到电脑上。具体参见：<a href="#orgheadline52">orgmode与mobile org整合</a></p></div></div><div id="outline-container-orgheadline126" class="outline-3"><h3 id="orgheadline126"><span class="section-number-3">14.59</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> Orgmode refile如何到特定的标题上而非仅仅追加或者插入？</h3><div class="outline-text-3" id="text-14-59"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 17:21]</span></span></li><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:35]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-19 一 09:54]</span></span></p><hr><p>另外，如何新建文件？新建标题之类的？</p><p>关于refile之时不将被refile的标题做为子标题，参见如下回答：</p><pre class="example">If you specify org-refile-use-outline-path to be 'file it is possible to just use the path of the file as the refile target and the node will be entered at the top-level.(setq org-refile-use-outline-path 'file)(setq org-refile-targets '((org-agenda-files :level . 1)))You can see the full documentation of org-refile-use-outline-path with C-h v org-refile-use-outline-path RET.</pre><p>网址：<a href="http://stackoverflow.com/questions/21334817/emacs-org-mode-refile-to-main-tree-and-not-as-a-subtree" target="_blank" rel="noopener">http://stackoverflow.com/questions/21334817/emacs-org-mode-refile-to-main-tree-and-not-as-a-subtree</a></p></div></div><div id="outline-container-orgheadline127" class="outline-3"><h3 id="orgheadline127"><span class="section-number-3">14.60</span> <span class="done CANCEL">CANCEL</span> orgmode attachment的内容需要看一下</h3><div class="outline-text-3" id="text-14-60"><ul class="org-ul"><li>State "CANCEL"     from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2015-11-20 五 12:18]</span></span></li><li>State "WAIT/FORWARD" from "CANCEL"     <span class="timestamp-wrapper"><span class="timestamp">[2015-11-20 五 12:18]</span></span></li><li>State "CANCEL"     from "CANCEL"     <span class="timestamp-wrapper"><span class="timestamp">[2015-11-20 五 12:18]</span></span></li><li>State "CANCEL"     from "CANCEL"     <span class="timestamp-wrapper"><span class="timestamp">[2015-11-20 五 12:18]</span></span></li><li>State "CANCEL"     from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-20 五 12:17]</span></span></li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-14 三 10:17]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-13 二 08:45]</span></span></p><hr><p>attachment功能感觉不是很适用于当前自己的内容管理体系，故取消。</p><dl class="org-dl"><dt>设置当前标签的附件目录</dt><dd>输入 <code>C-c C-a s</code>, 然后输入附件的目录,之后会增加一个 <code>ATTACH_DIR</code> 属性,指向你设置的目录路径.</dd><dt>附件操作</dt><dd>输入 <code>C-c C-a</code>, 然后有相应的子命令,进行操作,具体参见帮助.<dl class="org-dl"><dt>添加附件</dt><dd>输入 <code>a</code>, 会视 <code>org-attach-method</code> 的值, 将相应的附件复制/拷贝/链接到 <code>ATTACH_DIR</code> 对应目录中,并追加一项 <code>Attachments</code> 属性.</dd></dl></dd></dl></div></div><div id="outline-container-orgheadline128" class="outline-3"><h3 id="orgheadline128"><span class="section-number-3">14.61</span> <span class="todo NEXT">NEXT</span> 如何在orgmode中打开链接的时候不会自动新开窗口而是使用已有窗口？</h3><div class="outline-text-3" id="text-14-61"><ul class="org-ul"><li>State "NEXT"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2015-11-09 一 10:26]</span></span></li><li>State "WAIT/FORWARD" from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-05 四 11:12] </span></span> <br>等待整理至合适的位置。</li><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-21 三 15:10]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-19 一 11:11]</span></span></p><hr><p>配置帮助等新开弹出窗口为上下方式分割后，这个问题消失了，跟踪链接会自动使用当前窗口而非新开了。配置如下：</p><div class="org-src-container"><pre class="src src-emacs-lisp">;; perfer split 'pop' window vertically(whole-&gt;up+lower).(setq split-height-threshold 0)(setq split-width-threshold nil)</pre></div><p>后来有出现了，跟踪链接的时候都会新开一个窗口。</p></div></div><div id="outline-container-orgheadline129" class="outline-3"><h3 id="orgheadline129"><span class="section-number-3">14.62</span> <span class="todo LATER">LATER</span> orgmode 如何修改时间戳？直接编辑？</h3><div class="outline-text-3" id="text-14-62"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:35]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-23 五 11:36]</span></span></p><hr></div></div><div id="outline-container-orgheadline130" class="outline-3"><h3 id="orgheadline130"><span class="section-number-3">14.63</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> agenda如何不扫描有些状态，如done、cancel、maybe/future</h3><div class="outline-text-3" id="text-14-63"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:35]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-23 五 09:15]</span></span></p><hr></div></div><div id="outline-container-orgheadline131" class="outline-3"><h3 id="orgheadline131"><span class="section-number-3">14.64</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> orgmode的块是否可以嵌套？比如quote块内是否可以quote？</h3><div class="outline-text-3" id="text-14-64"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:35]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-23 五 09:48]</span></span></p><hr></div></div><div id="outline-container-orgheadline132" class="outline-3"><h3 id="orgheadline132"><span class="section-number-3">14.65</span> <span class="todo LATER">LATER</span> orgmode如何在导出子树的时候自动以标题命名？</h3><div class="outline-text-3" id="text-14-65"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-12 一 10:01]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-12 一 09:50]</span></span></p><hr></div></div><div id="outline-container-orgheadline133" class="outline-3"><h3 id="orgheadline133"><span class="section-number-3">14.66</span> <span class="todo LATER">LATER</span> orgmode如何指定导出的路径和文件名称？</h3><div class="outline-text-3" id="text-14-66"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-12 一 10:02]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-12 一 09:54]</span></span></p><hr></div></div><div id="outline-container-orgheadline134" class="outline-3"><h3 id="orgheadline134"><span class="section-number-3">14.67</span> <span class="todo LATER">LATER</span> orgmode光标如何定位到下一个链接？</h3><div class="outline-text-3" id="text-14-67"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-12 一 10:02]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-12 一 09:58]</span></span></p><hr></div></div><div id="outline-container-orgheadline135" class="outline-3"><h3 id="orgheadline135"><span class="section-number-3">14.68</span> <span class="todo LATER">LATER</span> orgmode如何实现任务自动触发定时切换以及refile</h3><div class="outline-text-3" id="text-14-68"><ul class="org-ul"><li>State "LATER"      from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-12 一 10:07]</span></span></li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-12 一 10:07]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-12 一 10:03]</span></span></p><hr></div></div><div id="outline-container-orgheadline136" class="outline-3"><h3 id="orgheadline136"><span class="section-number-3">14.69</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 列表与换行</h3><div class="outline-text-3" id="text-14-69"><ul class="org-ul"><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-26 一 09:48] </span></span> <br>等待移动至合适的位置</li></ul><p><span class="timestamp-wrapper"><span class="timestamp">[2015-10-19 一 07:52]</span></span></p><p>想到一个方法解决列表内多段落的问题。</p><ol class="org-ol"><li><p>换行 :: 杜绝硬换行的习惯</p><p>硬换行用“\\”，但是输入不便且有些情况不支持（如MobileOrg），所以想要换行，就新起一段落，那么新行前多一个空行。</p><p>这是一个新行，也是新段落。</p><p>一个段落，实际就是一行。逻辑关系有标点表示。</p></li><li><p>列表内换行 :: 用描述列表</p><p>有时为美观，列表第一换行若用一空行则显得与列表项标题相距有点远，并且第一行内容一般也很少，一般都是总体描述性文字。所以，建议第一行是简短描述时用描述列表，第一行在描述的“::”后，之后的段落也用空行。若直接第一行就很长不是描述，那么不用描述列表，并且宁可与列表项标题多空一行，也不用断行符。</p></li></ol></div></div><div id="outline-container-orgheadline137" class="outline-3"><h3 id="orgheadline137"><span class="section-number-3">14.70</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> orgmode建议</h3><div class="outline-text-3" id="text-14-70"><ul class="org-ul"><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-26 一 09:49] </span></span> <br>等待移动至合适的位置</li></ul><p><span class="timestamp-wrapper"><span class="timestamp">[2015-10-20 二 07:44]</span></span>建议标题以2级开始（题目视作一级）</p></div></div><div id="outline-container-orgheadline138" class="outline-3"><h3 id="orgheadline138"><span class="section-number-3">14.71</span> <span class="todo LATER">LATER</span> Orgmode中checkbox和header也可以结合使用</h3><div class="outline-text-3" id="text-14-71"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-27 二 14:26]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-26 一 11:01]</span></span></p><hr><p>例子如下：</p><pre class="example">TODO list [0%]+ [ ] Read previous resource manage files.+ [ ] Read current header file.+ [ ] Read current document.+ [ ] Design work.</pre></div></div><div id="outline-container-orgheadline139" class="outline-3"><h3 id="orgheadline139"><span class="section-number-3">14.72</span> <span class="todo LATER">LATER</span> 确认一下orgmode中的引用块相关细节，例如begin example和begin quote之间的区别</h3><div class="outline-text-3" id="text-14-72"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:36]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-26 一 11:02]</span></span></p><hr></div></div><div id="outline-container-orgheadline140" class="outline-3"><h3 id="orgheadline140"><span class="section-number-3">14.73</span> <span class="done CANCEL">CANCEL</span> 考虑orgmode中，是否应该每一个状态添加!，将处理信息和状态信息集成。</h3><div class="outline-text-3" id="text-14-73"><ul class="org-ul"><li>State "CANCEL"     from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-30 一 18:03] </span></span> <br>当前没有必要</li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-27 二 14:27]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-26 一 14:09]</span></span></p><hr></div></div><div id="outline-container-orgheadline141" class="outline-3"><h3 id="orgheadline141"><span class="section-number-3">14.74</span> <span class="todo LATER">LATER</span> orgmode 如何递归折叠光标所在节点？</h3><div class="outline-text-3" id="text-14-74"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:36]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-28 三 13:54]</span></span></p><hr></div></div><div id="outline-container-orgheadline142" class="outline-3"><h3 id="orgheadline142"><span class="section-number-3">14.75</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> emacs markdown 导出</h3><div class="outline-text-3" id="text-14-75"><ul class="org-ul"><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-30 五 10:27] </span></span> <br>等待转移至合适位置</li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-30 五 10:25]</span></span></p><hr><p>可以参考一下这个网址：<a href="http://stackoverflow.com/questions/22988092/emacs-org-mode-export-markdown" target="_blank" rel="noopener">http://stackoverflow.com/questions/22988092/emacs-org-mode-export-markdown</a></p><p>使用官方提供的 <code>C-c C-e</code> 后没有导出markdown的m选项。</p><blockquote><p>I have some weird behavior, I don't actually know if it's a bug or something else. When I do C-c C-e the option to convert to markdown doesn't appear. Nonetheless I can type the option M-x org-md-export-as-markdown and after I do that, the option export to markdown appears in the C-c C-e menu.</p><p>Any Ideas?</p></blockquote><p>解决方案是</p><blockquote><p>If you are using Org-mode version 8.0 or later (check with M-x org-version), the export framework is broken up into several libraries that are not necessarily loaded by default.</p><p>Something like this in your Emacs configuration can load the Markdown exporter automatically with Org-mode:</p><p>(eval-after-load "org"  '(require 'ox-md nil t))</p><p>shareimprove this answer</p></blockquote></div></div><div id="outline-container-orgheadline143" class="outline-3"><h3 id="orgheadline143"><span class="section-number-3">14.76</span> <span class="done DONE">DONE</span> orgmode与jekyll的结合</h3><div class="outline-text-3" id="text-14-76"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2015-12-18 五 14:12]</span></span></li><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-04 三 15:27] </span></span> <br>待转移至合适位置</li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-03 二 15:30]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-03 二 15:28]</span></span></li></ul><p>大致思路是：建立一个与jekyll目录结构类似的orgmode路径，org文件存于其中，发布导出路径是jekyll。具体参见：<a href="#orgheadline58">orgmode与jekyll的结合</a></p></div></div><div id="outline-container-orgheadline144" class="outline-3"><h3 id="orgheadline144"><span class="section-number-3">14.77</span> <span class="todo LATER">LATER</span> orgmode如何输入成块的原样文字而不解释、缩进之类的？</h3><div class="outline-text-3" id="text-14-77"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:36]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-30 五 11:17]</span></span></p><hr></div></div><div id="outline-container-orgheadline145" class="outline-3"><h3 id="orgheadline145"><span class="section-number-3">14.78</span> <span class="todo LATER">LATER</span> 为什么orgmode定义好的refile如果是单个文件，那么这个文件内容会自动变化？</h3><div class="outline-text-3" id="text-14-78"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:36]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-05 四 10:27]</span></span></p><hr></div></div><div id="outline-container-orgheadline146" class="outline-3"><h3 id="orgheadline146"><span class="section-number-3">14.79</span> <span class="todo LATER">LATER</span> Jekyll与orgmode结合的问题</h3><div class="outline-text-3" id="text-14-79"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:36]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-16 一 09:18]</span></span></p><hr><p>添加postamble</p><p>包含文件的“绝对”相对路径如何实现？</p><p>使用orgmode结合jekyll的策略和功能的分开。</p><p>策略在jekyll的readme里，功能在orgmode文档中。</p></div></div><div id="outline-container-orgheadline147" class="outline-3"><h3 id="orgheadline147"><span class="section-number-3">14.80</span> <span class="todo NEXT">NEXT</span> 如何为orgmode导出添加作者信息？</h3><div class="outline-text-3" id="text-14-80"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-16 一 10:31]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-11 三 16:54]</span></span></p><hr></div></div><div id="outline-container-orgheadline148" class="outline-3"><h3 id="orgheadline148"><span class="section-number-3">14.81</span> <span class="todo LATER">LATER</span> emacs如何导出的时候不缓存上次修改差异而直接强制导出？</h3><div class="outline-text-3" id="text-14-81"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-16 一 10:31]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-13 五 11:16]</span></span></p><hr></div></div><div id="outline-container-orgheadline149" class="outline-3"><h3 id="orgheadline149"><span class="section-number-3">14.82</span> <span class="done DONE">DONE</span> 是否应该为取消的项目在切换到取消之前添加备注，类似wait/forward，指明为什么取消？</h3><div class="outline-text-3" id="text-14-82"><ul class="org-ul"><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:36]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-16 一 10:35]</span></span></p><hr></div></div><div id="outline-container-orgheadline150" class="outline-3"><h3 id="orgheadline150"><span class="section-number-3">14.83</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> orgmode多文件文档</h3><div class="outline-text-3" id="text-14-83"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:36]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-18 三 10:33]</span></span></p><hr><p>各个分片文档组成整体文档</p></div></div><div id="outline-container-orgheadline151" class="outline-3"><h3 id="orgheadline151"><span class="section-number-3">14.84</span> <span class="todo LATER">LATER</span> orgmode中导出时的include关键字所基于的路径能否配置？</h3><div class="outline-text-3" id="text-14-84"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:36]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-18 三 17:37]</span></span></p><hr></div></div><div id="outline-container-orgheadline152" class="outline-3"><h3 id="orgheadline152"><span class="section-number-3">14.85</span> <span class="todo LATER">LATER</span> 如何在orgmode中时间戳中选择特定的时间插入？需要知道相关的指令和按键，而非手动修改。</h3><div class="outline-text-3" id="text-14-85"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:37]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-23 一 10:41]</span></span></p><hr></div></div><div id="outline-container-orgheadline153" class="outline-3"><h3 id="orgheadline153"><span class="section-number-3">14.86</span> <span class="todo NEXT">NEXT</span> orgmode导出utf8问题</h3><div class="outline-text-3" id="text-14-86"><ul class="org-ul"><li>State "NEXT"       from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:37]</span></span></li><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:37]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-23 一 14:09]</span></span></p><hr></div></div><div id="outline-container-orgheadline154" class="outline-3"><h3 id="orgheadline154"><span class="section-number-3">14.87</span> <span class="done CANCEL">CANCEL</span> orgmode sub task and summary.</h3><div class="outline-text-3" id="text-14-87"><ul class="org-ul"><li>State "CANCEL"     from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-24 二 11:54] </span></span> <br>no need , it is described in TODO operation.</li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-24 二 11:06]</span></span></p><hr></div></div><div id="outline-container-orgheadline155" class="outline-3"><h3 id="orgheadline155"><span class="section-number-3">14.88</span> <span class="done DONE">DONE</span> 切换和设置优先级</h3><div class="outline-text-3" id="text-14-88"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 11:44]</span></span></li><li>State "WAIT/FORWARD" from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 11:39]</span></span></li><li>State "LATER"      from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 11:39]</span></span></li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 11:39]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 11:39]</span></span></li></ul><p>参考: <a href="#orgheadline6">TODO项目</a> 相关配置和操作。</p><p>大致如下：</p><ul class="org-ul"><li>配置</li></ul><div class="org-src-container"><pre class="src src-elisp">;;set priority(setq org-highest-priority ?A)(setq org-lowest-priority ?D)(setq org-default-priority ?A)(setq org-priority-faces '(                           (?A . org-warning)                           (?B . (:background "DodgerBlue" :foreground "black" :weight bold))                            (?C . (:foreground "SkyBlue" :weight bold))                           (?D . (:foreground "DodgerBlue" :weight bold))                            ))</pre></div><ul class="org-ul"><li>操作</li></ul><p>切换优先级输入 <code>S-UP/S-DOWN</code></p></div></div><div id="outline-container-orgheadline156" class="outline-3"><h3 id="orgheadline156"><span class="section-number-3">14.89</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> archive</h3><div class="outline-text-3" id="text-14-89"><ul class="org-ul"><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 14:36] </span></span> <br>wait for move.</li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 11:57]</span></span></li></ul></div><div id="outline-container-orgheadline157" class="outline-4"><h4 id="orgheadline157"><span class="section-number-4">14.89.1</span> 配置</h4><div class="outline-text-4" id="text-14-89-1"><p>具体内容可以参见： <code>C-h v org-archive-default-command</code>, <code>C-h v org-archive-location</code>, <code>C-h v org-archive-save-context-info</code></p></div><div id="outline-container-orgheadline209" class="outline-5"><h5 id="orgheadline209"><span class="section-number-5">14.89.1.1</span> 配置归档位置</h5><div class="outline-text-5" id="text-14-89-1-1"><p>将内容根据“年-月-日-包含文件名的标题-被归档的标题”的层次，归档在指定路径的文档中，如下</p><div class="org-src-container"><pre class="src src-elisp">(setq org-archive-location (concat org-directory "gtd/_archive/201511_archive.org::datetree/* Archive from %s"));;(setq org-archive-location (concat org-directory "gtd/_archive/session" (format-time-string "%Y%m") "_archive.org::datetree/* Archive from %s"))</pre></div></div></div><div id="outline-container-orgheadline210" class="outline-5"><h5 id="orgheadline210"><span class="section-number-5">14.89.1.2</span> 配置归档包含的信息</h5><div class="outline-text-5" id="text-14-89-1-2"><p>归档之后，被归档节点属性包含：时间、文件、标签、todo状态、分类、节点在归档前的路径等信息：</p><div class="org-src-container"><pre class="src src-elisp">(setq org-archive-save-context-info '(time file ltags itags todo category olpath))</pre></div></div></div></div><div id="outline-container-orgheadline158" class="outline-4"><h4 id="orgheadline158"><span class="section-number-4">14.89.2</span> 操作</h4><div class="outline-text-4" id="text-14-89-2"><dl class="org-dl"><dt>采用默认的方式归档</dt><dd><p>输入 <code>C-c C-x C-a</code> </p><p>这会默认将当前标题归档为同名，但是后缀为 <code>.org_archieve</code> 的归档文件(无论状态是不是done)。这个命令具体会怎么执行，会根据 <code>org-archive-default=command</code> 的设置而定， 默认值为： <code>org-archive-subtree</code></p></dd><dt>(no term)</dt><dd><p>归档命令</p><dl class="org-dl"><dt><code>C-c C-x C-s</code> 或者 <code>C-c $</code></dt><dd>执行 <code>org-archive-subtree</code> ， 将所选内容归档至指定文件指定标题，具体可通过 <code>org-archive-location</code> 指定。</dd><dt><code>C-u C-c C-x C-s</code></dt><dd>类似前面，但是归档之前会检测被归档的标题子标题是否有open的todo项目，如果没有就移动，否则提示。如果光标不再标题，则对所有顶级标题开始依次遍历并检测归档。</dd><dt><code>C-u C-u C-c C-x C-s</code></dt><dd>类似前面，但是检测之时，检测的是过期的时间戳，而非todo项目。</dd></dl><p>以上命令中，第一个经常用到，后面两个不怎么用，如果保存被归档内容的更多信息，需要配置 <code>org-archive-save-context-info</code> , 归档之后，标题中的链接和引用仍然有效。</p></dd></dl></div></div><div id="outline-container-orgheadline159" class="outline-4"><h4 id="orgheadline159"><span class="section-number-4">14.89.3</span> 举例</h4><div class="outline-text-4" id="text-14-89-3"><p>如上配置之后，例如</p><pre class="example">*Title1**DONE sub title1 CLOSED: [2015-11-27 五 14:17]- State "DONE"       from              [2015-11-27 五 14:17]***subsub title1****DONE subsubsub title1CLOSED: [2015-11-27 五 14:18]- State "DONE"       from              [2015-11-27 五 14:18]****subsubsub title2****subsubsub title3***subsub title2**sub title2</pre><p>注意以上格式中，标题前面应该和'*' 之间有一个空格。执行 <code>C-c C-x C-a</code> 之后，会在相应路径生成一个201510_archive.org文件，追加了如下内容：</p><pre class="example">*2015**2015-11 十一月***2015-11-27 星期五****Archive from orgmodetest.org*****DONE subsubsub title1CLOSED: [2015-11-27 五 14:18]:PROPERTIES::ARCHIVE_TIME: 2015-11-27 五 14:23:ARCHIVE_FILE: ~/test/emacs/orgmodetest.org:ARCHIVE_TODO: DONE:ARCHIVE_CATEGORY: orgmodetest:ARCHIVE_OLPATH: Title1/sub title1/subsub title1:END:- State "DONE"       from              [2015-11-27 五 14:18]</pre></div></div></div><div id="outline-container-orgheadline160" class="outline-3"><h3 id="orgheadline160"><span class="section-number-3">14.90</span> <span class="todo NEXT">NEXT</span> orgmode中为何example块中的标题还遵从orgmode的格式？</h3><div class="outline-text-3" id="text-14-90"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:37]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 15:05]</span></span></p><hr></div></div><div id="outline-container-orgheadline161" class="outline-3"><h3 id="orgheadline161"><span class="section-number-3">14.91</span> <span class="todo NEXT">NEXT</span> orgmode导出为utf8报告错误</h3><div class="outline-text-3" id="text-14-91"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-04 五 15:37]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-04 五 10:31]</span></span></p><hr><p>错误信息如下</p><pre class="example">org-export-numbered-headline-p: Wrong type argument: number-or-marker-p, nil</pre><p>目前看来是在一个标题下添加了对其他内容的引用（通过id）之后出现这个问题，例如:</p><pre class="example">** DONE wk1548CLOSED: [2015-12-04 五 10:09]:PROPERTIES::ID:       b287eddd-9629-49d9-9949-6042f71b8047:END:- State "DONE"       from "NEXT"       [2015-12-04 五 10:09]参考:[[id:3f6910c4-e8ea-4cf7-8dad-c13ab7127074][周报回顾]]</pre></div></div><div id="outline-container-orgheadline162" class="outline-3"><h3 id="orgheadline162"><span class="section-number-3">14.92</span> <span class="todo LATER">LATER</span> orgmode在引用块中缩进的标题问题</h3><div class="outline-text-3" id="text-14-92"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-04 五 15:37]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-04 五 10:36]</span></span></p><hr><p>参见：<a href="http://comments.gmane.org/gmane.emacs.orgmode/103258" target="_blank" rel="noopener">http://comments.gmane.org/gmane.emacs.orgmode/103258</a></p></div></div><div id="outline-container-orgheadline163" class="outline-3"><h3 id="orgheadline163"><span class="section-number-3">14.93</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> orgmode导出markdown有太多的引用标记，如何尽可能原样展示而非很多的'style'类似的东西？</h3><div class="outline-text-3" id="text-14-93"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-04 五 15:37]</span></span></li><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-04 五 15:37]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-04 五 10:40]</span></span></p><hr></div></div><div id="outline-container-orgheadline164" class="outline-3"><h3 id="orgheadline164"><span class="section-number-3">14.94</span> <span class="todo LATER">LATER</span> orgmode 番茄钟、时间记录</h3><div class="outline-text-3" id="text-14-94"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-10 四 10:36]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-07 一 09:53]</span></span></p><hr></div></div><div id="outline-container-orgheadline165" class="outline-3"><h3 id="orgheadline165"><span class="section-number-3">14.95</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> orgmode为什么refile 目标会跟踪软链接到其他目录中？</h3><div class="outline-text-3" id="text-14-95"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-11 五 17:39]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-10 四 11:27]</span></span></p><hr></div></div><div id="outline-container-orgheadline166" class="outline-3"><h3 id="orgheadline166"><span class="section-number-3">14.96</span> <span class="todo LATER">LATER</span> 属性</h3><div class="outline-text-3" id="text-14-96"><ul class="org-ul"><li>State "LATER"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-12-16 三 08:56]</span></span></li></ul></div><div id="outline-container-orgheadline167" class="outline-4"><h4 id="orgheadline167"><span class="section-number-4">14.96.1</span> 操作</h4><div class="outline-text-4" id="text-14-96-1"><dl class="org-dl"><dt>在当前所在标题插入属性</dt><dd>输入 <code>C-c C-x p</code>, 输入之后,按照提示输入属性名和属性值.</dd></dl><pre class="example"> * 测试属性 :PROPERTIES::test:     name:what:     no:END:</pre><dl class="org-dl"><dt>移除一个属性</dt><dd>在相应的属性区域输入 <code>C-c C-c d</code>, 输入之后,按照提示输入待删除的属性名.</dd></dl></div></div></div><div id="outline-container-orgheadline168" class="outline-3"><h3 id="orgheadline168"><span class="section-number-3">14.97</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> ormode项目管理</h3><div class="outline-text-3" id="text-14-97"><ul class="org-ul"><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-10 四 11:25] </span></span> <br>等待整理至合适位置</li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-10 四 10:33]</span></span></p><hr><p>子项目的管理：如果子项目中有未完成的项目，理论上说，这些子项中的最高优先级别状态，就是父项目的状态。项目优先级为：NEXT&gt;LATER&gt;WAIT&gt;INBOX&gt;DONE=CANCEL</p></div></div><div id="outline-container-orgheadline169" class="outline-3"><h3 id="orgheadline169"><span class="section-number-3">14.98</span> <span class="done DONE">DONE</span> orgmode考虑是否应该将状态文件以'_' 做为前缀，便于angenda中一目了然不和其他文件混淆？</h3><div class="outline-text-3" id="text-14-98"><ul class="org-ul"><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-18 五 13:37]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-15 二 10:57]</span></span></p><hr><p>已经将状态文件冠以 <code>_</code> 前缀，便于在Agenda View中集中浏览。</p></div></div><div id="outline-container-orgheadline170" class="outline-3"><h3 id="orgheadline170"><span class="section-number-3">14.99</span> <span class="todo NEXT">NEXT</span> orgmode应用聚合有哪些场景？ <code>[2/7]</code></h3><div class="outline-text-3" id="text-14-99"><ul class="org-ul"><li>State "NEXT"       from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-18 五 14:03]</span></span></li><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-18 五 13:39]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-16 三 11:25]</span></span></p><hr><dl class="org-dl"><dt class="on"><code>[X]</code> 与MobileOrg的结合</dt><dd>参见 <a href="#orgheadline52">orgmode与mobile org整合</a></dd><dt class="off"><code>[&#xa0;]</code> (no term)</dt><dd>基本语法</dd><dt class="off"><code>[&#xa0;]</code> (no term)</dt><dd>如何安装?</dd><dt class="off"><code>[&#xa0;]</code> (no term)</dt><dd>如何管理文档?</dd><dt class="on"><code>[X]</code> 如何与jekyll结合</dt><dd>参见 <a href="#orgheadline58">orgmode与jekyll的结合</a></dd><dt class="off"><code>[&#xa0;]</code> 如何管理gtd?</dt><dd>参见</dd><dt class="off"><code>[&#xa0;]</code> (no term)</dt><dd>学习之路？基本语法-&gt;capture+refile-&gt;export+publish 开始就写文档，并且记录 <code>FAQ</code></dd></dl><p>等等.</p></div></div><div id="outline-container-orgheadline171" class="outline-3"><h3 id="orgheadline171"><span class="section-number-3">14.100</span> <span class="todo LATER">LATER</span> orgmode记时功能可以提高集中力</h3><div class="outline-text-3" id="text-14-100"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-18 五 13:38]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-17 四 09:51]</span></span></p><hr></div></div><div id="outline-container-orgheadline172" class="outline-3"><h3 id="orgheadline172"><span class="section-number-3">14.101</span> <span class="todo NEXT">NEXT</span> Orgmode如何官方发问？</h3><div class="outline-text-3" id="text-14-101"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-21 一 15:57]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-18 五 16:55]</span></span></p><hr></div><div id="outline-container-orgheadline173" class="outline-4"><h4 id="orgheadline173"><span class="section-number-4">14.101.1</span> 订阅邮件列表</h4><div class="outline-text-4" id="text-14-101-1"><p>首先订阅相关邮件列表，定位参见：<a href="https://lists.gnu.org/mailman/listinfo/emacs-orgmode" target="_blank" rel="noopener">Emacs-orgmode &#x2013; General discussions about Org-mode.</a></p></div></div><div id="outline-container-orgheadline174" class="outline-4"><h4 id="orgheadline174"><span class="section-number-4">14.101.2</span> 参考</h4><div class="outline-text-4" id="text-14-101-2"><p><a href="http://www.catb.org/esr/faqs/smart-questions.html" target="_blank" rel="noopener">http://www.catb.org/esr/faqs/smart-questions.html</a></p><p><a href="http://orgmode.org/community.html" target="_blank" rel="noopener">Mailing list and IRC channel</a></p></div></div></div><div id="outline-container-orgheadline175" class="outline-3"><h3 id="orgheadline175"><span class="section-number-3">14.102</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> Ascii art</h3><div class="outline-text-3" id="text-14-102"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-01-05 二 15:38]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-31 四 14:20]</span></span></p><hr></div></div><div id="outline-container-orgheadline176" class="outline-3"><h3 id="orgheadline176"><span class="section-number-3">14.103</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> artist mode in emacs</h3><div class="outline-text-3" id="text-14-103"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-01-05 二 15:38]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-31 四 14:31]</span></span></p><hr><p><a href="http://www.emacswiki.org/emacs/ArtistMode" target="_blank" rel="noopener">http://www.emacswiki.org/emacs/ArtistMode</a></p></div></div><div id="outline-container-orgheadline177" class="outline-3"><h3 id="orgheadline177"><span class="section-number-3">14.104</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> Emacs中的plantuml配置如何与ascii art格式图形结合？</h3><div class="outline-text-3" id="text-14-104"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-01-05 二 15:38]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-31 四 16:35]</span></span></p><hr></div></div><div id="outline-container-orgheadline178" class="outline-3"><h3 id="orgheadline178"><span class="section-number-3">14.105</span> <span class="todo LATER">LATER</span> orgmode画图</h3><div class="outline-text-3" id="text-14-105"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-01-05 二 15:38]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-30 三 13:42]</span></span></p><hr></div></div><div id="outline-container-orgheadline179" class="outline-3"><h3 id="orgheadline179"><a id="ID-ebed58d3-05fc-41a8-b719-12e0e408dddc"></a><span class="section-number-3">14.106</span> <span class="todo LATER">LATER</span> pdflatex for orgmode</h3><div class="outline-text-3" id="text-14-106"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-01-05 二 15:38]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-31 四 11:56]</span></span></p><hr><p>sudo apt-get install latex-beamer</p></div></div><div id="outline-container-orgheadline180" class="outline-3"><h3 id="orgheadline180"><span class="section-number-3">14.107</span> <span class="todo NEXT">NEXT</span> mobileorg的加密功能，可以防止隐私的泄漏；orgmode的加密功能既能管理工作又能防止工作隐私泄漏。</h3><div class="outline-text-3" id="text-14-107"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-01-05 二 15:38]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-30 三 10:00]</span></span></p><hr></div></div><div id="outline-container-orgheadline181" class="outline-3"><h3 id="orgheadline181"><span class="section-number-3">14.108</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> orgmode中图片链接导出之时如何不是文字链接而直接图片？</h3><div class="outline-text-3" id="text-14-108"><ul class="org-ul"><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-01-11 一 16:46] </span></span> <br>有待整理</li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-01-11 一 16:43]</span></span></p><hr><p>根据文档，当图片链接有描述文字之时，会在html导出之时显示该图片的描述性文字链接。如果想要直接显示图片可以：</p><ol class="org-ol"><li>添加链接的时候，不给出链接描述文字；</li><li>当图片链接的描述为图片的路径之时（可以为另外一个图片做为其缩略图），导出的时候显示的便不是图片的链接文字，而直接是图片。</li></ol><p>如下：</p><pre class="example">[[/home/miracle/mydata/orgmode/data/image/2010-04-02-editor_study_line.jpg]][[/home/miracle/mydata/orgmode/data/image/2010-04-02-editor_study_line.jpg][/home/miracle/mydata/orgmode/data/image/2010-04-02-editor_study_line.jpg]]</pre><p>问题：实践发现，应该是没有描述的比较实用，描述为图片的有时候似乎不好用？</p></div></div><div id="outline-container-orgheadline182" class="outline-3"><h3 id="orgheadline182"><span class="section-number-3">14.109</span> <span class="todo LATER">LATER</span> orgmode表格导出之后，文本或者html没有竖线只有横线</h3><div class="outline-text-3" id="text-14-109"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-01-13 三 16:36]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-01-11 一 16:22]</span></span></p><hr></div></div><div id="outline-container-orgheadline183" class="outline-3"><h3 id="orgheadline183"><span class="section-number-3">14.110</span> <span class="todo NEXT">NEXT</span> orgmode导出文章pdf问题</h3><div class="outline-text-3" id="text-14-110"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-01-13 三 16:37]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-01-11 一 11:20]</span></span></p><hr></div></div><div id="outline-container-orgheadline184" class="outline-3"><h3 id="orgheadline184"><span class="section-number-3">14.111</span> <span class="todo LATER">LATER</span> orgmode中搜索相关命令的整理</h3><div class="outline-text-3" id="text-14-111"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-01-13 三 16:39]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-01-11 一 10:38]</span></span></p><hr></div></div></div><div id="outline-container-orgheadline185" class="outline-2"><h2 id="orgheadline185"><span class="section-number-2">15</span> 参考资料：</h2><div class="outline-text-2" id="text-15"><p><a href="http://www.fuzihao.org/blog/2015/02/19/org-mode%E6%95%99%E7%A8%8B/" target="_blank" rel="noopener">http://www.fuzihao.org/blog/2015/02/19/org-mode%E6%95%99%E7%A8%8B/</a></p><p><a href="http://orgmode.org/worg/doc.html" target="_blank" rel="noopener">http://orgmode.org/worg/doc.html</a></p><p><a href="http://orgmode.org/manual/" target="_blank" rel="noopener">http://orgmode.org/manual/</a></p><p>比较不错的参考资料：</p><p><a href="http://www.cnblogs.com/bamanzi/archive/2010/04/04/emacs-indent.html" target="_blank" rel="noopener">http://www.cnblogs.com/bamanzi/archive/2010/04/04/emacs-indent.html</a></p><p><a href="http://orgmode.org/worg/org-faq.html#outline-container-shortcuts-for-entering-source-blocks" target="_blank" rel="noopener">http://orgmode.org/worg/org-faq.html#outline-container-shortcuts-for-entering-source-blocks</a></p></div></div><br><div id="mypostamble" align="right" style="float:right" class="status">    <table> <tbody> <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Author</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">QuietHeart</td>  </tr><tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Email</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">    <a href="mailto:quiet_heart000@126.com" target="_blank" rel="noopener">quiet_heart000@126.com</a>  </td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Date</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">[2015-09-11 五 14:08]</td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Update</td>  <td style="border-style: solid;border-width:1px;border-right:0px;"><2016-02-09 二 09:18:11></2016-02-09></td></tr>    </tbody></table></div><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;style type=&quot;text/css&quot;&gt;
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              
      
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
      <category term="study" scheme="http://0.0.0.0:4000/categories/categories/study/"/>
    
      <category term="emacs" scheme="http://0.0.0.0:4000/categories/categories/study/emacs/"/>
    
    
  </entry>
  
  <entry>
    <title>Emacs学习笔记</title>
    <link href="http://0.0.0.0:4000/2015/09/09/emacs_tips/"/>
    <id>http://0.0.0.0:4000/2015/09/09/emacs_tips/</id>
    <published>2015-09-08T16:00:00.000Z</published>
    <updated>2019-09-11T08:57:18.000Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">  .title  { text-align: center;             margin-bottom: .2em; }  .subtitle { text-align: center;              font-size: medium;              font-weight: bold;              margin-top:0; }  .todo   { font-family: monospace; color: red; }  .done   { font-family: monospace; color: green; }  .priority { font-family: monospace; color: orange; }  .tag    { background-color: #eee; font-family: monospace;            padding: 2px; font-size: 80%; font-weight: normal; }  .timestamp { color: #bebebe; }  .timestamp-kwd { color: #5f9ea0; }  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }  .org-center { margin-left: auto; margin-right: auto; text-align: center; }  .underline { text-decoration: underline; }  #postamble p, #preamble p { font-size: 90%; margin: .2em; }  p.verse { margin-left: 3%; }  pre {    border: 1px solid #0c0;    box-shadow: 1px 1px 1px #0e0;    padding: 8pt;    font-family: italic monospace;    color: #C7EDCC;    background-color: #111111;    overflow: auto;    margin: 1.2em;  }  pre.src {    position: relative;    overflow: visible;    padding-top: 1.2em;  }  pre.src:before {    display: none;    position: absolute;    background-color: white;    top: -10px;    right: 10px;    padding: 3px;    border: 1px solid black;  }  pre.src:hover:before { display: inline;}  pre.src-sh:before    { content: 'sh'; }  pre.src-bash:before  { content: 'sh'; }  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }  pre.src-R:before     { content: 'R'; }  pre.src-perl:before  { content: 'Perl'; }  pre.src-java:before  { content: 'Java'; }  pre.src-sql:before   { content: 'SQL'; }  table { border-collapse:collapse; }  caption.t-above { caption-side: top; }  caption.t-bottom { caption-side: bottom; }  td, th { vertical-align:top;  }  th.org-right  { text-align: center;  }  th.org-left   { text-align: center;   }  th.org-center { text-align: center; }  td.org-right  { text-align: right;  }  td.org-left   { text-align: left;   }  td.org-center { text-align: center; }  dt { font-weight: bold; }  .footpara { display: inline; }  .footdef  { margin-bottom: 1em; }  .figure { padding: 1em; }  .figure p { text-align: center; }  .inlinetask {    padding: 10px;    border: 2px solid gray;    margin: 10px;    background: #ffffcc;  }  #org-div-home-and-up   { text-align: right; font-size: 70%; white-space: nowrap; }  .linenr { font-size: smaller }  .code-highlighted { background-color: #ffff00; }  .org-info-js_info-navigation { border-style: none; }  #org-info-js_console-label    { font-size: 10px; font-weight: bold; white-space: nowrap; }  .org-info-js_search-highlight    { background-color: #ffff00; color: #000000; font-weight: bold; }    code {        border:groove #555555;border-width:thin;        background-color: #111111;color: #C7EDCC;    }#table-of-contents {    font-size: 9pt;    position: fixed;    right: 10px;    top: 14em;    margin:0;    padding:0;    border-width:1px;    border-style:solid;    background: #000000;    -webkit-box-shadow: 0 0 1em #777777;    -moz-box-shadow: 0 0 1em #777777;    -webkit-border-bottom-left-radius: 5px;    -moz-border-radius-bottomleft: 5px;    text-align: right;    /* ensure doesn't flow off the screen when expanded */    max-height: 60%;    overflow: auto;     z-index: 200;}#table-of-contents h2 {    font-size: 9pt;    max-width: 8em;    font-weight: normal;    padding-left: 0.5em;    padding-top: 0.05em;    padding-bottom: 0.05em; }#table-of-contents ul {    margin-left: 14pt;     margin-bottom: 10pt;    padding: 0}#table-of-contents li {    padding: 0;    margin: 1px;    list-style: none;}#table-of-contents ul>:first-child {    color: blue;}#table-of-contents #text-table-of-contents {    display: none;    text-align: left;}#table-of-contents:hover #text-table-of-contents {    display: block;    padding: 0.5em;    margin-top: -1.5em; }</style><div id="table-of-contents"><h2>Table of Contents</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 文件操作</a></li><li><a href="#orgheadline2">2. 文件管理</a><ul><li><a href="#orgheadline3">2.1. 目录显示</a></li><li><a href="#orgheadline4">2.2. 文件操作</a></li><li><a href="#orgheadline5">2.3. 标记操作</a><ul><li><a href="#orgheadline6">2.3.1. 删除标记</a></li><li><a href="#orgheadline7">2.3.2. 普通标记</a></li><li><a href="#orgheadline8">2.3.3. 正则表达式标记</a></li><li><a href="#orgheadline9">2.3.4. 结合标记能使用的操作：</a></li><li><a href="#orgheadline10">2.3.5. 其它</a></li></ul></li></ul></li><li><a href="#orgheadline11">3. 编辑</a><ul><li><a href="#orgheadline12">3.1. 插入</a></li><li><a href="#orgheadline13">3.2. 撤销与重复</a></li><li><a href="#orgheadline14">3.3. 标记</a></li><li><a href="#orgheadline15">3.4. 删除、移除、复制、粘帖</a></li><li><a href="#orgheadline16">3.5. 杂乱编辑</a></li></ul></li><li><a href="#orgheadline17">4. 窗口操作</a></li><li><a href="#orgheadline18">5. 跳转操作</a><ul><li><a href="#orgheadline19">5.1. 搜索</a></li><li><a href="#orgheadline20">5.2. 基本跳转</a></li><li><a href="#orgheadline21">5.3. 书签</a></li></ul></li><li><a href="#orgheadline22">6. Buffer操作</a></li><li><a href="#orgheadline23">7. 基本配置</a></li><li><a href="#orgheadline24">8. 编程相关</a></li><li><a href="#orgheadline25">9. 帮助</a></li><li><a href="#orgheadline26">10. 原理</a><ul><li><a href="#orgheadline27">10.1. 关于递归编辑</a></li><li><a href="#orgheadline28">10.2. 关于mark/region/active region/transient-mark-mode/Text Selection</a></li><li><a href="#orgheadline29">10.3. 关于自动临时保存和备份</a><ul><li><a href="#orgheadline30">10.3.1. 临时文件</a></li><li><a href="#orgheadline31">10.3.2. 自动备份</a></li><li><a href="#orgheadline32">10.3.3. 其他</a></li></ul></li><li><a href="#orgheadline33">10.4. Emacs撤销、重做和重复</a><ul><li><a href="#orgheadline34">10.4.1. 插件</a></li><li><a href="#orgheadline35">10.4.2. 标准操作</a></li><li><a href="#orgheadline36">10.4.3. 比较详细的解释</a></li><li><a href="#orgheadline37">10.4.4. 官方文档</a></li><li><a href="#orgheadline38">10.4.5. 总结</a></li></ul></li><li><a href="#orgheadline39">10.5. 关于Narrow</a></li></ul></li><li><a href="#orgheadline40">11. 其他</a><ul><li><a href="#orgheadline41">11.1. 意外操作</a></li></ul></li><li><a href="#orgheadline42">12. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[27/114]</code>(<code>[23%]</code>)</a><ul><li><a href="#orgheadline43">12.1. <span class="todo nilNEXT">NEXT</span> 前进后退？</a><ul><li><a href="#orgheadline44">12.1.1. 插件</a></li><li><a href="#orgheadline45">12.1.2. 链接的后退</a></li><li><a href="#orgheadline46">12.1.3. 查找的后退</a></li><li><a href="#orgheadline47">12.1.4. 输入 <code>C-u C-@</code></a></li></ul></li><li><a href="#orgheadline48">12.2. <span class="done nilDONE">DONE</span> TAB标签栏?</a><ul><li><a href="#orgheadline49">12.2.1. 下载地址</a></li><li><a href="#orgheadline50">12.2.2. 关键配置</a></li></ul></li><li><a href="#orgheadline51">12.3. <span class="done nilDONE">DONE</span> 如何删除一行</a></li><li><a href="#orgheadline52">12.4. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> 如何移动一行？</a></li><li><a href="#orgheadline53">12.5. <span class="done nilDONE">DONE</span> 如何删除至行首？</a></li><li><a href="#orgheadline54">12.6. <span class="done nilDONE">DONE</span> 如何save all?</a></li><li><a href="#orgheadline55">12.7. <span class="done nilDONE">DONE</span> 只读切换?</a></li><li><a href="#orgheadline56">12.8. <span class="done nilDONE">DONE</span> 如何删除备份文件，或者不使用自动备份？</a></li><li><a href="#orgheadline57">12.9. <span class="done nilDONE">DONE</span> 跳转到当前buffer工作目录？</a></li><li><a href="#orgheadline58">12.10. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> Emacs当前工作目录？</a></li><li><a href="#orgheadline59">12.11. <span class="todo nilLATER">LATER</span> 如何重做？</a></li><li><a href="#orgheadline60">12.12. <span class="todo nilLATER">LATER</span> 如何成块缩进?</a></li><li><a href="#orgheadline61">12.13. <span class="todo nilLATER">LATER</span> 如何创建空文件</a></li><li><a href="#orgheadline62">12.14. <span class="todo nilNEXT">NEXT</span> 如何跳转至上次编辑内容？</a></li><li><a href="#orgheadline63">12.15. <span class="done nilDONE">DONE</span> 如何save all？</a></li><li><a href="#orgheadline64">12.16. <span class="done nilDONE">DONE</span> emacs如何加载插件？</a></li><li><a href="#orgheadline65">12.17. <span class="todo nilLATER">LATER</span> TAB标签显示？</a></li><li><a href="#orgheadline66">12.18. <span class="todo nilLATER">LATER</span> 跳至上次编辑的位置？</a></li><li><a href="#orgheadline67">12.19. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 插件在哪配置</a></li><li><a href="#orgheadline68">12.20. <span class="done nilDONE">DONE</span> kill buffer?</a></li><li><a href="#orgheadline69">12.21. <span class="done nilDONE">DONE</span> 直接执行lisp函数？</a></li><li><a href="#orgheadline70">12.22. <span class="todo nilLATER">LATER</span> 如何实现自动缩进？</a></li><li><a href="#orgheadline71">12.23. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 如何插入确定的缩进TAB？</a></li><li><a href="#orgheadline72">12.24. <span class="todo nilNEXT">NEXT</span> 如何输入上次输入的内容或者重做？</a></li><li><a href="#orgheadline73">12.25. <span class="done nilDONE">DONE</span> 交换行</a></li><li><a href="#orgheadline74">12.26. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 动态加载配置立即生效？</a></li><li><a href="#orgheadline75">12.27. <span class="done nilDONE">DONE</span> 如何执行命令时在回显区快速输入和删除？</a></li><li><a href="#orgheadline76">12.28. <span class="done nilDONE">DONE</span> 如何查看某一配置变量的值？</a></li><li><a href="#orgheadline77">12.29. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> 如何恢复默认配置？</a></li><li><a href="#orgheadline78">12.30. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 如何文件刷新？</a></li><li><a href="#orgheadline79">12.31. <span class="done nilDONE">DONE</span> 如何显示匹配括号？</a></li><li><a href="#orgheadline80">12.32. <span class="todo nilNEXT">NEXT</span> 关于Tab缩进</a><ul><li><a href="#orgheadline81">12.32.1. &#x2014;&#x2014;Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-09-30 三 15:19]</span></span>------</a></li></ul></li><li><a href="#orgheadline82">12.33. <span class="todo nilLATER">LATER</span> 如何显示空白字符？</a></li><li><a href="#orgheadline83">12.34. <span class="todo nilLATER">LATER</span> 如何复制一行？</a></li><li><a href="#orgheadline84">12.35. <span class="todo nilLATER">LATER</span> 缩进提示线？</a></li><li><a href="#orgheadline85">12.36. <span class="done nilDONE">DONE</span> 重命名当前文件？</a></li><li><a href="#orgheadline86">12.37. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> 如何表示当前文件名？</a></li><li><a href="#orgheadline87">12.38. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 宏录制</a></li><li><a href="#orgheadline88">12.39. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 如何块缩进？</a></li><li><a href="#orgheadline89">12.40. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> C-/是Undo</a></li><li><a href="#orgheadline90">12.41. <span class="done nilDONE">DONE</span> 如何操作目录</a></li><li><a href="#orgheadline91">12.42. <span class="done nilCANCEL">CANCEL</span> 如何管理配置目录</a></li><li><a href="#orgheadline92">12.43. <span class="todo nilLATER">LATER</span> 如何定位光标下路径的文件？</a></li><li><a href="#orgheadline93">12.44. <span class="todo nilLATER">LATER</span> 如何按项目组织目录</a></li><li><a href="#orgheadline94">12.45. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 如何让Emacs在光标到达当前Buffer最后一行尾部不自动recenter?</a></li><li><a href="#orgheadline95">12.46. <span class="todo nilLATER">LATER</span> 考虑一下用el-get插件管理插件</a></li><li><a href="#orgheadline96">12.47. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> eshell如何操作？</a></li><li><a href="#orgheadline97">12.48. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 如何配置自动新开“弹出”窗口的分割方向？</a></li><li><a href="#orgheadline98">12.49. <span class="todo nilLATER">LATER</span> Emacs如何控制Pop分割窗口的大小？</a></li><li><a href="#orgheadline99">12.50. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> emacs如何进行会话保存？</a></li><li><a href="#orgheadline100">12.51. <span class="done nilDONE">DONE</span> Emacs背景配色设置？</a><ul><li><a href="#orgheadline101">12.51.1. 下载地址：</a></li><li><a href="#orgheadline102">12.51.2. 配置默认主题</a></li></ul></li><li><a href="#orgheadline103">12.52. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> emacs的光标滚动如何让其不在屏幕尾部自动滚屏到中间？</a></li><li><a href="#orgheadline104">12.53. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 如何控制鼠标滚轮滚动的行数</a></li><li><a href="#orgheadline105">12.54. <span class="todo nilLATER">LATER</span> emacs如何清除所有buffer?</a></li><li><a href="#orgheadline106">12.55. <span class="todo nilLATER">LATER</span> 配置调试</a></li><li><a href="#orgheadline107">12.56. <span class="todo nilNEXT">NEXT</span> 不喜欢emacs新开"提示窗口"是垂直方向</a></li><li><a href="#orgheadline108">12.57. <span class="done nilDONE">DONE</span> Emacs如何定制颜色？</a></li><li><a href="#orgheadline109">12.58. <span class="todo nilLATER">LATER</span> 如何设置撤销的次数？目前貌似撤销只有有限的几次</a></li><li><a href="#orgheadline110">12.59. <span class="todo nilLATER">LATER</span> 重复最近的命令</a></li><li><a href="#orgheadline111">12.60. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> elisp library</a><ul><li><a href="#orgheadline112">12.60.1. 关于 <code>load-file, load, require, autoload</code></a></li><li><a href="#orgheadline113">12.60.2. 关于 Library, Package, Feature</a></li></ul></li><li><a href="#orgheadline114">12.61. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> Emacs自定义配置</a></li><li><a href="#orgheadline115">12.62. <span class="todo nilLATER">LATER</span> 默认启动xemacs的窗口大小</a></li><li><a href="#orgheadline116">12.63. <span class="todo nilNEXT">NEXT</span> emacs-desktop的会话存储默认位置</a></li><li><a href="#orgheadline117">12.64. <span class="todo nilNEXT">NEXT</span> 如何高亮？</a></li><li><a href="#orgheadline118">12.65. <span class="todo nilNEXT">NEXT</span> Emacs如何进行特定模式下的按键绑定映射？</a></li><li><a href="#orgheadline119">12.66. <span class="todo nilLATER">LATER</span> 如何为当前的Emacs编辑器升级？</a></li><li><a href="#orgheadline120">12.67. <span class="done nilDONE">DONE</span> Emacs撤销、重做和重复</a></li><li><a href="#orgheadline121">12.68. <span class="todo nilNEXT">NEXT</span> Emacs 如何远程访问？</a></li><li><a href="#orgheadline122">12.69. <span class="todo nilLATER">LATER</span> 将emacs custom config变成手动的config</a></li><li><a href="#orgheadline123">12.70. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 恢复文件</a></li><li><a href="#orgheadline124">12.71. <span class="todo nilLATER">LATER</span> 无需远端安装emacs，用本地emacs直接访问远端，可否？</a></li><li><a href="#orgheadline125">12.72. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> Emacs 任务管理？</a></li><li><a href="#orgheadline126">12.73. <span class="todo nilLATER">LATER</span> 崩溃后下次启动自动提示回复文件的方式？</a></li><li><a href="#orgheadline127">12.74. <span class="todo nilLATER">LATER</span> Emacs如何粘帖复制文本到X剪切板中？</a></li><li><a href="#orgheadline128">12.75. <span class="todo nilLATER">LATER</span> Emacs中如何在require后卸载插件？</a></li><li><a href="#orgheadline129">12.76. <span class="todo nilLATER">LATER</span> 拼音输入法</a></li><li><a href="#orgheadline130">12.77. <span class="todo nilNEXT">NEXT</span> Emacs为什么有时候缩进无法删除？</a></li><li><a href="#orgheadline131">12.78. <span class="todo nilNEXT">NEXT</span> Emacs如何搜索光标下的内容</a></li><li><a href="#orgheadline132">12.79. <span class="todo nilLATER">LATER</span> Emacs如何格式化全部代码？</a></li><li><a href="#orgheadline133">12.80. <span class="todo nilNEXT">NEXT</span> 为什么Emacs有时候无法删除缩进？</a></li><li><a href="#orgheadline134">12.81. <span class="done nilDONE">DONE</span> Emacs如何反撤销重做？</a></li><li><a href="#orgheadline135">12.82. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> emacs剪切板和x剪切板共享</a></li><li><a href="#orgheadline136">12.83. <span class="done nilDONE">DONE</span> 完善自己的开发环境，代码跳转、扫描、定位等，不用每次都要手动配置</a></li><li><a href="#orgheadline137">12.84. <span class="todo nilLATER">LATER</span> Emacs 括号跳转</a></li><li><a href="#orgheadline138">12.85. <span class="done nilDONE">DONE</span> 关于Narrow</a></li><li><a href="#orgheadline139">12.86. <span class="todo nilLATER">LATER</span> emacs如何搜索光标所在字符的内容</a></li><li><a href="#orgheadline140">12.87. <span class="todo nilLATER">LATER</span> C-x =</a></li><li><a href="#orgheadline141">12.88. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> 定义自己的Emacs环境</a></li><li><a href="#orgheadline142">12.89. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> 将emacs插件分层整理一下，最好能尝试一下新版本的emacs</a></li><li><a href="#orgheadline143">12.90. <span class="todo nilNEXT">NEXT</span> Emacs如何撤销以及反撤销？</a></li><li><a href="#orgheadline144">12.91. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2015-12-02 三 15:06] </span></span> Emacs标签跳转------</a></li><li><a href="#orgheadline145">12.92. <span class="todo nilLATER">LATER</span> &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2015-12-02 三 16:58] </span></span> Emacs mark ring------</a></li><li><a href="#orgheadline146">12.93. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> 意外发现 <code>ESC-`</code> 在minibuf打开菜单栏</a></li><li><a href="#orgheadline147">12.94. <span class="todo nilNEXT">NEXT</span> 学习资源</a></li><li><a href="#orgheadline148">12.95. <span class="todo nilLATER">LATER</span> Emacs如何自定义按键映射不冲突</a></li><li><a href="#orgheadline149">12.96. <span class="todo nilNEXT">NEXT</span> Emacs高级搜索</a></li><li><a href="#orgheadline150">12.97. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> Emacs如何显示括号匹配？如何显示行号？</a></li><li><a href="#orgheadline151">12.98. <span class="todo nilLATER">LATER</span> 设置输入法</a></li><li><a href="#orgheadline152">12.99. <span class="done nilDONE">DONE</span> 使用Emacs阅读代码</a></li><li><a href="#orgheadline153">12.100. <span class="todo nilLATER">LATER</span> emacs自动保存间隔</a></li><li><a href="#orgheadline154">12.101. <span class="todo nilNEXT">NEXT</span> emacs如何替换文本?</a></li><li><a href="#orgheadline155">12.102. <span class="todo nilLATER">LATER</span> Emacs如何设置多重功能的按键?</a></li><li><a href="#orgheadline156">12.103. <span class="todo nilNEXT">NEXT</span> Emacs如何切换最近buffer,而非只有一个最近buffer?</a></li><li><a href="#orgheadline157">12.104. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> Emacs如何高亮多个单词?</a><ul><li><a href="#orgheadline158">12.104.1. 利用emacs自带的 <code>hi-lock-mode</code></a></li><li><a href="#orgheadline159">12.104.2. 利用插件</a></li></ul></li><li><a href="#orgheadline160">12.105. <span class="done nilDONE">DONE</span> 如何在Emacs直接预览markdown效果？</a></li><li><a href="#orgheadline161">12.106. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> 如何执行脚本</a></li><li><a href="#orgheadline162">12.107. <span class="todo nilNEXT">NEXT</span> Emacs崩溃后的恢复策略</a></li><li><a href="#orgheadline163">12.108. <span class="todo nilNEXT">NEXT</span> emacs如何跳转到匹配的括号？</a></li><li><a href="#orgheadline164">12.109. <span class="todo nilNEXT">NEXT</span> 一些基本操作</a></li><li><a href="#orgheadline165">12.110. <span class="todo nilNEXT">NEXT</span> emacs如何返回上次编辑的位置</a></li><li><a href="#orgheadline166">12.111. <span class="todo nilNEXT">NEXT</span> Emacs如何定期自动保存文件?</a></li><li><a href="#orgheadline167">12.112. <span class="done nilDONE">DONE</span> emacs打开文件等，如何实现部分匹配文件或者命令而非精确开头匹配</a><ul><li><a href="#orgheadline168">12.112.1. ido</a></li><li><a href="#orgheadline169">12.112.2. smex</a></li></ul></li><li><a href="#orgheadline170">12.113. <span class="todo nilLATER">LATER</span> 意外发现的 <code>M-*</code> 和 <code>M-.</code> 是做什么的？</a></li><li><a href="#orgheadline171">12.114. <span class="todo nilNEXT">NEXT</span> Emacs代码折叠</a></li></ul></li></ul></div></div><p>这里是学习Emacs过程记录的笔记，可供日后查阅以及参考。</p><p>简单的emacs操作提示，不做过多解释。心中的疑问放在后面。</p><p>M可以是&lt;ALT&gt;或者&lt;ESC&gt;。&lt;Delback&gt;=&lt;Backspace&gt;=</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><a id="ID-9c4bb263-88af-40da-b701-d84d1d56fc8c"></a><span class="section-number-2">1</span> 文件操作</h2><div class="outline-text-2" id="text-1"><ul class="org-ul"><li><p>启动emacs</p><p>输入如下内容：</p><pre class="example">$emacs  $emacs -nw</pre><p>另外，启动之后，在键盘上键入 <code>q</code> 跳过系统欢迎的信息.</p></li><li><p>打开目录 </p><p>输入 <code>C-x d</code> 之后可输入具体路径，如果直接回车则默认打开当前buffer文件所在目录。</p></li><li><p>新建目录</p><p>输入 <code>M-x make-directory</code> 然后输入路径，回车。</p></li><li><p>新建文件</p><p>输入 <code>C-x C-f</code> 然后输入路径，写文件(这样不创建新文件)。</p></li><li><p>载入一个文件</p><p>输入 <code>C-x C-f</code> 之后输入路径，回车。</p><p>其实打开的是对应文件的一个buffer，每个文件对应一个buffer，buffer名一般就是文件名去掉后缀。</p></li><li><p>查看当前buffer所在的路径</p><p><code>M-x pwd</code></p></li><li><p>重新载入当前buffer对应文件</p><p>输入 <code>C-x C-v</code> </p></li><li><p>保存文件</p><p>输入 <code>C-x C-s</code> 输入之后，再输入路径，回车。</p></li><li><p>全部保存</p><p>输入 <code>C-x s</code> </p><p>输入之后，会依次询问每个文件的是否保存，输入 <code>y</code> 表示保存相应文件； <code>n</code> 表示不保存； <code>!</code> 保存所有; <code>.</code> 保存当前buffer并退出询问; <code>q</code> 直接退出询问；更多的信息可以用 <code>C-h</code> 来查阅。</p></li><li><p>关闭文件</p><p>输入 <code>C-x k</code> </p><p>输入之后，会进入一个交互命令，输入想要关闭的buffer名字，即可关闭对应的文件再回车，如果什么都不输入直接回车，则默认退出当前buffer关闭对应的文件。</p></li><li><p>退出编辑器</p><p>输入 <code>C-x C-c</code></p></li></ul></div></div><div id="outline-container-orgheadline2" class="outline-2"><h2 id="orgheadline2"><a id="ID-d08f1630-13b0-478f-9b58-027547b34f75"></a><span class="section-number-2">2</span> 文件管理</h2><div class="outline-text-2" id="text-2"><p>Emacs自带一个文件管理器，为dired模式。</p><ul class="org-ul"><li><p>进入目录浏览</p><p>输入 <code>C-x d</code></p><p>输入之后，可键入要进入的目录，如果不选择直接 <code>Ret</code> 那么会直接进入当前buffer所在目录。进入目录后，可以输入 <code>h</code> 查看帮助信息，查看回显区简洁帮助输入 <code>?</code> </p><p>进入dired模式之后，可以通过下面命令管理文件，此时Emacs可以做为一个文件管理器来使用。</p></li></ul></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">2.1</span> 目录显示</h3><div class="outline-text-3" id="text-2-1"><ul class="org-ul"><li><p>上一层目录</p><p>输入 <code>^</code></p></li><li><p>上下移动光标选择不同文件项</p><p>输入 <code>n</code> / <code>p</code></p></li><li><p>上下移动至下一个目录子项</p><p>输入 <code>&lt;</code> / <code>&gt;</code></p></li><li><p>上下移动至被标记项</p><p>输入 <code>M-{</code> / <code>M-}</code></p></li><li><p>退出目录缓冲</p><p>输入 <code>q</code></p></li><li><p>刷新目录缓冲</p><p>输入 <code>g</code></p></li><li><p>切换名称日期排序</p><pre class="example">输入 =s=</pre></li><li><p>使用View模式查看文件</p><p>输入 <code>v</code> ， 会以只读方式显示文件内容</p></li><li><p>另一个窗口查看文件</p><p>输入 <code>o</code></p></li><li><p>查看文件类型</p><p>输入 <code>y</code></p></li><li><p>跳转文件</p><p>输入 <code>j</code> ,输入之后，会提示选择将要打开的文件路径</p></li><li><p>复制文件名</p><p>输入 <code>w</code></p></li></ul></div></div><div id="outline-container-orgheadline4" class="outline-3"><h3 id="orgheadline4"><span class="section-number-3">2.2</span> 文件操作</h3><div class="outline-text-3" id="text-2-2"><ul class="org-ul"><li><p>对应位置创建目录</p><p>输入 <code>+</code></p></li><li><p>删除对应文件</p><p>对应行输入 <code>D</code> , 会提示是否删除</p></li><li><p>拷贝对应文件</p><p>对应行输入 <code>C</code> ， 会提示目标路径</p></li><li><p>创建硬链接</p><p>对应行输入 <code>H</code> ， 会提示目标路径</p></li><li><p>创建软链接</p><p>绝对路径对应行输入 <code>S</code> ，相对路径对应行输入 <code>Y</code> ， 会提示目标路径</p></li><li><p>重命名文件</p><p>对应行输入 <code>R</code> , 会提示重命名的名称</p></li><li><p>修改文件权限</p><p>对应行输入 <code>M</code> , 会提示修改成什么权限，比如 <code>777</code></p></li><li><p>修改属组</p><p>对应行输入 <code>G</code></p></li><li><p>修改属主</p><p>对应行输入 <code>O</code></p></li><li><p>压缩解压缩</p><p>对应行输入 <code>z</code></p></li><li><p>执行文件</p><p>对应行输入 <code>X</code></p></li><li><p>新建文件</p><p>输入 <code>C-x C-f</code></p></li></ul></div></div><div id="outline-container-orgheadline5" class="outline-3"><h3 id="orgheadline5"><span class="section-number-3">2.3</span> 标记操作</h3><div class="outline-text-3" id="text-2-3"></div><div id="outline-container-orgheadline6" class="outline-4"><h4 id="orgheadline6"><span class="section-number-4">2.3.1</span> 删除标记</h4><div class="outline-text-4" id="text-2-3-1"><ul class="org-ul"><li><p>标记删除</p><p>对应行输入 <code>d</code></p></li><li><p>将所有备份文件标记为删除</p><p>输入 <code>~</code></p></li><li><p>将存盘文件标记为删除</p><p>输入 <code>#</code></p></li><li><p>对标记删除的文件执行删除</p><p>对应行输入 <code>x</code></p></li></ul></div></div><div id="outline-container-orgheadline7" class="outline-4"><h4 id="orgheadline7"><span class="section-number-4">2.3.2</span> 普通标记</h4><div class="outline-text-4" id="text-2-3-2"><ul class="org-ul"><li><p>普通标记</p><p>对应行输入 <code>m</code></p></li><li><p>普通标记所有可执行文件</p><p>输入 <code>**</code></p></li><li><p>普通标记所有目录项</p><p>输入 <code>*/</code></p></li><li><p>普通标记所有符号链接</p><p>输入 <code>*@</code></p></li></ul></div></div><div id="outline-container-orgheadline8" class="outline-4"><h4 id="orgheadline8"><span class="section-number-4">2.3.3</span> 正则表达式标记</h4><div class="outline-text-4" id="text-2-3-3"><ul class="org-ul"><li><p>正则表达式标记匹配名称的文件</p><p>输入 <code>% m</code> , 输入之后，会提示输入满足正则表达式待标记文件名称</p></li><li><p>正则表达式标记匹配内容的文件</p><p>输入 <code>% g</code> , 输入之后，会提示输入待标记文件包含的满足正则表达式的内容</p></li><li><p>正则表达式标记依次拷贝文件</p><p>输入 <code>% C</code> , 输入之后提示输入被拷贝文件满足的正则表达式</p></li></ul><p>例如</p><p>:\(.+\).cpp</p><p><code>之后再输入目标例如在前面匹配的基础上输入： =\1.h</code></p></div></div><div id="outline-container-orgheadline9" class="outline-4"><h4 id="orgheadline9"><span class="section-number-4">2.3.4</span> 结合标记能使用的操作：</h4><div class="outline-text-4" id="text-2-3-4"><p>以下操作可以结合上述描述的普通标记和某些正则来使用，达到批量处理的目的。</p><ul class="org-ul"><li><p>删除文件</p><p><code>D</code></p></li><li><p>copy</p><p><code>C</code></p></li><li><p>重命名或移动</p><p><code>R</code></p></li><li><p>改变用户</p><p><code>O</code></p></li><li><p>改变群组</p><p><code>G</code></p></li><li><p>改变权限</p><p><code>M</code></p></li><li><p>符号链接</p><p><code>S</code></p></li><li><p>硬链接</p><p><code>H</code></p></li><li><p>压缩</p><p><code>Z</code></p></li><li><p>复制文件名</p><p><code>w</code> </p></li><li><p>删除行，刷新后可恢复</p><p><code>k</code></p></li></ul></div></div><div id="outline-container-orgheadline10" class="outline-4"><h4 id="orgheadline10"><span class="section-number-4">2.3.5</span> 其它</h4><div class="outline-text-4" id="text-2-3-5"><ul class="org-ul"><li><p>取消标记删除</p><p>对应行输入 <code>u</code></p></li><li><p>取消所有标记</p><p>输入 <code>U</code></p></li><li><p>将文件列表读写切换</p><p>输入 <code>C-x C-q</code></p><p>读写切换之后，底部会提示为 <code>[(Editable Dired)]</code> ，可以修改对应文件名等。</p></li></ul><p>更多命令</p><p>参见 <code>h</code> 给出的帮助信息。</p><p>参考：<a href="http://www.cnblogs.com/leohxj/archive/2012/02/20/2360606.html" target="_blank" rel="noopener">Emacs文件管理</a></p></div></div></div></div><div id="outline-container-orgheadline11" class="outline-2"><h2 id="orgheadline11"><a id="ID-a5be1770-c494-4527-a487-93a6348503f1"></a><span class="section-number-2">3</span> 编辑</h2><div class="outline-text-2" id="text-3"></div><div id="outline-container-orgheadline12" class="outline-3"><h3 id="orgheadline12"><span class="section-number-3">3.1</span> 插入</h3><div class="outline-text-3" id="text-3-1"><ul class="org-ul"><li><p>插入其他文件</p><p>输入 <code>C-x i</code></p></li></ul></div></div><div id="outline-container-orgheadline13" class="outline-3"><h3 id="orgheadline13"><span class="section-number-3">3.2</span> 撤销与重复</h3><div class="outline-text-3" id="text-3-2"><p>这里列出最基本的，具体可以参考：<a href="#orgheadline33">Emacs撤销、重做和重复</a></p><ul class="org-ul"><li><p>撤销</p><p>输入 <code>C-x u</code> 或输入 <code>C-/</code></p></li></ul><ul class="org-ul"><li><p>重复操作</p><p>输入 <code>C-u &lt;数字&gt; &lt;操作&gt;</code> 或输入 <code>C-&lt;数字&gt; &lt;操作&gt;</code> </p><p>这两种方法，通过 <code>C-u &lt;数字&gt;</code> 或 <code>C-&lt;数字&gt;</code> 指定好重复次数之后，输入你想进行的操作，就可以重复相应的次数了。</p></li></ul></div></div><div id="outline-container-orgheadline14" class="outline-3"><h3 id="orgheadline14"><span class="section-number-3">3.3</span> 标记</h3><div class="outline-text-3" id="text-3-3"><ul class="org-ul"><li><p>标记整个buffer</p><p>输入 <code>C-x h</code></p></li><li>标记块<ol class="org-ol"><li><p>标记块开始</p><p>定位到待移除的首部，输入 <code>C-@</code> (或 <code>C-&lt;SPC&gt;</code> ，如果不冲突)，标记完成。此时底部有指示是标记状态。</p></li><li><p>移除相应块</p><p>移动光标，这时候光标经过的地方会高亮，也就是被标记。</p></li></ol></li></ul></div></div><div id="outline-container-orgheadline15" class="outline-3"><h3 id="orgheadline15"><span class="section-number-3">3.4</span> 删除、移除、复制、粘帖</h3><div class="outline-text-3" id="text-3-4"><p>注意：这里的移除类似剪切可再次粘帖回来 、删除的内容不可粘帖回来。</p><ul class="org-ul"><li><p>移除当前行</p><p>输入 <code>C-S-DEL</code>, 这里的 <code>DEL</code> 就是 <code>Backspace</code> 。</p></li></ul><ul class="org-ul"><li><p>移除至行尾，可粘帖回来</p><p>输入 <code>C-k</code>, 再次 <code>C-k</code> 会将换行符号移除。</p></li></ul><ul class="org-ul"><li><p>删除至行首，可粘帖回来</p><p>输入 <code>C-0 C-k</code> 或输入 <code>M-- C-k</code> 或 <code>C-u 0 C-k</code></p></li></ul><ul class="org-ul"><li><p>删除光标前面字符</p><p>输入 <code>&lt;Backspace&gt;</code>, 删除之后，不可通过 <code>C-y</code> 来“粘帖”回来。</p></li></ul><ul class="org-ul"><li><p>删除光标后面字符</p><p>输入 <code>C-d</code> 删除之后，不可通过 <code>C-y</code> 来“粘帖”回来。</p></li></ul><ul class="org-ul"><li><p>移除光标前至面第一个单词首</p><p>输入 <code>M-&lt;Backspace&gt;</code> </p><p>会移除光标前面的内容至单词首部（单词和数字字符，没有标点和其他字符，如"&lt;"，"&gt;"）。</p></li></ul><ul class="org-ul"><li><p>移除光标后至第一个单词尾</p><p>输入 <code>M-d</code></p><p>会移除光标后面的内容至单词尾部（单词和数字字符，没有标点和其他字符，如"&lt;"，"&gt;"）。</p></li></ul><ul class="org-ul"><li><p>删除到指定字符</p><p>输入 <code>M-z &lt;char&gt;</code></p><p>输入 <code>M-z</code> 之后再输入字符 <code>&lt;char&gt;</code> ，会删除光标到 <code>&lt;char&gt;</code> 之间的内容。</p></li></ul><ul class="org-ul"><li><p>块移除</p><p>标记块后，输入 <code>C-w</code> 。</p></li></ul><ul class="org-ul"><li><p>块复制</p><p>标记块后，输入 <code>M-w</code> 。</p></li></ul><ul class="org-ul"><li><p>粘帖最近一次移除或复制的内容</p><p>输入 <code>C-y</code>, 输入之后，可以粘帖最近一次被移除的内容。</p></li></ul><ul class="org-ul"><li><p>粘帖最近某次移除的内容</p><p>输入 <code>M-y</code></p><p>不断的 <code>M-y</code> 会不断的变换遍历之前移除的内容（不是复制），直至选择到待粘帖的内容便可结束。</p></li></ul></div></div><div id="outline-container-orgheadline16" class="outline-3"><h3 id="orgheadline16"><span class="section-number-3">3.5</span> 杂乱编辑</h3><div class="outline-text-3" id="text-3-5"><ul class="org-ul"><li><p>交换当前行与上一行的位置</p><p>输入 <code>C-x C-t</code></p><p>输入之后，会将当前行与前一行交换，并且将当前光标移动到两行的后面。</p></li></ul></div></div></div><div id="outline-container-orgheadline17" class="outline-2"><h2 id="orgheadline17"><span class="section-number-2">4</span> 窗口操作</h2><div class="outline-text-2" id="text-4"><ul class="org-ul"><li><p>关掉当前窗口</p><p>输入 <code>C-x 0</code></p></li></ul><ul class="org-ul"><li><p>关掉其他窗口</p><p>输入 <code>C-x 1</code></p></li></ul><ul class="org-ul"><li><p>水平创建窗口</p><p>输入 <code>C-x 2</code></p></li></ul><ul class="org-ul"><li><p>垂直创建窗口</p><p>输入 <code>C-x 3</code></p></li></ul><ul class="org-ul"><li><p>切换窗口</p><p>输入 <code>C-x o</code>, 在各个窗口之间循环切换。</p></li></ul></div></div><div id="outline-container-orgheadline18" class="outline-2"><h2 id="orgheadline18"><span class="section-number-2">5</span> 跳转操作</h2><div class="outline-text-2" id="text-5"></div><div id="outline-container-orgheadline19" class="outline-3"><h3 id="orgheadline19"><span class="section-number-3">5.1</span> 搜索</h3><div class="outline-text-3" id="text-5-1"><ul class="org-ul"><li><p>正向搜索</p><p>C-s</p></li></ul><ul class="org-ul"><li><p>连续正向搜索</p><p><code>C-s C-s ...</code></p></li></ul><ul class="org-ul"><li><p>逆向搜索</p><p><code>C-r</code></p></li></ul></div></div><div id="outline-container-orgheadline20" class="outline-3"><h3 id="orgheadline20"><span class="section-number-3">5.2</span> 基本跳转</h3><div class="outline-text-3" id="text-5-2"><ul class="org-ul"><li><p>向前翻页</p><p><code>C-v</code></p></li></ul><ul class="org-ul"><li><p>向后翻页</p><p><code>M-v</code></p></li></ul><ul class="org-ul"><li><p>跳至指定行</p><p>输入 <code>M-g g &lt;line number&gt;</code>, 再输入待跳转的行号。</p></li></ul><ul class="org-ul"><li><p>跳至缓冲区文件首</p><p>输入 <code>M-&lt;</code></p></li></ul><ul class="org-ul"><li><p>跳至缓冲区文件尾</p><p>输入 <code>M-&gt;</code></p></li></ul><ul class="org-ul"><li><p>跳转到同一层次下一个括号结束位置</p><p>输入 <code>C-M-n</code></p></li></ul><ul class="org-ul"><li><p>跳转到同一层次上一个括号开始位置</p><p>输入 <code>C-M-p</code></p></li></ul></div></div><div id="outline-container-orgheadline21" class="outline-3"><h3 id="orgheadline21"><span class="section-number-3">5.3</span> 书签</h3><div class="outline-text-3" id="text-5-3"><ul class="org-ul"><li><p>创建"书签"</p><p>输入 <code>C-x r &lt;SPC&gt;</code>, 然后随便按一个键，做为书签名比如'a'</p></li></ul><ul class="org-ul"><li><p>跳转到"书签"</p><p>输入 <code>C-x r j</code>, 输入刚才创建的书签"a"，就会跳到你刚在的书签所在的那个光标处。</p></li></ul></div></div></div><div id="outline-container-orgheadline22" class="outline-2"><h2 id="orgheadline22"><span class="section-number-2">6</span> Buffer操作</h2><div class="outline-text-2" id="text-6"><ul class="org-ul"><li><p>查看所有buffer列表</p><p>输入 <code>C-x C-b</code></p></li></ul><ul class="org-ul"><li><p>切换至指定buffer</p><p>输入 <code>C-x b</code> </p><p>输入之后，进入一个交互模式，输入指定buffer名称即可。如果直接回车，会在上次buffer与本次buffer之间切换。</p></li></ul><ul class="org-ul"><li><p>关闭buffer</p><p>输入 <code>C-x k</code> 会提示想要关闭的buffer，默认关闭当前buffer。</p></li></ul><ul class="org-ul"><li><p>关闭3天内未使用的buffer</p><p>输入 <code>M-x clean-buffer-list</code></p></li></ul><ul class="org-ul"><li><p>依次询问式关闭指定（是否保存）的buffer</p><p>输入 <code>M-x kill-some-buffers</code></p></li></ul></div></div><div id="outline-container-orgheadline23" class="outline-2"><h2 id="orgheadline23"><span class="section-number-2">7</span> 基本配置</h2><div class="outline-text-2" id="text-7"><p>这里给出Emacs基本使用时可能需要配置的一些内容，不涉及复杂插件的相关内容。</p><p>这里配置文件大致做如下布局：</p><p><code>~/.emacs</code>是emacs配置文件的入口，一般保存整体配置信息，</p><p><code>~/.emacs.d</code>存放插件等具体配置子脚本。</p></div></div><div id="outline-container-orgheadline24" class="outline-2"><h2 id="orgheadline24"><span class="section-number-2">8</span> 编程相关</h2></div><div id="outline-container-orgheadline25" class="outline-2"><h2 id="orgheadline25"><span class="section-number-2">9</span> 帮助</h2><div class="outline-text-2" id="text-9"><ul class="org-ul"><li><p>查看帮助信息的帮助</p><p>输入 = C-h C-h =, 这样可以显示如何查询其他帮助信息。</p></li></ul><ul class="org-ul"><li><p>查看某个按键序列帮助</p><p>输入 <code>C-h k xxx</code></p><p>输入 <code>C-h k</code> 后会有一个交互，让你输入按键序列，输入 <code>xxx</code> 之后，会显示相应的按键绑定以及帮助信息。自定义绑定一个按键之前通过这条命令，可以确认是否被绑定的按键会发生冲突，亦可通过这个命令，在已有的基础上，添加自己扩展的绑定功能。</p></li></ul><ul class="org-ul"><li><p>查看某个elisp函数的作用</p><p>输入 <code>C-h f</code></p><p>使用自定制的功能，带来的问题至少有：通用性降低，依赖性增强，与其他功能冲突可能性增加。所以之前使用vim，基本不会用太多的插件以及按键映射，大多数操作使用其默认的配置。但是对于一个通过自定制扩展而闻名的emacs来说，我觉得这一点可以有所改变。通用性降低这方面，我们可以通过将相关配置进行合理组织，然后通过版本控制或者其他方式备份，便于在其他机器上使用；依赖性增强，一方面通过对配置和插件备份可以解决，一方面经常总结文档，以及对相关内容的熟练程度也会让这个问题不了了之；与其他功能的冲突，我们可以通过帮助查看已有按键绑定以及被占用的功能，使用未被使用的做为扩展，由此避免冲突。</p><p>使用原生功能，以及使用自定制功能，是两种不同的理念。前者通用、简单，后者可扩展、高效，还有其他不同，但是各有所长，关键在于根据实际情况，使用最适合的方式来解决问题，方式因人而异，没有绝对的，我个人的倾向是：在vim倾向前者，在emacs倾向后者，但是emacs使用之时，尽量保持原有的功能而不改变成其它的，如果实在不行，可以扩展原有功能。</p></li></ul><ul class="org-ul"><li><p>查看按键绑定</p><p>输入 <code>C-h b</code></p></li></ul><ul class="org-ul"><li><p>根据正则表达式模糊查找</p><p>输入 <code>C-h a xxx</code>, 这样会列出所有匹配 <code>xxx</code> 的帮助信息。</p></li></ul><ul class="org-ul"><li><p>查看某前缀按键集合的帮助</p><p>输入 <code>C-c C-h</code>, 会查看C-c为前缀的按键绑定帮助，</p></li></ul><ul class="org-ul"><li><p>查看某命令前缀的按键绑定帮助</p><p>输入 <code>&lt;命令前缀&gt; C-h</code>, 例如 <code>C-c C-x C-h</code> 会查看 <code>C-c C-x</code> 为前缀的按键绑定帮助。</p></li></ul><ul class="org-ul"><li><p>查看info</p><p>输入 <code>M-x info</code>, 或者输入 <code>C-h i</code></p><p>输入之后，会显示info手册，和linux的一样，不过在emacs中阅读更方便。</p></li></ul><ul class="org-ul"><li><p>查看当前模式信息</p><p><code>C-h m</code></p></li></ul><ul class="org-ul"><li><p>退出帮助信息</p><p>输入 <code>q</code></p></li></ul><ul class="org-ul"><li><p>Emacs FAQ</p><p>输入 <code>C-h C-f</code></p></li></ul></div></div><div id="outline-container-orgheadline26" class="outline-2"><h2 id="orgheadline26"><span class="section-number-2">10</span> 原理</h2><div class="outline-text-2" id="text-10"></div><div id="outline-container-orgheadline27" class="outline-3"><h3 id="orgheadline27"><span class="section-number-3">10.1</span> 关于递归编辑</h3><div class="outline-text-3" id="text-10-1"><p>所谓的“递归编辑”是指递归编辑状态，由位于状态栏的方括号所指示，其中包含了用小括号来指明的模式名称。比如说，你有时可能会看到[(Fundamental)]，而不是 (Fundamental)。（比如在用 <code>M-%</code> 进行交互式替换的时候你又用了 <code>C-s</code> 进行搜索，这时替换模式并没有结束，但你又进入了搜索模式，这就是所谓的递归编辑。）</p></div></div><div id="outline-container-orgheadline28" class="outline-3"><h3 id="orgheadline28"><span class="section-number-3">10.2</span> 关于mark/region/active region/transient-mark-mode/Text Selection</h3><div class="outline-text-3" id="text-10-2"><p>内容主要参考 <a href="http://ergoemacs.org/emacs/emacs_region.html" target="_blank" rel="noopener">Emacs: What's Region, Active Region, transient-mark-mode?</a> 大致如下：</p><ul class="org-ul"><li><p>mark</p><p>一个用户可以设置的位置，用来进行文本选择。通过调用 <code>set-mark-command</code> （即 <code>C-@</code> ）设置mark，在list代码中你可以调用 push-mark或者set-mark设置标记。</p></li><li><p>region</p><p>最后一次mark的位置知道当前光标所在位置，这一段的区域。用户一旦在buffer中设置了mark，region就存在了。可以通过函数 <code>region-beginning</code> , <code>region-end</code> 来获取region的位置。</p></li><li><p>active region</p><p>当变量 <code>mark-active</code> 为true的时候，region就是active状态。</p></li><li><p>transient-mark-mode</p><p>transient-mark-mode也是emacs的一种minor mode，当emacs的 <code>transient-mark-mode</code> 为on的时候，active region将被高亮， 当变量 <code>transient-mark-mode</code> 为true的时候，该模式就是on的状态，默认该模式是on的状态。因为默认为on，并且Buffer中始终有一个region，所以前面对active region需要用 <code>mark-active</code> 进行控制，防止文本中的region始终高亮。</p></li><li><p>什么时候region被active?</p><p>当 <code>set-mark-command</code> 被调用的时候，region就会变成active(高亮状态)，当执行了一个命令后，一般region的状态就会被设置成inactive。总之，你用鼠标或者键盘设置mark之后，被选择的文本就会被高亮，你执行一些操作之后，文本高亮就被取消。</p></li><li><p>什么是Text Selection？</p><p>Text Selection就是被选择的文本，一般与active region同义。Text Selection就是非空的active region，可以通过 <code>use-region-p</code> 检测Text Selection， 这个函数其实检测的是三个内容：a. <code>trasient-mark-mode</code> 是否为on；b. <code>mark-active</code> 是否为true；c.通过 =use-empty-active-region来检测region非空。</p></li></ul></div></div><div id="outline-container-orgheadline29" class="outline-3"><h3 id="orgheadline29"><a id="ID-4306b46a-6e55-4dd3-943f-beb64f0a909b"></a><span class="section-number-3">10.3</span> 关于自动临时保存和备份</h3><div class="outline-text-3" id="text-10-3"></div><div id="outline-container-orgheadline30" class="outline-4"><h4 id="orgheadline30"><span class="section-number-4">10.3.1</span> 临时文件</h4><div class="outline-text-4" id="text-10-3-1"><p>一般是在Emacs中编辑时,在编辑文件的同一个目录内生成一个以#file-name#这样的文件，这个文件会在我们保存文件之后被emacs删除。这个文件的作用是为了防止在进行编辑的时候异常退出造成的损失。</p><p>临时文件存在大致过程如下：</p><pre class="example">1. 在Emacs内使用[C-x,C-f]打开要编辑的文件(test-file.txt)2. 在打开的buffer中编辑内容3. Emacs自动侦测buffer是否更改，如果更改会自动Auto-Save4. 此时我们能够在编辑的文件同一目录下看到临时文件为:    #test-file.txt#5. 使用[C-x,C-s]保存当前buffer6. 当前buffer中的内容被写入文件,#test-file.txt#消失——被Emacs自动删除</pre><p>崩溃时恢复的方式</p><pre class="example">1. 打开要恢复的文件，如：test.txt2. [M-x]3. 输入:recover-file 回车4. 确认恢复</pre><p>关闭自动保存临时文件功能，在你启动的.emacs文件内添加下面这行</p><div class="org-src-container"><pre class="src src-elisp">(setq auto-save-default nil) ;; default is t, close with nil</pre></div></div></div><div id="outline-container-orgheadline31" class="outline-4"><h4 id="orgheadline31"><span class="section-number-4">10.3.2</span> 自动备份</h4><div class="outline-text-4" id="text-10-3-2"><p>第一次保存的时候，如果保存的文件已经存在，Emacs会自动将保存前的文件重命名作为备份文件，而备份文件使用的是一个“～”作为后缀(如：file-name~)。</p><p>备份文件默认仅会发生在Emacs第一次写入的时候，即，开启Emacs之后，第一次打开文件并保存的时候，编辑期间多次保存并不能产生多次备份动作。然而，下次重新打开Emacs，再次执行同样的动作的时候，同样在第一次保存时，Emacs是会将上次的备份文件覆盖的（如果有）。</p><p>大概的流程如下：</p><pre class="example">1. 打开文件,如:MitchellChu.txt2. 编辑...（这涉及到临时文件的问题，忽略）3. 在emacs内发出保存指令4. emacs先将MitchellChu.txt保存为：MitchellChu.txt~5. 保存完成后，Emacs将当前buffer的内容写入MitchellChu.txt注意：此时的MitchellChu.txt已经不再是原来的那个文件，但所有连接到原来那个文件的，现在被这个新文件接管。</pre><p>取消该功能设置如下</p><div class="org-src-container"><pre class="src src-elisp">(setq make-backup-files nil)</pre></div><p>更多设置，比如拷贝、路径、多个备份版本等，可参考：<code>backup-by-copying</code> <code>version-control</code> <code>backup-directory-alist</code> 等。</p></div></div><div id="outline-container-orgheadline32" class="outline-4"><h4 id="orgheadline32"><span class="section-number-4">10.3.3</span> 其他</h4><div class="outline-text-4" id="text-10-3-3"><p>参考：<a href="http://blog.useasp.net/archive/2014/07/18/emacs-temporary-files-and-backup-files-for-edited-file.aspx" target="_blank" rel="noopener">http://blog.useasp.net/archive/2014/07/18/emacs-temporary-files-and-backup-files-for-edited-file.aspx</a></p><p><a href="http://blog.csdn.net/flytomysky/article/details/7096561" target="_blank" rel="noopener">http://blog.csdn.net/flytomysky/article/details/7096561</a></p></div></div></div><div id="outline-container-orgheadline33" class="outline-3"><h3 id="orgheadline33"><a id="ID-fea6db6c-78ed-4689-b32e-edc960161039"></a><span class="section-number-3">10.4</span> Emacs撤销、重做和重复</h3><div class="outline-text-3" id="text-10-4"><p>简单说来，撤销是取消上次的操作，重做是对撤销的撤销，重复是对上次命令进行重做。下面重点对撤销和重做进行叙述。</p><p>“Emacs中只有撤销，没有重做” 或许是初学者的迷惑，也或许让Emacs蒙受了"很烂的编辑器，怪不得很多人不愿意用"的评价。其实，真正的答案很简单： <code>撤销是取消上次的操作，重做是对撤销的撤销</code> 对这简单的两句话若能真正理解，你或许便能知晓真正的答案。当知晓真正的答案之时，你或许会感觉到，Emacs如峰回路转般，让你不得不收回对它以前的无知评论，重新对它产生新的认识。不光是这个小小的功能，其实在整个Emacs的前进过程中，如果能坚持下去，你会遇到很多类似的境况，也许，这也是为什么Emacs的学习曲线不同于其它，是“螺旋”的吧。</p><p>这里给出众多Emacs学修中的一员，在经历众多Emacs道路中的困难之一，对其现象做一个简单的重现，希望能让没有使用过Emacs的朋友，能体会到一点使用它的感觉。</p></div><div id="outline-container-orgheadline34" class="outline-4"><h4 id="orgheadline34"><span class="section-number-4">10.4.1</span> 插件</h4><div class="outline-text-4" id="text-10-4-1"><p>通过undo-tree插件选择需要恢复的操作</p><pre class="example">C-x u 进入 undo-tree-visualizer-mode , p n 上下移动，在分支之前 b f 左右切换，t 显示时间戳，选定需要的状态后， q 退出。这是主要的操作，其它的自己摸索好了……</pre><p>参考：<a href="http://www.dr-qubit.org/undo-tree/undo-tree.el" target="_blank" rel="noopener">http://www.dr-qubit.org/undo-tree/undo-tree.el</a> 和 <a href="http://itindex.net/detail/32008-emacs-undo-tree" target="_blank" rel="noopener">emacs 新手必看: undo-tree</a></p></div></div><div id="outline-container-orgheadline35" class="outline-4"><h4 id="orgheadline35"><span class="section-number-4">10.4.2</span> 标准操作</h4><div class="outline-text-4" id="text-10-4-2"><p>对撤销的撤销便是重做（或者向前撤销）</p><pre class="example">第一，执行 C-x u 向后撤销第二，执行 C-g 然后 C-x u 就是向前撤销了。</pre><p>参考：<a href="http://www.cnblogs.com/chaolong/archive/2013/07/11/3183241.html" target="_blank" rel="noopener">Emacs中的撤销</a></p></div></div><div id="outline-container-orgheadline36" class="outline-4"><h4 id="orgheadline36"><span class="section-number-4">10.4.3</span> 比较详细的解释</h4><div class="outline-text-4" id="text-10-4-3"></div><div id="outline-container-orgheadline172" class="outline-5"><h5 id="orgheadline172"><span class="section-number-5">10.4.3.1</span> Emacs中所有命令均可undo</h5><div class="outline-text-5" id="text-10-4-3-1"><p>所有命令均可undo, 包括undo本身，所有命令emacs都一视同仁，所以：undo+undo=redo</p><pre class="example">emacs 把相同类型的操作，合并为一个事件。比如说往缓冲区里打字，也就是 self-insert-command，如果每次 undo ，只是撤消掉一个字符，那就太僵硬了，所以 self-insert-command 的操作，每20次合并为一个事件，一次 undo ，撤消掉20个字符。而 undo 的猥琐之处在于，只要连续的 undo ，无论多少个，都是一个事件……当然，这也是必需的，不然你 undo 了20次之后，又突然开始 redo ……而恰巧这时又是夜深人静的话……</pre></div></div><div id="outline-container-orgheadline173" class="outline-5"><h5 id="orgheadline173"><span class="section-number-5">10.4.3.2</span> Emacs中撤销操作序列的表示方式</h5><div class="outline-text-5" id="text-10-4-3-2"><pre class="example">undo 之后想要 redo ，就要进行一个其它类型的操作，随便输入一个字符或者移动一下光标都可以，不过标准答案是 C-g 。s1--s2--s3--s4              )    s3  u3--u4   / | (  |   \ s5--s6--s7--s8--s9  |    \                  )  |     u5--u6--u7--u8--u9   \     s10----sn假设 u3 表示 undo s3 。从 s9 开始 undo，顺着 emacs 的“undo蛇”往回走，到了 u3 的时候，就是 undo undo s3，也就是 s3 了，而这一串 undo，也成了“undo贪吃蛇”的一部分。虽然 emacs 保留了全部的操作状态，但是从 s10 返回 s1 却要将近20步，而普通的编辑器只要两步。这个必需得动手实验后才能有一个直观的印象，按以下步骤操作: (g C-g) (u undo)1g2g3g4guu5g6g7g8g9guuuuuu10(可以把end-of-line绑到空格代替C-g)</pre></div></div><div id="outline-container-orgheadline174" class="outline-5"><h5 id="orgheadline174"><span class="section-number-5">10.4.3.3</span> 引入插件undo-tree来"改变"Emacs中的undo模式：</h5><div class="outline-text-5" id="text-10-4-3-3"><pre class="example">其实这种“undo蛇”完全可以表示成 undo tree。s10 到 s1 ，两步;再到 s4，四步(有一步是切换分支)……          s10----sn         /s1--s2--s3--s4         \          s5--s6--s7--s8--s9不知道 emacs 为什么没有使用这种方式，可能是因为选择分支之类的操作很难描述吧。好了，不提这么伤感的事，现在有一个扩展叫作 undo-tree ，基本解决了这个问题。 undo-tree 安装使用都很简单:;放到load-path中，配置文件中添加(require 'undo-tree)(global-undo-tree-mode)由于篇幅所限，就不截图了C-x u 进入 undo-tree-visualizer-mode , p n 上下移动，在分支之前 b f 左右切换，t 显示时间戳，选定需要的状态后， q 退出。这是主要的操作，其它的自己摸索好了……</pre><p>参考：<a href="http://itindex.net/detail/32008-emacs-undo-tree" target="_blank" rel="noopener">emacs 新手必看: undo-tree</a></p></div></div></div><div id="outline-container-orgheadline37" class="outline-4"><h4 id="orgheadline37"><span class="section-number-4">10.4.4</span> 官方文档</h4><div class="outline-text-4" id="text-10-4-4"><p>查阅Emacs <code>C-h i</code> 信息中有关Undo的内容，如下：</p><pre class="example">Any command other than an undo command breaks the sequence of undo commands. Starting from that moment, the entire sequence of undo commands that you have just performed are themselves placed into the undo record, as a single set of changes. Therefore, to re-apply changes you have undone, type C-f or any other command that harmlessly breaks the sequence of undoing; then type C-/ to undo the undo command.</pre><p>亦可参考：<a href="http://www.cnblogs.com/wendellyi/archive/2013/08/29/3290366.html" target="_blank" rel="noopener">http://www.cnblogs.com/wendellyi/archive/2013/08/29/3290366.html</a></p></div></div><div id="outline-container-orgheadline38" class="outline-4"><h4 id="orgheadline38"><span class="section-number-4">10.4.5</span> 总结</h4><div class="outline-text-4" id="text-10-4-5"><p>其实redo就是对undo的undo，undo会将本身当作被redo的对象，但是连续的undo之间不会被打断，（当然其中的每次undo仍然会视为一个change)，通过 <code>C-g</code> 打断连续的Undo操作，再 <code>C-/</code> 就实现了对上次的undo 进行 undo，其实感觉上，Emacs将一切操作线性化，即简化了设计，又符合人的思维次序，而通过undo-tree却将这个undo变成了树状结果，便于理解，但是实践上未必更实用。目前暂时不用相关的插件。</p></div></div></div><div id="outline-container-orgheadline39" class="outline-3"><h3 id="orgheadline39"><a id="ID-155b159a-2dcb-42e9-a428-60d8a022fbfa"></a><span class="section-number-3">10.5</span> 关于Narrow</h3><div class="outline-text-3" id="text-10-5"><p>Narrowing的意思是将焦点集中到buffer的指定区域上, 有助于集中精力到特定的段落上，而将无关信息屏蔽掉。</p><p>Narrow后，你能看到的内容就是被Narrow的部分，但是并非删除了其他的内容，而是将相应的内容隐藏了。</p><p>Narrow后，其他内容好像不存在了一样，正常的跳转/搜索操作也被限制在Narrow范围内。</p><p>Narrow后，能够看见的区域被称作可访问区域，当取消narrow的时候，其他不可见的区域也变回可见了。</p><p>主要命令：</p><dl class="org-dl"><dt>将Narrow范围设定在光标与Mark范围之间</dt><dd>输入 <code>C-x n n</code> ，其实一般也就是被选区域。</dd><dt>取消Narrow</dt><dd>输入 <code>C-x n w</code></dd><dt>将Narrow范围设定为当前页</dt><dd>输入 <code>C-x n p</code></dd><dt>将Narrow范围设定为当前函数</dt><dd>输入 <code>C-x n d</code></dd></dl><p>具体可以参考 <code>C-x n C-h</code> 或 <a href="http://www.gnu.org/software/emacs/manual/html_node/emacs/Narrowing.html" target="_blank" rel="noopener">http://www.gnu.org/software/emacs/manual/html_node/emacs/Narrowing.html</a></p></div></div></div><div id="outline-container-orgheadline40" class="outline-2"><h2 id="orgheadline40"><a id="ID-62b81dae-5ab4-4fe2-9092-68bc51c35a75"></a><span class="section-number-2">11</span> 其他</h2><div class="outline-text-2" id="text-11"><ul class="org-ul"><li><p>切换模式</p><p>输入 <code>M-x &lt;mode name&gt;</code> </p><p>这里&lt;mode name&gt;是模式名称，自己输入，可以&lt;Tab&gt;补全。</p></li><li><p>只读切换</p><p>输入 <code>C-x C-q</code></p><p>输入之后，当前buffer会在只读以及可读写之间切换。</p></li><li><p>终止现在正在执行的命令</p><p>输入 <code>C-g</code></p><p>这个命令只能终止本层编辑正在执行的指令，当你处于 <code>recursive edit level</code> 的时候，你就不能够利用 <code>C-g</code> 来取消命令了，那么你需要利用 <code>&lt;Esc&gt;&lt;Esc&gt;&lt;Esc&gt;</code> （或者更多次）来取消。</p></li><li><p>交互执行lisp命令并插入结果</p><p>输入如下命令序列:</p><pre class="example">M-x lisp-interaction-mode&lt;lisp expressions&gt;C-j</pre><p>切换 <code>lisp-interaction-mode</code> 模式之后，输入lisp表达式， <code>C-j</code> 计算并插入结果。千万注意 <code>C-j</code> 的光标位置。</p></li><li><p>交互执行lisp命令不插入结果</p><p>输入如下命令序列：</p><pre class="example">M-x lisp-interaction-mode&lt;lisp expressions&gt;C-x C-e</pre><p>切换 <code>lisp-interaction-mode</code> 模式之后，输入lisp表达式， <code>C-x C-e</code> 计算并将结果显示在底部mini buffer中。千万注意 <code>C-x C-e</code> 的光标位置。</p></li></ul><ul class="org-ul"><li><p>查看所有安装的包</p><p>输入 <code>M-x list-packages</code></p></li></ul><ul class="org-ul"><li><p>插入原样字符</p><p>输入 <code>C-q &lt;待输入字符&gt;</code></p><p>输入之后将会插入相应字符（包括控制字符），而不是执行字符对应的按键绑定命令。</p></li></ul><ul class="org-ul"><li><p>进入elisp交互解释界面</p><p>输入 <code>eilm</code></p></li></ul></div><div id="outline-container-orgheadline41" class="outline-3"><h3 id="orgheadline41"><span class="section-number-3">11.1</span> 意外操作</h3><div class="outline-text-3" id="text-11-1"><p>这里列出平时意外操作发现的一些功能，可能会整理至合适位置。</p><ul class="org-ul"><li><p>快速文本块选择</p><p>输入 <code>C-S-n/p/a/e</code> 或者可以表达为 <code>C-N/P/A/E</code> 好像可以进行块选择，按其它的按键会导致退出“选择模式”。</p></li></ul><ul class="org-ul"><li><p>新开一行</p><p>输入 <code>C-o</code>, 默认输入这个命令可以可以在当前位置上面新开一行。</p></li></ul><ul class="org-ul"><li><p>当前位置内容帮助</p><p>在光标单词处输入 <code>C-h xxx</code> 直接回车默认会解释光标下的帮助内容。</p></li></ul><ul class="org-ul"><li><p>选择标记整个buffer</p><p>输入 <code>C-x h</code></p></li></ul><ul class="org-ul"><li><p>将选择的数据块按照上行缩进（上一行缩进几个空格，则此处也缩进几个空格，而不是tab?）</p><p>选择后输入 =C-M-\=，如果上行没有缩进则自动缩进一个tabstop。其实选择块之后，直接Tab也会缩进。</p></li></ul></div></div></div><div id="outline-container-orgheadline42" class="outline-2"><h2 id="orgheadline42"><span class="section-number-2">12</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[27/114]</code>(<code>[23%]</code>)</h2><div class="outline-text-2" id="text-12"><ul class="org-ul"><li>State "WAIT/FORWARD" from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 15:07] </span></span> <br>wait for all done</li></ul></div><div id="outline-container-orgheadline43" class="outline-3"><h3 id="orgheadline43"><span class="section-number-3">12.1</span> <span class="todo NEXT">NEXT</span> 前进后退？</h3><div class="outline-text-3" id="text-12-1"><ul class="org-ul"><li>State "NEXT"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2015-12-17 四 15:30]</span></span></li><li>State "WAIT/FORWARD" from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 13:52] </span></span> <br>前进后退的插件已经基本阅读完毕，使用自定义markring不会影响已有的系统markring；可行，其他前进后退的更多文档可能需要借助系统的mark以及使用的经验。</li><li>State "LATER"      from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-02 一 11:41]</span></span></li></ul></div><div id="outline-container-orgheadline44" class="outline-4"><h4 id="orgheadline44"><span class="section-number-4">12.1.1</span> 插件</h4><div class="outline-text-4" id="text-12-1-1"><p>使用recent-jump插件。</p></div><div id="outline-container-orgheadline175" class="outline-5"><h5 id="orgheadline175"><span class="section-number-5">12.1.1.1</span> 配置举例</h5><div class="outline-text-5" id="text-12-1-1-1"><div class="org-src-container"><pre class="src src-elisp">;; set recent-jump(setq recent-jump-threshold 4)(setq recent-jump-ring-length 10)(global-set-key (kbd "C-o") 'recent-jump-jump-backward)(global-set-key (kbd "M-o") 'recent-jump-jump-forward)(require 'recent-jump)</pre></div></div></div><div id="outline-container-orgheadline176" class="outline-5"><h5 id="orgheadline176"><span class="section-number-5">12.1.1.2</span> 常用操作</h5><div class="outline-text-5" id="text-12-1-1-2"><ul class="org-ul"><li>前进</li></ul><p><code>C-o</code></p><ul class="org-ul"><li>后退</li></ul><p><code>M-o</code></p></div></div><div id="outline-container-orgheadline177" class="outline-5"><h5 id="orgheadline177"><span class="section-number-5">12.1.1.3</span> 其他</h5><div class="outline-text-5" id="text-12-1-1-3"><p>对该插件可以自行修改其源代码，以定制什么情况下针对什么命令、多大举例进行跳转。具体参见插件的源码和文档。</p><pre class="example">;;; Commentary:;; ;; sometimes, we start a big jump, e.g. go to the beginning of buffer, search,;; page down etc, it is handy that you can go back to where you start. For;; example, when we writing program source code, we ofter search for some;; reference and go back to where you start and continue writing. But how can we;; define "Big Jump". I can not find a proper hook for the big jump, so at last;; I choose the pre-command-hook. Now what my defination for "Big Jump" is :;; ;; 1. you issued some special command, it can be defined by;; recent-jump-hook-commands ;;;; 2. you jumped really much. that is you move more than `recent-jump-threshold';; lines.</pre><p>参考: <a href="http://blog.waterlin.org/articles/%E5%9C%A8emacs%E4%B8%AD%E5%BF%AB%E9%80%9F%E5%9C%B0%E8%B7%B3%E8%BD%AC%EF%BC%9Arecent-jumpel.html" target="_blank" rel="noopener">http://blog.waterlin.org/articles/%E5%9C%A8emacs%E4%B8%AD%E5%BF%AB%E9%80%9F%E5%9C%B0%E8%B7%B3%E8%BD%AC%EF%BC%9Arecent-jumpel.html</a></p></div></div></div><div id="outline-container-orgheadline45" class="outline-4"><h4 id="orgheadline45"><span class="section-number-4">12.1.2</span> 链接的后退</h4><div class="outline-text-4" id="text-12-1-2"><p>跳转一次链接后，会记录上次链接。使用 <code>C-c &amp;</code> 可以后退。具体需要仔细确认。</p></div></div><div id="outline-container-orgheadline46" class="outline-4"><h4 id="orgheadline46"><span class="section-number-4">12.1.3</span> 查找的后退</h4><div class="outline-text-4" id="text-12-1-3"><p>查找一个字符串，回车后，会记录开始查找时的位置。使用 <code>C-u C-@</code> 可以退回查找前的位置。</p></div></div><div id="outline-container-orgheadline47" class="outline-4"><h4 id="orgheadline47"><span class="section-number-4">12.1.4</span> 输入 <code>C-u C-@</code></h4></div></div><div id="outline-container-orgheadline48" class="outline-3"><h3 id="orgheadline48"><span class="section-number-3">12.2</span> <span class="done DONE">DONE</span> TAB标签栏?</h3><div class="outline-text-3" id="text-12-2"><ul class="org-ul"><li>State "DONE"       from "MAYBE/FUTURE" <span class="timestamp-wrapper"><span class="timestamp">[2016-03-03 四 11:02]</span></span></li><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:38]</span></span></li></ul><p>使用 <code>tabbar</code> 插件。具体参考相关文档。</p></div><div id="outline-container-orgheadline49" class="outline-4"><h4 id="orgheadline49"><span class="section-number-4">12.2.1</span> 下载地址</h4><div class="outline-text-4" id="text-12-2-1"><p><code>wget https://www.emacswiki.org/emacs/download/tabbar.el</code></p></div></div><div id="outline-container-orgheadline50" class="outline-4"><h4 id="orgheadline50"><span class="section-number-4">12.2.2</span> 关键配置</h4><div class="outline-text-4" id="text-12-2-2"><div class="org-src-container"><pre class="src src-elisp">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;tabbar;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(require 'tabbar)(tabbar-mode t)</pre></div></div></div></div><div id="outline-container-orgheadline51" class="outline-3"><h3 id="orgheadline51"><span class="section-number-3">12.3</span> <span class="done DONE">DONE</span> 如何删除一行</h3><div class="outline-text-3" id="text-12-3"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-02 一 11:43]</span></span></li></ul><p>删除一行输入 <code>C-S &lt;BS&gt;</code></p></div></div><div id="outline-container-orgheadline52" class="outline-3"><h3 id="orgheadline52"><span class="section-number-3">12.4</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> 如何移动一行？</h3><div class="outline-text-3" id="text-12-4"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:39]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-02 一 11:43]</span></span></li></ul></div></div><div id="outline-container-orgheadline53" class="outline-3"><h3 id="orgheadline53"><span class="section-number-3">12.5</span> <span class="done DONE">DONE</span> 如何删除至行首？</h3><div class="outline-text-3" id="text-12-5"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-02 一 11:53]</span></span></li></ul><p>输入 <code>C-0 C-k</code></p><p>n或输入 <code>M-- C-k</code></p><p>或 <code>C-u 0 C-k</code></p></div></div><div id="outline-container-orgheadline54" class="outline-3"><h3 id="orgheadline54"><span class="section-number-3">12.6</span> <span class="done DONE">DONE</span> 如何save all?</h3><div class="outline-text-3" id="text-12-6"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-02-10 三 11:08]</span></span></li><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 16:46] </span></span> <br>待整理至合适的位置。</li></ul><p>输入 <code>C-x s</code>参考: <a href="#orgheadline1">文件操作</a></p></div></div><div id="outline-container-orgheadline55" class="outline-3"><h3 id="orgheadline55"><span class="section-number-3">12.7</span> <span class="done DONE">DONE</span> 只读切换?</h3><div class="outline-text-3" id="text-12-7"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-02-10 三 11:11]</span></span></li><li>State "WAIT/FORWARD" from "DONE"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 16:45] </span></span> <br>需要转移到合适的位置。</li><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 16:45]</span></span></li></ul><p>输入 <code>C-x C-q</code></p><p>参见 <a href="#orgheadline40">其他</a></p></div></div><div id="outline-container-orgheadline56" class="outline-3"><h3 id="orgheadline56"><span class="section-number-3">12.8</span> <span class="done DONE">DONE</span> 如何删除备份文件，或者不使用自动备份？</h3><div class="outline-text-3" id="text-12-8"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-02 一 11:55]</span></span></li></ul><p>具体参考：<a href="#orgheadline29">关于自动临时保存和备份</a>;;disable auto backup file("xxx~") when save(default t).(setq make-backup-files nil)</p><p>;; all backups goto ~/.backups instead in the current directory;;(setq backup-directory-alist (quote (("." . "~/.backups"))))</p><p>;;disable recovery file("#xxx#") when modify(default t);;(setq auto-save-default nil)</p></div></div><div id="outline-container-orgheadline57" class="outline-3"><h3 id="orgheadline57"><span class="section-number-3">12.9</span> <span class="done DONE">DONE</span> 跳转到当前buffer工作目录？</h3><div class="outline-text-3" id="text-12-9"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-02-10 三 11:14]</span></span></li><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-12 一 09:23] </span></span> <br>待整理到合适位置</li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-12 一 08:50]</span></span></li></ul><p>输入 <code>C-x d</code></p><p>参考： <a href="#orgheadline2">文件管理</a></p><p>另外，不知道在哪里看到的文章上讲 <code>C-x C-j</code> 可以用 dired mode 打开正在编辑的文件的所在目录，但是我的版本的 Emacs 居然没有这个快键，而且这个键没有绑定任何命令。 于是加了一段代码实现这个功能。</p><div class="org-src-container"><pre class="src src-emacs-lisp">;; C-x C-j open the directory of current buffer(global-set-key (kbd "C-x C-j")(lambda ()(interactive)(if (buffer-file-name)(dired default-directory))))</pre></div></div></div><div id="outline-container-orgheadline58" class="outline-3"><h3 id="orgheadline58"><span class="section-number-3">12.10</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> Emacs当前工作目录？</h3><div class="outline-text-3" id="text-12-10"><ul class="org-ul"><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-20 二 17:02] </span></span> <br>等待整理到合适的位置。</li></ul><p>参考： <a href="#orgheadline2">文件管理</a>当前buffer的目录， 输入 <code>C-x d</code> 。 </p><p>设置默认工作目录可以如下：</p><p><code>(setq default-directory "/home/quieheart")</code></p><p>但是=default-directory= 是buffer-local,</p><p>参考：<a href="http://zhidao.baidu.com/link?url=ZDHfOcxIDLzxiCRDi2yEWusjiqu9NRag0IFU7J3KGYFMiibAGC_MVL5Tm-aFWaekODyF0uhXf0aDLVtyalqk74eKy6H_CoJWfNp1_mWD3Ci" target="_blank" rel="noopener">http://zhidao.baidu.com/link?url=ZDHfOcxIDLzxiCRDi2yEWusjiqu9NRag0IFU7J3KGYFMiibAGC_MVL5Tm-aFWaekODyF0uhXf0aDLVtyalqk74eKy6H_CoJWfNp1_mWD3Ci</a>&gt;&gt; windows下的emacs怎么改按c-x c-f出现的路径。</p><p>C-x C-f 使用的目录是 default-directory 的值。default-directory 是 buffer-local variable, 用 setq 写在 .emacs 里面没什么用。</p><p>在没有与文件关联的buffer中default-directory 的值是启动emacs时的当前目录。所以你可以修改启动emacs时的当前目录(PWD)。</p><p>修改启动emacs的当前目录，有多种方法：</p><ol class="org-ol"><li>修改emacs快捷方式属性的起始位置为你希望的文件夹，路径有空格的要加双引号。</li><li>写一个bat/cmd脚本来启动emacs，该脚本内容：先CD到目标路径，然后执行emacs</li></ol><p>如果当前buffer已经打开了文件，default-directory 会变成文件的所在路径。这个行为是不建议更改的。如果希望任何时候 C-x C-f 都是默认到某个目录，建议自己写一个函数来代替默认C-x C-f 绑定的函数。例如：(defun my-find-file ()  (interactive)  (let ((default-directory "<i>mnt</i>"))    (call-interactively #'find-file)))</p><p>(global-set-key (kbd "C-x C-f") 'my-find-file)</p><p>查看当前buffer所在的路径：<code>M-x pwd</code></p></div></div><div id="outline-container-orgheadline59" class="outline-3"><h3 id="orgheadline59"><span class="section-number-3">12.11</span> <span class="todo LATER">LATER</span> 如何重做？</h3><div class="outline-text-3" id="text-12-11"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:39]</span></span></li></ul></div></div><div id="outline-container-orgheadline60" class="outline-3"><h3 id="orgheadline60"><span class="section-number-3">12.12</span> <span class="todo LATER">LATER</span> 如何成块缩进?</h3><div class="outline-text-3" id="text-12-12"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:40]</span></span></li></ul></div></div><div id="outline-container-orgheadline61" class="outline-3"><h3 id="orgheadline61"><span class="section-number-3">12.13</span> <span class="todo LATER">LATER</span> 如何创建空文件</h3><div class="outline-text-3" id="text-12-13"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:40]</span></span></li></ul></div></div><div id="outline-container-orgheadline62" class="outline-3"><h3 id="orgheadline62"><span class="section-number-3">12.14</span> <span class="todo NEXT">NEXT</span> 如何跳转至上次编辑内容？</h3></div><div id="outline-container-orgheadline63" class="outline-3"><h3 id="orgheadline63"><span class="section-number-3">12.15</span> <span class="done DONE">DONE</span> 如何save all？</h3><div class="outline-text-3" id="text-12-15"><ul class="org-ul"><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:40]</span></span></li></ul><p>输入 <code>C-x s</code> , 根据弹出的提示选择待保存的buffer, !表示保存剩余的全部。</p></div></div><div id="outline-container-orgheadline64" class="outline-3"><h3 id="orgheadline64"><a id="ID-8b88c6a5-0086-4ef0-88a9-7191d3d3eb6e"></a><span class="section-number-3">12.16</span> <span class="done DONE">DONE</span> emacs如何加载插件？</h3><div class="outline-text-3" id="text-12-16"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-03-03 四 11:19]</span></span></li><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:41] </span></span> <br>填写配置文件，待整理</li></ul><p>下载插件，插件都是elisp脚本，一般自动加载都是修改配置文件，比如 <code>recent-jump.el</code> </p><p>将加载语句写入配置文件：</p><pre class="example">;;plugins(load "recent-jump.el")</pre><p>或者</p><pre class="example">(require 'recent-jump) ;; back/forward</pre><p>或者如果直接在当前会话中加载插件，可以到 <code>*scratch*</code> buffer中或者其他地方将加载语句写下来，然后则直接执行加载语句（在相应的语句结尾输入 <code>C-x C-e</code> ）</p><p>具体可参考：<a href="#orgheadline111">elisp library</a></p></div></div><div id="outline-container-orgheadline65" class="outline-3"><h3 id="orgheadline65"><span class="section-number-3">12.17</span> <span class="todo LATER">LATER</span> TAB标签显示？</h3><div class="outline-text-3" id="text-12-17"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:41]</span></span></li></ul></div></div><div id="outline-container-orgheadline66" class="outline-3"><h3 id="orgheadline66"><span class="section-number-3">12.18</span> <span class="todo LATER">LATER</span> 跳至上次编辑的位置？</h3><div class="outline-text-3" id="text-12-18"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:41]</span></span></li></ul></div></div><div id="outline-container-orgheadline67" class="outline-3"><h3 id="orgheadline67"><span class="section-number-3">12.19</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 插件在哪配置</h3><div class="outline-text-3" id="text-12-19"><ul class="org-ul"><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:41] </span></span> <br>有emacs plugin相关文章，待整理可能需要整理到原理中。</li></ul><p><code>~/.emacs</code>是emacs配置文件的入口，一般保存整体配置信息，</p><p><code>~/.emacs.d</code>存放插件等具体配置子脚本。</p></div></div><div id="outline-container-orgheadline68" class="outline-3"><h3 id="orgheadline68"><span class="section-number-3">12.20</span> <span class="done DONE">DONE</span> kill buffer?</h3><div class="outline-text-3" id="text-12-20"><ul class="org-ul"><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:42]</span></span></li></ul><p>输入 <code>C-x k</code>, 默认是当前buffer.</p></div></div><div id="outline-container-orgheadline69" class="outline-3"><h3 id="orgheadline69"><span class="section-number-3">12.21</span> <span class="done DONE">DONE</span> 直接执行lisp函数？</h3><div class="outline-text-3" id="text-12-21"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-02 一 12:18]</span></span></li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-02 一 12:17]</span></span></li></ul><p>已有elisp函数： <code>M-x &lt;functionname&gt;</code></p><p>自定义函数，在函数体结尾后执行 <code>C-x C-e</code></p></div></div><div id="outline-container-orgheadline70" class="outline-3"><h3 id="orgheadline70"><span class="section-number-3">12.22</span> <span class="todo LATER">LATER</span> 如何实现自动缩进？</h3><div class="outline-text-3" id="text-12-22"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 15:43]</span></span></li></ul></div></div><div id="outline-container-orgheadline71" class="outline-3"><h3 id="orgheadline71"><span class="section-number-3">12.23</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 如何插入确定的缩进TAB？</h3><div class="outline-text-3" id="text-12-23"><ul class="org-ul"><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-19 一 16:41] </span></span> <br>如果有确定的答案，就直接给出一个简单的提示操作，或者关闭问题。</li></ul><p>参考：<a href="#orgheadline80">关于Tab缩进</a></p></div></div><div id="outline-container-orgheadline72" class="outline-3"><h3 id="orgheadline72"><span class="section-number-3">12.24</span> <span class="todo NEXT">NEXT</span> 如何输入上次输入的内容或者重做？</h3><div class="outline-text-3" id="text-12-24"><p><code>C-x z</code></p></div></div><div id="outline-container-orgheadline73" class="outline-3"><h3 id="orgheadline73"><span class="section-number-3">12.25</span> <span class="done DONE">DONE</span> 交换行</h3><div class="outline-text-3" id="text-12-25"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-03-03 四 11:26]</span></span></li></ul><p>参考：<a href="#orgheadline11">编辑</a></p><p>输入： <code>C-x C-t</code></p></div></div><div id="outline-container-orgheadline74" class="outline-3"><h3 id="orgheadline74"><span class="section-number-3">12.26</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 动态加载配置立即生效？</h3><div class="outline-text-3" id="text-12-26"><p>不重启 Emacs 让 .emacs 配置文件生效有四个函数可以做到：eval-last-sexp,eval-region,eval-buffer 和load-fileM-x eval-last-sexp 使.emacs中光标前的那一条语句立刻生效。M-x eval-region 使.emacs中选中的region中的语句立刻生效。M-x eval-buffer 使当前的buffer中的设置语句立刻生效。M-x load-file ~/.emacs 载入.emacs文件，从而使其中的设置生效。用 emacs 打开 .emacs 文件，C-x C-e 光标前面的运行一条语句。立即生效。注意，有时候，需要重新载入当前buffer才能看见效果，有时候只对当前buffer起效果（可以查看相关配置的帮助说明）。</p></div></div><div id="outline-container-orgheadline75" class="outline-3"><h3 id="orgheadline75"><span class="section-number-3">12.27</span> <span class="done DONE">DONE</span> 如何执行命令时在回显区快速输入和删除？</h3><div class="outline-text-3" id="text-12-27"><ul class="org-ul"><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:00]</span></span></li></ul><p>回显区和正常buffer一样对待，它就是minibuffer.更多参考：<a href="http://www.gnu.org/software/emacs/manual/html_node/emacs/Minibuffer.html#Minibuffer" target="_blank" rel="noopener">http://www.gnu.org/software/emacs/manual/html_node/emacs/Minibuffer.html#Minibuffer</a></p></div></div><div id="outline-container-orgheadline76" class="outline-3"><h3 id="orgheadline76"><span class="section-number-3">12.28</span> <span class="done DONE">DONE</span> 如何查看某一配置变量的值？</h3><div class="outline-text-3" id="text-12-28"><ul class="org-ul"><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:01]</span></span></li></ul><p>查看该变量的帮助信息即可。输入 <code>C-h v</code> ,然后输入变量名称，默认为当前光标所在变量。</p></div></div><div id="outline-container-orgheadline77" class="outline-3"><h3 id="orgheadline77"><span class="section-number-3">12.29</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> 如何恢复默认配置？</h3><div class="outline-text-3" id="text-12-29"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:02]</span></span></li></ul></div></div><div id="outline-container-orgheadline78" class="outline-3"><h3 id="orgheadline78"><span class="section-number-3">12.30</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 如何文件刷新？</h3><div class="outline-text-3" id="text-12-30"><p>用于重新载入配置和文件变化。<a href="http://blog.csdn.net/horstlinux/article/details/7857123" target="_blank" rel="noopener">http://blog.csdn.net/horstlinux/article/details/7857123</a><a href="http://www.emacswiki.org/emacs/RevertBuffer" target="_blank" rel="noopener">http://www.emacswiki.org/emacs/RevertBuffer</a>有四个可以revertbuffer的方法：    M-x revert-buffer RET yes RET    C-x C-v RET    (global-set-key [(control c) r] 'revert-buffer)    C-x RET r RET RET除了手动设置revert-buffer，我们还可以自动设置，加入如下配置：(global-auto-revert-mode 1)</p><p>另外注意，<code>C-x C-v</code> 是打开一个文件，取代当前缓冲区，缓冲区名字也改变了，就算再次重新打开相应的缓冲区文件，其之前对应的Agenda View也不可用了。</p></div></div><div id="outline-container-orgheadline79" class="outline-3"><h3 id="orgheadline79"><span class="section-number-3">12.31</span> <span class="done DONE">DONE</span> 如何显示匹配括号？</h3><div class="outline-text-3" id="text-12-31"><ul class="org-ul"><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:03]</span></span></li></ul><p>输入如下配置：</p><div class="org-src-container"><pre class="src src-elisp">;;paren(show-paren-mode 1)</pre></div></div></div><div id="outline-container-orgheadline80" class="outline-3"><h3 id="orgheadline80"><a id="ID-ac82c059-81c7-4b32-a15e-e9972294b86c"></a><span class="section-number-3">12.32</span> <span class="todo NEXT">NEXT</span> 关于Tab缩进</h3><div class="outline-text-3" id="text-12-32"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 16:47]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 16:47]</span></span></li></ul></div><div id="outline-container-orgheadline81" class="outline-4"><h4 id="orgheadline81"><a id="ID-94922fb6-e9f8-434c-b454-5526787c9f40"></a><span class="section-number-4">12.32.1</span> &#x2014;&#x2014;Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-09-30 三 15:19]</span></span>------</h4><div class="outline-text-4" id="text-12-32-1"></div><div id="outline-container-orgheadline182" class="outline-5"><h5 id="orgheadline182"><span class="section-number-5">12.32.1.1</span> 文档中的描述</h5><div class="outline-text-5" id="text-12-32-1-1"><p>文档上关于indent的一些变量和函数，翻译过来大致意思如下：</p></div><ol class="org-ol"><li><a id="orgheadline178"></a><code>C-h f indent-for-tab-command</code><br><div class="outline-text-6" id="text-12-32-1-1-1"><blockquote><p>依赖于 <code>tab-always-indent</code> 的设置，会为当前主模式的行或者区域进行合适的缩进，或者插入 <code>TAB</code> 。</p><p>在大多数主模式中，如果光标在行缩进区域，它会在缩进后移动到第一个非空的字符上，否则光标会呆在当前文本的同样的位置。</p><p>如果给定了一个前缀参数，也会严格缩进以当前行首开始的整个balanced expression，来反映当前行缩进的变化。</p><p>如果 <code>transient-mark-mode</code> 被打开，并且当前region是active的，会将当前的区域缩进（这个时候，任何前缀参数都会被忽略）。</p><p>实际上被调用来缩进行的函数取决与 <code>indent-line-function</code> 变量的设置。</p></blockquote></div></li><li><a id="orgheadline179"></a><a id="ID-808ab67c-f402-439a-8cf6-be686fdccf03"></a><code>C-h v indent-line-function</code><br><div class="outline-text-6" id="text-12-32-1-1-2"><blockquote><p>这个变量是buffer local的变量，表示用来缩进当前行的函数；</p><p>这个函数被调用的时候没有任何参数，如果函数在一个auto-indentation无法发生的地方被调用了（比如一个字符串的中间），这个函数将只会返回 <code>noindent</code> ；</p><p>我们可以设置这个函数来们组自己的需求，使得 <code>TAB</code> 能够合适的被缩进，如果并非必须，最好不要重新绑定 <code>TAB</code> 按键。</p></blockquote><p>关于这个变量的值，比如我当前打开一个 <code>emacs_tips.org</code> 文件，然后查看这个变量，可以看到如下：</p><pre class="example">Local in buffer emacs_tips.org; global value is indent-relative</pre><p>说明，在文件 <code>emacs_tips.org</code> 中它的值为 <code>org-indent-line</code> （这是orgmode的设置），其它位置默认为 <code>indent-relative</code> 。</p></div></li><li><a id="orgheadline180"></a><code>C-h v tab-always-indent</code><br><div class="outline-text-6" id="text-12-32-1-1-3"><blockquote><p>如果为 <code>t</code> ，则键入 <code>TAB</code> 会缩进当前行；</p><p>如果为 <code>nil</code> ，并且光标在左边的空白区或者行缩进区，则键入 <code>TAB</code> 会缩进当前行；</p><p>如果为 <code>nil</code> ，并且光标没有在空白或缩进区，则键入 <code>TAB</code> 会直接插入 <code>TAB</code> 字符；</p><p>如果为 <code>complete=，则键入 =TAB</code> 首先会缩进当前行，如果当前行已经缩进了，就尝试补全光标所在单词。</p><p>有些编程语言有他们自己的变量控制这个行为，例如 <code>c-tab-always-indent</code> ，这时候不会考虑这个变量。</p></blockquote></div></li><li><a id="orgheadline181"></a><code>C-h v indent-tabs-mode</code><br><div class="outline-text-6" id="text-12-32-1-1-4"><p>这个是在C语言代码中定义的变量，设置成任何内容都会编程buffer-local的变量，这个变量做为文件局部变量保存，是安全的。</p><p>如果 <code>non-nil</code> ，将会插入 <code>TAB</code> .</p></div></li></ol></div><div id="outline-container-orgheadline183" class="outline-5"><h5 id="orgheadline183"><span class="section-number-5">12.32.1.2</span> 参考：</h5><div class="outline-text-5" id="text-12-32-1-2"><ol class="org-ol"><li><p>关于emacs 缩进<br>有一篇不错的文章<br>参考：<a href="http://www.cnblogs.com/bamanzi/archive/2010/04/04/emacs-indent.html" target="_blank" rel="noopener">http://www.cnblogs.com/bamanzi/archive/2010/04/04/emacs-indent.html</a><br>主要包括了：默认的Tab行为、需要的行为、以及配置的方式<br>摘抄一些部分<br></p><blockquote><ul class="org-ul"><li>不插入tab字符，不插入tab字符</li><li>每次缩进4个空格(setq default-tab-width 4)</li><li>缩进完全自行控制，不用syntax indentation来自动 （按语法格式化完全可以使用C-_）?</li><li>按TAB键时如果选择多行，则缩进(行首插入多个空格)如果未选择多行，当前光标在行首（不管是indentation区还是第一个字符上)，则缩进光标不在行首，插入多个空格(如果要将代码补齐考虑进来，则:如果光标在一个单词的末尾，则TAB键需要激活补全函数,如果单词后有一个空格，再按TAB键则添加空格)</li><li>按Shift-TAB键时如果选择多行，则反缩进(行首删除多个空格)如果未选择多行，光标在行首，反缩进光标不在行首，发向移动光标或者什么也不做</li></ul><p>从最后两条来看，原来的indent-for-tab-command不能满足需求，需要将TAB键绑定到别的函数才行。在网上搜了半天，找到这篇文章提供的方法正是我所要的：emacs, indent/unindent region as a block using the tab key<a href="http://ignaciopp.wordpress.com/2009/06/17/emacs-indentunindent-region-as-a-block-using-tab-key/" target="_blank" rel="noopener">http://ignaciopp.wordpress.com/2009/06/17/emacs-indentunindent-region-as-a-block-using-tab-key/</a></p><p>上面链接中的实现也考虑了，如果要对接其它的代码补齐，只需要将(hippie-expand nil)换成其它的即可，比如auto-complete的ac-start</p></blockquote></li><li><p>缩进可能涉及到的配置可查阅<br>参考：<a href="http://crushon.blog.163.com/blog/static/21440415520121117105642762/" target="_blank" rel="noopener">http://crushon.blog.163.com/blog/static/21440415520121117105642762/</a><br>一些变量：<br></p><blockquote><p>(setq indent-tabs-mode nil)(setq default-tab-width 4)(setq tab-width 4)(setq tab-stop-list '(4 8 12 16 20 24 28 32 36 40      44 48 52 56 60 64 68 72 76 80 84 88 92 96))    </p></blockquote></li><li><p>总结根据上面资料，默认的情况：</p><ul class="org-ul"><li>选择块之后<br>Tab会缩进相应的选择块</li><li>如果没有选择块<br><ul class="org-ul"><li>tab-always-indent为t时<br>会依据当前语法体系缩进，而不管光标是在行首还是其它；</li><li>tab-always-indent为nil时<br>根据光标三种情况：<br><ol class="org-ol"><li>行首空白区(即在indentation区内)，则取消所有缩进;</li><li>行首第一个非空白字符上， 则按第一次则语法缩进，第二次则插入tab字符或者空格(插入TAB还是空格则依赖于indent-tabs-mode设置);</li><li>不在行首,插入tab字符或者空格</li></ol></li></ul></li></ul><p>另外，实践发现，默认情况下还有如下行为：Tab对应的空格长度，需要设置：tab-width如果Tab缩进长度达到Tab长度，是否自动将达到Tab长度的部分转换为Tab字符，需要设置：indent-tabs-mode多次tab时，光标依次缩进（前进）的长度，需要设置：tab-stop-list每次tab会缩进上行缩进的长度（无论是否为Tab的整数倍）</p><p>需求：每个人需求各不相同，大致需求如下：orgmode下，采用其默认行为即可，缩进方面可以？</p></li></ol></div></div></div></div><div id="outline-container-orgheadline82" class="outline-3"><h3 id="orgheadline82"><span class="section-number-3">12.33</span> <span class="todo LATER">LATER</span> 如何显示空白字符？</h3><div class="outline-text-3" id="text-12-33"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:05]</span></span></li></ul></div></div><div id="outline-container-orgheadline83" class="outline-3"><h3 id="orgheadline83"><span class="section-number-3">12.34</span> <span class="todo LATER">LATER</span> 如何复制一行？</h3><div class="outline-text-3" id="text-12-34"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:07]</span></span></li></ul></div></div><div id="outline-container-orgheadline84" class="outline-3"><h3 id="orgheadline84"><span class="section-number-3">12.35</span> <span class="todo LATER">LATER</span> 缩进提示线？</h3><div class="outline-text-3" id="text-12-35"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:07]</span></span></li></ul></div></div><div id="outline-container-orgheadline85" class="outline-3"><h3 id="orgheadline85"><span class="section-number-3">12.36</span> <span class="done DONE">DONE</span> 重命名当前文件？</h3><div class="outline-text-3" id="text-12-36"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-03-03 四 11:30]</span></span></li><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:07] </span></span> <br>参考dired相关命令</li></ul><p>输入 <code>M-x rename-file</code></p><p>或参考 <a href="#orgheadline2">文件管理</a></p></div></div><div id="outline-container-orgheadline86" class="outline-3"><h3 id="orgheadline86"><span class="section-number-3">12.37</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> 如何表示当前文件名？</h3><div class="outline-text-3" id="text-12-37"><ul class="org-ul"><li>State "MAYBE/FUTURE" from              <span class="timestamp-wrapper"><span class="timestamp">[2016-03-03 四 11:29]</span></span></li></ul></div></div><div id="outline-container-orgheadline87" class="outline-3"><h3 id="orgheadline87"><span class="section-number-3">12.38</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 宏录制</h3><div class="outline-text-3" id="text-12-38"><p>开始录制宏，用 <code>C-x (</code> 结束录制宏，用 <code>C-x )</code>使用宏，用 <code>C-x e</code> 来使用宏。可以利用C-u来重复使用100次这个宏，即命令C-u 100 C-x e。 C-x e e e &#x2026;将宏重复。</p><p>命名宏输入: <code>M-x name-last-kbd-macro</code>输入之后，提示输入名称，输入名称后即可完成宏命名。</p><p>使用已命名的宏输入: <code>M-x yourmacroname</code>输入之后，便执行之前保存的"yourmacroname"对应的宏了，输入时候，输入的宏名支持Tab补全。</p><p>保存宏实现输入： <code>M-x insert-kbd-macro</code>输入之后，提示输入宏名，输入宏名称后（这里支持Tab补全），就会将宏的实现以文本的形式插入到你的当前文本中。例如：</p><div class="org-src-container"><pre class="src src-elisp">(fset 'ins_4spc_nextline   "\C-n\C-a    ")</pre></div><p>这个宏实现是之前录制的，命名为"ins_4spc_nextline"的宏，如果将这个实现插入到你的emacs配置文件中，那么就可以通过 <code>M-x yourmacroname</code> 的方式来进行调用了。n重命名宏？</p></div></div><div id="outline-container-orgheadline88" class="outline-3"><h3 id="orgheadline88"><span class="section-number-3">12.39</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 如何块缩进？</h3><div class="outline-text-3" id="text-12-39"><ul class="org-ul"><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-19 一 16:42] </span></span> <br>如果有确定的答案就简单给出操作提示，或者直接关闭问题。</li></ul><p>参考：<a href="#orgheadline80">关于Tab缩进</a></p></div></div><div id="outline-container-orgheadline89" class="outline-3"><h3 id="orgheadline89"><span class="section-number-3">12.40</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> C-/是Undo</h3><div class="outline-text-3" id="text-12-40"><ul class="org-ul"><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-16 五 16:58] </span></span> <br>wait for move</li></ul></div></div><div id="outline-container-orgheadline90" class="outline-3"><h3 id="orgheadline90"><span class="section-number-3">12.41</span> <span class="done DONE">DONE</span> 如何操作目录</h3><div class="outline-text-3" id="text-12-41"><ul class="org-ul"><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-30 一 13:57]</span></span></li></ul><p>参考：<a href="#orgheadline2">文件管理</a></p></div></div><div id="outline-container-orgheadline91" class="outline-3"><h3 id="orgheadline91"><span class="section-number-3">12.42</span> <span class="done CANCEL">CANCEL</span> 如何管理配置目录</h3><div class="outline-text-3" id="text-12-42"><ul class="org-ul"><li>State "CANCEL"     from "DONE"       <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:10] </span></span> <br>因人而异，可能会在将来整理相关文档。这里暂时不做深入回答。</li><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:09]</span></span></li></ul></div></div><div id="outline-container-orgheadline92" class="outline-3"><h3 id="orgheadline92"><span class="section-number-3">12.43</span> <span class="todo LATER">LATER</span> 如何定位光标下路径的文件？</h3><div class="outline-text-3" id="text-12-43"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:11]</span></span></li></ul></div></div><div id="outline-container-orgheadline93" class="outline-3"><h3 id="orgheadline93"><span class="section-number-3">12.44</span> <span class="todo LATER">LATER</span> 如何按项目组织目录</h3><div class="outline-text-3" id="text-12-44"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:11]</span></span></li></ul></div></div><div id="outline-container-orgheadline94" class="outline-3"><h3 id="orgheadline94"><span class="section-number-3">12.45</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 如何让Emacs在光标到达当前Buffer最后一行尾部不自动recenter?</h3><div class="outline-text-3" id="text-12-45"><ul class="org-ul"><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-03-03 四 11:04] </span></span> <br>wait for arranged.</li><li>State "NEXT"       from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:11]</span></span></li><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:11]</span></span></li></ul><p>需设置滚动参数，具体参考如下配置以及文档 和 <a href="#orgheadline103">emacs的光标滚动如何让其不在屏幕尾部自动滚屏到中间？</a></p><div class="org-src-container"><pre class="src src-elisp">;;auto scroll behavior, '0' is center point while outof screen, or don't center.;;(setq scroll-conservatively)(setq scroll-step 1);;(setq scroll-up-aggressively);;(setq scroll-down-aggressively);;wheel scroll step(setq mouse-wheel-scroll-amount '(1 ((shift) . 5) (control)))</pre></div></div></div><div id="outline-container-orgheadline95" class="outline-3"><h3 id="orgheadline95"><span class="section-number-3">12.46</span> <span class="todo LATER">LATER</span> 考虑一下用el-get插件管理插件</h3><div class="outline-text-3" id="text-12-46"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:11]</span></span></li></ul></div></div><div id="outline-container-orgheadline96" class="outline-3"><h3 id="orgheadline96"><a id="ID-9f59b61a-59b9-497f-8973-f1ae976a84a7"></a><span class="section-number-3">12.47</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> eshell如何操作？</h3><div class="outline-text-3" id="text-12-47"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:11]</span></span></li><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:11]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">&lt;2015-10-02 五 09:53&gt;</span></span>From:/media/sda6/study/mygitrepo/quietheart/misc/mylinux_home/home.user/_emacs.d/elisp/plugins.el</p></div></div><div id="outline-container-orgheadline97" class="outline-3"><h3 id="orgheadline97"><a id="ID-9d0e2058-c620-4b0b-a4b6-a68d7b9bc7c6"></a><span class="section-number-3">12.48</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 如何配置自动新开“弹出”窗口的分割方向？</h3><div class="outline-text-3" id="text-12-48"><ul class="org-ul"><li>State "WAIT/FORWARD" from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-05 四 11:02] </span></span> <br>等待整理至合适的位置。</li><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-05 四 10:49]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-10-09 五 15:10]</span></span></li></ul><p>查看 <code>M-x info</code> 获取到帮助信息。</p><p>默认查看帮助信息的的时候，窗口会分割成左右两个，如果我们想要分割成上下，那么配置如下：</p><div class="org-src-container"><pre class="src src-emacs-lisp">;; perfer split 'pop' window vertically(whole-&gt;up+lower).(setq split-height-threshold 0)(setq split-width-threshold nil)</pre></div><p>这里我们需要注意的是， <code>split vertically</code> 意思是将窗口分割成上下两个部分； <code>split horizontally</code> 意思是将窗口分割成左右两个部分。具体查看 <code>C-h f split-window-sensibly</code> 。</p></div></div><div id="outline-container-orgheadline98" class="outline-3"><h3 id="orgheadline98"><span class="section-number-3">12.49</span> <span class="todo LATER">LATER</span> Emacs如何控制Pop分割窗口的大小？</h3><div class="outline-text-3" id="text-12-49"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:12]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-05 四 11:05]</span></span></li></ul></div></div><div id="outline-container-orgheadline99" class="outline-3"><h3 id="orgheadline99"><span class="section-number-3">12.50</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> emacs如何进行会话保存？</h3><div class="outline-text-3" id="text-12-50"><ul class="org-ul"><li>State "WAIT/FORWARD" from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 11:08] </span></span> <br>等待整理到合适的位置。</li><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 11:05]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 10:19]</span></span>暂时参考：<a href="http://lifegoo.pluskid.org/wiki/EmacsSession.html" target="_blank" rel="noopener">保存和恢复工作环境</a>大致如下：可借助desktop.el来完成buffer等缓存文件、位置等加载的保存和恢复。自动恢复与保存相关的配置：</p><div class="org-src-container"><pre class="src src-emacs-lisp">(desktop-save-mode 1)</pre></div><p>手动保存会话：输入 <code>M-x desktop-save</code>输入之后，选择保存的目录。</p><p>手动恢复以前的会话：输入 <code>M-x desktop-change-dir</code>输入之后，选择之前会话所在目录，之后即可加载。</p><p>退回之前的会话：输入 <code>M-x desktop-revert</code>输入之后，可以退回之前加载的会话。</p><p>如果保存变量之类的信息，需要额外的插件：session.el，插件可能有些问题暂不考虑。</p></div></div><div id="outline-container-orgheadline100" class="outline-3"><h3 id="orgheadline100"><span class="section-number-3">12.51</span> <span class="done DONE">DONE</span> Emacs背景配色设置？</h3><div class="outline-text-3" id="text-12-51"><ul class="org-ul"><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:14]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-09 五 16:07]</span></span></p><p>关于对emacs的颜色主题配置，有相关的插件：</p></div><div id="outline-container-orgheadline101" class="outline-4"><h4 id="orgheadline101"><span class="section-number-4">12.51.1</span> 下载地址：</h4><div class="outline-text-4" id="text-12-51-1"><p><a href="http://ftp.twaren.net/Unix/NonGNU/color-theme/color-theme-6.6.0.tar.gz" target="_blank" rel="noopener">http://ftp.twaren.net/Unix/NonGNU/color-theme/color-theme-6.6.0.tar.gz</a></p></div></div><div id="outline-container-orgheadline102" class="outline-4"><h4 id="orgheadline102"><span class="section-number-4">12.51.2</span> 配置默认主题</h4><div class="outline-text-4" id="text-12-51-2"><p>当把主题下载下来后 解压，然后将文件夹整个复制到到我们的load-path中然后添加如下配置：</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;================================ ;;为我的emacs配置主题色彩 (color-theme-色彩名称) ;;================================ (require 'color-theme) (color-theme-initialize) (color-theme-calm-forest)</pre></div></div></div></div><div id="outline-container-orgheadline103" class="outline-3"><h3 id="orgheadline103"><a id="ID-cecf2c9a-0947-4cfe-8cc3-d688559a8e21"></a><span class="section-number-3">12.52</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> emacs的光标滚动如何让其不在屏幕尾部自动滚屏到中间？</h3><div class="outline-text-3" id="text-12-52"><ul class="org-ul"><li>State "WAIT/FORWARD" from "DONE"       <span class="timestamp-wrapper"><span class="timestamp">[2016-01-18 一 16:44] </span></span> <br>等待整理</li><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-01-16 六 17:18]</span></span></li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:14]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-09 五 16:16]</span></span></p><p>依照优先级别，依次可以设置如下三类变量，具体参见变量文档，</p><p>这里设置 <code>scroll-step</code>, 默认0表示光标到达屏幕顶或者尾之后就立即自动滚动到屏幕中心，其它值表示滚动的行数。</p><div class="org-src-container"><pre class="src src-elisp">;;auto scroll behavior, '0' is center point while outof screen, or don't center.;;(setq scroll-conservatively)(setq scroll-step 1);;(setq scroll-up-aggressively);;(setq scroll-down-aggressively)</pre></div></div></div><div id="outline-container-orgheadline104" class="outline-3"><h3 id="orgheadline104"><span class="section-number-3">12.53</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 如何控制鼠标滚轮滚动的行数</h3><div class="outline-text-3" id="text-12-53"><ul class="org-ul"><li>State "WAIT/FORWARD" from              <span class="timestamp-wrapper"><span class="timestamp">[2016-01-18 一 16:44] </span></span> <br>等待整理</li></ul><p>可以通过设置 <code>mouse-wheel-scroll-amount</code> 实现，具体可以通过 <code>C-h v mouse-wheel-scroll-amount</code> 查看其文档。</p><p>大致含义是：该变量是一个列表，列表元素是 ("行数" . “控制按键”) 表示按下特定控制按键时滚轮滚动的行数；如果没有 “控制按键” 那么表示单纯滚轮滚动行数；如果没有指定行数，那么按下控制按键滚轮滚动将近一个屏幕。下面是一个例子：</p><div class="org-src-container"><pre class="src src-elisp">;;wheel scroll step(setq mouse-wheel-scroll-amount '(1 ((shift) . 5) (control)))</pre></div></div></div><div id="outline-container-orgheadline105" class="outline-3"><h3 id="orgheadline105"><span class="section-number-3">12.54</span> <span class="todo LATER">LATER</span> emacs如何清除所有buffer?</h3><div class="outline-text-3" id="text-12-54"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:14]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-10 六 10:21]</span></span></p></div></div><div id="outline-container-orgheadline106" class="outline-3"><h3 id="orgheadline106"><a id="ID-5296166d-4b89-44b8-8994-d46b8ef1c4d1"></a><span class="section-number-3">12.55</span> <span class="todo LATER">LATER</span> 配置调试</h3><div class="outline-text-3" id="text-12-55"><ul class="org-ul"><li>State "LATER"      from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-14 三 13:27]</span></span></li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-14 三 13:27]</span></span></li></ul><p>如果某项没有生效的话，可以尝试 =emacs &#x2013;init-debug- 启动，看看哪错了</p></div></div><div id="outline-container-orgheadline107" class="outline-3"><h3 id="orgheadline107"><span class="section-number-3">12.56</span> <span class="todo NEXT">NEXT</span> 不喜欢emacs新开"提示窗口"是垂直方向</h3><div class="outline-text-3" id="text-12-56"><ul class="org-ul"><li>State "NEXT"       from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:14]</span></span></li><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:14]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-10-19 一 09:37]</span></span></li></ul></div></div><div id="outline-container-orgheadline108" class="outline-3"><h3 id="orgheadline108"><span class="section-number-3">12.57</span> <span class="done DONE">DONE</span> Emacs如何定制颜色？</h3><div class="outline-text-3" id="text-12-57"><ul class="org-ul"><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-02 一 12:14]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-12 一 11:12]</span></span></p><hr><p>可以使用特定插件，例如</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;color themes;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(require 'color-theme)(color-theme-initialize) (color-theme-calm-forest);;we can also select and preview with 'M-x color-theme-select'.</pre></div></div></div><div id="outline-container-orgheadline109" class="outline-3"><h3 id="orgheadline109"><span class="section-number-3">12.58</span> <span class="todo LATER">LATER</span> 如何设置撤销的次数？目前貌似撤销只有有限的几次</h3><div class="outline-text-3" id="text-12-58"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:14]</span></span></li></ul><p>Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-14 三 14:53]</span></span></p><hr></div></div><div id="outline-container-orgheadline110" class="outline-3"><h3 id="orgheadline110"><span class="section-number-3">12.59</span> <span class="todo LATER">LATER</span> 重复最近的命令</h3><div class="outline-text-3" id="text-12-59"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:14]</span></span></li></ul><p>输入 <code>C-x z</code></p></div></div><div id="outline-container-orgheadline111" class="outline-3"><h3 id="orgheadline111"><a id="ID-963d4006-2a37-493d-a714-f5a2fcaf2538"></a><span class="section-number-3">12.60</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> elisp library</h3><div class="outline-text-3" id="text-12-60"><ul class="org-ul"><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-30 一 17:45] </span></span> <br>等待移动到合适的位置</li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-02 一 12:13]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-10-21 三 09:23]</span></span><br></li></ul><p>整理至原理部分。</p><p>主要介绍：library, package, features的区别，以及 <code>load-file, load, require, autoload</code> 的区别。</p></div><div id="outline-container-orgheadline112" class="outline-4"><h4 id="orgheadline112"><span class="section-number-4">12.60.1</span> 关于 <code>load-file, load, require, autoload</code></h4><div class="outline-text-4" id="text-12-60-1"><ul class="org-ul"><li><p>load-file</p><p>加载特定文件。</p><p>加载特定的文件（".el", ".elc"文件扩展名不会自动加载，但是".gz"会被自动加载）。档不想让emacs猜测文件扩展名".el", ".elc" 或者没有扩展名的时候使用这个函数。</p></li></ul><ul class="org-ul"><li><p>load</p><p>加载一个文件。</p><p>通过搜索变量 <code>load-path</code> 加载一个文件，参数可以是一个文件名称（不用是全路径）， 比如 <code>(load "undo")</code> 。如果有".elc"编译版本的内容，这个命令将会自动加载之， 否则会自动加载".el", 或者".gz"的文件。当不需要知道文件的具体路径的时候不，使用这个函数加载。</p></li></ul><ul class="org-ul"><li><p>require</p><p>如果一个package没有被加载的时候，加载一个package。</p><p>检测 features变量， 如果没有相应的标号，那么调用 <code>load</code> 进行加载， 文件名是根据feature 名进行猜测的， 也可通过一个选项参数进行。最好在elisp库或者脚本中使用这个函数，这个和其他语言的 "require"或者"import"类似。</p></li></ul><ul class="org-ul"><li><p>autoload</p><p>在函数被调用的时候加载文件。将一个函数名称和一个文件路径相关联，档这个功能被调用的时候，会加载这个文件，并且执行函数。如果你正在写一个major mode，尽可能将你的package安装使用autoload完成，因为这样可以节省启动的时间。</p></li></ul></div></div><div id="outline-container-orgheadline113" class="outline-4"><h4 id="orgheadline113"><span class="section-number-4">12.60.2</span> 关于 Library, Package, Feature</h4><div class="outline-text-4" id="text-12-60-2"></div><div id="outline-container-orgheadline184" class="outline-5"><h5 id="orgheadline184"><span class="section-number-5">12.60.2.1</span> Emacs lisp没有命名空间</h5><div class="outline-text-5" id="text-12-60-2-1"><p>所有的东西都是全局的动态的作用域，它只有一些隐藏的机制，所以，不能将library或者module当作像perl、python、java类似的具有命名空间的语言的Package系统。</p></div></div><div id="outline-container-orgheadline185" class="outline-5"><h5 id="orgheadline185"><span class="section-number-5">12.60.2.2</span> Package和Library的区别是什么呢？</h5><div class="outline-text-5" id="text-12-60-2-2"><p>其实，这些概念在elisp中没有专门的定义，我们只能大致这样来看待它们：</p><ul class="org-ul"><li><p>Library</p><p>包含许多组建的elisp文件，比如 <code>comment-dwim</code> 命令定义在 <code>newcomment.el</code> 中，它是一个包含众多函数的库。</p></li><li><p>Package</p><p>任何对emacs用户有用的elisp库，无论是在major还是在minor模式下。</p></li></ul><p>另外在emacs中，不使用 "module"这个概念。</p></div></div><div id="outline-container-orgheadline186" class="outline-5"><h5 id="orgheadline186"><span class="section-number-5">12.60.2.3</span> Package/Library/Feature不会被管理</h5><div class="outline-text-5" id="text-12-60-2-3"><p>在package/library/feature/autoload的概念和文件名称之间没有绝对的对应关系。默认来说，如果一个elisp文件名称是xyz-mode.el，那么它会提供一个"xyz-mode"的lisp标号做为feature名称，然后用来执行这个mode的命令一般都是 <code>xyz-mode</code> 。 有时候， <code>-mode</code> 部分在任何 <code>{file name, feature symbol name, command name}</code> 中被忽略。</p><p>这只是一个松散的规则，有许多不按照这个规则的例子，比如：文件 <code>lisp-mode.el</code> 会提供一个 <code>lisp-mode</code> 的标记做为feature，激活的命令可能是 <code>emacs-lisp-mode</code> 。文件 <code>cua-base.el</code> 提供一个 <code>cua-base</code> 的标记，feature名称为 <code>cua</code>, 并且激活的命令是 <code>cua-mode</code> 。文件 <code>text-mode.el</code> 没有提供任何标记做为feaure, 它通过命令 <code>text-mode</code> 被激活。文件 <code>desktop.el</code> 提供一个 <code>desktop</code> 标记做为feature， 并且激活的命令是 <code>desktop-save-mode</code> 。从以上即可看出，你可以有一个文件名称为 <code>Joe-xyz-mode-v2.1.el</code>, 它提供了名为 <code>abc</code> 的feature, 同时用来激活它的命令可能是 <code>opq</code>, 在 mode line中可能会被显示为 <code>OPQ helper</code> 。 这个文件可以被看作是一个package或者libaray。</p></div></div><div id="outline-container-orgheadline187" class="outline-5"><h5 id="orgheadline187"><span class="section-number-5">12.60.2.4</span> 其它</h5><div class="outline-text-5" id="text-12-60-2-4"><p>没有 "name space" "不被管理"的 module系统并不一定非常糟糕，这只是做为一个软件状态存在，许多流行的语言例如 C, C++, PHP 表现的更差，他们没有module系统，并且通过 <code>include</code> 来包含文件。我们需要注意的是，Scheme lisp也没有module系统，在2007年发布的R6RS添加了严格的module系统控制，但是这导致了Scheme社区的分裂。</p><p>更多内容参考：<a href="http://ergoemacs.org/emacs/elisp_library_system.html" target="_blank" rel="noopener">http://ergoemacs.org/emacs/elisp_library_system.html</a></p></div></div></div></div><div id="outline-container-orgheadline114" class="outline-3"><h3 id="orgheadline114"><span class="section-number-3">12.61</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> Emacs自定义配置</h3><div class="outline-text-3" id="text-12-61"><ul class="org-ul"><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-21 三 15:08] </span></span> <br>待整理到合适的位置</li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-21 三 14:22]</span></span></p><hr><p>在帮助菜单里配置，而非手动修改配置文件时产生的配置信息，会以类似如下的形式写到~/.emacs中：</p><div class="org-src-container"><pre class="src src-emacs-lisp">(custom-set-variables  ;; custom-set-variables was added by Custom.  ;; If you edit it by hand, you could mess it up, so be careful.  ;; Your init file should contain only one such instance.  ;; If there is more than one, they won't work right. '(ecb-options-version "2.40") '(ecb-primary-secondary-mouse-buttons (quote mouse-1--mouse-2)))</pre></div></div></div><div id="outline-container-orgheadline115" class="outline-3"><h3 id="orgheadline115"><span class="section-number-3">12.62</span> <span class="todo LATER">LATER</span> 默认启动xemacs的窗口大小</h3><div class="outline-text-3" id="text-12-62"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-21 三 15:09]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-21 三 09:46]</span></span></p><hr></div></div><div id="outline-container-orgheadline116" class="outline-3"><h3 id="orgheadline116"><span class="section-number-3">12.63</span> <span class="todo NEXT">NEXT</span> emacs-desktop的会话存储默认位置</h3><div class="outline-text-3" id="text-12-63"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-21 三 15:09]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-21 三 09:39]</span></span></p><hr></div></div><div id="outline-container-orgheadline117" class="outline-3"><h3 id="orgheadline117"><span class="section-number-3">12.64</span> <span class="todo NEXT">NEXT</span> 如何高亮？</h3><div class="outline-text-3" id="text-12-64"><p>参考：<a href="http://www.xuebuyuan.com/729481.html" target="_blank" rel="noopener">http://www.xuebuyuan.com/729481.html</a></p></div></div><div id="outline-container-orgheadline118" class="outline-3"><h3 id="orgheadline118"><span class="section-number-3">12.65</span> <span class="todo NEXT">NEXT</span> Emacs如何进行特定模式下的按键绑定映射？</h3><div class="outline-text-3" id="text-12-65"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-21 三 15:09]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-21 三 08:39]</span></span></p><hr></div></div><div id="outline-container-orgheadline119" class="outline-3"><h3 id="orgheadline119"><span class="section-number-3">12.66</span> <span class="todo LATER">LATER</span> 如何为当前的Emacs编辑器升级？</h3><div class="outline-text-3" id="text-12-66"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-21 三 15:10]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-20 二 11:51]</span></span></p><hr></div></div><div id="outline-container-orgheadline120" class="outline-3"><h3 id="orgheadline120"><a id="ID-bf32ac8e-bc47-41fe-875d-45b4dbec83bc"></a><span class="section-number-3">12.67</span> <span class="done DONE">DONE</span> Emacs撤销、重做和重复</h3><div class="outline-text-3" id="text-12-67"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2015-12-10 四 17:24]</span></span></li><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-12-10 四 16:45] </span></span> <br>等待进一步整理</li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:14]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-23 五 11:03]</span></span></p><hr><p>撤销是取消上次的操作，重做是对撤销的撤销，重复是对上次命令进行重做。大致如下：</p><ul class="org-ul"><li><p>撤销（undo）</p><p>输入 <code>C-x u</code> 或 <code>C-/</code></p></li><li><p>重做（redo）</p><p>输入 <code>C-g C-x u</code>  或 <code>C-g C-/</code> </p></li><li><p>重复（repeat）</p><p>输入 <code>C-x z</code></p></li></ul><p>具体参考：<a href="#orgheadline33">Emacs撤销、重做和重复</a> 和 <a href="#orgheadline11">编辑</a></p></div></div><div id="outline-container-orgheadline121" class="outline-3"><h3 id="orgheadline121"><span class="section-number-3">12.68</span> <span class="todo NEXT">NEXT</span> Emacs 如何远程访问？</h3><div class="outline-text-3" id="text-12-68"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-23 五 12:03]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-22 四 15:02]</span></span></p><hr></div></div><div id="outline-container-orgheadline122" class="outline-3"><h3 id="orgheadline122"><span class="section-number-3">12.69</span> <span class="todo LATER">LATER</span> 将emacs custom config变成手动的config</h3><div class="outline-text-3" id="text-12-69"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:15]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-23 五 13:11]</span></span></p><hr></div></div><div id="outline-container-orgheadline123" class="outline-3"><h3 id="orgheadline123"><span class="section-number-3">12.70</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 恢复文件</h3><div class="outline-text-3" id="text-12-70"><ul class="org-ul"><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-23 五 15:22] </span></span> <br>等待转移至合适的位置。</li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-10-23 五 15:21]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-10-23 五 15:21]</span></span></li></ul><p>回复上次崩溃之时没有来得及修改的文件。输入 <code>M-x recover-file</code>输入之后，可以补全，输入文件路径即可。如果文件已经保存，则不存在恢复文件，如果文件上次没有保存，就会有一个 <code>.#filename#</code> 之类的文件，通过它来恢复上次没有来得及保存的内容。</p></div></div><div id="outline-container-orgheadline124" class="outline-3"><h3 id="orgheadline124"><span class="section-number-3">12.71</span> <span class="todo LATER">LATER</span> 无需远端安装emacs，用本地emacs直接访问远端，可否？</h3><div class="outline-text-3" id="text-12-71"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:15]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-26 一 11:46]</span></span></p><hr></div></div><div id="outline-container-orgheadline125" class="outline-3"><h3 id="orgheadline125"><span class="section-number-3">12.72</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> Emacs 任务管理？</h3><div class="outline-text-3" id="text-12-72"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:15]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-27 二 10:14]</span></span></p><hr></div></div><div id="outline-container-orgheadline126" class="outline-3"><h3 id="orgheadline126"><span class="section-number-3">12.73</span> <span class="todo LATER">LATER</span> 崩溃后下次启动自动提示回复文件的方式？</h3><div class="outline-text-3" id="text-12-73"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:15]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-27 二 14:19]</span></span></p><hr></div></div><div id="outline-container-orgheadline127" class="outline-3"><h3 id="orgheadline127"><span class="section-number-3">12.74</span> <span class="todo LATER">LATER</span> Emacs如何粘帖复制文本到X剪切板中？</h3><div class="outline-text-3" id="text-12-74"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:15]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-28 三 11:02]</span></span></p><hr></div></div><div id="outline-container-orgheadline128" class="outline-3"><h3 id="orgheadline128"><span class="section-number-3">12.75</span> <span class="todo LATER">LATER</span> Emacs中如何在require后卸载插件？</h3><div class="outline-text-3" id="text-12-75"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:15]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-04 三 09:36]</span></span></li></ul></div></div><div id="outline-container-orgheadline129" class="outline-3"><h3 id="orgheadline129"><span class="section-number-3">12.76</span> <span class="todo LATER">LATER</span> 拼音输入法</h3><div class="outline-text-3" id="text-12-76"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:15]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-10-30 五 09:35]</span></span></p><hr><p>意外发现的情况： <code>C-\</code> 会切换Emacs的输入法。</p></div></div><div id="outline-container-orgheadline130" class="outline-3"><h3 id="orgheadline130"><span class="section-number-3">12.77</span> <span class="todo NEXT">NEXT</span> Emacs为什么有时候缩进无法删除？</h3><div class="outline-text-3" id="text-12-77"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:17]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-02 一 09:50]</span></span></p><hr></div></div><div id="outline-container-orgheadline131" class="outline-3"><h3 id="orgheadline131"><span class="section-number-3">12.78</span> <span class="todo NEXT">NEXT</span> Emacs如何搜索光标下的内容</h3><div class="outline-text-3" id="text-12-78"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-05 四 09:18]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-05 四 08:56]</span></span></p><hr><p>目前是先 <code>M-b</code> 到单词首，再 <code>C-s C-w</code> 搜索光标后至单词尾的内容。</p></div></div><div id="outline-container-orgheadline132" class="outline-3"><h3 id="orgheadline132"><span class="section-number-3">12.79</span> <span class="todo LATER">LATER</span> Emacs如何格式化全部代码？</h3><div class="outline-text-3" id="text-12-79"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:17]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-05 四 16:01]</span></span></p><hr></div></div><div id="outline-container-orgheadline133" class="outline-3"><h3 id="orgheadline133"><span class="section-number-3">12.80</span> <span class="todo NEXT">NEXT</span> 为什么Emacs有时候无法删除缩进？</h3><div class="outline-text-3" id="text-12-80"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:17]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-09 一 11:06]</span></span></p><hr><p>ttbb</p></div></div><div id="outline-container-orgheadline134" class="outline-3"><h3 id="orgheadline134"><span class="section-number-3">12.81</span> <span class="done DONE">DONE</span> Emacs如何反撤销重做？</h3><div class="outline-text-3" id="text-12-81"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-03-03 四 11:11]</span></span></li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-16 一 10:33]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-13 五 14:13]</span></span></p><hr><p>参考：<a href="#orgheadline120">Emacs撤销、重做和重复</a></p></div></div><div id="outline-container-orgheadline135" class="outline-3"><h3 id="orgheadline135"><span class="section-number-3">12.82</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> emacs剪切板和x剪切板共享</h3><div class="outline-text-3" id="text-12-82"><ul class="org-ul"><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-12-21 一 15:22] </span></span> <br>有待进一步整理</li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-16 一 10:33]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-10 二 11:35]</span></span></p><hr><div class="org-src-container"><pre class="src src-elisp">;;clipboard share for gui emacs(setq x-select-enable-clipboard t)</pre></div><p>参考：<a href="http://www.th7.cn/system/lin/201410/72664.shtml" target="_blank" rel="noopener">http://www.th7.cn/system/lin/201410/72664.shtml</a></p></div></div><div id="outline-container-orgheadline136" class="outline-3"><h3 id="orgheadline136"><span class="section-number-3">12.83</span> <span class="done DONE">DONE</span> 完善自己的开发环境，代码跳转、扫描、定位等，不用每次都要手动配置</h3><div class="outline-text-3" id="text-12-83"><ul class="org-ul"><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-30 一 14:10]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-20 五 15:35]</span></span></p><hr><p>需要借助插件： <code>cedet</code> 和 <code>ecb</code> 。 <code>cedet</code> 主要用于建立索引已经提供跳转等功能, <code>ecb</code> 主要提供方便的窗口布局。</p><p>当然，最好还是用 <code>understand</code> 或者 <code>sourceinsight</code> 之类的工具，简易点的也可用 <code>geany</code> 。</p></div></div><div id="outline-container-orgheadline137" class="outline-3"><h3 id="orgheadline137"><span class="section-number-3">12.84</span> <span class="todo LATER">LATER</span> Emacs 括号跳转</h3><div class="outline-text-3" id="text-12-84"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-30 一 14:10]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-23 一 14:38]</span></span></p><hr><p>`C-M-n‘Move forward over a parenthetical group (`forward-list‘).</p><p>`C-M-p‘Move backward over a parenthetical group (`backward-list‘).</p><p>`C-M-u‘Move up in parenthesis structure (`backward-up-list‘).</p><p>`C-M-d‘Move down in parenthesis structure (`down-list‘).</p></div></div><div id="outline-container-orgheadline138" class="outline-3"><h3 id="orgheadline138"><span class="section-number-3">12.85</span> <span class="done DONE">DONE</span> 关于Narrow</h3><div class="outline-text-3" id="text-12-85"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 16:02]</span></span></li><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-30 一 14:10] </span></span> <br>等待移动到合适的位置。</li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-24 二 17:32]</span></span></li></ul><p>可参考：<a href="#orgheadline39">关于Narrow</a></p></div></div><div id="outline-container-orgheadline139" class="outline-3"><h3 id="orgheadline139"><span class="section-number-3">12.86</span> <span class="todo LATER">LATER</span> emacs如何搜索光标所在字符的内容</h3><div class="outline-text-3" id="text-12-86"><ul class="org-ul"><li>State "LATER"      from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 16:02]</span></span></li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-24 二 11:53]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-24 二 10:06]</span></span></p><hr><p><a href="http://emacser.com/next-pre-word.htm" target="_blank" rel="noopener">http://emacser.com/next-pre-word.htm</a></p><p>如果图个简单，可以<code>C-&lt;left&gt;</code> 定位到单词首，然后 <code>C-s C-w</code> 将当前单词搜索，连续 <code>C-w</code> 可以扩展搜索的单词</p></div></div><div id="outline-container-orgheadline140" class="outline-3"><h3 id="orgheadline140"><span class="section-number-3">12.87</span> <span class="todo LATER">LATER</span> C-x =</h3><div class="outline-text-3" id="text-12-87"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:17]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-30 一 14:09]</span></span></li></ul></div></div><div id="outline-container-orgheadline141" class="outline-3"><h3 id="orgheadline141"><span class="section-number-3">12.88</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> 定义自己的Emacs环境</h3><div class="outline-text-3" id="text-12-88"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 16:02]</span></span></li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-30 一 14:15]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-30 一 14:15]</span></span></li></ul><p>最好兼容，与将要拥有以及已有的插件快捷键不冲突</p><p>高亮当前光标单词</p><p>搜索当前光标单词<a href="http://emacser.com/next-pre-word.htm" target="_blank" rel="noopener">http://emacser.com/next-pre-word.htm</a></p></div></div><div id="outline-container-orgheadline142" class="outline-3"><h3 id="orgheadline142"><span class="section-number-3">12.89</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> 将emacs插件分层整理一下，最好能尝试一下新版本的emacs</h3><div class="outline-text-3" id="text-12-89"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 16:03]</span></span></li><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-01 二 17:02]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-26 四 16:57]</span></span></p><hr></div></div><div id="outline-container-orgheadline143" class="outline-3"><h3 id="orgheadline143"><span class="section-number-3">12.90</span> <span class="todo NEXT">NEXT</span> Emacs如何撤销以及反撤销？</h3><div class="outline-text-3" id="text-12-90"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-30 一 14:36]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-11-30 一 14:35]</span></span></p><hr></div></div><div id="outline-container-orgheadline144" class="outline-3"><h3 id="orgheadline144"><span class="section-number-3">12.91</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2015-12-02 三 15:06] </span></span> Emacs标签跳转------</h3><div class="outline-text-3" id="text-12-91"><ul class="org-ul"><li>State "WAIT/FORWARD" from              <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 14:15] </span></span> <br>wait for move</li></ul><p>From:/home/miracle/mydata/orgmode/gtd/output/emacs_tips.org</p><p>主要有如下功能</p><ul class="org-ul"><li><p>设置书签</p><p>输入 <code>C-x r m</code></p></li></ul><ul class="org-ul"><li><p>跳转到指定书签</p><p>输入 <code>C-x r b</code> , 输入之后，提示跳转的书签，可以 <code>TAB</code> 补全。</p></li></ul><ul class="org-ul"><li><p>列出书签</p><p>输入 <code>C-x r l</code></p></li></ul><p>另外获取帮助信息输入 <code>C-x r C-h</code> , 其中的m/l/b子项和书签有关。</p></div></div><div id="outline-container-orgheadline145" class="outline-3"><h3 id="orgheadline145"><span class="section-number-3">12.92</span> <span class="todo LATER">LATER</span> &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2015-12-02 三 16:58] </span></span> Emacs mark ring------</h3><div class="outline-text-3" id="text-12-92"><ul class="org-ul"><li>State "LATER"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 14:15]</span></span></li></ul><p>From:/home/miracle/work/androidL/gitlocalcode/device/tpvision/tvsoc/tvsoc_mtk/test/tpapi_pvr_test.cpp</p><p><code>C-x C-x</code> 在上次Mark和光标之间切换，并且高亮</p><p><code>C-u C-x C-x</code> 同上，但是不高亮,效果类似在上次位置和下次位置来回切换</p><p><code>C-@ C-@</code> 将记录mark到mark ring, 实际是activate，再deactivate</p><p>除了这个命令，许多命令在操作后，会自动保存操作之前的mark位置到mark ring(有当前buffer的、和全局的两种mark ring)， 这样的命令运行之后，在回显区域有 <code>Mark set</code> 提示， 便于回到之前的位置。例如：使用 <code>C-y</code> 粘帖之时,使用 <code>M-&lt;</code> / <code>M-&gt;</code> 跳转buffer首尾之时，退出增量搜索之时， 插入buffer/file之时……</p><p><code>C-u C-@</code> 跳到上一次记录的mark, 范围是当前buffer<code>C-x C-@</code> 范围是global mark ring.参考：<a href="http://www.gnu.org/software/emacs/manual/html_node/emacs/Setting-Mark.html#DOCF5" target="_blank" rel="noopener">http://www.gnu.org/software/emacs/manual/html_node/emacs/Setting-Mark.html#DOCF5</a></p><p><a href="http://www.gnu.org/software/emacs/manual/html_node/emacs/Mark-Ring.html#Mark-Ring" target="_blank" rel="noopener">http://www.gnu.org/software/emacs/manual/html_node/emacs/Mark-Ring.html#Mark-Ring</a></p></div></div><div id="outline-container-orgheadline146" class="outline-3"><h3 id="orgheadline146"><span class="section-number-3">12.93</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> 意外发现 <code>ESC-`</code> 在minibuf打开菜单栏</h3><div class="outline-text-3" id="text-12-93"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:19]</span></span></li><li>State "WAIT/FORWARD" from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:19]</span></span></li><li>State "LATER"      from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:19]</span></span></li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:19]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:19]</span></span></li></ul></div></div><div id="outline-container-orgheadline147" class="outline-3"><h3 id="orgheadline147"><span class="section-number-3">12.94</span> <span class="todo NEXT">NEXT</span> 学习资源</h3><div class="outline-text-3" id="text-12-94"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-04 五 10:38]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2015-12-04 五 10:38]</span></span></li></ul><p>如何在官方网址上或者邮件上提问？<a href="http://blog.gmane.org/gmane.emacs.orgmode" target="_blank" rel="noopener">http://blog.gmane.org/gmane.emacs.orgmode</a></p><p>官网<a href="http://www.gnu.org/software/emacs/" target="_blank" rel="noopener">http://www.gnu.org/software/emacs/</a></p><p>对于每个插件，找到该插件发布的地方（如github），然后以报告bug的形式，或者查看前人报告的问题。</p></div></div><div id="outline-container-orgheadline148" class="outline-3"><h3 id="orgheadline148"><span class="section-number-3">12.95</span> <span class="todo LATER">LATER</span> Emacs如何自定义按键映射不冲突</h3><div class="outline-text-3" id="text-12-95"><ul class="org-ul"><li>State "LATER"      from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 16:03]</span></span></li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-04 五 15:36]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-02 三 14:59]</span></span></p><hr></div></div><div id="outline-container-orgheadline149" class="outline-3"><h3 id="orgheadline149"><span class="section-number-3">12.96</span> <span class="todo NEXT">NEXT</span> Emacs高级搜索</h3><div class="outline-text-3" id="text-12-96"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-12-14 一 17:47]</span></span></li></ul><p>在当前文件列出所有匹配行<code>M-x list-maching-lines</code></p><p>在多个文件和目录中搜索<code>M-x grep</code> 或 <code>M-x rgrep</code> , 后者交互性更好。</p><p>在目录中查找文件<code>M-x find-name-dired</code></p><p>参考：<a href="http://www.cnblogs.com/cobbliu/p/3745474.html" target="_blank" rel="noopener">http://www.cnblogs.com/cobbliu/p/3745474.html</a></p></div></div><div id="outline-container-orgheadline150" class="outline-3"><h3 id="orgheadline150"><span class="section-number-3">12.97</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> Emacs如何显示括号匹配？如何显示行号？</h3><div class="outline-text-3" id="text-12-97"><ul class="org-ul"><li>State "WAIT/FORWARD" from "DONE"       <span class="timestamp-wrapper"><span class="timestamp">[2015-12-17 四 10:58] </span></span> <br>等待整理</li><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-17 四 10:57]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-02 三 17:46]</span></span></p><hr><div class="org-src-container"><pre class="src src-elisp">;;paren(show-paren-mode 1);;line number(global-linum-mode t)</pre></div><p>启动后,显示行号输入 <code>M-x  global-linum-mode</code></p></div></div><div id="outline-container-orgheadline151" class="outline-3"><h3 id="orgheadline151"><span class="section-number-3">12.98</span> <span class="todo LATER">LATER</span> 设置输入法</h3><div class="outline-text-3" id="text-12-98"><ul class="org-ul"><li>State "LATER"      from              <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 16:11]</span></span></li></ul><p><code>M-x set-input-method</code><code>C-x Ret C-\</code></p></div></div><div id="outline-container-orgheadline152" class="outline-3"><h3 id="orgheadline152"><span class="section-number-3">12.99</span> <span class="done DONE">DONE</span> 使用Emacs阅读代码</h3><div class="outline-text-3" id="text-12-99"><ul class="org-ul"><li>State "DONE"       from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 16:14]</span></span></li><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-18 五 13:37]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-15 二 16:42]</span></span></p><hr><p>主要涉及到的插件包括：cedet+ecb+global</p><p>cedet 是一个代码索引后端</p><p>ecb 可以操作显示方式</p><p>global 是代码索引生成和查找的工具，类似ctags</p><p>参考：</p><p><a href="http://www.newsmth.net/nForum/#!article/Emacs/84691" target="_blank" rel="noopener">http://www.newsmth.net/nForum/#!article/Emacs/84691</a></p><p><a href="http://blog.csdn.net/bigmarco/article/details/6934502" target="_blank" rel="noopener">http://blog.csdn.net/bigmarco/article/details/6934502</a></p></div></div><div id="outline-container-orgheadline153" class="outline-3"><h3 id="orgheadline153"><span class="section-number-3">12.100</span> <span class="todo LATER">LATER</span> emacs自动保存间隔</h3><div class="outline-text-3" id="text-12-100"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-18 五 13:38]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-16 三 10:07]</span></span></p><hr></div></div><div id="outline-container-orgheadline154" class="outline-3"><h3 id="orgheadline154"><span class="section-number-3">12.101</span> <span class="todo NEXT">NEXT</span> emacs如何替换文本?</h3><div class="outline-text-3" id="text-12-101"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-18 五 13:38]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-17 四 09:25]</span></span></p><hr></div></div><div id="outline-container-orgheadline155" class="outline-3"><h3 id="orgheadline155"><span class="section-number-3">12.102</span> <span class="todo LATER">LATER</span> Emacs如何设置多重功能的按键?</h3><div class="outline-text-3" id="text-12-102"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-18 五 13:38]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-17 四 15:16]</span></span></p><hr><p>例如我想在按下鼠标后,先定位到对应位置,然后再执行特定的函数(这里是 <code>gtags-find-tag-from-here</code> )</p><div class="org-src-container"><pre class="src src-elisp">(local-set-key (kbd "C-M-&lt;mouse-1&gt;") '(lambda ()(interactive);;(mouse-set-point &lt;mouse-1&gt;) ;; how to position at first?(gtags-find-tag-from-here)))</pre></div></div></div><div id="outline-container-orgheadline156" class="outline-3"><h3 id="orgheadline156"><span class="section-number-3">12.103</span> <span class="todo NEXT">NEXT</span> Emacs如何切换最近buffer,而非只有一个最近buffer?</h3><div class="outline-text-3" id="text-12-103"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-18 五 13:38]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-17 四 15:24]</span></span></p><hr></div></div><div id="outline-container-orgheadline157" class="outline-3"><h3 id="orgheadline157"><span class="section-number-3">12.104</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> Emacs如何高亮多个单词?</h3><div class="outline-text-3" id="text-12-104"><ul class="org-ul"><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 19:17] </span></span> <br>等待进一步整理。</li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-18 五 13:38]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-17 四 15:42]</span></span></p><hr></div><div id="outline-container-orgheadline158" class="outline-4"><h4 id="orgheadline158"><span class="section-number-4">12.104.1</span> 利用emacs自带的 <code>hi-lock-mode</code></h4><div class="outline-text-4" id="text-12-104-1"><ul class="org-ul"><li><p>高亮指定单词 </p><p><code>M-s h p</code> 输入之后，再输入待高亮的单词，以及高亮的颜色（可补全），即可。</p></li><li><p>高亮特定正则表达式</p><p><code>M-s h r</code> 类似前面，输入之后输入正则表达式以及颜色即可。</p></li><li><p>高亮匹配正则表达式的行</p><p><code>M-s h l</code> 类似前面。</p></li><li><p>取消高亮</p><p><code>M-s h u</code> 输入之后，默认自动取消刚刚设置的高亮，或者输入想要取消高亮的正则表达式来进行取消。</p></li></ul></div></div><div id="outline-container-orgheadline159" class="outline-4"><h4 id="orgheadline159"><span class="section-number-4">12.104.2</span> 利用插件</h4><div class="outline-text-4" id="text-12-104-2"><p>主要有 <code>highlight-symbol</code> 和 <code>idle-highlight</code></p><p>可实现光标处自动高亮，以及类似 vim 中的 <code>*</code> 和 <code>#</code> 搜索。</p><p>参考：<a href="http://www.cnblogs.com/bamanzi/archive/2012/12/03/emacs-find-modify-all-occurences.html" target="_blank" rel="noopener">http://www.cnblogs.com/bamanzi/archive/2012/12/03/emacs-find-modify-all-occurences.html</a></p></div></div></div><div id="outline-container-orgheadline160" class="outline-3"><h3 id="orgheadline160"><span class="section-number-3">12.105</span> <span class="done DONE">DONE</span> 如何在Emacs直接预览markdown效果？</h3><div class="outline-text-3" id="text-12-105"><ul class="org-ul"><li>State "DONE"       from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 16:10]</span></span></li><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-21 一 15:57]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-18 五 14:54]</span></span></p><hr><p>可以使用 <code>markdown-mode</code> 插件。</p><p>参考网址：<a href="http://jblevins.org/projects/markdown-mode/" target="_blank" rel="noopener">官方网址</a><a href="https://linuxtoy.org/archives/emacs-markdown-mode.html" target="_blank" rel="noopener">LinuxToy的文档</a></p></div></div><div id="outline-container-orgheadline161" class="outline-3"><h3 id="orgheadline161"><span class="section-number-3">12.106</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> 如何执行脚本</h3><div class="outline-text-3" id="text-12-106"><ul class="org-ul"><li>State "MAYBE/FUTURE" from              <span class="timestamp-wrapper"><span class="timestamp">[2015-12-22 二 16:36]</span></span></li></ul><div class="org-src-container"><pre class="src src-sh">$emacs -batch -l ~/.emacs -eval '(org-batch-agenda "t")' | lpr</pre></div></div></div><div id="outline-container-orgheadline162" class="outline-3"><h3 id="orgheadline162"><span class="section-number-3">12.107</span> <span class="todo NEXT">NEXT</span> Emacs崩溃后的恢复策略</h3><div class="outline-text-3" id="text-12-107"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-12-31 四 14:50]</span></span></li></ul><p>输入 <code>M-x recover-session</code> 之后根据时间，选择需要恢复的会话情况。</p></div></div><div id="outline-container-orgheadline163" class="outline-3"><h3 id="orgheadline163"><span class="section-number-3">12.108</span> <span class="todo NEXT">NEXT</span> emacs如何跳转到匹配的括号？</h3><div class="outline-text-3" id="text-12-108"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-01-05 二 15:36]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-22 二 17:08]</span></span></p><hr></div></div><div id="outline-container-orgheadline164" class="outline-3"><h3 id="orgheadline164"><span class="section-number-3">12.109</span> <span class="todo NEXT">NEXT</span> 一些基本操作</h3><div class="outline-text-3" id="text-12-109"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-02-04 四 13:54]</span></span></li><li>前进</li><li>后退</li><li>跳转至光标下的路径</li><li>关闭所有buffer</li><li>跳至指定百分比</li></ul></div></div><div id="outline-container-orgheadline165" class="outline-3"><h3 id="orgheadline165"><span class="section-number-3">12.110</span> <span class="todo NEXT">NEXT</span> emacs如何返回上次编辑的位置</h3><div class="outline-text-3" id="text-12-110"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-01-31 日 16:56]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-01-31 日 16:56]</span></span></p><hr></div></div><div id="outline-container-orgheadline166" class="outline-3"><h3 id="orgheadline166"><span class="section-number-3">12.111</span> <span class="todo NEXT">NEXT</span> Emacs如何定期自动保存文件?</h3><div class="outline-text-3" id="text-12-111"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-01-21 四 10:28]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-01-21 四 10:27]</span></span></p><hr></div></div><div id="outline-container-orgheadline167" class="outline-3"><h3 id="orgheadline167"><span class="section-number-3">12.112</span> <span class="done DONE">DONE</span> emacs打开文件等，如何实现部分匹配文件或者命令而非精确开头匹配</h3><div class="outline-text-3" id="text-12-112"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-03-03 四 11:34]</span></span></li><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-02-10 三 11:22] </span></span> <br>等待整理至合适位置。</li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 11:45]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 10:52]</span></span></p><hr><p>对打开buffer的 <code>C-x b</code> 以及打开文件的 <code>C-x C-f</code> 实现增加部分匹配可使用 <code>ido</code> 插件。</p><p>对于运行Emacs命令 <code>M-x xxx</code> 可以使用基于 <code>ido</code> 的 <code>smex</code> 插件实现部分匹配，省去了记忆许多快捷键的麻烦。</p><p>另外 <code>helm</code> 也是另外一套替换 <code>ido</code> 的补全方案，也可支持命令输入补全。</p></div><div id="outline-container-orgheadline168" class="outline-4"><h4 id="orgheadline168"><span class="section-number-4">12.112.1</span> ido</h4><div class="outline-text-4" id="text-12-112-1"><p>具体参考相关文档。</p></div><div id="outline-container-orgheadline188" class="outline-5"><h5 id="orgheadline188"><span class="section-number-5">12.112.1.1</span> 下载</h5><div class="outline-text-5" id="text-12-112-1-1"><p><a href="http://repo.or.cz/w/emacs.git/blob_plain/HEAD:/lisp/ido.el" target="_blank" rel="noopener">http://repo.or.cz/w/emacs.git/blob_plain/HEAD:/lisp/ido.el</a></p></div></div><div id="outline-container-orgheadline189" class="outline-5"><h5 id="orgheadline189"><span class="section-number-5">12.112.1.2</span> 配置</h5><div class="outline-text-5" id="text-12-112-1-2"><div class="org-src-container"><pre class="src src-elisp">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ido;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(require 'ido)(ido-mode t)</pre></div></div></div></div><div id="outline-container-orgheadline169" class="outline-4"><h4 id="orgheadline169"><span class="section-number-4">12.112.2</span> smex</h4><div class="outline-text-4" id="text-12-112-2"></div><div id="outline-container-orgheadline190" class="outline-5"><h5 id="orgheadline190"><span class="section-number-5">12.112.2.1</span> 下载</h5><div class="outline-text-5" id="text-12-112-2-1"><p><a href="https://github.com/nonsequitur/smex" target="_blank" rel="noopener">https://github.com/nonsequitur/smex</a></p></div></div><div id="outline-container-orgheadline191" class="outline-5"><h5 id="orgheadline191"><span class="section-number-5">12.112.2.2</span> 配置</h5><div class="outline-text-5" id="text-12-112-2-2"><div class="org-src-container"><pre class="src src-elisp">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;smex;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;(require 'smex)(global-set-key (kbd "M-x") 'smex)(global-set-key (kbd "M-X") 'smex-major-mode-commands);; This is your old M-x.(global-set-key (kbd "C-c C-c M-x") 'execute-extended-command)</pre></div></div></div></div></div><div id="outline-container-orgheadline170" class="outline-3"><h3 id="orgheadline170"><span class="section-number-3">12.113</span> <span class="todo LATER">LATER</span> 意外发现的 <code>M-*</code> 和 <code>M-.</code> 是做什么的？</h3><div class="outline-text-3" id="text-12-113"><ul class="org-ul"><li>State "LATER"      from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-02-11 四 14:41]</span></span></li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 19:19]</span></span></li></ul></div></div><div id="outline-container-orgheadline171" class="outline-3"><h3 id="orgheadline171"><span class="section-number-3">12.114</span> <span class="todo NEXT">NEXT</span> Emacs代码折叠</h3><div class="outline-text-3" id="text-12-114"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-02-10 三 12:15]</span></span></li></ul><p><a href="http://www.cnblogs.com/bamanzi/archive/2011/10/09/2203866.html" target="_blank" rel="noopener">http://www.cnblogs.com/bamanzi/archive/2011/10/09/2203866.html</a></p></div></div></div><br><div id="mypostamble" align="right" style="float:right" class="status">    <table> <tbody> <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Author</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">QuietHeart</td>  </tr><tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Email</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">    <a href="mailto:quiet_heart000@126.com" target="_blank" rel="noopener">quiet_heart000@126.com</a>  </td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Date</td>  <td style="border-style: solid;border-width:1px;border-right:0px;">[2015-09-09 三 14:08]</td>  </tr>    <tr>  <td style="border-style: solid;border-width:1px;border-left:0px;">Update</td>  <td style="border-style: solid;border-width:1px;border-right:0px;"><2016-03-03 四 11:35:36></2016-03-03></td></tr>    </tbody></table></div><br>]]></content>
    
    <summary type="html">
    
      
      
        &lt;style type=&quot;text/css&quot;&gt;
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              
      
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
      <category term="study" scheme="http://0.0.0.0:4000/categories/categories/study/"/>
    
      <category term="emacs" scheme="http://0.0.0.0:4000/categories/categories/study/emacs/"/>
    
    
  </entry>
  
</feed>

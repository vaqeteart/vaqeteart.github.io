<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>QuietHeart&#39;s Site</title>
  
  <subtitle>Find the things you want.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://0.0.0.0:4000/"/>
  <updated>2019-10-22T08:07:07.000Z</updated>
  <id>http://0.0.0.0:4000/</id>
  
  <author>
    <name>Quiet Heart</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://0.0.0.0:4000/2019/10/22/docker_practice/"/>
    <id>http://0.0.0.0:4000/2019/10/22/docker_practice/</id>
    <published>2019-10-21T16:00:00.000Z</published>
    <updated>2019-10-22T08:07:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2014;layout: poststitle: Docker实践categories: [categories, study, linux]comments: true&#x2014;#+END_HTML</p><div id="table-of-contents"><h2>&#30446;&#24405;</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 系统相关</a><ul><li><a href="#orgheadline2">1.1. 安装配置</a></li><li><a href="#orgheadline3">1.2. 用户组配置</a></li><li><a href="#orgheadline4">1.3. Docker版本</a></li></ul></li><li><a href="#orgheadline5">2. Docker仓库相关</a><ul><li><a href="#orgheadline6">2.1. <code>docker search</code> 搜索镜像</a></li><li><a href="#orgheadline7">2.2. <code>docker pull</code> 下载镜像</a></li><li><a href="#orgheadline8">2.3. <code>docker login</code> 登录</a></li><li><a href="#orgheadline9">2.4. <code>docker logout</code> 退出</a></li></ul></li><li><a href="#orgheadline10">3. Docker常用操作</a><ul><li><a href="#orgheadline11">3.1. <code>docker images</code> 查看本地镜像</a></li><li><a href="#orgheadline12">3.2. <code>docker search</code> 搜索镜像</a></li><li><a href="#orgheadline13">3.3. <code>docker pull</code> 拉取镜像</a></li><li><a href="#orgheadline14">3.4. <code>docker run</code> 运行镜像</a></li><li><a href="#orgheadline15">3.5. <code>docker ps</code> 查看正在运行的容器</a></li><li><a href="#orgheadline16">3.6. <code>docker exec</code> 进入正在运行的容器</a></li><li><a href="#orgheadline17">3.7. <code>docker attach</code> 附到正在运行的容器(attach)</a></li><li><a href="#orgheadline18">3.8. <code>docker top</code> 查看容器运行的进程</a></li><li><a href="#orgheadline19">3.9. <code>docker stop</code> 停止/退出容器</a></li><li><a href="#orgheadline20">3.10. <code>docker start</code> 启动容器</a></li><li><a href="#orgheadline21">3.11. <code>docker restart</code> 重启容器</a></li><li><a href="#orgheadline22">3.12. <code>docker rm</code> 删除容器</a></li><li><a href="#orgheadline23">3.13. <code>docker commit</code> 提交容器</a></li><li><a href="#orgheadline24">3.14. <code>docker push</code> 上传提交的容器/镜像</a><ul><li><a href="#orgheadline25">3.14.1. 其它参考</a></li></ul></li><li><a href="#orgheadline26">3.15. <code>docker info</code> 查看docker系统配置信息</a></li><li><a href="#orgheadline27">3.16. <code>docker help</code> 帮助信息</a></li><li><a href="#orgheadline28">3.17. <code>docker volume</code> 数据卷管理</a><ul><li><a href="#orgheadline29">3.17.1. <span class="done nilREFERENCE">REFERENCE</span> 启动镜像并且创建匿名Volume</a></li><li><a href="#orgheadline30">3.17.2. <span class="done nilREFERENCE">REFERENCE</span> 创建有名Volume并在启动镜像时挂载到容器中</a></li><li><a href="#orgheadline31">3.17.3. <span class="done nilREFERENCE">REFERENCE</span> 启动镜像的时候将主机中一个目录挂载到容器中</a></li></ul></li></ul></li><li><a href="#orgheadline32">4. 其它</a><ul><li><a href="#orgheadline33">4.1. 实践尝试</a><ul><li><a href="#orgheadline34">4.1.1. 重启宿主机之后容器停止，重新启动容器数据仍在</a></li></ul></li></ul></li></ul></div></div><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 系统相关</h2><div class="outline-text-2" id="text-1"><div class="org-src-container"><pre class="src src-sh">$cat /etc/issueUbuntu 18.04.1 LTS \n \l</pre></div></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><a id="ID-aa058cbb-f324-43e5-ad6f-6508b38c13d0"></a><span class="section-number-3">1.1</span> 安装配置</h3><div class="outline-text-3" id="text-1-1"><div class="org-src-container"><pre class="src src-sh">$sudo apt-get install docker.io</pre></div></div></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><a id="ID-901c5066-71ac-464d-a5ce-d9949b5bbc16"></a><span class="section-number-3">1.2</span> 用户组配置</h3><div class="outline-text-3" id="text-1-2"><div class="org-src-container"><pre class="src src-sh">$gpasswd -a miracle docker$systemctl docker restart$pkill X</pre></div><p>注：如果不进行如上的用户组配置，那么执行 <code>docker images</code> 的时候就会出现权限的错误。</p><p>如下命令同样适用</p><pre class="example">$sudo systemctl start docker$sudo systemctl enable docker$sudo systemctl restart docker</pre></div></div><div id="outline-container-orgheadline4" class="outline-3"><h3 id="orgheadline4"><span class="section-number-3">1.3</span> Docker版本</h3><div class="outline-text-3" id="text-1-3"><p>查看 <code>docker</code> 版本的命令：</p><div class="org-src-container"><pre class="src src-sh">$docker -v</pre></div></div></div></div><div id="outline-container-orgheadline5" class="outline-2"><h2 id="orgheadline5"><span class="section-number-2">2</span> Docker仓库相关</h2><div class="outline-text-2" id="text-2"><p>Docker仓库的理解参考： <a href="../../../../../../mydata/orgmode/gtd/_study.html#ID-57fefa27-644f-485e-8a53-45c52f0763b3">关于Docker仓库</a></p></div><div id="outline-container-orgheadline6" class="outline-3"><h3 id="orgheadline6"><span class="section-number-3">2.1</span> <code>docker search</code> 搜索镜像</h3><div class="outline-text-3" id="text-2-1"><div class="org-src-container"><pre class="src src-sh">$docker search busybox</pre></div><p>搜索包含 busybox 的镜像，会有很多，比如</p><pre class="example">miracle@xmnb4003210:~/misc$ docker search busyboxNAME                      DESCRIPTION                                     STARS               OFFICIAL            AUTOMATEDbusybox                   Busybox base image.                             1634                [OK]                progrium/busybox                                                          70                                      [OK]radial/busyboxplus        Full-chain, Internet enabled, busybox made f…   24                                      [OK]arm32v7/busybox           Busybox base image.                             7                                       yauritux/busybox-curl     Busybox with CURL                               5                                       armhf/busybox             Busybox base image.                             4                                       arm64v8/busybox           Busybox base image.                             3                                       ......</pre></div></div><div id="outline-container-orgheadline7" class="outline-3"><h3 id="orgheadline7"><span class="section-number-3">2.2</span> <code>docker pull</code> 下载镜像</h3><div class="outline-text-3" id="text-2-2"><div class="org-src-container"><pre class="src src-sh">$docker pull busybox</pre></div><p>不指定版本号会默认下载 <code>busy:latest</code> ，结果类似如下：</p><pre class="example">$ docker pull busyboxUsing default tag: latestlatest: Pulling from library/busyboxee153a04d683: Pull complete Digest: sha256:e3b586a669fae4073bb68b5bcabea26dae469ee6f157050c212c77b50f992d5aStatus: Downloaded newer image for busybox:latest</pre><p>镜像下载中可以看到是分层下载，每一层都有一个唯一的ID值表示，每层下载的大小实际为该层进行的修改增量。</p></div></div><div id="outline-container-orgheadline8" class="outline-3"><h3 id="orgheadline8"><span class="section-number-3">2.3</span> <code>docker login</code> 登录</h3><div class="outline-text-3" id="text-2-3"><div class="org-src-container"><pre class="src src-sh">$docker login --username=vaqeteartPassword: WARNING! Your password will be stored unencrypted in /home/miracle/.docker/config.json.Configure a credential helper to remove this warning. Seehttps://docs.docker.com/engine/reference/commandline/login/#credentials-storeLogin Succeeded</pre></div><p>只有登录之后，才能使用 <code>docker push</code> 推送提交的镜像到仓库。使用 <code>docker login</code> 命令直接登陆到 <code>docker hub</code>, 登陆信息均会保存在 <code>$HOME/.docker/config.json</code> 目录下</p></div></div><div id="outline-container-orgheadline9" class="outline-3"><h3 id="orgheadline9"><span class="section-number-3">2.4</span> <code>docker logout</code> 退出</h3><div class="outline-text-3" id="text-2-4"><div class="org-src-container"><pre class="src src-sh">$docker logoutRemoving login credentials for https://index.docker.io/v1/</pre></div></div></div></div><div id="outline-container-orgheadline10" class="outline-2"><h2 id="orgheadline10"><span class="section-number-2">3</span> Docker常用操作</h2><div class="outline-text-2" id="text-3"></div><div id="outline-container-orgheadline11" class="outline-3"><h3 id="orgheadline11"><span class="section-number-3">3.1</span> <code>docker images</code> 查看本地镜像</h3><div class="outline-text-3" id="text-3-1"><div class="org-src-container"><pre class="src src-sh">$docker imagesREPOSITORY          TAG                 IMAGE ID            CREATED             SIZEubuntu              18.04               d131e0fa2585        10 days ago         102MBubuntu              latest              d131e0fa2585        10 days ago         102MB</pre></div></div></div><div id="outline-container-orgheadline12" class="outline-3"><h3 id="orgheadline12"><span class="section-number-3">3.2</span> <code>docker search</code> 搜索镜像</h3><div class="outline-text-3" id="text-3-2"><div class="org-src-container"><pre class="src src-sh">$ docker search busyboxNAME                      DESCRIPTION                                     STARS               OFFICIAL            AUTOMATEDbusybox                   Busybox base image.                             1637                [OK]                progrium/busybox                                                          70                                      [OK]radial/busyboxplus        Full-chain, Internet enabled, busybox made f…   24                                      [OK]arm32v7/busybox           Busybox base image.                             7                                       yauritux/busybox-curl     Busybox with CURL                               5                           ......</pre></div><p>这会搜索所有dockerhub上的镜像。</p></div></div><div id="outline-container-orgheadline13" class="outline-3"><h3 id="orgheadline13"><span class="section-number-3">3.3</span> <code>docker pull</code> 拉取镜像</h3><div class="outline-text-3" id="text-3-3"><div class="org-src-container"><pre class="src src-sh">$docker pull busybox</pre></div><p>这会将相应名称的镜像拉取（下载）到本地，拉取之后，便可以运行镜像了。</p><p>其它可能的命令类似：</p><pre class="example">$docker pull ubuntu:latest或$docker pull ubuntu:18.04#或$docker pull registry.hub.docker.com/ubuntu:latest</pre></div></div><div id="outline-container-orgheadline14" class="outline-3"><h3 id="orgheadline14"><a id="ID-9becb2ba-65ef-4ff8-a457-1a35d77b9d75"></a><span class="section-number-3">3.4</span> <code>docker run</code> 运行镜像</h3><div class="outline-text-3" id="text-3-4"><div class="org-src-container"><pre class="src src-sh">$docker run -it ubuntu:18.04 /bin/bashroot@7b74c9092147:/#</pre></div><p>这样就由镜像的运行生成了一个容器，并进入到容器中了。发现，很多命令比如 <code>ifconfig</code> 等都没有。但是可以运行 <code>apt-get install update</code> 。</p></div></div><div id="outline-container-orgheadline15" class="outline-3"><h3 id="orgheadline15"><span class="section-number-3">3.5</span> <code>docker ps</code> 查看正在运行的容器</h3><div class="outline-text-3" id="text-3-5"><div class="org-src-container"><pre class="src src-sh">$docker psCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES7b74c9092147        ubuntu:18.04        "/bin/bash"         3 minutes ago       Up 3 minutes                            angry_spence</pre></div><p>注意，使用 <code>docker ps -a</code> 可查看所有状态的容器。</p></div></div><div id="outline-container-orgheadline16" class="outline-3"><h3 id="orgheadline16"><a id="ID-5464c2d7-f51d-4425-866c-2f3b89272807"></a><span class="section-number-3">3.6</span> <code>docker exec</code> 进入正在运行的容器</h3><div class="outline-text-3" id="text-3-6"><div class="org-src-container"><pre class="src src-sh">$docker exec -it 7b74c9092147 /bin/bash</pre></div><p>这样和使用ssh登录一样，使用 <code>C-D</code> 退出之后也不会导致整个容器退出（注意，这个容器事先必须是已经处于运行的状态），</p><p>使用 <code>docker top &lt;容器id&gt;</code> 可以看到，执行exec之后，新多了一个bash进程。</p><pre class="example">使用exec命令进入容器内部就如同进入另一个机器一样，并且使用exit命令，不会像attach那样导致容器停止，所以非常适合容器内部操作</pre></div></div><div id="outline-container-orgheadline17" class="outline-3"><h3 id="orgheadline17"><a id="ID-d874334e-582b-4994-86fb-2f153c65f80b"></a><span class="section-number-3">3.7</span> <code>docker attach</code> 附到正在运行的容器(attach)</h3><div class="outline-text-3" id="text-3-7"><div class="org-src-container"><pre class="src src-sh">$docker attach 7b74c9092147</pre></div><p>这样会进入到相应的容器中，如同exec登录一样，但是如果通过 <code>C-d</code> 退出容器的时候，会发现，原来用 <code>docker run -it</code> / <code>docker exec -it</code> 运行的容器也被退出了，并且 <code>docker ps</code> 会发现没有正在运行的容器了，而 <code>docker ps -a</code> 可以看到容器的状态是Exited(130)。退出的方式应该是： <code>C-p C-q</code></p><pre class="example">中文意思是附加、贴上、系上等意思，所以dokcer attach主要的作用就是进入容器，这个容器和后面的docker exec类似但是完全不一样。使用exit命令或者ctrl+C命令是停止容器，退出容器命令可使用ctrl+P，然后使用ctrl+Q命令，即可退出容器的虚拟终端，此时容器还在运行。官方不推荐使用docker attach命令进入开启了交互模式的容器，docker attach的主要功能是查看信息，容器内部操作有更加方便的docker exec命令，将在稍后介绍。</pre></div></div><div id="outline-container-orgheadline18" class="outline-3"><h3 id="orgheadline18"><span class="section-number-3">3.8</span> <code>docker top</code> 查看容器运行的进程</h3><div class="outline-text-3" id="text-3-8"><div class="org-src-container"><pre class="src src-sh">$docker top 7b74c9092147UID                 PID                 PPID                C                   STIME               TTY                 TIME                CMDroot                7726                7700                0                   16:44               pts/0               00:00:00            /bin/bashroot                8079                7700                0                   16:48               pts/1               00:00:00            /bin/bash</pre></div></div></div><div id="outline-container-orgheadline19" class="outline-3"><h3 id="orgheadline19"><span class="section-number-3">3.9</span> <code>docker stop</code> 停止/退出容器</h3><div class="outline-text-3" id="text-3-9"><div class="org-src-container"><pre class="src src-sh">$docker stop 7b74c9092147</pre></div><p>这样会停止容器，同时通过 <code>exec</code> 等进入容器的终端也会退出，使用 <code>docker ps -a</code> 可以看到停止的状态是 Exit(0)， 和 <code>docker attach</code> 通过 <code>C-d</code> 或重启机器之后看到的状态Exit(130)类似。</p><p>实践发现，对于容器中发现如下三种方式退出后，容器仍为Up或者被停止的情况视 <code>exec</code> 还是 <code>attach</code> 有所不同。</p><dl class="org-dl"><dt>运行 <code>exit</code> 命令</dt><dd><code>exec -it</code> 进入、或 <code>run -it</code> 启动的，只是退出登录，容器仍然运行； <code>attach</code> 附加的会导致容器停止。</dd><dt>运行 <code>C-p C-q</code> </dt><dd><code>exec -it</code> 进入、或 <code>run -it</code> 启动的、或 <code>attach</code> 附加的，只是退出登录，容器仍然运行。</dd><dt>运行 <code>C-d</code></dt><dd><code>exec -it</code> 进入、或 <code>run -it</code> 启动的，只是退出登录，容器仍然运行； <code>attach</code> 附加的会导致容器停止。</dd></dl></div></div><div id="outline-container-orgheadline20" class="outline-3"><h3 id="orgheadline20"><span class="section-number-3">3.10</span> <code>docker start</code> 启动容器</h3><div class="outline-text-3" id="text-3-10"><div class="org-src-container"><pre class="src src-sh">$docker start 7b74c9092147</pre></div><p>这样会将 <code>docker ps -a</code> 看到的状态为Exit状态的容器重启起来。</p></div></div><div id="outline-container-orgheadline21" class="outline-3"><h3 id="orgheadline21"><span class="section-number-3">3.11</span> <code>docker restart</code> 重启容器</h3><div class="outline-text-3" id="text-3-11"><div class="org-src-container"><pre class="src src-sh">$docker restart 7b74c9092147</pre></div><p>这样会重启容器，相当于 <code>stop</code> 再 <code>start</code>, 同时通过 <code>exec</code> 等进入容器的终端也会退出。</p></div></div><div id="outline-container-orgheadline22" class="outline-3"><h3 id="orgheadline22"><span class="section-number-3">3.12</span> <code>docker rm</code> 删除容器</h3><div class="outline-text-3" id="text-3-12"><div class="org-src-container"><pre class="src src-sh">$docker rm 7b74c9092147</pre></div><p>执行之后，将会在 <code>docker ps -a</code> 中看到相应的容器已经消失。</p></div></div><div id="outline-container-orgheadline23" class="outline-3"><h3 id="orgheadline23"><span class="section-number-3">3.13</span> <code>docker commit</code> 提交容器</h3><div class="outline-text-3" id="text-3-13"><p>可以提交容器，来创建相应的镜像，保存事先操作的环境。</p><div class="org-src-container"><pre class="src src-sh">root@71fe2a8636b9:/#exit$ docker commit -m 'ubuntu with ifconfig/sudo/miracle' -a "vaqeteart" 71fe2a8636b9 vaqeteart/ubuntu:test1sha256:c2fd07bf051627a437da9a963ad4d06990b7b0e134f2f7e4e3936ad11474d832</pre></div><p>注意，先退出容器(71fe2a8636b9)。其中， <code>-m</code> 指定说明信息； <code>-a</code> 指定用户信息； <code>71fe2a8636b9</code> 代表容器的id； <code>vaqeteart/ubuntu:vim</code> 指定目标镜像的用户名、仓库名和 <code>tag</code> 信息，运行命令的时候使用自己注册Docker时的用户名。</p><p>此时Docker中就有了我们新建的镜像 <code>vaqeteart/ubuntu:test1</code> ，此镜像和原有的 <code>ubuntu</code> 镜像区别在于多了一些工具。此时我们利用新镜像创建的容器，本身就自带之前提交容器相关的工具了。</p><p>可看到相关的镜像</p><pre class="example">miracle@xmnb4003210:~$ docker imagesREPOSITORY          TAG                 IMAGE ID            CREATED             SIZEvaqeteart/ubuntu    test1               c2fd07bf0516        5 minutes ago       132MBbusybox             latest              db8ee88ad75f        3 months ago        1.22MBubuntu              18.04               d131e0fa2585        5 months ago        102MBubuntu              latest              d131e0fa2585        5 months ago        102MB</pre></div></div><div id="outline-container-orgheadline24" class="outline-3"><h3 id="orgheadline24"><a id="ID-2b07ad21-5f20-4c47-9714-a7638183428d"></a><span class="section-number-3">3.14</span> <code>docker push</code> 上传提交的容器/镜像</h3><div class="outline-text-3" id="text-3-14"><div class="org-src-container"><pre class="src src-sh">$docker push vaqeteart/ubuntu:test1The push refers to repository [docker.io/vaqeteart/ubuntu]1b0fea03824f: Pushed 7660ded5319c: Mounted from library/ubuntu 94e5c4ea5da6: Mounted from library/ubuntu 5d74a98c48bc: Mounted from library/ubuntu 604cbde1a4c8: Mounted from library/ubuntu test1: digest: sha256:b44733a335979077d46237d826a267176ea9cf1e5e80c1b5914a6277662d2b7b size: 1362</pre></div><p>注意，只有事先使用 <code>docker login</code> 登录之后，才能够使用 <code>docker push</code> 推送镜像，没有登录的话，会出现如下失败：</p><pre class="example">$docker push vaqeteart/ubuntu:test1The push refers to repository [docker.io/vaqeteart/ubuntu]1b0fea03824f: Preparing 7660ded5319c: Preparing 94e5c4ea5da6: Preparing 5d74a98c48bc: Preparing 604cbde1a4c8: Preparing denied: requested access to the resource is denied</pre></div><div id="outline-container-orgheadline25" class="outline-4"><h4 id="orgheadline25"><span class="section-number-4">3.14.1</span> 其它参考</h4><div class="outline-text-4" id="text-3-14-1"><p>源自：<a href="https://www.oschina.net/question/877522_239204" target="_blank" rel="noopener">https://www.oschina.net/question/877522_239204</a></p><pre class="example">无敌菌君 2015/09/06 15:41step1——找到本地镜像的ID：docker imagesstep2——登陆Hub：docker login --username=username --password=password --email=emailstep3——tag：docker tag &lt;imageID&gt; &lt;namespace&gt;/&lt;image name&gt;:&lt;version tag eg latest&gt;step4——push镜像：docker push &lt;namespace&gt;/&lt;image name&gt;...... Yashin 2015/06/12 13:07额，这个看一下文档就行了啊，好简单的，碰到具体问题再来提问比较好https://docs.docker.com/docker-hub/评论 (0) 引用此答案 举报0......xue777huaxue777hua 2015/09/05 13:361. 建立一个private的 registry2. 制作一个image：可以dockerfile，也可以docker commit3. docker push 即可</pre></div></div></div><div id="outline-container-orgheadline26" class="outline-3"><h3 id="orgheadline26"><span class="section-number-3">3.15</span> <code>docker info</code> 查看docker系统配置信息</h3><div class="outline-text-3" id="text-3-15"><div class="org-src-container"><pre class="src src-sh">$docker infoContainers: 5 Running: 1 Paused: 0 Stopped: 4Images: 3Server Version: 18.09.7Storage Driver: overlay2 Backing Filesystem: extfs Supports d_type: true Native Overlay Diff: trueLogging Driver: json-fileCgroup Driver: cgroupfsPlugins: Volume: local Network: bridge host macvlan null overlay Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslogSwarm: inactiveRuntimes: runcDefault Runtime: runcInit Binary: docker-initcontainerd version: runc version: N/Ainit version: v0.18.0 (expected: fec3683b971d9c3ef73f284f176672c44b448662)Security Options: apparmor seccomp  Profile: defaultKernel Version: 4.15.0-43-genericOperating System: Ubuntu 18.04.1 LTSOSType: linuxArchitecture: x86_64CPUs: 4Total Memory: 7.343GiBName: xmnb4003210ID: DPEZ:7TCA:W5LW:QFSM:PU7X:5SC6:KXU5:SN4A:VTAS:HBTZ:ZUUJ:EO6DDocker Root Dir: /var/lib/dockerDebug Mode (client): falseDebug Mode (server): falseRegistry: https://index.docker.io/v1/Labels:Experimental: falseInsecure Registries: 127.0.0.0/8Live Restore Enabled: falseWARNING: No swap limit support</pre></div></div></div><div id="outline-container-orgheadline27" class="outline-3"><h3 id="orgheadline27"><a id="ID-e8046441-65fb-4081-bb86-dc538a5e4ffc"></a><span class="section-number-3">3.16</span> <code>docker help</code> 帮助信息</h3><div class="outline-text-3" id="text-3-16"><p>查看整体帮助信息：</p><div class="org-src-container"><pre class="src src-sh">$docker help</pre></div><p>查看具体命令帮助信息：</p><pre class="example">docker &lt;command&gt; --help或docker help &lt;command&gt;</pre></div></div><div id="outline-container-orgheadline28" class="outline-3"><h3 id="orgheadline28"><a id="ID-e12853be-29c3-46c5-8dd4-0ac37d70214a"></a><span class="section-number-3">3.17</span> <code>docker volume</code> 数据卷管理</h3><div class="outline-text-3" id="text-3-17"><p>管理数据卷使用 <code>docker volume</code> 命令，数据卷是容器数据持久化的一个组件。其中：</p><ul class="org-ul"><li><code>docker volume ls</code> :可以查看本机的全部数据卷</li><li><code>docker volume rm</code> :删除不需要的数据卷（数据卷与容器的生命周期完全独立，所以容器删除后数据卷并不会删除，时间久了数据卷就会越来越多）</li><li><code>docker volume inspect</code> :查看数据卷的详细信息</li><li><code>docker volume create</code> :创建一个数据卷</li><li><code>docker volume prune</code> :删除所有未使用的卷</li></ul></div><div id="outline-container-orgheadline29" class="outline-4"><h4 id="orgheadline29"><span class="section-number-4">3.17.1</span> <span class="done REFERENCE">REFERENCE</span> 启动镜像并且创建匿名Volume</h4><div class="outline-text-4" id="text-3-17-1"><div class="org-src-container"><pre class="src src-sh">$docker run --name test_volume -it  -v /home/miracle/mydata d131e0fa2585  /bin/bash</pre></div><p>Volume用于容器/主机数据的管理、共享、与传输等。这里，不能用 <code>docker exec</code> 来进入已有的容器，只能从镜像启动时指定。启动之后，你会发现容器中有 <code>/home/miracle/mydata</code> 这个目录。这里，使用 <code>--name</code> 指定生成的容器名称为 <code>test_volume</code>, 便于后续查看管理。</p></div><div id="outline-container-orgheadline35" class="outline-5"><h5 id="orgheadline35"><span class="section-number-5">3.17.1.1</span> 检查挂载的volume在host主机中的路径</h5><div class="outline-text-5" id="text-3-17-1-1"><div class="org-src-container"><pre class="src src-sh">$docker inspect test_volume.....        "Mounts": [            {                "Type": "volume",                "Name": "3903895feecbf7054d4c0a5ceb00109da6454b5479b31fec3f1c2432af176d90",                "Source": "/var/lib/docker/volumes/3903895feecbf7054d4c0a5ceb00109da6454b5479b31fec3f1c2432af176d90/_data",                "Destination": "/home/miracle/mydata",                "Driver": "local",                "Mode": "",                "RW": true,                "Propagation": ""            }        ],......</pre></div><p>由上可见，容器中的 <code>/home/miracle/mydata</code> 其实是对应了主机中的 <code>/var/lib/docker/volumes/3903895feecbf7054d4c0a5ceb00109da6454b5479b31fec3f1c2432af176d90/_data</code> 的，实际操作中，在容器中，或者在主机中进行对该目录的操作（添加删除文件），在容器和主机的对应路径中都会体现出来。</p></div></div></div><div id="outline-container-orgheadline30" class="outline-4"><h4 id="orgheadline30"><span class="section-number-4">3.17.2</span> <span class="done REFERENCE">REFERENCE</span> 创建有名Volume并在启动镜像时挂载到容器中</h4><div class="outline-text-4" id="text-3-17-2"><div class="org-src-container"><pre class="src src-sh">$docker volume create test_volume2test_volume2$sudo ls /var/lib/docker/volumes[sudo] miracle 的密码： 0b66e301bdab3edcab10ba390aa522dedd5b2dedbf49273f0ca0aa33c71d59bf  metadata.db3903895feecbf7054d4c0a5ceb00109da6454b5479b31fec3f1c2432af176d90  test_volume2$docker run --name test_volume2 -it -v test_volume2:/home/miracle/volume2 d131e0fa2585 /bin/bash$docker inspect test_volume2......        "Mounts": [            {                "Type": "volume",                "Name": "test_volume2",                "Source": "/var/lib/docker/volumes/test_volume2/_data",                "Destination": "/home/miracle/volume2",                "Driver": "local",                "Mode": "z",                "RW": true,                "Propagation": ""            }......</pre></div><p>这里，首先使用 <code>docker volume create</code> 创建一个 <code>test_volume2</code> 的volume，然后通过 <code>docker run</code> 将其挂载到容器的 <code>/home/miracle/volume2</code> 目录中，启动之后，我们可以发现，在容器中的 <code>/home/miracle/volume2</code> 对应挂载了主机中的 <code>/var/lib/docker/volumes/test_volume2/_data</code></p></div></div><div id="outline-container-orgheadline31" class="outline-4"><h4 id="orgheadline31"><span class="section-number-4">3.17.3</span> <span class="done REFERENCE">REFERENCE</span> 启动镜像的时候将主机中一个目录挂载到容器中</h4><div class="outline-text-4" id="text-3-17-3"><div class="org-src-container"><pre class="src src-sh">$docker run --name test_mount -it -v /home/miracle/tmpTrans:/home/miracle/tmpTrans d131e0fa2585 /bin/bash</pre></div><p>这里， <code>/home/miracle/tmpTrans:/home/miracle/tmpTrans</code> 冒号前面是主机的路径，冒号后面是容器的路径。这样执行之后，你会发现，容器中会创建相应的路径，并将主机中相应的路径挂载进来。</p><p>注：使用 <code>docker exec -v xxx</code>  是不行的。主机的路径名一定要是绝对路径或者 <code>~/xxx</code> 否则会被当成volume挂载。这个方式依赖主机的目录结构，所以可以移植性不如前面volume的方式。</p></div></div></div></div><div id="outline-container-orgheadline32" class="outline-2"><h2 id="orgheadline32"><span class="section-number-2">4</span> 其它</h2><div class="outline-text-2" id="text-4"><p>更多学习参考： <a href="../../../../../../mydata/orgmode/gtd/_study.html#ID-b20872a2-65bf-4b14-a4b9-6ff3f90e148d">Docker实践</a></p></div><div id="outline-container-orgheadline33" class="outline-3"><h3 id="orgheadline33"><span class="section-number-3">4.1</span> 实践尝试</h3><div class="outline-text-3" id="text-4-1"></div><div id="outline-container-orgheadline34" class="outline-4"><h4 id="orgheadline34"><span class="section-number-4">4.1.1</span> 重启宿主机之后容器停止，重新启动容器数据仍在</h4><div class="outline-text-4" id="text-4-1-1"><p>使用 <code>docker exec -it &lt;id&gt; /bin/bash</code> 进入容器之后，再 <code>C-d</code> 退出，发现 <code>docker ps</code> 容器仍旧在运行。</p><p><code>docker ps</code> 发现有运行的容器之后，重启机器，会发现 <code>docker ps</code> 没有运行的容器了，但是 <code>docker ps -a</code> 会有Exit的容器。</p><p>重启机器后， <code>docker start &lt;id&gt;</code> 会启动之前的容器，并且使用 <code>docker exec -it &lt;id&gt; /bin/bash</code> 会发现之前创建的文件仍在。</p></div></div></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;
&amp;#x2014;
layout: posts
title: Docker实践
categories: [categories, study, linux]
comments: true
&amp;#x2014;
#+END_HTML
&lt;/p&gt;
&lt;div id=&quot;table-of-
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://0.0.0.0:4000/2019/09/30/shulte_table_2018/"/>
    <id>http://0.0.0.0:4000/2019/09/30/shulte_table_2018/</id>
    <published>2019-09-29T16:00:00.000Z</published>
    <updated>2019-10-22T08:07:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2014;layout: poststitle: 2018年舒尔特数字表训练总结&#x2013;心路历程categories: [categories, study, misc]comments: true&#x2014;#+END_HTML</p><div id="table-of-contents"><h2>&#30446;&#24405;</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 20180103 *数字在心</a></li><li><a href="#orgheadline2">2. 20180104 方法</a></li><li><a href="#orgheadline3">3. 20180104 数字敏感度与速读</a></li><li><a href="#orgheadline4">4. 20180104 等同=稳定</a></li><li><a href="#orgheadline5">5. 20180109 欲速则不达</a></li><li><a href="#orgheadline6">6. 20180111 可靠</a></li><li><a href="#orgheadline7">7. 20180113 *指随心落</a></li><li><a href="#orgheadline8">8. 20180113 心&gt;眼&gt;脑&gt;手</a></li><li><a href="#orgheadline9">9. 20180125 *接纳</a></li><li><a href="#orgheadline10">10. 20180202 *匹配</a></li><li><a href="#orgheadline11">11. 20180202 两个重点</a></li><li><a href="#orgheadline12">12. 20180202 目标</a></li><li><a href="#orgheadline13">13. 20180203 结果</a></li><li><a href="#orgheadline14">14. 20180203 能与快</a></li><li><a href="#orgheadline15">15. 20180203 如果累了，那便错了</a></li><li><a href="#orgheadline16">16. 20180204 缓存</a></li><li><a href="#orgheadline17">17. 20180204 精力</a></li><li><a href="#orgheadline18">18. 20180205 缓存与切换</a></li><li><a href="#orgheadline19">19. 20180210 排除杂念，集中一点</a></li><li><a href="#orgheadline20">20. 20180212 **整体</a></li><li><a href="#orgheadline21">21. 20180311 *区间</a></li><li><a href="#orgheadline22">22. 20180316 *节奏</a></li><li><a href="#orgheadline23">23. 20180316 冲刺</a></li><li><a href="#orgheadline24">24. 20180316 节奏</a></li><li><a href="#orgheadline25">25. 20180317 *一心多用</a></li><li><a href="#orgheadline26">26. 20180317 注意力</a></li><li><a href="#orgheadline27">27. 20180319 *线团</a></li><li><a href="#orgheadline28">28. 20180319 找与看，点与面</a></li><li><a href="#orgheadline29">29. 20180319 作用</a></li><li><a href="#orgheadline30">30. 20180320 排除干扰</a></li><li><a href="#orgheadline31">31. 20180321 图像</a></li><li><a href="#orgheadline32">32. 20180323 全部与局部</a></li><li><a href="#orgheadline33">33. 20180323 王者风范</a></li><li><a href="#orgheadline34">34. 20180323 真正目标</a></li><li><a href="#orgheadline35">35. 20180323 整体部分交融</a></li><li><a href="#orgheadline36">36. 20180324 *完整目标</a></li><li><a href="#orgheadline37">37. 20180324 独立与整体</a></li><li><a href="#orgheadline38">38. 20180327 顺便</a></li><li><a href="#orgheadline39">39. 20180329 思想与目光</a></li><li><a href="#orgheadline40">40. 20180403 关系与清空</a></li><li><a href="#orgheadline41">41. 20180428 间断</a></li><li><a href="#orgheadline42">42. 20180408 本来就在那</a></li><li><a href="#orgheadline43">43. 20180408 看与记</a></li><li><a href="#orgheadline44">44. 20180408 以手追眼而非以眼追手</a></li><li><a href="#orgheadline45">45. 20180409 焦点</a></li><li><a href="#orgheadline46">46. 20180409 余光</a></li><li><a href="#orgheadline47">47. 20180409 思想是眼睛的焦点</a></li><li><a href="#orgheadline48">48. 20180412 双食指</a></li><li><a href="#orgheadline49">49. 20180418 直觉</a></li><li><a href="#orgheadline50">50. 20180419 *无为</a></li><li><a href="#orgheadline51">51. 20180425 *形状与意义</a></li><li><a href="#orgheadline52">52. 20180425 *直觉与现状</a></li><li><a href="#orgheadline53">53. 20180426 稍安勿燥</a></li><li><a href="#orgheadline54">54. 20180427 **是看不是找</a></li><li><a href="#orgheadline55">55. 20180427 **思维与目光</a></li><li><a href="#orgheadline56">56. 20180427 不看</a></li><li><a href="#orgheadline57">57. 20180427 专注</a></li><li><a href="#orgheadline58">58. 20180428 间断</a></li><li><a href="#orgheadline59">59. 20180428 思维与视觉</a></li><li><a href="#orgheadline60">60. 20180428 清晰与范围</a></li><li><a href="#orgheadline61">61. 20180503**不视而见&lt;-&gt;视而不见</a></li><li><a href="#orgheadline62">62. 20180507 心无旁骛的冲刺</a></li><li><a href="#orgheadline63">63. 20180507 懒惰与努力</a></li><li><a href="#orgheadline64">64. 20180509 主动</a></li><li><a href="#orgheadline65">65. 20180511 让眼睛解脱，让思维前进</a></li><li><a href="#orgheadline66">66. 20180511 不知道自己看的见</a></li><li><a href="#orgheadline67">67. 20180513 训练过程</a></li><li><a href="#orgheadline68">68. 20180514 看</a></li><li><a href="#orgheadline69">69. 20180514 *解脱</a></li><li><a href="#orgheadline70">70. 20180514 视线与思维</a></li><li><a href="#orgheadline71">71. 20180514 低阶</a></li><li><a href="#orgheadline72">72. 20180515 主动成像的技巧</a></li><li><a href="#orgheadline73">73. 20180518 *思维的前进</a></li><li><a href="#orgheadline74">74. 20180518 **控制</a></li><li><a href="#orgheadline75">75. 20180518 无用功</a></li><li><a href="#orgheadline76">76. 20180519 珍惜</a></li><li><a href="#orgheadline77">77. 20180521 格局</a></li><li><a href="#orgheadline78">78. 20180522 目光无焦点，思维向前走</a></li><li><a href="#orgheadline79">79. 20180522范围</a></li><li><a href="#orgheadline80">80. 20180523*一心多用</a></li><li><a href="#orgheadline81">81. 20180523各自独立</a></li><li><a href="#orgheadline82">82. 20180523怎样看到</a></li><li><a href="#orgheadline83">83. 20180523长远</a></li><li><a href="#orgheadline84">84. 20180525 习惯并非速度</a></li><li><a href="#orgheadline85">85. 20180525*是确认而非去看</a></li><li><a href="#orgheadline86">86. 20180527 *清晰与快</a></li><li><a href="#orgheadline87">87. 20180528 关键</a></li><li><a href="#orgheadline88">88. 20180531 **追逐与捕捉</a></li><li><a href="#orgheadline89">89. 20180531 自信</a></li><li><a href="#orgheadline90">90. 20180601 习惯</a></li><li><a href="#orgheadline91">91. 20180601 限制</a></li><li><a href="#orgheadline92">92. 20180605 **切换与敏感度</a></li><li><a href="#orgheadline93">93. 20180605 阶段总结</a></li><li><a href="#orgheadline94">94. 20180605 预看</a></li><li><a href="#orgheadline95">95. 20180606 清除</a></li><li><a href="#orgheadline96">96. 20180607 总结：思维所至，目光所及，手指所点</a></li><li><a href="#orgheadline97">97. 20180608 **瞬间</a></li><li><a href="#orgheadline98">98. 20180608 **专注</a></li><li><a href="#orgheadline99">99. 20180608 无为</a></li><li><a href="#orgheadline100">100. 20180612 勿错过</a></li><li><a href="#orgheadline101">101. 20180626 无意义的图像</a></li><li><a href="#orgheadline102">102. 20180627 *看见与认识</a></li><li><a href="#orgheadline103">103. 20180627 忘记</a></li><li><a href="#orgheadline104">104. 20180706 准确</a></li><li><a href="#orgheadline105">105. 20180713 眼为先</a></li><li><a href="#orgheadline106">106. 20180717 原因</a></li><li><a href="#orgheadline107">107. 20180708 眼睛与图形</a></li><li><a href="#orgheadline108">108. 20180725 *整体非局部，图像非意义</a></li><li><a href="#orgheadline109">109. 20180725 *起点</a></li><li><a href="#orgheadline110">110. 20180725 *位置</a></li><li><a href="#orgheadline111">111. 20180726 忘与记</a></li><li><a href="#orgheadline112">112. 20180726 大视角</a></li><li><a href="#orgheadline113">113. 20180802 克服恐惧</a></li><li><a href="#orgheadline114">114. 20180803 推动思维</a></li><li><a href="#orgheadline115">115. 20180807 专一</a></li><li><a href="#orgheadline116">116. 20180828 顺便缓存附近</a></li><li><a href="#orgheadline117">117. 20180828 区间的训练</a></li><li><a href="#orgheadline118">118. 20180829 只有一个下一个</a></li><li><a href="#orgheadline119">119. 20180906 一闪而过</a></li><li><a href="#orgheadline120">120. 20180912 心</a></li><li><a href="#orgheadline121">121. 20180915 专一</a></li><li><a href="#orgheadline122">122. 20180915 *流畅与速度</a></li><li><a href="#orgheadline123">123. 20180920 从熟悉到陌生</a></li><li><a href="#orgheadline124">124. 20180920 视幅与角度</a></li><li><a href="#orgheadline125">125. 20180920 过程</a></li><li><a href="#orgheadline126">126. 20180921 *过滤与分辨</a></li><li><a href="#orgheadline127">127. 20180926 规律外的规律</a></li><li><a href="#orgheadline128">128. 20180928 与数字捉迷藏</a></li><li><a href="#orgheadline129">129. 20180928 牵引还是推进？</a></li><li><a href="#orgheadline130">130. 20180930 牵引与推进</a></li><li><a href="#orgheadline131">131. 20181005 高阶与低阶</a></li><li><a href="#orgheadline132">132. 20181009 疯狂模式</a></li><li><a href="#orgheadline133">133. 20181009 过程</a></li><li><a href="#orgheadline134">134. 20181011 噪音</a></li><li><a href="#orgheadline135">135. 20181012*疯狂</a></li><li><a href="#orgheadline136">136. 20181012*看、点</a></li><li><a href="#orgheadline137">137. 20181013 *真假</a></li><li><a href="#orgheadline138">138. 20181014是与非</a></li><li><a href="#orgheadline139">139. 20181017 不重要</a></li><li><a href="#orgheadline140">140. 20181017 *排除干扰</a></li><li><a href="#orgheadline141">141. 20181018 无视变化</a></li><li><a href="#orgheadline142">142. 20181018 **调节平衡</a></li><li><a href="#orgheadline143">143. 20181018 *面对</a></li><li><a href="#orgheadline144">144. 20181021 打地鼠</a></li><li><a href="#orgheadline145">145. 20181102 稳定</a></li><li><a href="#orgheadline146">146. 20181107 稳定与清晰</a></li><li><a href="#orgheadline147">147. 20181114 提高效率的仪式</a></li><li><a href="#orgheadline148">148. 20181116 只关注不断更新的起点</a></li><li><a href="#orgheadline149">149. 20181117 专注</a></li><li><a href="#orgheadline150">150. 20181119 图像稳定</a></li><li><a href="#orgheadline151">151. 20181214 静止的图像</a></li><li><a href="#orgheadline152">152. 20181221看与认，找与配</a></li></ul></div></div><p>这里是2018年舒尔特数字表的训练体悟，也是给自己参考做的记录，希望同时能继续为大家带来帮助。</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 20180103 *数字在心</h2><div class="outline-text-2" id="text-1"><p>从单手到双手，再由双手到只用眼不用手，现在可进一步简化训练方式：不用手，不用眼，仅适用于熟悉数字敏感度。方法是：不用借助软件，闭上眼睛，心中尽快的将某个区间的数字过一遍。如果到了一定程度，就加多，或者打乱次序，只要保证每个数字在心中经过。但是要想手，眼，敏感度三者同时训练到，应该还是要结合其它方式的。</p></div></div><div id="outline-container-orgheadline2" class="outline-2"><h2 id="orgheadline2"><span class="section-number-2">2</span> 20180104 方法</h2><div class="outline-text-2" id="text-2"><p>点到的基础是看见而非反映，看见的基础是认识而非找到，认识的是固定的内容而非动态的记忆。认识相当于敏感度与次序，看见相当于视幅与眼力，点到只是上述的结果。不是绝对的如此，但大致感觉上是这样的。所以，训练手速之上得将眼睛练好，练习眼睛之上得把需要看见的东西清晰的存放到头脑中。由此理解几种训练方式：双手练，单手练，不用手只用眼练，不用眼不用手随时练。</p></div></div><div id="outline-container-orgheadline3" class="outline-2"><h2 id="orgheadline3"><span class="section-number-2">3</span> 20180104 数字敏感度与速读</h2><div class="outline-text-2" id="text-3"><p>尝试训练与测试数字敏感度的一个经验：看到一个数字后，瞬间脑中浮现出尽可能多的与之相邻的数字。不用舒尔特表，只在脑中进行训练就行，任何时间、地点，比如排队、等候无聊之时等等。你脑中能同时浮现的相邻数字越快越多越好，浮现时数字在脑中的图像不用相邻，但只要这些同时在脑中的数字是相邻的那一批就行。因为脑中浮现了，眼睛就会不由自主的看，可能这就是数字敏感度以及敏感度提升速度的一个原因吧。看着舒尔特表时也对看到的每个数字以其为中心来在脑中尽量同时浮现其附近以至其后的数字，也许这就是所谓的预先看。换成速读，那就是看到一个字，就立即想到相关的词，再结合实际书上有的，完成迅速看完脑袋中映出的词中，书上有的那个词，以及句子，乃至整段。</p></div></div><div id="outline-container-orgheadline4" class="outline-2"><h2 id="orgheadline4"><span class="section-number-2">4</span> 20180104 等同=稳定</h2><div class="outline-text-2" id="text-4"><p>看着全部的数字点该点的数字，不要想要点的数字是什么，所有数字都是一样的。只有所有数字都一样时，速度才是均匀的。</p></div></div><div id="outline-container-orgheadline5" class="outline-2"><h2 id="orgheadline5"><span class="section-number-2">5</span> 20180109 欲速则不达</h2><div class="outline-text-2" id="text-5"><p>不要太快，有时要刻意放慢些速度，不要急着看到点到，让脑袋慢慢浮现出要点的数字再去看去点。哪个数字都不是最重要的，也不用必须立即看到，点错了慢了也不会有什么坏事发生，也没人非得说要在什么时间内必须点完，没什么急迫的事情，慢慢来。</p></div></div><div id="outline-container-orgheadline6" class="outline-2"><h2 id="orgheadline6"><span class="section-number-2">6</span> 20180111 可靠</h2><div class="outline-text-2" id="text-6"><p>提前看，应该不是提前去看了再记住，而是提前将要看的在脑中清晰住，轮到的时候根据脑中的印象去看。毕竟呆自己脑中的，才是可靠的。要看的早就在那了，根本不用找与记。</p></div></div><div id="outline-container-orgheadline7" class="outline-2"><h2 id="orgheadline7"><span class="section-number-2">7</span> 20180113 *指随心落</h2><div class="outline-text-2" id="text-7"><p>你点到的是你找到的，你找到的，是你看到的，你看到的，是你心中的，只要内心清晰，目标就会明确。</p></div></div><div id="outline-container-orgheadline8" class="outline-2"><h2 id="orgheadline8"><span class="section-number-2">8</span> 20180113 心&gt;眼&gt;脑&gt;手</h2><div class="outline-text-2" id="text-8"><p>下一个数字其实在心中，而非找到的。而你看到的只有一个是下一个数字，其它都是干扰。关键是要在内心一直都能很清晰的知道下一个数字。手指所点是结果，想多了是杂念（默念），看多了是干扰（眼花），只有明确好心中的目标（形状），你的目标和结果才是一致的。减少想与看，加强手指与内心映像的联结。闭上眼睛，能迅速的走过所有的数字，睁开眼睛快速的点完已知的数据。</p></div></div><div id="outline-container-orgheadline9" class="outline-2"><h2 id="orgheadline9"><span class="section-number-2">9</span> 20180125 *接纳</h2><div class="outline-text-2" id="text-9"><p>以接纳的态度去练习，不要着急快慢，要时刻记住心中的那个数字，也要时刻的将数字表当作一个宝库，那里边全都是好东西，你所想要的那个数字一定就在那里。这样看着数字表，心情也会愉悦，不会因为看到的是别的数字而心生厌恶，接受了每个数字所在的位置，知道了每一个数字都是重要的宝贝，你需要的数字也一定能点到，你接受过的也会给你回报，也就不用在意着急找了，不是的立即不去挂念着不去点，看到了就直接去点就可以了。</p></div></div><div id="outline-container-orgheadline10" class="outline-2"><h2 id="orgheadline10"><span class="section-number-2">10</span> 20180202 *匹配</h2><div class="outline-text-2" id="text-10"><p>不是念到了再看到，而是没有声音只有图像先在头脑中，然后体会匹配到的一瞬间的成就感，不用快，不用念，要的是匹配到。上下左右环顾那个待匹配的图像，而非声音与意义。同一速度，可能是不同状态。不要因为快了而高兴，慢了而沮丧，因为那样会有起伏。高兴应该是因为匹配到了，而沮丧根本不存在，因为脑中将轮到的数字必然在表中。</p></div></div><div id="outline-container-orgheadline11" class="outline-2"><h2 id="orgheadline11"><span class="section-number-2">11</span> 20180202 两个重点</h2><div class="outline-text-2" id="text-11"><p>只需要记住两个事情。第一个是要知道目标是什么，第二个是去看。</p></div></div><div id="outline-container-orgheadline12" class="outline-2"><h2 id="orgheadline12"><span class="section-number-2">12</span> 20180202 目标</h2><div class="outline-text-2" id="text-12"><p>目标不是快点看完，而是能够看完。时间时真时假，只是个障眼法，因为，从某种角度上，它反映的应该不是速度，而是状态。而这又不准确，同一状态，可能用了不同的时间。真的时间，在稳定的状态下每个人自能体会到，却不是别人能判断的了。所以，忘记时间，忘记意义，忘记声音，将心中目标清楚显现。</p></div></div><div id="outline-container-orgheadline13" class="outline-2"><h2 id="orgheadline13"><span class="section-number-2">13</span> 20180203 结果</h2><div class="outline-text-2" id="text-13"><p>排行榜与速度并非没有意义，也不可能完全不关注排行榜与速度，只是在真正练习的时候，要真正去投入，它们会成为干扰。就像结果与过程一样，太注重，反而达不到，但过程却是为结果而进行。</p></div></div><div id="outline-container-orgheadline14" class="outline-2"><h2 id="orgheadline14"><span class="section-number-2">14</span> 20180203 能与快</h2><div class="outline-text-2" id="text-14"><p>目标只是确认自己能看到即可，不必迅速看到。是让自己能，而非快。快是结果，能才是关键。</p></div></div><div id="outline-container-orgheadline15" class="outline-2"><h2 id="orgheadline15"><span class="section-number-2">15</span> 20180203 如果累了，那便错了</h2><div class="outline-text-2" id="text-15"><p>你的成功不是速度，而是状态，是看到，轻松的看到了想看的，本身就是成就，没有不存在的数字，应该会不断让你在舒尔特中不断获取与积累正能量，而非头晕眼胀。在这个世界上，如果站到一个角度上看，负能量本不存在，都是我们自找麻烦创造的，如果累了，那便错了，但是&#x2013;不断调整，也是成长。随时能够调整，才能在这个世界上，随！心！所！欲！！</p></div></div><div id="outline-container-orgheadline16" class="outline-2"><h2 id="orgheadline16"><span class="section-number-2">16</span> 20180204 缓存</h2><div class="outline-text-2" id="text-16"><p>同一时间脑中缓存的是有限的，大概十来个。而视幅固定后，关键就在于如何不断迅速切换自己的那片缓存，到不同的数字区间上。应该不是一览无余，一览同时能看到的内容只是缓存的容量，确认了看到后迅速清空并缓存下一批的能力，才是关键。</p></div></div><div id="outline-container-orgheadline17" class="outline-2"><h2 id="orgheadline17"><span class="section-number-2">17</span> 20180204 精力</h2><div class="outline-text-2" id="text-17"><p>看本身就不是一个耗精力的事情，所以不要以为看到很难，主要的精力并非看，更非找，而是将心中的目标清晰化。之所以看得很累，找得很慢，是因为，你没有将当前的目标清晰化，不要被脑中的声音误导，在舒尔特中，眼见为实，耳听为虚。</p></div></div><div id="outline-container-orgheadline18" class="outline-2"><h2 id="orgheadline18"><span class="section-number-2">18</span> 20180205 缓存与切换</h2><div class="outline-text-2" id="text-18"><p>先训练一下子能缓存多少数字，再训练在各个区间的切换。比如，先看完几个，再点，再看下几个。。。</p></div></div><div id="outline-container-orgheadline19" class="outline-2"><h2 id="orgheadline19"><span class="section-number-2">19</span> 20180210 排除杂念，集中一点</h2><div class="outline-text-2" id="text-19"><p>点完后，先只将下一个数字清晰现于脑中，忘记点过的，迅速去用眼睛扫视匹配脑中的，这样会比较快。只有勇往直前，才会不断前进，只有目标清晰，才能迅速发现。</p></div></div><div id="outline-container-orgheadline20" class="outline-2"><h2 id="orgheadline20"><span class="section-number-2">20</span> 20180212 **整体</h2><div class="outline-text-2" id="text-20"><p>当反应迅速到一定程度，尝试将所有的数字看成一个整体，或尽可能多的看成整体，扩大每次反应的单位量，比分开一个个的看要好许多。当到一定程度，会感觉忽略了手法。</p></div></div><div id="outline-container-orgheadline21" class="outline-2"><h2 id="orgheadline21"><span class="section-number-2">21</span> 20180311 *区间</h2><div class="outline-text-2" id="text-21"><p>一眼看完1-10再点，再练习一眼看完11-20再点</p></div></div><div id="outline-container-orgheadline22" class="outline-2"><h2 id="orgheadline22"><span class="section-number-2">22</span> 20180316 *节奏</h2><div class="outline-text-2" id="text-22"><p>掌握节奏就是估计好视线的速度，让手速配合视线，不超前，不等待。</p></div></div><div id="outline-container-orgheadline23" class="outline-2"><h2 id="orgheadline23"><span class="section-number-2">23</span> 20180316 冲刺</h2><div class="outline-text-2" id="text-23"><p>人在冲刺的时候注意力是集中的，拉长你的冲刺时间</p></div></div><div id="outline-container-orgheadline24" class="outline-2"><h2 id="orgheadline24"><span class="section-number-2">24</span> 20180316 节奏</h2><div class="outline-text-2" id="text-24"><p>掌握好节奏，手与眼同步，手不要盲目快，渐渐的才会眼超过手的。</p></div></div><div id="outline-container-orgheadline25" class="outline-2"><h2 id="orgheadline25"><span class="section-number-2">25</span> 20180317 *一心多用</h2><div class="outline-text-2" id="text-25"><p>双食指的精髓在于，同时落下一心二用。由于需要顾及两个手要点的内容，会相比依次点落不知不觉拉大了视幅，增强了数字关注度，与集中了注意力。</p></div></div><div id="outline-container-orgheadline26" class="outline-2"><h2 id="orgheadline26"><span class="section-number-2">26</span> 20180317 注意力</h2><div class="outline-text-2" id="text-26"><p>注意力训练，不是视幅、敏感度、手法、手速的训练。有视幅但能看也行了，有敏感度但识数也行了，有手法但能控制也行了，有手速但能动就行了，那些提升只是太专一了，治标，但得找到分心的原因并克服，这才是根本并通用。</p></div></div><div id="outline-container-orgheadline27" class="outline-2"><h2 id="orgheadline27"><span class="section-number-2">27</span> 20180319 *线团</h2><div class="outline-text-2" id="text-27"><p>目标即是开始，能一下看好几个就顺便看，但不要刻意的去记与找，重要的是你的目标就一个，看到别的就算再近也不要浪费精力，只找那一个目标，其它全忘记。就好比面对一堆打乱的线团，里面有好多或长或短的断线，你要想理顺，就不断的找线头，而非线本身。或许儿童模式就恰巧让你不得不只寻找那些线头，反而让注意力更集中。</p></div></div><div id="outline-container-orgheadline28" class="outline-2"><h2 id="orgheadline28"><span class="section-number-2">28</span> 20180319 找与看，点与面</h2><div class="outline-text-2" id="text-28"><p>开始一个一个找，后来一片一片找，再后来一个一个看，再后来一片一片看。</p></div></div><div id="outline-container-orgheadline29" class="outline-2"><h2 id="orgheadline29"><span class="section-number-2">29</span> 20180319 作用</h2><div class="outline-text-2" id="text-29"><p>注意力舒尔特训练不一定能训练你的注意力，但它一定可以在训练中帮助你发现注意力不集中的原因与情况，很多注意力不集中的原因在生活中难以发现，在训练中会渐渐的体悟，训练是对生活的模拟，知道了这些原因，便可以。。。</p></div></div><div id="outline-container-orgheadline30" class="outline-2"><h2 id="orgheadline30"><span class="section-number-2">30</span> 20180320 排除干扰</h2><div class="outline-text-2" id="text-30"><p>非目标数字都是干扰，如果一下子无法容纳下几个数字，那就一个一个的容纳，只看轮到的，没轮到的就当不认识，哪怕是邻近的。</p></div></div><div id="outline-container-orgheadline31" class="outline-2"><h2 id="orgheadline31"><span class="section-number-2">31</span> 20180321 图像</h2><div class="outline-text-2" id="text-31"><p>除了局部法，只看轮到的，还可整体法，不断扫视，维持图像稳定。后一下子点好几个。忘记大小与区间与次序，只顾将图像的内容依次点完。会觉得任何区间的数字都没区别了。一旦你顾及了数字的大小与轮到哪了？这样的事，图像就不稳定了。</p></div></div><div id="outline-container-orgheadline32" class="outline-2"><h2 id="orgheadline32"><span class="section-number-2">32</span> 20180323 全部与局部</h2><div class="outline-text-2" id="text-32"><p>重点不是点到了找到了看到了当前数字，而是保证一直能看到全部数字。</p></div></div><div id="outline-container-orgheadline33" class="outline-2"><h2 id="orgheadline33"><span class="section-number-2">33</span> 20180323 王者风范</h2><div class="outline-text-2" id="text-33"><p>告诉你一个方法，必须看清所有数字，再点下一个，没看清所有看到了下一个也不点。真正的领导是不会被琐事缠身，做事是不会显得很吃力的，当你始终努力卖力的快速去点去记去找去看至多只是个将军，而悠闲地看着全局与手指自动完成的每个小目标，才具王者风范。又回到了以前的起点，你点每个数字时，也应能看到其它的。</p></div></div><div id="outline-container-orgheadline34" class="outline-2"><h2 id="orgheadline34"><span class="section-number-2">34</span> 20180323 真正目标</h2><div class="outline-text-2" id="text-34"><p>你的目标不是看数字，不是点到，不是点对，不是快点，也不是当前的数字，那些只是表象。要做的是能看全，看完，并且尽可能久的维持，能做至此，不点，点错，也无所谓。总之，是先做到看全看完整，做到了后，才有精力顾及对错快慢与是非。所以看开些，放松些，不要过于完美，不要太执着。</p></div></div><div id="outline-container-orgheadline35" class="outline-2"><h2 id="orgheadline35"><span class="section-number-2">35</span> 20180323 整体部分交融</h2><div class="outline-text-2" id="text-35"><p>数字不是你想在哪出现就在哪出现的，所以你目光流转不是为了找数字，而是为了维持图像整体完整，然后接受数字就在它本来所在的位置等着你点到它。每个数字共同组成整体，但每个数字又在到它时不要顾及其它，每个数字的位置与其它的数字位置几乎没有关系，所以不要刻意记忆，缓存，预知，寻找，只要将所有看成一体，并清晰的知道此刻的目标。</p></div></div><div id="outline-container-orgheadline36" class="outline-2"><h2 id="orgheadline36"><span class="section-number-2">36</span> 20180324 *完整目标</h2><div class="outline-text-2" id="text-36"><p>做到两点：一、维持图像整体的稳定。二、清晰地在心中映像要点的数字。简化：在维定的图像中看到清晰的目标。</p></div></div><div id="outline-container-orgheadline37" class="outline-2"><h2 id="orgheadline37"><span class="section-number-2">37</span> 20180324 独立与整体</h2><div class="outline-text-2" id="text-37"><p>总是想从一个数字所在之处找出其相邻的数字与这位置有何联系，甚至通过记忆与缓存去建立这个联系，以便迅速连贯。其实，其实并不是因为你点完了上一个才点到了下一个，若明白了各个数字间没有联系，反而更能将整个舒尔特表做为整体来看待，缓存与记忆与联系无意识间就完成了，根本不用消耗什么精力。独立与整体，这两点并不矛盾。如果给自己练习加一个条件，必须看清所有数字后再落指，就更能体会这点了。</p></div></div><div id="outline-container-orgheadline38" class="outline-2"><h2 id="orgheadline38"><span class="section-number-2">38</span> 20180327 顺便</h2><div class="outline-text-2" id="text-38"><p>练习的不是记忆数字，而是拉伸视幅，数字只是顺便一看。把注意力从数字本身转移到整体范围上来。</p></div></div><div id="outline-container-orgheadline39" class="outline-2"><h2 id="orgheadline39"><span class="section-number-2">39</span> 20180329 思想与目光</h2><div class="outline-text-2" id="text-39"><p>想着数字看，看到就点;而非看着数字想，想到再找。视幅与焦点不应因某个数字而变和转移，应从整体上从固定到清晰。</p></div></div><div id="outline-container-orgheadline40" class="outline-2"><h2 id="orgheadline40"><span class="section-number-2">40</span> 20180403 关系与清空</h2><div class="outline-text-2" id="text-40"><p>这个数字在哪与上一个数字和下一个数字没关系。每个数字是一个新的开始，清空思想后的新起点。</p></div></div><div id="outline-container-orgheadline41" class="outline-2"><h2 id="orgheadline41"><span class="section-number-2">41</span> 20180428 间断</h2><div class="outline-text-2" id="text-41"><p>间断的原因可能是目光未及，但更多的是思维的混乱</p></div></div><div id="outline-container-orgheadline42" class="outline-2"><h2 id="orgheadline42"><span class="section-number-2">42</span> 20180408 本来就在那</h2><div class="outline-text-2" id="text-42"><p>要再次明白，数字本来就是在那的，不是因为你看到找到才在哪的，它不会消失，所以没什么顾及的，踏踏实实的在它本来就在的地方看到它就行了。</p></div></div><div id="outline-container-orgheadline43" class="outline-2"><h2 id="orgheadline43"><span class="section-number-2">43</span> 20180408 看与记</h2><div class="outline-text-2" id="text-43"><p>不要以为是自己记住了数字，其实是你眼晴看着数字在点，是看清了，而非记住了。否则有时你会觉得无从记起，并且由于徒劳的寻找，与反复聚焦本已在那的数字，而显得很疲惫。</p></div></div><div id="outline-container-orgheadline44" class="outline-2"><h2 id="orgheadline44"><span class="section-number-2">44</span> 20180408 以手追眼而非以眼追手</h2></div><div id="outline-container-orgheadline45" class="outline-2"><h2 id="orgheadline45"><span class="section-number-2">45</span> 20180409 焦点</h2><div class="outline-text-2" id="text-45"><p>脑袋里多几个目标，或许是扩大视幅的技巧。每个目标做为视幅的桩，目标尽可能拉远些，没目标，就难焦距。不是无焦，是尽可能多的分布你的焦点。</p></div></div><div id="outline-container-orgheadline46" class="outline-2"><h2 id="orgheadline46"><span class="section-number-2">46</span> 20180409 余光</h2><div class="outline-text-2" id="text-46"><p>眼睛让它自由些，数字不一定总在焦点处出现，大部分内容是在余光下看到的，看到了也没必要聚焦。这才是由点到面的关键。</p></div></div><div id="outline-container-orgheadline47" class="outline-2"><h2 id="orgheadline47"><span class="section-number-2">47</span> 20180409 思想是眼睛的焦点</h2></div><div id="outline-container-orgheadline48" class="outline-2"><h2 id="orgheadline48"><span class="section-number-2">48</span> 20180412 双食指</h2><div class="outline-text-2" id="text-48"><p>尽量让双手的距离靠近，让双手连着桌子，各自以为是一个整体。</p></div></div><div id="outline-container-orgheadline49" class="outline-2"><h2 id="orgheadline49"><span class="section-number-2">49</span> 20180418 直觉</h2><div class="outline-text-2" id="text-49"><p>不要靠反应，靠直觉</p></div></div><div id="outline-container-orgheadline50" class="outline-2"><h2 id="orgheadline50"><span class="section-number-2">50</span> 20180419 *无为</h2><div class="outline-text-2" id="text-50"><p>不反应是最快的反应，不去看是最清晰的看见，不去找是最准确的找到</p></div></div><div id="outline-container-orgheadline51" class="outline-2"><h2 id="orgheadline51"><span class="section-number-2">51</span> 20180425 *形状与意义</h2><div class="outline-text-2" id="text-51"><p>需要的是看，不是找，也不是理解，如果一定要找，那也要明白，找的是形状，而非意义。</p></div></div><div id="outline-container-orgheadline52" class="outline-2"><h2 id="orgheadline52"><span class="section-number-2">52</span> 20180425 *直觉与现状</h2><div class="outline-text-2" id="text-52"><p>不是去"找"下一个"的"数字"，也不是去"记住"还未点的"位置";而是先"清楚"当前目标的"图像"，再"匹配"早已看到的与"形状"相同的图像。最后，不是用手指去依次点每个"正确"的数字，而且直觉的接触所有本来已经这样的图像。不要将理解与记忆加入进来，只有看与形状；没有什何意义与原因，没有判断与控制，只有直觉与现状。</p></div></div><div id="outline-container-orgheadline53" class="outline-2"><h2 id="orgheadline53"><span class="section-number-2">53</span> 20180426 稍安勿燥</h2><div class="outline-text-2" id="text-53"><p>有时候慢也无妨，心态要调整好，接受自己的水平，自然的去看，会减少杂念。</p></div></div><div id="outline-container-orgheadline54" class="outline-2"><h2 id="orgheadline54"><span class="section-number-2">54</span> 20180427 **是看不是找</h2><div class="outline-text-2" id="text-54"><p>转动眼睛不是为了看目标，而且为了扩大视幅。是为了看清所有看到的，以及去看所有没看清的。因为有不清晰的地方，所以转动目光，而非找数字。目光不要聚焦，数字就在清晰当中的时候，不用刻意去找，有时你目光在左上移时，但是因为其它处已清晰，反而能看到所需数字在右下，但不要因此改变目光移向，要习惯这种方式。理想情况，一览无余不转动目光，但视幅是需要练习的。</p></div></div><div id="outline-container-orgheadline55" class="outline-2"><h2 id="orgheadline55"><span class="section-number-2">55</span> 20180427 **思维与目光</h2><div class="outline-text-2" id="text-55"><p>之所以停顿了可能是没看清，但更多应该是思维停止了，要不断的在内心更新自己前进的目标，需要有一个方法拉动思维，比如：假设每一次目标就是一个线头，纠缠不清的乱线只有一个头，你只要拉住它，有可能就能牵出很长，可能一下子消失了，但不断的发现新的线头，就又可能前进一大截，直至整条线，即点完所有数字，而这和你目光转动的原因无关。思维是点，连成线，目光是片，连成面，两者有联系，但不大。所以要做的是一心二用，一则找出整条线，一则看清所有面。如果想妄图快速的找出，那煅炼的不是视觉与注意力，而是反应与运气，原地踏步，难质变。</p></div></div><div id="outline-container-orgheadline56" class="outline-2"><h2 id="orgheadline56"><span class="section-number-2">56</span> 20180427 不看</h2><div class="outline-text-2" id="text-56"><p>原来数字是干扰，不看才是关键。看了会影响头脑中形成清晰的目标，所以注意力，就是抗干扰的能力，能看着其它的东西也不会忘了自己所想的东西。其实不是不看，而是清晰了再看。</p></div></div><div id="outline-container-orgheadline57" class="outline-2"><h2 id="orgheadline57"><span class="section-number-2">57</span> 20180427 专注</h2><div class="outline-text-2" id="text-57"><p>忘记终点，只专心致志于过程</p></div></div><div id="outline-container-orgheadline58" class="outline-2"><h2 id="orgheadline58"><span class="section-number-2">58</span> 20180428 间断</h2><div class="outline-text-2" id="text-58"><p>间断的原因可能是目光未及，但更多的是思维的混乱</p></div></div><div id="outline-container-orgheadline59" class="outline-2"><h2 id="orgheadline59"><span class="section-number-2">59</span> 20180428 思维与视觉</h2><div class="outline-text-2" id="text-59"><p>思维就是心中所期望的，视觉就是目光所至，两者有些关联但要分开不能混肴，否则便成了找与反应。分离思维与视觉的一种感觉是，感觉数字是看到的不是找到的。</p></div></div><div id="outline-container-orgheadline60" class="outline-2"><h2 id="orgheadline60"><span class="section-number-2">60</span> 20180428 清晰与范围</h2><div class="outline-text-2" id="text-60"><p>正方格煅炼视野清晰度，长方格煅炼视幅范围，与快慢无关。</p></div></div><div id="outline-container-orgheadline61" class="outline-2"><h2 id="orgheadline61"><span class="section-number-2">61</span> 20180503**不视而见&lt;-&gt;视而不见</h2><div class="outline-text-2" id="text-61"><p>也不能说不找，只是眼睛的转动并不是在找数字，而是清晰视野。而找，并不在表中，眼前，而是在心中进行，找到后，眼前自然就有了。将心中所寻与眼前所见分开，寻到再匹配，而不要为眼前所见，干扰了心镜，学会不视而见，也要视而不见。</p></div></div><div id="outline-container-orgheadline62" class="outline-2"><h2 id="orgheadline62"><span class="section-number-2">62</span> 20180507 心无旁骛的冲刺</h2><div class="outline-text-2" id="text-62"><p>缩小关注范围，不断更新关注的新区间，在有所关注下，忽略所有其它范围与停止思考，并从区间的开始"冲刺"至结尾，冲刺的同时也更新着区间的范围，从1-9，从10-15，从14-20，从……不断更新，不断冲刺，心无旁骛。冲刺的意思就是不要犹豫，尽快的走完;不断的冲刺就是不断的更新终点，不断的尽快走完;至最终。</p></div></div><div id="outline-container-orgheadline63" class="outline-2"><h2 id="orgheadline63"><span class="section-number-2">63</span> 20180507 懒惰与努力</h2><div class="outline-text-2" id="text-63"><p>要坚持快速的更新头脑中将要点到的数字，用眼睛先看到便是懒惰，不要懒惰，要让思想走在目光的前面。虽说勤能补拙，但勤也可能是隐藏的懒惰，真正的努力不一定是勤奋，勇于为更好的方式探索不一定要用很久的时间，关键重要的时候抓住机会并愿意深入去做，才是更好的努力。</p></div></div><div id="outline-container-orgheadline64" class="outline-2"><h2 id="orgheadline64"><span class="section-number-2">64</span> 20180509 主动</h2><div class="outline-text-2" id="text-64"><p>努力的在头脑中主动成像而非被动看到再成像。</p></div></div><div id="outline-container-orgheadline65" class="outline-2"><h2 id="orgheadline65"><span class="section-number-2">65</span> 20180511 让眼睛解脱，让思维前进</h2><div class="outline-text-2" id="text-65"><p>不是就不看，看到了就立刻去点，不要给眼睛回视和顾及其它的机会，才能避免思维的停滞，决窍是每个数字尽量只认出一次，不要反复，这也能简化训练，减轻眼睛的疲劳。</p></div></div><div id="outline-container-orgheadline66" class="outline-2"><h2 id="orgheadline66"><span class="section-number-2">66</span> 20180511 不知道自己看的见</h2><div class="outline-text-2" id="text-66"><p>很多时候其实是已经看到了看清了但却不相信自己，无形中把无意识慢下来的时间给了没必要的犹豫、思考、分析、重复、默念、记忆……</p></div></div><div id="outline-container-orgheadline67" class="outline-2"><h2 id="orgheadline67"><span class="section-number-2">67</span> 20180513 训练过程</h2><div class="outline-text-2" id="text-67"><p>不知道怎么努力-努力的练（训练量，手速与眼睛）-不知道自己不努力（方式不对）-知道自己不努力（不主动前进，与等待找到）-努力的练（训练思维的集中，以及不去寻找，即训练想到而非找到）-不知道自己努力（无意识的思维前进，直觉，与余光看见）-努力的练（训练思维的前进，训练想到而非找到，与明白早己看见）</p></div></div><div id="outline-container-orgheadline68" class="outline-2"><h2 id="orgheadline68"><span class="section-number-2">68</span> 20180514 看</h2><div class="outline-text-2" id="text-68"><p>目的是看到，而非找到，也非尽快看到。要看的本就存在，所以没找到不担心，找到了也无意义；要看的是数字而非时间，所以慢下了不着急，很快也没什么。不去找也不在乎速度，所以不找而"找"，不快而"快"，还很轻松。</p></div></div><div id="outline-container-orgheadline69" class="outline-2"><h2 id="orgheadline69"><span class="section-number-2">69</span> 20180514 *解脱</h2><div class="outline-text-2" id="text-69"><p>摆脱舒适区训练，其实是克服习惯，只要寻找，就是训练进入了舒适区，寻找了就陷入了，摆脱舒适区，是解脱的关键。过分关注，反而中断了思维，失去了聚焦，然后你会发现不用很费劲也能进步，不用很集中也能看到，不会因视线偶尔离开手机一下而降低了连续，不会因关注周围状况而停顿了思维。不用为了训练，而头晕脑胀。</p></div></div><div id="outline-container-orgheadline70" class="outline-2"><h2 id="orgheadline70"><span class="section-number-2">70</span> 20180514 视线与思维</h2><div class="outline-text-2" id="text-70"><p>视线断了还可以再看，但思维断了却很难恢复。更多的慢，不是因为没看到也不是因为没找到，要明白思维里应该容纳什么。</p></div></div><div id="outline-container-orgheadline71" class="outline-2"><h2 id="orgheadline71"><span class="section-number-2">71</span> 20180514 低阶</h2><div class="outline-text-2" id="text-71"><p>低阶应该练习一下，防止思维过于缓慢。</p></div></div><div id="outline-container-orgheadline72" class="outline-2"><h2 id="orgheadline72"><span class="section-number-2">72</span> 20180515 主动成像的技巧</h2><div class="outline-text-2" id="text-72"><p>先明确好再看，而非上来就看，那样难免被动。</p></div></div><div id="outline-container-orgheadline73" class="outline-2"><h2 id="orgheadline73"><span class="section-number-2">73</span> 20180518 *思维的前进</h2><div class="outline-text-2" id="text-73"><p>已经知道了1-10，就把精力放在11-20，等等，不要停滞思维</p></div></div><div id="outline-container-orgheadline74" class="outline-2"><h2 id="orgheadline74"><span class="section-number-2">74</span> 20180518 **控制</h2><div class="outline-text-2" id="text-74"><p>学会视而不见，才能控制不视而见。视而不见是针对目标之外，不视而见是针对思想所至。这样思想便毫无干扰的前进，眼睛便理所应当地看见，手指会毫无停顿的点到。关键是不是心中所想便不要轻易去看，那会帮你在看前，明确好目标。因为找，是盲目的表现。</p></div></div><div id="outline-container-orgheadline75" class="outline-2"><h2 id="orgheadline75"><span class="section-number-2">75</span> 20180518 无用功</h2><div class="outline-text-2" id="text-75"><p>没清晰成象就不用浪费眼力</p></div></div><div id="outline-container-orgheadline76" class="outline-2"><h2 id="orgheadline76"><span class="section-number-2">76</span> 20180519 珍惜</h2><div class="outline-text-2" id="text-76"><p>当限制了眼睛浏览的次数，大脑与眼便更易集中精力，珍惜每次机会，不会做多余的浏览与思考。</p></div></div><div id="outline-container-orgheadline77" class="outline-2"><h2 id="orgheadline77"><span class="section-number-2">77</span> 20180521 格局</h2><div class="outline-text-2" id="text-77"><p>除了思想除了眼力除了视幅除了反应，格局也大一些</p></div></div><div id="outline-container-orgheadline78" class="outline-2"><h2 id="orgheadline78"><span class="section-number-2">78</span> 20180522 目光无焦点，思维向前走</h2><div class="outline-text-2" id="text-78"><p>不移动目光，不聚焦目光，不是找数字，而在清晰所有数字后，挑出想要的，没有哪片区域是更清晰的，一视同仁。与视幅无太大关系，是分辨率的训练。低阶会容易些，但不是因为数字少，而是数字大，并且头脑不用切换新区间。简言之两点，训练时，时刻注意着让头脑中不断清晰的更新目标，目光不因所见而变，会让注意力不分散。</p></div></div><div id="outline-container-orgheadline79" class="outline-2"><h2 id="orgheadline79"><span class="section-number-2">79</span> 20180522范围</h2><div class="outline-text-2" id="text-79"><p>目光看远些，格局摆大些。</p></div></div><div id="outline-container-orgheadline80" class="outline-2"><h2 id="orgheadline80"><span class="section-number-2">80</span> 20180523*一心多用</h2><div class="outline-text-2" id="text-80"><p>确是一心多用，但不是为了预看，记忆，控制手指，而是为了：一顾及目光尽量广，不聚焦;二顾及思维一直走，不停滞。</p></div></div><div id="outline-container-orgheadline81" class="outline-2"><h2 id="orgheadline81"><span class="section-number-2">81</span> 20180523各自独立</h2><div class="outline-text-2" id="text-81"><p>不要管目光，思维一直走。不要管思维，目光不聚焦。</p></div></div><div id="outline-container-orgheadline82" class="outline-2"><h2 id="orgheadline82"><span class="section-number-2">82</span> 20180523怎样看到</h2><div class="outline-text-2" id="text-82"><p>不是因为找到而看到，而是因为目光所及，思维已至。</p></div></div><div id="outline-container-orgheadline83" class="outline-2"><h2 id="orgheadline83"><span class="section-number-2">83</span> 20180523长远</h2><div class="outline-text-2" id="text-83"><p>目光放宽些，思维走远些</p></div></div><div id="outline-container-orgheadline84" class="outline-2"><h2 id="orgheadline84"><span class="section-number-2">84</span> 20180525 习惯并非速度</h2><div class="outline-text-2" id="text-84"><p>训练的是习惯，而非速度。速度，不是用常规方式训练出来的，而是习惯了某种方式，自然体现的，慢无所谓，只要有助形成新习惯。习惯，是慢慢养成的，不会因为不适应而无法形成;而相反以速度为目标，会让你急躁，疲劳。</p></div></div><div id="outline-container-orgheadline85" class="outline-2"><h2 id="orgheadline85"><span class="section-number-2">85</span> 20180525*是确认而非去看</h2><div class="outline-text-2" id="text-85"><p>训练时，拉大视幅，以能看清所有为目标，而非某一个。怎样证明看清了呢？那就只有有思想中将所有数字走一遍，这也给人一种错觉，误认为是要去去尽快看到那个思想中的数字，于是，聚焦，寻找，记忆，求速度……各种分神的行为&#x2013;实际上，我们只是借助思想，来证明眼睛是确认看到了所有，不能一下子确认所有，就只能一个一个确认，实际眼睛早已有了结果，时间只是用在确认上，确认的速度取决于思维，数字本来就已存在并映入，而不是不是你去主动看才这样的。总之，是要确认看到了它，你要做的只是在思想中明确下一个数字，然后去确认它是否已在眼下，而非主动去找去看它。这样，训练重点才会由找到看，不会过于在意一处无睱旁顾。</p></div></div><div id="outline-container-orgheadline86" class="outline-2"><h2 id="orgheadline86"><span class="section-number-2">86</span> 20180527 *清晰与快</h2><div class="outline-text-2" id="text-86"><p>不要把快做为目标，那会让你慌乱，要把清晰做为目标，有助思维流畅，数字只是衡量是否清晰的方法，而非目标。一旦想找了，或者刻意预看了，就要慌乱了;有一种状态，就是即便当你完全未知将点的数字在哪时，仍然继续充满信心的落指。</p></div></div><div id="outline-container-orgheadline87" class="outline-2"><h2 id="orgheadline87"><span class="section-number-2">87</span> 20180528 关键</h2><div class="outline-text-2" id="text-87"><p>思维的懒惰，再勤奋的动作也无法弥补</p></div></div><div id="outline-container-orgheadline88" class="outline-2"><h2 id="orgheadline88"><span class="section-number-2">88</span> 20180531 **追逐与捕捉</h2><div class="outline-text-2" id="text-88"><p>记住：并非眼等手，而是手追眼;是思维牵着目光走，而非目光被手指拖滞。目光的重点是思维，而非手指，点快点慢点对点错都无关紧要，并非一定能点到，但是眼睛要捕捉到思维。如果实在影响视线干扰思维，就先把手拿开。需要视而不见的除了无关的数字，还有手指。</p></div></div><div id="outline-container-orgheadline89" class="outline-2"><h2 id="orgheadline89"><span class="section-number-2">89</span> 20180531 自信</h2><div class="outline-text-2" id="text-89"><p>大胆地往远看，不要留恋已确定的。你的目标不是固定的一处，而是是看遍所有。</p></div></div><div id="outline-container-orgheadline90" class="outline-2"><h2 id="orgheadline90"><span class="section-number-2">90</span> 20180601 习惯</h2><div class="outline-text-2" id="text-90"><p>习惯是奇特的现象，既能让你不用思考的执行复杂的行动，也能你不得不专门分心去改变经常分心的习惯。</p></div></div><div id="outline-container-orgheadline91" class="outline-2"><h2 id="orgheadline91"><span class="section-number-2">91</span> 20180601 限制</h2><div class="outline-text-2" id="text-91"><p>让目光摆脱手指的束缚，让思维走在目光的前面，再被目光超越。</p></div></div><div id="outline-container-orgheadline92" class="outline-2"><h2 id="orgheadline92"><span class="section-number-2">92</span> 20180605 **切换与敏感度</h2><div class="outline-text-2" id="text-92"><p>切换和数字敏感都是需时间的，到一定程度要分开辨别与训练不混肴，有助提升。比如，想训练敏感度，那么在每段区间结束后，可停一下准备好视线，再立即用最快的速度完成下个区间，去除切换后二者的差距就是敏感度的差距，尽量缩小不同区间的这个差距;同理，训练切换灵活，则分离出数字敏感度的时间，另有类似的手段，比如，根据当前敏感度，以最差的敏感度做为两个数字间的间隔参考，放慢点数字的速度到合适的节奏，然后在这个速度上，尽量让思维连续以致每个数字点的速度尽量均匀。总之，要快就分区间的快，要慢就均匀的慢，各个击破，要比混肴两者不分彼此的训练更具确定性。到一定程度，就能两者同时兼顾，即不同区间的长度可以根据速度的均匀度任意轻松调整。当然，这要有一定的视幅基础，其实，这样看来，初学者低阶有助训练敏感度，高阶有助训练切换。</p></div></div><div id="outline-container-orgheadline93" class="outline-2"><h2 id="orgheadline93"><span class="section-number-2">93</span> 20180605 阶段总结</h2><div class="outline-text-2" id="text-93"><p>忽略手指，推进思维，目光放宽</p></div></div><div id="outline-container-orgheadline94" class="outline-2"><h2 id="orgheadline94"><span class="section-number-2">94</span> 20180605 预看</h2><div class="outline-text-2" id="text-94"><p>其实从某个角度说，不存在预先看，眼睛一直向前，看完就是看完了。预看则意味着记忆，记忆是因为眼不及手而等手，导致注意力从眼转到手上了。若是纯粹煅炼注意力，则几乎是无记忆的，眼睛一直看完，关注的只是眼睛跟着思维，手会紧跟着自然点完的，手眼差距导致的缓存量，其实很小。</p></div></div><div id="outline-container-orgheadline95" class="outline-2"><h2 id="orgheadline95"><span class="section-number-2">95</span> 20180606 清除</h2><div class="outline-text-2" id="text-95"><p>一边点，一边在思维中清除掉已过的数字。</p></div></div><div id="outline-container-orgheadline96" class="outline-2"><h2 id="orgheadline96"><span class="section-number-2">96</span> 20180607 总结：思维所至，目光所及，手指所点</h2><div class="outline-text-2" id="text-96"><p>是：视幅放广不聚焦，推进思维不停滞，忘记已有不留恋，均衡各范围数字的敏感度，缩短各数字范围间的切换，凭直觉抓住瞬间，目光精准不盲目，一视同仁;非：手指所点，目光所见，不要默念，不要寻找，不要记忆，不要聚焦，不要看手…结：0。</p></div></div><div id="outline-container-orgheadline97" class="outline-2"><h2 id="orgheadline97"><span class="section-number-2">97</span> 20180608 **瞬间</h2><div class="outline-text-2" id="text-97"><p>其实本来你早已看清所有，只是没抓住看清的一瞬，把时间浪费在反复的确认与寻找，你以为是找到了，找对了，其实它们只是更早被断开的那一瞬的结果，抓住所有的瞬间便无疲劳与压力的困扰，也无须关注怎样对待那些数字，所以你的目标不是看清哪个数字，而是抓住看清数字的每一个瞬间，当你能自由的抓住那个瞬间，其余时间你想做什么便做什么，你有大把的时间与精力。</p></div></div><div id="outline-container-orgheadline98" class="outline-2"><h2 id="orgheadline98"><span class="section-number-2">98</span> 20180608 **专注</h2><div class="outline-text-2" id="text-98"><p>放空你的思维，减少想要进步的压力与顾虑。因为只要你的头脑被清空，你的目标才能快速清晰不被干扰的映入。这与缓存区间以练习敏感度不同，是练习你的专注。敏感度是通过对目标的清晰化，来强制掩盖掉干扰，而放空是让你不去关注外物让干扰自己消失。外物包括例如刻意去记住位置，熟悉区间，余光，预看，拉广视幅，双手落，推进思维，等可能会提升速度的手段，并不是这些不对，但毕竟不是目标。真正的目标是心无旁骛的直觉，直正专注后会自然那样去做，而非做到那样。如同你用尽所能去描述什么是酒，却失去了品尝的机会，但无论你描述的多么准确，也不如一无所知的小孩轻品一口</p></div></div><div id="outline-container-orgheadline99" class="outline-2"><h2 id="orgheadline99"><span class="section-number-2">99</span> 20180608 无为</h2><div class="outline-text-2" id="text-99"><p>开始会有你不想关注的总是出现，然后你知道了应该关注哪些开始进步，之后发现只需关注一样心无旁骛，最后什么也不用关注顺其自然。</p></div></div><div id="outline-container-orgheadline100" class="outline-2"><h2 id="orgheadline100"><span class="section-number-2">100</span> 20180612 勿错过</h2><div class="outline-text-2" id="text-100"><p>目标明确，目光精准，不要总是错过，看过就应看见，看见就要看清，，不要盲目扫视，浪费多余的目光。</p></div></div><div id="outline-container-orgheadline101" class="outline-2"><h2 id="orgheadline101"><span class="section-number-2">101</span> 20180626 无意义的图像</h2><div class="outline-text-2" id="text-101"><p>看到的是图像，不是数字。心中的是映像，而非含义。是心中图像更替，而非头脑中依次前进的数字。</p></div></div><div id="outline-container-orgheadline102" class="outline-2"><h2 id="orgheadline102"><span class="section-number-2">102</span> 20180627 *看见与认识</h2><div class="outline-text-2" id="text-102"><p>看见数字应该是在认出数字之前，只需知道看见，不用非要认出。</p></div></div><div id="outline-container-orgheadline103" class="outline-2"><h2 id="orgheadline103"><span class="section-number-2">103</span> 20180627 忘记</h2><div class="outline-text-2" id="text-103"><p>忘记速度，忘记位置，忘记时间，忘记含义。</p></div></div><div id="outline-container-orgheadline104" class="outline-2"><h2 id="orgheadline104"><span class="section-number-2">104</span> 20180706 准确</h2><div class="outline-text-2" id="text-104"><p>速度不是均匀的，确定时就快些，不确定时就稳些</p></div></div><div id="outline-container-orgheadline105" class="outline-2"><h2 id="orgheadline105"><span class="section-number-2">105</span> 20180713 眼为先</h2><div class="outline-text-2" id="text-105"><p>其实脑袋反应再快，也不及眼睛，往往是先看到，再认出。尤其是困倦时你会明显觉得，看图片比认文字容易得多。认出不等于理解，只看也不等于不理解。将数字当做图像来看吧。</p></div></div><div id="outline-container-orgheadline106" class="outline-2"><h2 id="orgheadline106"><span class="section-number-2">106</span> 20180717 原因</h2><div class="outline-text-2" id="text-106"><p>点到哪个数字就是哪个数字没有原因，眼睛不做无意义的转动，看不到再转。</p></div></div><div id="outline-container-orgheadline107" class="outline-2"><h2 id="orgheadline107"><span class="section-number-2">107</span> 20180708 眼睛与图形</h2><div class="outline-text-2" id="text-107"><p>眼睛不要乱转，看清楚了再点，不必匀速;每个数字只是图像，都是开始，没有联系。</p></div></div><div id="outline-container-orgheadline108" class="outline-2"><h2 id="orgheadline108"><span class="section-number-2">108</span> 20180725 *整体非局部，图像非意义</h2><div class="outline-text-2" id="text-108"><p>将表看做整体，首先要知道表包含数字，而非数字构成表。好比人脸是表，数字是五官。是先识别出脸再辨认出五官，而非直接去辨认五官再认出面孔。你面对的每一张表都是不同的"人"。目标是识别出表而非辨认其数字，就好比是要认识一个人而非去辨认五官。因为你早知的是每一张面孔都有五官，却不可能知道面对的五官对应怎样的面孔。你要识别的是已知的数字以怎样的方式构成表，好比识别已有的五官怎样构成一张脸，不要再拘泥于细节。</p></div></div><div id="outline-container-orgheadline109" class="outline-2"><h2 id="orgheadline109"><span class="section-number-2">109</span> 20180725 *起点</h2><div class="outline-text-2" id="text-109"><p>数字无先后，一视同仁，才是正确的起点。决窍是忘记已有与临近，这样就不必恐慌与担心记不住，即已忘，何必记，不断重新开始即可。</p></div></div><div id="outline-container-orgheadline110" class="outline-2"><h2 id="orgheadline110"><span class="section-number-2">110</span> 20180725 *位置</h2><div class="outline-text-2" id="text-110"><p>位置在哪并不重要，重要的是哪里都能看到。</p></div></div><div id="outline-container-orgheadline111" class="outline-2"><h2 id="orgheadline111"><span class="section-number-2">111</span> 20180726 忘与记</h2><div class="outline-text-2" id="text-111"><p>学会忘记点过的，不要记忆没点的。</p></div></div><div id="outline-container-orgheadline112" class="outline-2"><h2 id="orgheadline112"><span class="section-number-2">112</span> 20180726 大视角</h2><div class="outline-text-2" id="text-112"><p>你看到的不是数字，而是表中的数字</p></div></div><div id="outline-container-orgheadline113" class="outline-2"><h2 id="orgheadline113"><span class="section-number-2">113</span> 20180802 克服恐惧</h2><div class="outline-text-2" id="text-113"><p>点多了，就不愿/不敢再往下想了，顾及前面，怕失去什么。实际上，克服这种恐惧，大胆地忘记。</p></div></div><div id="outline-container-orgheadline114" class="outline-2"><h2 id="orgheadline114"><span class="section-number-2">114</span> 20180803 推动思维</h2><div class="outline-text-2" id="text-114"><p>其实到一定程度后视幅已不是问题，问题在于推动思维像看待1-9一样看待其它数字。不能一步到位，但是可一点点来，只要相信自己的能力，将关注点在切换，而非担心视幅、反应与记忆即可。换一句话，关注点是：慢的原因主要是切换慢，而非看得慢，就不用分心了。眼力已经够了，需要的是脑力。</p></div></div><div id="outline-container-orgheadline115" class="outline-2"><h2 id="orgheadline115"><span class="section-number-2">115</span> 20180807 专一</h2><div class="outline-text-2" id="text-115"><p>只看数字不顾次序与快慢</p></div></div><div id="outline-container-orgheadline116" class="outline-2"><h2 id="orgheadline116"><span class="section-number-2">116</span> 20180828 顺便缓存附近</h2><div class="outline-text-2" id="text-116"><p>不看附近的，只看目标。看到附近的，只是顺便。能记就记不要太远，尽量集中于附近几个，分心则忽略。</p></div></div><div id="outline-container-orgheadline117" class="outline-2"><h2 id="orgheadline117"><span class="section-number-2">117</span> 20180828 区间的训练</h2><div class="outline-text-2" id="text-117"><p>先不求整体快，先一个区间快，然后可顿一会，再下一个区间，然后减少区间间隔合并成一个区间。比如1-25，就1-9,10-20,20-25，分别熟练了区间后，再然后1-20，20-25，等等。一个区间，先在头脑中清晰了（并非眼睛找到），再点，不是均匀速度，视头脑状态，不清晰则慢点，清晰则快点。</p></div></div><div id="outline-container-orgheadline118" class="outline-2"><h2 id="orgheadline118"><span class="section-number-2">118</span> 20180829 只有一个下一个</h2><div class="outline-text-2" id="text-118"><p>找很多的数字，但每次只找一个下一个</p></div></div><div id="outline-container-orgheadline119" class="outline-2"><h2 id="orgheadline119"><span class="section-number-2">119</span> 20180906 一闪而过</h2><div class="outline-text-2" id="text-119"><p>不要记忆，即使快点到了，也不要记忆，只需重复的看，只看点到的，看是一瞬间的事情，为避免记忆，尝试一闪而过，不断的一闪而过。所谓预看、缓存，是熟练了这个一闪而过的前提下，用多余的精力无意识中做的。在此前，所需的只是：不断地只明确要看的，用一闪而过的方式瞥见，而非找或记或到哪个位次。</p></div></div><div id="outline-container-orgheadline120" class="outline-2"><h2 id="orgheadline120"><span class="section-number-2">120</span> 20180912 心</h2><div class="outline-text-2" id="text-120"><p>将数字放在心中去看，比找到的更可靠。看到的是干扰，找是干扰的结果，不被看到的迷惑，维持心中的不变，自然会映入眼帘。</p></div></div><div id="outline-container-orgheadline121" class="outline-2"><h2 id="orgheadline121"><span class="section-number-2">121</span> 20180915 专一</h2><div class="outline-text-2" id="text-121"><p>只想要点的数字在不找的情况下在哪看见，不考虑次序。每次都只想一个数字，同时确定是否在视线中。不中断思维，视线自然就是思维的速度。专注思维，便不会出现节奏脱节的情况。</p></div></div><div id="outline-container-orgheadline122" class="outline-2"><h2 id="orgheadline122"><span class="section-number-2">122</span> 20180915 *流畅与速度</h2><div class="outline-text-2" id="text-122"><p>之所以找，是因为抛弃了思维，目光盲目的不定，会让你更慌乱，表面是看不到，实质是没想看。如狂风吹乱了视线，即便知道要看的，却没法控制失控的视线。没有表就训练思维的推进速度与清晰，有了表就训练确定数字是在思维的笼罩下（即数字在视线中，而不去看数字），不要在意落指的迟缓与反应迟钝，也并不存在该往哪看的问题。总结起来就是：慌乱源于盲目的视线，盲目源于求快的心情，过于在意速度会让你忽略思维，可以慢一点，让视线处于平稳的范围内，以便思维笼罩，流畅比速度更关键，让思维清澈，并找到适合你的角度，这需要习惯与适应。</p></div></div><div id="outline-container-orgheadline123" class="outline-2"><h2 id="orgheadline123"><span class="section-number-2">123</span> 20180920 从熟悉到陌生</h2><div class="outline-text-2" id="text-123"><p>看多少？ 1-9熟悉就一次全看，9以后不熟就一次少看些。不是要尽量做到一次能看很多，更关键的应该是一次能只看一个。做到，无论1-9还是其它，一次只看一个。熟悉就是干扰，可以考虑训练熟悉度，然后训练让熟悉变成与陌生一样。总结四个字：一视同仁。</p></div></div><div id="outline-container-orgheadline124" class="outline-2"><h2 id="orgheadline124"><span class="section-number-2">124</span> 20180920 视幅与角度</h2><div class="outline-text-2" id="text-124"><p>不是训练反应、熟练，也不是训练速度、记忆，而是训练与调整最适合的视幅与角度。</p></div></div><div id="outline-container-orgheadline125" class="outline-2"><h2 id="orgheadline125"><span class="section-number-2">125</span> 20180920 过程</h2><div class="outline-text-2" id="text-125"><p>从视线引导思维（视而不见，思维被视线牵引着走，需敏锐的目光，易盲目），到思维引导视线（不视而见，只想就行了不用在意看，需明确的目标，易停顿），到视线决定思维（所见即所想，想也不用了数字就在那，需调整好视野，不稳定），到思维就是视线（所想即所见，还未至）。</p></div></div><div id="outline-container-orgheadline126" class="outline-2"><h2 id="orgheadline126"><span class="section-number-2">126</span> 20180921 *过滤与分辨</h2><div class="outline-text-2" id="text-126"><p>是要看目标是否在视野中，而非分辨看到的是不是目标。是要训练注意力，而非反应速度。你分辨了意味着你要同时顾及多个数字，你在过滤则只需关注一点，两者是不用级别的消耗。每个人的反应是差不多的，差异在于将注意力集中在哪个方面。精力集中的方向错了，不但慢，而且累。将不好的习惯停止。</p></div></div><div id="outline-container-orgheadline127" class="outline-2"><h2 id="orgheadline127"><span class="section-number-2">127</span> 20180926 规律外的规律</h2><div class="outline-text-2" id="text-127"><p>在状态好的时候练，状态不好就不练。在可以练的时候练，不该训练就别练。充份利用好自己的每一秒，才是正确的注意力训练，才会有更好的成就！</p></div></div><div id="outline-container-orgheadline128" class="outline-2"><h2 id="orgheadline128"><span class="section-number-2">128</span> 20180928 与数字捉迷藏</h2><div class="outline-text-2" id="text-128"><p>集中精力的一个技巧，就是先明白你的目标，然后从众多数字中看到隐藏于角落的那个，期间不考虑其它，你会逐渐发现，你的注意力无形但清晰的助你自然的去看那个下一个唯一的点。熟悉了，会感觉，它不是躲在角落了，而是清晰无比。所谓预知，也许是更熟练的情况下同时明确多个目标，然后一下子，而非依次看到。</p></div></div><div id="outline-container-orgheadline129" class="outline-2"><h2 id="orgheadline129"><span class="section-number-2">129</span> 20180928 牵引还是推进？</h2><div class="outline-text-2" id="text-129"><p>再一次感觉到，不是思维让目标清楚，不是推进自己的思维前进。而是己知什么是目标后，用眼睛去看它牵引着思维前进，先牵引思维，然后随着思维滑行，然后再牵引…期间你的思维是空明自然的，而非努力成像，或费劲的寻找。换句话说，是在无意识下，目光牵引着思维而非思维推进目光，神奇的状态。</p></div></div><div id="outline-container-orgheadline130" class="outline-2"><h2 id="orgheadline130"><span class="section-number-2">130</span> 20180930 牵引与推进</h2><div class="outline-text-2" id="text-130"><p>对已经映在心中的目标（如1-10），思维会自动推进视线集中看到，这个时间久会体会到;对于不够熟练的，不是想出目标，而是根本不想目标的样子，是只知道有目标就看了，然后看到目标，然后知道目标是什么，然后再点。否则视线会变成扫视，而非笼罩。换句话说，其实你能控制思维的清晰与模糊，足够清晰会推进视线，很清晰会干扰视线，若有若无视线会牵引你，完全没有则会停滞。毕竟人的大脑应是根据线索与提示的被动触发反应，完全主动推进还是困难些。不该想的时候（比如你想知道xx数字在哪，长什么样）就不要想（没有人回答你即找，最好的答案是看到即非找），掌握好节奏，可以通过控制思维的清晰程度来做到，或推进视线（心中有数），或牵引思维（装作不知），避免干扰（不勉强找与想），不要停滞（不能放弃）。</p></div></div><div id="outline-container-orgheadline131" class="outline-2"><h2 id="orgheadline131"><span class="section-number-2">131</span> 20181005 高阶与低阶</h2><div class="outline-text-2" id="text-131"><p>低阶是练视读而非反应，高阶是练视幅而非寻找。低阶的误区是音读，走出误区的迹象是感觉数字无先后；高阶的误区是记忆，走出误区的迹象是感觉数字是自然出现而非看到的。两个难度一样，低阶不稳固容易被高阶影响。两者共同的误区是速度，训练的重点是感觉，速度只是结果。</p></div></div><div id="outline-container-orgheadline132" class="outline-2"><h2 id="orgheadline132"><span class="section-number-2">132</span> 20181009 疯狂模式</h2><div class="outline-text-2" id="text-132"><p>只需看清再点，不需要快看。看清是从全局角度非聚焦。</p></div></div><div id="outline-container-orgheadline133" class="outline-2"><h2 id="orgheadline133"><span class="section-number-2">133</span> 20181009 过程</h2><div class="outline-text-2" id="text-133"><p>速度只是结果的反映，并非过程。忘记数字，训练清晰；忘记速度快慢，训练清晰度调节；将以上状态尽可能延长与掌握。这样你的目光便不会因数字而流转，不因速度与进度而慌乱，而是在为寻找一个能够最快俯瞰全局的位置，闲庭若步。征兆就是你点的数字不是因提前看到或记忆、寻找，而是因你觉得它本来就在那。当想要寻找、以及想了解点了多少时，要告诉自己，那不重要;多舍弃几次没有必要的速度，会获得比速度更多的本已存在。</p></div></div><div id="outline-container-orgheadline134" class="outline-2"><h2 id="orgheadline134"><span class="section-number-2">134</span> 20181011 噪音</h2><div class="outline-text-2" id="text-134"><p>疯狂模式是让你训练避免数字的干扰。</p></div></div><div id="outline-container-orgheadline135" class="outline-2"><h2 id="orgheadline135"><span class="section-number-2">135</span> 20181012*疯狂</h2><div class="outline-text-2" id="text-135"><p>每一次都是新开始，不要明确下一个，不要记住上一个，不要在意哪里变化到哪里，要的只是忘记所有，只看当前，不变的也只是当下，花费的时间用在清空，而非寻找。看，只是动作。有个直观的技巧是：不数数，不默念，轮到某个数字后不是找，而是做4件事：1.记住当前的2.清空前面和后面的3.只看记住的4.忘记记住的是什么后立即点。或者简单点，除了当前的数字是真的，其它数字若非当下则全是不存在的假象！假象无需关注。你专注当下，当下会以被拥有回报于你；你分心于它物，本该拥有的当下会稍纵即逝。总结：其实就是在所有假的数字中，点出真的那个，即当下。</p></div></div><div id="outline-container-orgheadline136" class="outline-2"><h2 id="orgheadline136"><span class="section-number-2">136</span> 20181012*看、点</h2><div class="outline-text-2" id="text-136"><p>最重要的是先看到，什么都不想，想前赶紧点完。时刻记得自己是在干什么，不是快点，不是名次不是速度而只是点，看了就点看了就点。点点点，只是点而以。先慢点，适应这个事情。训练的方式就是忘记一切，不在意一切，只进行两个动作，看到-立即点-看到-立即点…只训练这两个动作，以及其余什么都不做不想不顾（甚至中间有人叫你你可以抬头和他说会话，然后低头继续这个训练;或者不是这个状态了就停下来调整一下继续点），直至习惯。总之，确保自己只做两件事：看、点，其余什么都不做。</p></div></div><div id="outline-container-orgheadline137" class="outline-2"><h2 id="orgheadline137"><span class="section-number-2">137</span> 20181013 *真假</h2><div class="outline-text-2" id="text-137"><p>你看见的不是哪个数字，无论有多少个数字是什么数字，你看见的不是数字，只有两种事物：真的（当前该点的），假的（当前不该点的）。区别只在于真的只有一个，假的可能有任意多，但正因如此，直相更突出，所以，改变习惯，不再对真相视而不见，无端犹豫。再简化一点，你看到的数字应该只有一个。</p></div></div><div id="outline-container-orgheadline138" class="outline-2"><h2 id="orgheadline138"><span class="section-number-2">138</span> 20181014是与非</h2><div class="outline-text-2" id="text-138"><p>是就点，甚至不考虑是什么。那就是注意力。</p></div></div><div id="outline-container-orgheadline139" class="outline-2"><h2 id="orgheadline139"><span class="section-number-2">139</span> 20181017 不重要</h2><div class="outline-text-2" id="text-139"><p>感受目光抓住思维的感觉，任数字如何跳跃，它还是在哪。其它都不重要。</p></div></div><div id="outline-container-orgheadline140" class="outline-2"><h2 id="orgheadline140"><span class="section-number-2">140</span> 20181017 *排除干扰</h2><div class="outline-text-2" id="text-140"><p>主要是排除两种干扰：其它数字的干扰；心中惦记事情的干扰。前者需忘记和去掉每个数字的联系，每次记住只有一个数字，其它无关，只需从中找出唯一的真，而不用关心数字是什么，在哪里，代表什么。后者需维持那种持续的稳定的心态不去考虑速度、进度、视幅，每次以全新的状态放空思维并寻找真相，并一真持续下去。</p></div></div><div id="outline-container-orgheadline141" class="outline-2"><h2 id="orgheadline141"><span class="section-number-2">141</span> 20181018 无视变化</h2><div class="outline-text-2" id="text-141"><p>维持那种不担心变化的心态，变的是虚假，不变的才是当下。</p></div></div><div id="outline-container-orgheadline142" class="outline-2"><h2 id="orgheadline142"><span class="section-number-2">142</span> 20181018 **调节平衡</h2><div class="outline-text-2" id="text-142"><p>当练习到一定程度，视幅，反应，速度，准确，结果，上一个，下一个，进度，连续性等等已不是重点，重点的是每次出现你所担心的失误，或要出现时的调节。调节不怕一切，当你面对着舒尔特，你不是在看在点在想，而是不断的感受现状，并根据现状做相应的调节，不是控制，而是接受，接受了有便有了无，接受了无也会出现有，处于这种不断摆动的平衡态，没有绝对的静止，但一切事物一定都有静止的时候，所以： 不怕看不见，不怕变化，不怕点错，不怕维持不了，不怕慢下来，当要怕什么的时候，就要学会不怕它，没什么可怕的。</p></div></div><div id="outline-container-orgheadline143" class="outline-2"><h2 id="orgheadline143"><span class="section-number-2">143</span> 20181018 *面对</h2><div class="outline-text-2" id="text-143"><p>你面对的不是你看到的，而是你的心。不要被看到的，覆盖了你的心。所以你训练的不是所训练的，而是你的心。每当你遇见了，要告诉自己：什么也没有。不断重复着这样的过程，让人痴迷，再清醒…</p></div></div><div id="outline-container-orgheadline144" class="outline-2"><h2 id="orgheadline144"><span class="section-number-2">144</span> 20181021 打地鼠</h2><div class="outline-text-2" id="text-144"><p>图像输入非文字输入，图像在与你捉迷藏，找隐藏的那个，如同打地鼠</p></div></div><div id="outline-container-orgheadline145" class="outline-2"><h2 id="orgheadline145"><span class="section-number-2">145</span> 20181102 稳定</h2><div class="outline-text-2" id="text-145"><p>是维持视线的稳定，而非因看到了什么而过分聚焦。聚焦只是局部的清晰，稳定是全局的清晰。</p></div></div><div id="outline-container-orgheadline146" class="outline-2"><h2 id="orgheadline146"><span class="section-number-2">146</span> 20181107 稳定与清晰</h2><div class="outline-text-2" id="text-146"><p>将视线的稳定与辩认的精度分离。即，不要被数字影响了视线，图像输入而非数字输入。看数字不影响视野的整体图像，视觉是整体图像不影响你看每个数字。两者不一定同时达到，也不一定同时达不到。</p></div></div><div id="outline-container-orgheadline147" class="outline-2"><h2 id="orgheadline147"><span class="section-number-2">147</span> 20181114 提高效率的仪式</h2><div class="outline-text-2" id="text-147"><p>不该做时想都别想，可以做时先想一会再做。你现在想什么，就大致决定了你现在状态怎样，你在某个时段想什么，就代表这个时段内你是怎样的状态。分配自己的时间和精力，从某个程度来说，也算是分配自己的思想，控制自己的行为，不如先掌握思想。</p></div></div><div id="outline-container-orgheadline148" class="outline-2"><h2 id="orgheadline148"><span class="section-number-2">148</span> 20181116 只关注不断更新的起点</h2><div class="outline-text-2" id="text-148"><p>不断地清晰与更新起点。就是当前。至少点到起点即可，其它后面的看到了就点，看不到不是起点也不管。而前面的，因为刚更新了起点，所以根本忽略。只关注起点，便不会瞻前顾后，并且不过分聚焦。更新起点，能保证前进。因为只有一个起点，所以不是的就不看，保证能不被相关数字干扰与聚焦；不要因为一下看到了好几个，就停止更新起点，看到的除了起点其它只是幸运。只要是看到了起点，就更新成下一个起点，若看到了多个，只是简化了过程，节省了额外的更新而“跳跃”到后面的起点，实质仍是更新。这里的更新，实际就是明确内心仅有的目标，以及看到了它。</p></div></div><div id="outline-container-orgheadline149" class="outline-2"><h2 id="orgheadline149"><span class="section-number-2">149</span> 20181117 专注</h2><div class="outline-text-2" id="text-149"><p>有时候你不在意快慢，即便慢到一定程度，快也会到来，因为世界是平衡的。所以不要刻意去缓存更多的数字（干扰）。仔细想想，体会一下，你此刻是不是真的心中只有那一个数字？是的话，你的眼睛会自然看到它。除了那个数字，还有什么？是不是担心若仅有那个数字，会找不着它？想多看几个？是的话，你真的会找不着它。</p></div></div><div id="outline-container-orgheadline150" class="outline-2"><h2 id="orgheadline150"><span class="section-number-2">150</span> 20181119 图像稳定</h2><div class="outline-text-2" id="text-150"><p>不是敏感度，是视图的稳定性。被手干扰到不清晰前点完它。</p></div></div><div id="outline-container-orgheadline151" class="outline-2"><h2 id="orgheadline151"><span class="section-number-2">151</span> 20181214 静止的图像</h2><div class="outline-text-2" id="text-151"><p>图像是静止的，余光理所应当的看见，一旦聚焦了就不静止了。</p></div></div><div id="outline-container-orgheadline152" class="outline-2"><h2 id="orgheadline152"><span class="section-number-2">152</span> 20181221看与认，找与配</h2><div class="outline-text-2" id="text-152"><p>数字不是认出的，是看见的。是匹配到的，不是找的。所以感觉点到的数字并不该是附近连续就快，而是随机的快。可能间隔很远却很快，间隔很近却很慢。当视幅稳定清晰后，不应存在远与近。</p></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;
&amp;#x2014;
layout: posts
title: 2018年舒尔特数字表训练总结&amp;#x2013;心路历程
categories: [categories, study, misc]
comments: true
&amp;#x2014;
#+END_HTML
&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://0.0.0.0:4000/2019/09/29/schulte_table_2017_ext/"/>
    <id>http://0.0.0.0:4000/2019/09/29/schulte_table_2017_ext/</id>
    <published>2019-09-28T16:00:00.000Z</published>
    <updated>2019-10-22T08:07:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2014;layout: poststitle: 2017年舒尔特数字表训练补充&#x2013;遗漏的记录categories: [categories, study, misc]comments: true&#x2014;#+END_HTML</p><div id="table-of-contents"><h2>&#30446;&#24405;</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 20170713 去除关联</a></li><li><a href="#orgheadline2">2. 20170714 缓存</a></li><li><a href="#orgheadline3">3. 20170721 面</a></li><li><a href="#orgheadline4">4. 20170816 变化</a></li><li><a href="#orgheadline5">5. 20170828 忘记</a></li><li><a href="#orgheadline6">6. 20170908 勇往直前</a></li><li><a href="#orgheadline7">7. 20170908排除杂念</a></li><li><a href="#orgheadline8">8. 20170915 整体看，不要记忆</a></li><li><a href="#orgheadline9">9. 20170915 看与找</a></li><li><a href="#orgheadline10">10. 20171012 居高临下</a></li><li><a href="#orgheadline11">11. 20171013关键</a></li><li><a href="#orgheadline12">12. 20171013前进</a></li><li><a href="#orgheadline13">13. 20170916 宁慢勿错</a></li><li><a href="#orgheadline14">14. 20171020数字的敏感度</a></li><li><a href="#orgheadline15">15. 20171021不要反应不怕点错</a></li><li><a href="#orgheadline16">16. 20171022 奇迹</a></li><li><a href="#orgheadline17">17. 20171024 前后</a></li><li><a href="#orgheadline18">18. 20171027 看与找</a></li><li><a href="#orgheadline19">19. 20171031 直觉</a></li><li><a href="#orgheadline20">20. 20171031 自由</a></li><li><a href="#orgheadline21">21. 20171106 一闪而过</a></li><li><a href="#orgheadline22">22. 20171108 点的技巧</a></li><li><a href="#orgheadline23">23. 20171110 顺序</a></li><li><a href="#orgheadline24">24. 20171110 阅读的乐趣</a></li><li><a href="#orgheadline25">25. 20171213 训练重点</a></li><li><a href="#orgheadline26">26. 20171214 心态</a></li></ul></div></div><p>补充一下2017的舒尔特训练过程，每一年会有一个集中的汇总。</p><p>这里是对已经发布出去的 <code>2017年舒尔特数字表训练总结--挣扎在路上</code> 的一些遗漏记录的补充。</p><p>后续也将继续将相关的内容汇总出来。</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 20170713 去除关联</h2><div class="outline-text-2" id="text-1"><p>想象着如果每点一个数字就换一幅图，这样便去除了关联</p></div></div><div id="outline-container-orgheadline2" class="outline-2"><h2 id="orgheadline2"><span class="section-number-2">2</span> 20170714 缓存</h2><div class="outline-text-2" id="text-2"><p>不用刻意分离每个数字，有时一下缓存到几个就缓存上，如1-9，有时找不到就一个数字自成一体，只要将开始放在每一段的第一个就行，不用每个数字都是开始，顺其自然地切換开始，忽快忽慢至匀速。</p></div></div><div id="outline-container-orgheadline3" class="outline-2"><h2 id="orgheadline3"><span class="section-number-2">3</span> 20170721 面</h2><div class="outline-text-2" id="text-3"><p>即便不得不寻找，也不要把视野只限制在一个点，每次搜索的单位由点变为面</p></div></div><div id="outline-container-orgheadline4" class="outline-2"><h2 id="orgheadline4"><span class="section-number-2">4</span> 20170816 变化</h2><div class="outline-text-2" id="text-4"><p>想像着点每个数字的同时，表格也刷新不同的序列，而非不动，这样才反应出看的速度</p></div></div><div id="outline-container-orgheadline5" class="outline-2"><h2 id="orgheadline5"><span class="section-number-2">5</span> 20170828 忘记</h2><div class="outline-text-2" id="text-5"><p>学会不断忘记，不断重新开始，不考虑当前进度，所有数字一视同仁，比如10以内的数字，应当与其它的一样速度才对，不因为超过10而减慢，否则便是有了杂念</p></div></div><div id="outline-container-orgheadline6" class="outline-2"><h2 id="orgheadline6"><span class="section-number-2">6</span> 20170908 勇往直前</h2><div class="outline-text-2" id="text-6"><p>其实不是慢，而是没有忘记点过数字的习惯，尝试着训练将点过的数字抛弃，实际是将看过的抛弃，看过了就看下一个，不用管点没点到。其实开始自然手指会跟上眼睛的，而且眼睛是顺序的看的，后阶段会变成一目十行，而非串行的看了。</p></div></div><div id="outline-container-orgheadline7" class="outline-2"><h2 id="orgheadline7"><span class="section-number-2">7</span> 20170908排除杂念</h2><div class="outline-text-2" id="text-7"><p>总是不由自主回忆点过的数字，以及想知道还有多少，所以，每个数字点完后干脆尝试停止脑中活动专心只找该点的数字。点完的已经点完了，不要再占用你的精力，还有多少也与你当下"点"的目标无关。</p></div></div><div id="outline-container-orgheadline8" class="outline-2"><h2 id="orgheadline8"><span class="section-number-2">8</span> 20170915 整体看，不要记忆</h2><div class="outline-text-2" id="text-8"><p>快速看完不用顾及手指，手指自然会点完，意思不是顺序着快速看完同时手指紧跟着目光之后，而是一眼全部看完，再转换成手指点的顺序。你的看，绝对不是顺序的，那样就变成了训练反应而非看。看，是一个整体，既然没有了顺序，自然不会瞻前顾后考虑到底到了哪里，还有多少这样的分心之事。也给人一种似乎是余光，眼睛不动，预知，的错觉，其实早已全部映入眼帘。所以如果训练正确，不存在到哪个数字后就慢了的问题，所有数字都是一样的，即便慢也是随机的慢，因为没看清，而不是没记住。这感觉，阶数高就感觉明显。</p></div></div><div id="outline-container-orgheadline9" class="outline-2"><h2 id="orgheadline9"><span class="section-number-2">9</span> 20170915 看与找</h2><div class="outline-text-2" id="text-9"><p>练习的是看到，不是找到。点到的数字都是看到的，不是找到的。</p></div></div><div id="outline-container-orgheadline10" class="outline-2"><h2 id="orgheadline10"><span class="section-number-2">10</span> 20171012 居高临下</h2><div class="outline-text-2" id="text-10"><p>除了要看不要找，还有一点就是，尽量把目光放宽</p></div></div><div id="outline-container-orgheadline11" class="outline-2"><h2 id="orgheadline11"><span class="section-number-2">11</span> 20171013关键</h2><div class="outline-text-2" id="text-11"><p>记住要点，视线范围尽量放广，视线不要等待动作和反应，要靠看不靠找</p></div></div><div id="outline-container-orgheadline12" class="outline-2"><h2 id="orgheadline12"><span class="section-number-2">12</span> 20171013前进</h2><div class="outline-text-2" id="text-12"><p>要意识到视线始终是走在手和反应的前面的，不会等待它们。</p></div></div><div id="outline-container-orgheadline13" class="outline-2"><h2 id="orgheadline13"><span class="section-number-2">13</span> 20170916 宁慢勿错</h2><div class="outline-text-2" id="text-13"><p>练习的重点 宁慢勿错，还有就是，目光要广，不要被当前数字吸引了全部注意力，当前数字只是看到的数字之一，没什么特别的，这个习惯可能需要放慢速度来练习，一旦发现你的目光太聚焦于某个数字了，就赶紧纠正。</p></div></div><div id="outline-container-orgheadline14" class="outline-2"><h2 id="orgheadline14"><span class="section-number-2">14</span> 20171020数字的敏感度</h2><div class="outline-text-2" id="text-14"><p>其实是脑中缓存的当前关注的数字区间的切换灵活度。大多开始时，会练习到对1-9很敏感，之后就慢了，其实，当到10后，脑中切换下当前应关注的区间，如11-19，就可提就速度，因人而异，但大多人应同时能关注到10个左右。这10个数字随着你点的进度而"滑动"，比如开始只关注1-10，到10的时候变成11-20，等等，再灵活些，到5的时候变成5-15，这应该就是数字的敏感度的根源吧？关键是要忘记掉点过的数字，你头脑中的区间才会向前，否则只能始终是1-10，之后就变成一个个的找数字了。所以可尝试在切换前停下来，想想下一批要点的数字是哪些，然后再点，逐渐减少切换的停顿时间，然后我们要做的就是看，而非找。</p></div></div><div id="outline-container-orgheadline15" class="outline-2"><h2 id="orgheadline15"><span class="section-number-2">15</span> 20171021不要反应不怕点错</h2><div class="outline-text-2" id="text-15"><p>只需关注眼睛一下子看完，手指就别关注了，手指自动的尽快划完就行，看完即点完，可能点错，但没关系，看完才重要。渐渐的，看完后，手指点完的正确率会上升。这样有利于训练集中注意力在看上而非点上，如果不明白的话，举个例子，眼睛迅速看完，同时手指也似乎正确的尽量与目光一致地"乱点"一气也结束了，开始不要在意手指的精确度，可能点的正确率只有1/100（一般前几个数字的正确率较高），这也不奇怪，目光本来就是快于反应，最后一个正确点到的数字后就表示从那起目光就与反应拉开了距离，但至少全部数字都看过了。这样训练是为了避免过分关注手指点到了哪里而停滞了目光，看不见了后面的其它数字，等渐渐的适应了目光稳定的快速看完（这时目光速度已达到了可能手指即便想乱点，也还没点出第一下前就看完了；或者即便控制手指也不会影响目光的前进与扫视的范围），再稍微分出些精力控制下手指的精确度。也就是，心神的主要精力不要浪费在控制手指上，毕竟人的反应是有极限的，这样渐渐的，有种手指随眼睛自动落下的感觉，根本不用控制。</p></div></div><div id="outline-container-orgheadline16" class="outline-2"><h2 id="orgheadline16"><span class="section-number-2">16</span> 20171022 奇迹</h2><div class="outline-text-2" id="text-16"><p>不要让手指跑在视线的前面，即使3*3一闪而过，目光也其实是在手指前面的，不要被手指打乱了视线。手指再快也无用，只有视线在手指前面才是又快又准的正确方式。一切的奇迹都应是在看的见的基础上才能可靠的出现。</p></div></div><div id="outline-container-orgheadline17" class="outline-2"><h2 id="orgheadline17"><span class="section-number-2">17</span> 20171024 前后</h2><div class="outline-text-2" id="text-17"><p>先不管三七二十一把前面熟悉的迅速点完（比如1-9），然后重点熟悉和点后面的数字。将真正训练的开始定在后面，前面一带而过。</p></div></div><div id="outline-container-orgheadline18" class="outline-2"><h2 id="orgheadline18"><span class="section-number-2">18</span> 20171027 看与找</h2><div class="outline-text-2" id="text-18"><p>感受看到而非找到的感觉。手自然的点在那里，不因为提前看到了而增加记忆的负担，也不因为快了一些而想更快，慢了一些而想弥补。眼睛自然的看，渐渐的会因熟练与阶数而增减转动的频率，头脑也会放松，没有了预知、记忆、寻找的负担。训练多了，感觉的至多是眼睛有些累，而非头痛。</p></div></div><div id="outline-container-orgheadline19" class="outline-2"><h2 id="orgheadline19"><span class="section-number-2">19</span> 20171031 直觉</h2><div class="outline-text-2" id="text-19"><p>不断扫视，扫到即点，不要停顿到看清，因为扫视到了，就是看清了，要相信自己的视力。</p></div></div><div id="outline-container-orgheadline20" class="outline-2"><h2 id="orgheadline20"><span class="section-number-2">20</span> 20171031 自由</h2><div class="outline-text-2" id="text-20"><p>不是脑袋控制手指，而是目光，在脑袋看来，手指不由自主的随目光而动。不要控制手指，顺其自然不加以控制的练习会让你切实体会到进步乐趣，脑袋控制的是目光看，而非对手指的控制反应，这样便感觉从脑袋控制反应的限制中解脱出来的舒畅与轻松感，从而更有动力。</p></div></div><div id="outline-container-orgheadline21" class="outline-2"><h2 id="orgheadline21"><span class="section-number-2">21</span> 20171106 一闪而过</h2><div class="outline-text-2" id="text-21"><p>用眼睛尽量看，之后会发现手指不是依次快速落下，而是似乎双手指有时同时落下却不错，尽量不是依次点下，尽可能多的同时用上双手，又不必分心去控制落下的策略，自动的却无双手互抢的奇怪感觉，好像手不是自己的，自动寻找到最轻松迅速却又不阻挡视线的下落方式。</p></div></div><div id="outline-container-orgheadline22" class="outline-2"><h2 id="orgheadline22"><span class="section-number-2">22</span> 20171108 点的技巧</h2><div class="outline-text-2" id="text-22"><p>总是说看最重要，手指就是点完看过的。但是点也有一定的技巧，快点看完，不管怎么点，看完的基础上，尽快点完。就像我亲自感受过的，单手三阶难以破1.3，单手四阶难以破2.3，双手点就能很快突破。即便双手，我想，点的方式若不变，也难以破除一定的极限的。手指会自动随着顺序进行，跟本无须控制哪个手指点。点完就行，谁点不重要，看过之后，注意力只在点上，而非谁去点，怎么点。一旦你觉得你开始控制手指了那就不是这种状态了，你会感觉手腕由于过度被控制而发酸，3阶可能也能达到0.9左右，但是感觉很难寸进，你更多的精力应该控制的是目光和思想，这样手腕任其自然，不累，有游刃有余的感觉，当然，若只用单手，因为单手只有唯一个线性的策略，为了追上思想和视线，还是会有些酸，如果双手，就会自然充分利用好双手交替的优势的。</p></div></div><div id="outline-container-orgheadline23" class="outline-2"><h2 id="orgheadline23"><span class="section-number-2">23</span> 20171110 顺序</h2><div class="outline-text-2" id="text-23"><p>阅读被打乱的是文字，意义是顺序出现的。舒尔特被打乱的是数字的意义，数字本身是自然映入的。</p></div></div><div id="outline-container-orgheadline24" class="outline-2"><h2 id="orgheadline24"><span class="section-number-2">24</span> 20171110 阅读的乐趣</h2><div class="outline-text-2" id="text-24"><p>每一次舒尔特表，就是一篇文章。文章的意义就是数字的次序，将文章背诵下来就是将所有数字位置记住，背的过程是读，记的过程是看。将练习的过程变为阅读。每一篇文章阅读完才知其意义。虽然这里的意义比较抽象，但是，知道了这点，便与阅读一样，你可以稳步提升"阅读"的速度，而不必被无关的单字干扰，也不存在哪个数字更敏感的问题。反之，其实阅读并理解，实质就是看完文字并根据头脑中的认知按特定次序加工，与舒尔特看完数字并点完是一个道理。实质就是看，这样，便不会枯燥。所以，你今天看完50篇文章了吗？</p></div></div><div id="outline-container-orgheadline25" class="outline-2"><h2 id="orgheadline25"><span class="section-number-2">25</span> 20171213 训练重点</h2><div class="outline-text-2" id="text-25"><p>3*3手速，4*4协调双手，5*5协调手速与视幅，6*6视幅，7*7协调视幅与眼力，8*8眼力。</p></div></div><div id="outline-container-orgheadline26" class="outline-2"><h2 id="orgheadline26"><span class="section-number-2">26</span> 20171214 心态</h2><div class="outline-text-2" id="text-26"><p>快点看完快点看完，顺便点一下点不好就算了，但是快点看完，看完，看，看看！</p></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;
&amp;#x2014;
layout: posts
title: 2017年舒尔特数字表训练补充&amp;#x2013;遗漏的记录
categories: [categories, study, misc]
comments: true
&amp;#x2014;
#+END_HTML
&lt;/p&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hello hexo</title>
    <link href="http://0.0.0.0:4000/2019/09/18/hello-hexo/"/>
    <id>http://0.0.0.0:4000/2019/09/18/hello-hexo/</id>
    <published>2019-09-18T09:55:19.000Z</published>
    <updated>2019-09-23T06:14:21.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="categories" scheme="http://0.0.0.0:4000/categories/categories/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://0.0.0.0:4000/2019/04/30/timemanage_3_1_classification/"/>
    <id>http://0.0.0.0:4000/2019/04/30/timemanage_3_1_classification/</id>
    <published>2019-04-29T16:00:00.000Z</published>
    <updated>2019-10-22T08:07:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2014;layout: poststitle: 时间管理：3.解决问题——第一步，事务分类categories: [categories, note]comments: true&#x2014;#+END_HTML</p><div id="table-of-contents"><h2>&#30446;&#24405;</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 空：发现问题——如何分类</a></li><li><a href="#orgheadline2">2. 雨：分析问题——分类策略</a><ul><li><a href="#orgheadline3">2.1. 确定基本策略</a></li><li><a href="#orgheadline4">2.2. 基于 “元” 的分类思想</a><ul><li><a href="#orgheadline5">2.2.1. 固定部分-积累/消耗</a><ul><li><a href="#orgheadline6">2.2.1.1. 积累性的-物质/非物质</a></li><li><a href="#orgheadline7">2.2.1.2. 消耗性的-分类名 <code>生活</code></a></li></ul></li><li><a href="#orgheadline8">2.2.2. 变化部分-分类名 <code>_</code></a></li></ul></li></ul></li><li><a href="#orgheadline9">3. 伞：解决问题——生成策略</a><ul><li><a href="#orgheadline10">3.1. 分类方案</a></li><li><a href="#orgheadline11">3.2. 使用方式</a><ul><li><a href="#orgheadline12">3.2.1. 确定大分类</a></li><li><a href="#orgheadline13">3.2.2. 确认子分类</a><ul><li><a href="#orgheadline14">3.2.2.1. 对于事业</a></li><li><a href="#orgheadline15">3.2.2.2. 对于进修</a></li><li><a href="#orgheadline16">3.2.2.3. 对于生活</a></li></ul></li><li><a href="#orgheadline17">3.2.3. 关于进一步的子分类</a></li></ul></li><li><a href="#orgheadline18">3.3. 举例</a><ul><li><a href="#orgheadline19">3.3.1. 电影</a></li><li><a href="#orgheadline20">3.3.2. 聚餐</a></li><li><a href="#orgheadline21">3.3.3. 图书馆</a></li><li><a href="#orgheadline22">3.3.4. 去药店</a></li><li><a href="#orgheadline23">3.3.5. 看病就医</a></li><li><a href="#orgheadline24">3.3.6. 学习英语</a></li><li><a href="#orgheadline25">3.3.7. 写作</a></li><li><a href="#orgheadline26">3.3.8. 尝试新工具</a></li><li><a href="#orgheadline27">3.3.9. 查找某个好用的软件</a></li><li><a href="#orgheadline28">3.3.10. 了解奇妙的灵修</a></li><li><a href="#orgheadline29">3.3.11. 参与优惠活动</a></li><li><a href="#orgheadline30">3.3.12. 抽奖</a></li><li><a href="#orgheadline31">3.3.13. 有偿调查报告</a></li><li><a href="#orgheadline32">3.3.14. 献血</a></li><li><a href="#orgheadline33">3.3.15. 义工</a></li><li><a href="#orgheadline34">3.3.16. 健康卫生</a></li><li><a href="#orgheadline35">3.3.17. 旅游</a></li><li><a href="#orgheadline36">3.3.18. 购物</a></li><li><a href="#orgheadline37">3.3.19. 外出</a></li><li><a href="#orgheadline38">3.3.20. 出行</a></li><li><a href="#orgheadline39">3.3.21. 中断</a></li><li><a href="#orgheadline40">3.3.22. 无所事事</a></li><li><a href="#orgheadline41">3.3.23. 发呆</a></li><li><a href="#orgheadline42">3.3.24. 状态切换</a></li><li><a href="#orgheadline43">3.3.25. 家务</a></li><li><a href="#orgheadline44">3.3.26. 微信电话</a></li><li><a href="#orgheadline45">3.3.27. 睡前</a></li><li><a href="#orgheadline46">3.3.28. 晨起</a></li><li><a href="#orgheadline47">3.3.29. 餐前</a></li><li><a href="#orgheadline48">3.3.30. 送宝宝上幼儿园</a></li><li><a href="#orgheadline49">3.3.31. 上班</a></li><li><a href="#orgheadline50">3.3.32. 到公司</a></li><li><a href="#orgheadline51">3.3.33. 午休后</a></li><li><a href="#orgheadline52">3.3.34. 撸羊毛</a></li><li><a href="#orgheadline53">3.3.35. 洗漱</a></li><li><a href="#orgheadline54">3.3.36. 杂务</a></li><li><a href="#orgheadline55">3.3.37. 查询信息</a></li><li><a href="#orgheadline56">3.3.38. 查询租房信息</a></li><li><a href="#orgheadline57">3.3.39. 调整时间</a></li><li><a href="#orgheadline58">3.3.40. 上网闲逛</a></li></ul></li></ul></li><li><a href="#orgheadline59">4. 其它</a><ul><li><a href="#orgheadline60">4.1. 整理进度</a></li><li><a href="#orgheadline61">4.2. 分类反思</a><ul><li><a href="#orgheadline62">4.2.1. 方法源于实践</a><ul><li><a href="#orgheadline63">4.2.1.1. 诞生实践的方法</a></li><li><a href="#orgheadline64">4.2.1.2. 用理论改进实践</a></li></ul></li><li><a href="#orgheadline65">4.2.2. 进一步探索</a><ul><li><a href="#orgheadline66">4.2.2.1. 分类的实质是什么</a></li><li><a href="#orgheadline67">4.2.2.2. 如何应对分类体系的不断</a></li></ul></li></ul></li><li><a href="#orgheadline68">4.3. 留给将来的自己</a></li></ul></li></ul></div></div><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 空：发现问题——如何分类</h2><div class="outline-text-2" id="text-1"><p>在具体开始继续解决之前，我们先回顾一下之前的思路，我们是打算如何开始的呢？</p><p>&#x2013;初步的思路是：</p><ul class="org-ul"><li>先对日常每时每刻发生的事物进行记录；</li><li>再根据所记录内容确认时间的流逝情况；</li><li>最后结合实践探索有效的方式或者出路。</li></ul><p>这个方向不知是否正确，但至少应不会太错，然后我们开始考虑时间记录的问题，而记录的关键是分类。</p><p>但是，相信大多人也认同：每个人的思路是不同的，所以分类的方案也应如此。</p><p>即便这里最终给出了分类方案也并非绝对，因此要明确一点，这里并非只为给出一个分类的方案。</p><p>我觉得知其然、不如知其所以然，所以这里按照个人的思路，给出一个确定分类的过程，</p><p>结果并不重要，重点在于介绍每一个分类过程中，为什么这样分类。</p><p>授人以鱼、不如授人以渔，虽然这个部分仅仅是对分类方式的共享谈不上授人。</p><p>前面说的有点复杂，而且表达与理解方式又因人而异，这里再总结一下要表述的意思：</p><p>简单来说：</p><ul class="org-ul"><li><b>分类方案只是内容组织的策略，分类策略是确定分类方案的策略</b> ；</li><li><b>这里不是为确定分类方案，而是要确定分类策略，即确定组织内容策略的策略</b> 。</li></ul><p>进一步的酝酿如下。</p></div></div><div id="outline-container-orgheadline2" class="outline-2"><h2 id="orgheadline2"><span class="section-number-2">2</span> 雨：分析问题——分类策略</h2><div class="outline-text-2" id="text-2"></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">2.1</span> 确定基本策略</h3><div class="outline-text-3" id="text-2-1"><p>相信分类的问题对于大多人来说都是一个比较困扰的事情。</p><p>经过长时间的实践（一直在记录日常生活发生的事件）发现，根据按照如下的指导思想确定分类是一个不错的方法：</p><ul class="org-ul"><li>按照自己的生活状况、经历来分类，会更适合你自身；比如你的生活总是周旋于学习、工作、生活之间。</li><li>按照对立统一的二元思想完善分类，会保证考虑全面；比如所有的活动无外乎消耗、积累两者以及维持。</li><li>接受预料外事物的存在来改进分类，有助适应与进化；比如收集所有未知与缺陷，才有机会整理与改进。</li></ul><p>一个具体以我个人为例的直观解释（当然也有别的更好的思路），我认为：</p><ul class="org-ul"><li>首先，人都是要生活的，于是出现了 <code>生活</code> 这个分类；宏观上来看，这是对物质和非物质方面的消耗。</li><li>其次，生活基于现实（即收入），于是出现了 <code>事业</code> 这个分类；宏观上来看，主要是物质方面的积累。</li><li>再者，生活、事业的状态取决于能力，于是有了 <code>进修</code> 这个分类；宏观上来看，主要是非物质方面的积累。</li><li>最后，总是会出现意料之外或无法确定归属的事件，于是有了 <code>_</code> 这个分类。宏观上来看，这有助进化。</li></ul></div></div><div id="outline-container-orgheadline4" class="outline-3"><h3 id="orgheadline4"><span class="section-number-3">2.2</span> 基于 “元” 的分类思想</h3><div class="outline-text-3" id="text-2-2"><p>其实我们仔细思考不难发现，前面为大分类划分子分类，不但结合了现状，还借用了二元的思想（阴/阳、正/反、是/非、内/外等等），按照这样的方式，可以想象更进一步的子分类划分，应该也同样可以将“现状”和“二元”方式结合进行下去。这里的二元，比如：内、外。内：内因，如个人、自身、主动、自愿、针对性等；外：外因，如他人、周围、被动、被迫、通用性等。</p><p>我们可以将二元思想应用到分类的策略中，大致的思路是：不断的将事务用二元的思想分类，理论上无限层级分类，但是按照个人情况，分解到一定层级能够使用即可，最后一个层级就按需进行（结合自己的情况）不用一定用二元方式了。个人感觉，层次深度在2-3层即可，层级太多也不易管理。</p><p>当然为了降低层次深度，可以使用其它元数：三元(如高/中/低、上/中/下、过去/现在/未来等等)、四元（如东/南/西/北、衣/食/住/行）、五元（如金/木/水/火/土），等等均可，本质都是为了“平衡”与“全面”或“合适”。</p><p>分类的名称不是重点，重点是划分时的思想，名称一般反映该分类中典型的描述，可以随状况改变，但是划分的思想一般不会变化。</p><p>下面是具体实施的过程。</p><p>从“动/静”的角度来看，分类策略：是变化的（不同时间场景人的方式不同），又是相对不变的（某个阶段主要从事的事情固定）。所以，划分两个部分：</p></div><div id="outline-container-orgheadline5" class="outline-4"><h4 id="orgheadline5"><span class="section-number-4">2.2.1</span> 固定部分-积累/消耗</h4><div class="outline-text-4" id="text-2-2-1"><p>此部分是分类体系相对不变部分的根，是目前所能认识到的事物分类的模型，不对应具体分类名称。</p><p>注意：</p><pre class="example">在后续的持续划分中，每一个具有确定类名的分类下，用二元，或者其它元划分后，也类似 =_= 为该分类预留一个 =_分类名= 的分类。作用是，表示该子分类下未确定的事项堆积处（名字无所谓，只要是能表示是该 =分类名= 下尚未确认事项即可，名字也可以与 =分类名= 同名的子分类）。在有些具有层级结构的软件中（比如文件系统），也可以不用为 =分类名= 额外创建 =_分类名= 的子分类，而是直接将未确定的内容直接置于该 =分类名= 非任何子分类目录下，待日后处理（或者转移到合适的子分类，或者调整整个 =分类名= 分类策略）。不过在这里的描述中，我们假设事项只能添加在叶子分类中，即不能在非叶子分类（整个分类体系是一个树状的结构，顶端是根，最底层的我们称作叶子，中间的是枝干）添加事项，这一点不再后面提及。</pre><p>从“生产/消费”角度来看，该层次主要包括：积累型事物（如创造物质和精神财富），和消耗型事物（如享受生活）。所以划分两个子部分。</p></div><div id="outline-container-orgheadline6" class="outline-5"><h5 id="orgheadline6"><span class="section-number-5">2.2.1.1</span> 积累性的-物质/非物质</h5><div class="outline-text-5" id="text-2-2-1-1"><p>积累性的事物是基础，尽管一般我们都倾向于消耗，但是没有积累便没有消耗，所以必须积累。该层次不对应具体分类名。</p><p>从“物质/非物质”角度看，积累的事物：包含物质方面（如现实的收入，是外因），以及非物质方面（如处理事物的能力，是内因）。所以，划分两个子部分：</p></div><ol class="org-ol"><li><a id="orgheadline72"></a>物质方面-分类名 <code>事业</code><br><div class="outline-text-6" id="text-2-2-1-1-1"><p>此部分直接对应分类名 <code>事业</code> ， 一切从事导致有助于直接增加物质积累的活动被称作 <code>事业</code> 。</p><p>从“主动/被动”角度看，该层次又包含：被动从事的事物（如公司事务，是外因）;主动从事的事物（如个人创业，是内因）。</p><p>另外，此层次分类的子分类不细分，所以子分类相对复杂多变，会有些介于两者之间以及不确定的事物（折中）。</p><p>这样，该分类下有三个子分类的内容：</p></div><ol class="org-ol"><li><a id="orgheadline69"></a>被动接收-分类名 <code>工作</code><br><div class="outline-text-7" id="text-2-2-1-1-1-1"><p>比如公司的事物。</p></div></li><li><a id="orgheadline70"></a>中间状态-分类名 <code>职场</code><br><div class="outline-text-7" id="text-2-2-1-1-1-2"><p>比如寻求下一家公司的活动、参与某项有偿活动、整理简历等、了解行业动态、迫于生活以及也同时想要进行的外快/额外创收。</p></div></li><li><a id="orgheadline71"></a>主动从事-分类名 <code>创业</code><br><div class="outline-text-7" id="text-2-2-1-1-1-3"><p>比如开创自己的事业、从事喜好的项目等等。</p></div></li></ol></li><li><a id="orgheadline76"></a>非物质方面-分类名 <code>进修</code><br><div class="outline-text-6" id="text-2-2-1-1-2"><p>注：进修也是本人价值观的一个缩影，子类大致的情况：理论（对应永无止境-前进）、规整（对应雁过留痕-路过）、探索（对应探索发现-进化)</p><p>此部分直接对应分类名 <code>进修</code> ， 一切从事导致有助于直接增加非物质积累的活动被称作 <code>进修</code> 。</p><p>从“理论/实践”角度看，该层次又包含：知识经验的事物（如阅读记录，是外因）;行为猎奇的事物（如探索实践，是内因）。</p><p>另外，此层次分类的子分类不细分，所以则子分类相对复杂多变，有些介于两者间不确定的事物（如整理消化、计划安排、调整，做为折中平衡两者）。</p><p>这样，该分类下有三个子分类的内容：</p></div><ol class="org-ol"><li><a id="orgheadline73"></a>理论研究-分类名 <code>学习</code><br><div class="outline-text-7" id="text-2-2-1-1-2-1"><p>比如阅读、记录、模仿，偏重从已知的外界“静态”领域，通过积累输入获取知识、经验、技巧等能力，获取只是包含当前进修项目的主要活动（临时性学习/固定理论学习）。</p></div></li><li><a id="orgheadline74"></a>折中归整-分类名 <code>管理</code><br><div class="outline-text-7" id="text-2-2-1-1-2-2"><p>比如思考消化知识组织结构，归纳总结、整理资料、输出文档、计划规划、调整策略等，可巩固当前所有并保证当前进修活动方向不盲目。（整理消化组织/计划规划调整）</p></div></li><li><a id="orgheadline75"></a>实践创新-分类名 <code>探索</code><br><div class="outline-text-7" id="text-2-2-1-1-2-3"><p>比如实践、兴趣、及未知未确定领域的尝试与了解（了解确定了之后可能会转换成 <code>理论</code> 的学习），是进行当前主要进修活动之余拓宽自己的视野，增加选择、便于进化进修。（针对性学习/实践与兴趣）</p></div></li></ol></li></ol></div><div id="outline-container-orgheadline7" class="outline-5"><h5 id="orgheadline7"><span class="section-number-5">2.2.1.2</span> 消耗性的-分类名 <code>生活</code></h5><div class="outline-text-5" id="text-2-2-1-2"><p>此部分直接对应分类名 <code>生活</code> ， 一切从事导致直接物质和精神积累减少或利用到物质和精神积累的活动被称作 <code>生活</code> 。</p><p>注意：此分类，涉及的是我们生活当中的方方面面，因人而异且复杂多变。按照前面的思想，即：上面的层次二元划分，最后底层不用二元划分；会导致分层过多(尝试过使用 “作/息” 的方式划分，但是再往下会导致子分类层次很多)，所以这个分类稍微变通一下。</p><p>分类只做划分两层，并且两层都采用3元的思想进行，最底层可能会随着生活状态的变化，在后面的“其它”中引入额外的分类。</p><p>从生活消耗性质由必要到富足，即 “基本/必要/额外” 的角度来看，该分类包含：必要的活动（如作息规律等“自身先要满足”的必要消耗活动）；基本的活动（如健康、休息、办事等为了更好的处理好相关事项“适当”需要进行的基本消耗活动）；额外的活动（如娱乐、社交、家庭活动等“与周围相互自由和谐”的额外消耗活动，属于辅助、享受、挥霍、向往的事情）。</p><p>这样，该分类下有三个子分类的内容（子分类自上而下，消耗逐渐增多）：</p></div><ol class="org-ol"><li><a id="orgheadline80"></a>必要活动-分类名 <code>作息</code><br><div class="outline-text-6" id="text-2-2-1-2-1"><p>此部分直接对应分类名 <code>作息</code> ， 是生活中比较固定的、必要的、必须的，维持 <b>基本生活</b> 的作息性活动， 这里称作 <code>作息</code> 。</p><p>此层次分类的子分类不细分，所以则子分类相对复杂多变，目前从 “精神/清理/体力” 角度（通俗点说，吃喝拉撒洗睡相关）来看，主要包括以下三个子类。</p></div><ol class="org-ol"><li><a id="orgheadline77"></a>精神-分类名 <code>睡眠</code><br><div class="outline-text-7" id="text-2-2-1-2-1-1"><p>主要是可以睡着的（超过1.5小时）午休、睡眠，助于恢复精力。</p></div></li><li><a id="orgheadline78"></a>清理-分类名 <code>卫生</code><br><div class="outline-text-7" id="text-2-2-1-2-1-2"><p>比如：卫生间、洗漱等必要的清洁事项，助于身体健康。</p></div></li><li><a id="orgheadline79"></a>体力-分类名 <code>饮食</code><br><div class="outline-text-7" id="text-2-2-1-2-1-3"><p>主要是用餐，餐饮相关事项，补充体力和营养。</p></div></li></ol></li><li><a id="orgheadline84"></a>基本活动-分类名 <code>规律</code><br><div class="outline-text-6" id="text-2-2-1-2-2"><p>此部分直接对应分类名 <code>规律</code> ， 是生活中适当进行的、基本的、习惯性的，改善到 <b>小康生活</b> 而做的适当活动， 这里称作 <code>规律</code> 。</p><p>此层次分类的子分类不细分，所以则子分类相对复杂多变，目前从“身体/调节/活动”角度来看（通俗点说，保健居家事务相关），主要包括以下三个子类。</p></div><ol class="org-ol"><li><a id="orgheadline81"></a>身体-分类名 <code>健康</code><br><div class="outline-text-7" id="text-2-2-1-2-2-1"><p>保证自身正常的活动，如：医疗、锻炼等等。</p></div></li><li><a id="orgheadline82"></a>调节-分类名 <code>休息</code><br><div class="outline-text-7" id="text-2-2-1-2-2-2"><p>优化自身状态的活动，比如，1.5小时以内的午休、小憩、发呆、调整状态、有助于恢复些许精力。</p></div></li><li><a id="orgheadline83"></a>活动-分类名 <code>事务</code><br><div class="outline-text-7" id="text-2-2-1-2-2-3"><p>一些相关生活中需要处理和进行的事项，如：办事、查阅信息（办事需要）、一些事务处理；租房、物业、和所处环境相关的事情，内容较多、消耗较高。</p></div></li></ol></li><li><a id="orgheadline88"></a>额外活动-分类名 <code>仪式</code><br><div class="outline-text-6" id="text-2-2-1-2-3"><p>此部分直接对应分类名 <code>仪式</code> ， 是生活中相对随意的、享受的、额外的，为了体现向往的 <b>富足生活</b> 质量相对奢侈的活动， 这里称作 <code>仪式</code> 。</p><p>此层次分类的子分类不细分，所以则子分类相对复杂多变，目前从“个人/亲属/环境”的角度来看（通俗点说娱乐亲友交流相关），主要包括以下三个子类。</p></div><ol class="org-ol"><li><a id="orgheadline85"></a>个人-分类名 <code>休闲</code><br><div class="outline-text-7" id="text-2-2-1-2-3-1"><p>如：游戏、上网、 新闻资讯、无所事事?</p></div></li><li><a id="orgheadline86"></a>亲属-分类名 <code>家庭</code><br><div class="outline-text-7" id="text-2-2-1-2-3-2"><p>如：亲属串门、家庭活动、陪家人、家务（清洁整理、洗完拖地、洗衣收纳、做饭、餐后等等）</p></div></li><li><a id="orgheadline87"></a>环境-分类名 <code>社交</code><br><div class="outline-text-7" id="text-2-2-1-2-3-3"><p>如：访友、人情往来、公益活动、聚会、活动</p></div></li></ol></li></ol></div></div><div id="outline-container-orgheadline8" class="outline-4"><h4 id="orgheadline8"><span class="section-number-4">2.2.2</span> 变化部分-分类名 <code>_</code></h4><div class="outline-text-4" id="text-2-2-2"><p>此部分存放所有不确定的内容，直接对应分类名 <code>_</code> ， 名称可以随意，合适就行，主要用于进化分类体系。</p><p>因为不再继续对变化的部分细分，所以这个分类下的内容不采用二元思想细分。</p><p>首先主要功能是：</p><ul class="org-ul"><li>收集不确定分类归属的内容；</li><li>或者不属于任何现有分类归属的内容；</li><li>或者其它未知功能</li></ul><p>到一定时间之后：</p><ul class="org-ul"><li>将其中不确定分类归属的内容确定其分类归属，整理至合适的分类；</li><li>根据不属于任何分类归属的内容情况，更新固定分类体系（如孵化新分类），使其进化、涵盖到所有的内容。</li></ul></div></div></div></div><div id="outline-container-orgheadline9" class="outline-2"><h2 id="orgheadline9"><span class="section-number-2">3</span> 伞：解决问题——生成策略</h2><div class="outline-text-2" id="text-3"></div><div id="outline-container-orgheadline10" class="outline-3"><h3 id="orgheadline10"><span class="section-number-3">3.1</span> 分类方案</h3><div class="outline-text-3" id="text-3-1"><p>经过上述分析，我们得到如下分类方案（使用标号来标记它们的属性结构）:</p><ul class="org-ul"><li>0-_（未知） <b>_</b></li><li>1-（固定）</li><li>1.1-（积累）</li><li>1.1.1-（物质） <b>事业</b></li><li>1.1.1.0-（未定） <b>_事业</b></li><li>1.1.1.1-（被动） <b>工作</b></li><li>1.1.1.2-（折中） <b>职场</b></li><li>1.1.1.3-（主动） <b>创业</b></li><li>1.1.2-（非物质） <b>进修</b></li><li>1.1.2.0-（未定） <b>_进修</b></li><li>1.1.2.1-（理论） <b>学习</b></li><li>1.1.2.2-（归整） <b>管理</b></li><li>1.1.2.3-（实践） <b>探索</b></li><li>1.2-（消耗） <b>生活</b></li><li>1.2.0-（未定） <b>_生活</b></li><li>1.2.1-（必要） <b>作息</b></li><li>1.2.1.0-（未定） <b>_作息</b></li><li>1.2.1.1-（精神） <b>睡眠</b></li><li>1.2.1.2-（清理） <b>卫生</b></li><li>1.2.1.2-（体力） <b>饮食</b></li><li>1.2.2-（基本） <b>规律</b></li><li>1.2.2.0-（未定） <b>_规律</b></li><li>1.2.2.1-（身体） <b>健康</b></li><li>1.2.2.2-（调节） <b>休息</b></li><li>1.2.2.3-（活动） <b>事务</b></li><li>1.2.3-（额外） <b>仪式</b></li><li>1.2.3.0-（未定） <b>_仪式</b></li><li>1.2.3.1-（个人） <b>休闲</b></li><li>1.2.3.2-（亲属） <b>家庭</b></li><li>1.2.3.3-（环境） <b>社交</b></li></ul><p>上述分类中，</p><ul class="org-ul"><li>总共有7个用于分类改进的不确定分类（包含 <code>_</code> 字符），15个确定的分类，总共22个分类（注意，这里指的是叶子分类，因为分支分类不存放事项）。</li><li>括号中的是分类的思想这个是基本的，而分类的名称却因人而异只为直观便于理解。</li><li>如果某阶段不适合了，可以考虑变化分类名称，决定分类体系的思想一般变动不大。</li></ul><p>如果有比较不错的软件，可以将这个分类方案，可以设置到一些比较好用的时间记录工具中，比如 <code>aTimeLogger</code> 。这里就不贴图了。</p></div></div><div id="outline-container-orgheadline11" class="outline-3"><h3 id="orgheadline11"><span class="section-number-3">3.2</span> 使用方式</h3><div class="outline-text-3" id="text-3-2"><p>有了上面的分类方案，在记录的时候就不会盲目，而且在从事任何活动的时候，心中会对此活动有一个比较清晰的认识。</p><p>当你对自己从事的活动有较清晰的认识的前提下，这会有助于你主动对这些活动做时间方面的分析、调整、和管理。</p><p>关于如何确定我们从事的活动是属于什么分类，这里给出一个应用该分类体系的思路，其实最好的表述是用图示。</p><p>考虑到有时，我们会因为某些因素无法使用图示，所以这里给出具体解释，我们可以凭借自己的理解绘制出适合自己的流程图。</p><p>具体过程如下：</p></div><div id="outline-container-orgheadline12" class="outline-4"><h4 id="orgheadline12"><span class="section-number-4">3.2.1</span> 确定大分类</h4><div class="outline-text-4" id="text-3-2-1"><ul class="org-ul"><li>如果是用于物质的积累（外因），则属于事业；</li><li>如果用于非物质的积累（内因），则属于进修；</li><li>如果用于消耗的（目标），则属于生活；</li><li>如果是在范围之外（不确定），则分类暂定为 <b>_</b> 。</li></ul><p>对物质和非物质，可以这样理解</p><ul class="org-ul"><li>物质：可以是如物品、成果（虚拟或者实际）、是存在周期较短，或者可以很明显消失的事物，等等；</li><li>非物质：如知识、方法、经验、原创是存在比较久都并且有效的事物，比如思想中，等等。</li></ul></div></div><div id="outline-container-orgheadline13" class="outline-4"><h4 id="orgheadline13"><span class="section-number-4">3.2.2</span> 确认子分类</h4><div class="outline-text-4" id="text-3-2-2"></div><div id="outline-container-orgheadline14" class="outline-5"><h5 id="orgheadline14"><span class="section-number-5">3.2.2.1</span> 对于事业</h5><div class="outline-text-5" id="text-3-2-2-1"><ul class="org-ul"><li>如果是被动的不得不做的（外因），如公司事务、公司项目等，则分类定为 <b>工作</b> ；</li><li>如果是主动的愿意做的（内因），如自己的兴趣、额外收入活动、开创的事业等，则分类定为 <b>创业</b> ；</li><li>如果是介于两者之间的（折中），如求职、一些调查竞选等，则分类定为 <b>职场</b> ；</li><li>最后，如果实在不确定，那分类暂定为 <b>_工作</b> 。</li></ul></div></div><div id="outline-container-orgheadline15" class="outline-5"><h5 id="orgheadline15"><span class="section-number-5">3.2.2.2</span> 对于进修</h5><div class="outline-text-5" id="text-3-2-2-2"><ul class="org-ul"><li>如果是理论研究方面（外因），如阅读、练习、笔记等，则分类定为 <b>学习</b> ；</li><li>如果是实践创新方面（内因），如写作、实践、实验等，则分类定为 <b>探索</b> ;</li><li>如果是介于两者之间（折中），如调整状态、管理资料、整理资料、计划规划等，则分类定为 <b>管理</b> ；</li><li>最后，如果实在不确定，那分类暂定为 <b>_进修</b> 。</li></ul></div></div><div id="outline-container-orgheadline16" class="outline-5"><h5 id="orgheadline16"><span class="section-number-5">3.2.2.3</span> 对于生活</h5><div class="outline-text-5" id="text-3-2-2-3"><ul class="org-ul"><li>如果是必要的活动（维持基本生活），比如需要恢复体力、精力、以及必须去做以维持基本生活的等，则分类属于 <b>作息</b> ；</li><li>如果是基本的活动（迈向小康生活），比如必要准备事项、不必须但需认真对待可以让生活更好的等，则分类属于 <b>规律</b> ；</li><li>如果是额外的活动（向往富足生活），比如娱乐、与人旅游、是生活已经相对富足享受性质的奢侈等，则分类属于 <b>仪式</b> ；</li><li>最后，如果实在不确定，那分类暂定为 <b>_生活</b> 。</li></ul></div><ol class="org-ol"><li><a id="orgheadline92"></a>对生活进一步的子分类<br><ol class="org-ol"><li><a id="orgheadline89"></a>对于作息<br><div class="outline-text-7" id="text-3-2-2-3-1-1"><ul class="org-ul"><li>如果是恢复精神的活动（减少消耗），主要是超过1个睡眠周期（一般1.5小时）的睡觉，则分类定为 <b>睡眠</b> ；</li><li>如果是补给身体的活动（维持消耗），主要是体力上、营养的补充，则分类定为 <b>饮食</b> ;</li><li>如果是介于两者间的清理（基本消耗），例如卫生洗漱等保证基本的仪态，则分类定为 <b>卫生</b> ;</li><li>如果实在不确定，比如一些生活上有助恢复消耗，或在一些情况下必须去做的事情，那分类暂定为 <b>_作息</b> 。</li></ul></div></li><li><a id="orgheadline90"></a>对于规律<br><div class="outline-text-7" id="text-3-2-2-3-1-2"><ul class="org-ul"><li>如果是和身体相关（消耗的基础），例如身体健康、医疗、洗漱、卫生等直接作用身体的事项，则分类定为 <b>保健</b> ；</li><li>如果是和调节相关（消耗的优化），例如小憩、发呆等短暂的精力体力恢复，则分类定为 <b>休息</b> ;</li><li>如果是和活动相关（消耗的效率），例如居家琐事、事务办理等需要进行和办理的事项，则分类定为 <b>事务</b> ；</li><li>如果实在不确定，比如一些生活上为更好的完成某事，或基本是要做但并不是必须要做的事情，那分类暂定为 <b>_规律</b> 。</li></ul></div></li><li><a id="orgheadline91"></a>对于仪式<br><div class="outline-text-7" id="text-3-2-2-3-1-3"><ul class="org-ul"><li>如果是和个人相关（挥霍的消耗），例如游戏、小说、电影、上网等的个人喜好的活动，则分类定为 <b>休闲</b> ；</li><li>如果是和亲属相关（情愿的消耗），例如家庭旅游、购物、亲子活动等改进亲情的活动，则分类定为 <b>家庭</b> ；</li><li>如果是和周边环境相关（有用的消耗），例如朋友聚餐、访友、聊天等增进社会交际的活动，则分类定为 <b>社交</b> ；</li><li>如果实在不确定，又不是必须或者基本要做的只是体现一些优越的状态的活动等等，那就将分类暂定为 <b>_仪式</b> 。</li></ul></div></li></ol></li></ol></div></div><div id="outline-container-orgheadline17" class="outline-4"><h4 id="orgheadline17"><span class="section-number-4">3.2.3</span> 关于进一步的子分类</h4><div class="outline-text-4" id="text-3-2-3"><p>为避免层次太多，对于进修和事业，只用2级分类，没有再对子分类的子类继续划分了，生活中的各子分类也如此处理。可以在后面的时间分配中，详细了解。</p><p>比如进修-学习，这个子分类：</p><ul class="org-ul"><li>如果是被迫的（外因），包括固定理论、因状况导致的暂时性学习（如查询）等；</li><li>如果是主动的（内因），包括针对性学习、实践学习等。</li></ul><p>其余的子分类的再次划分类似类似。</p><p>实在需要对子分类的内容区分，对其备注即可。日后统计具体时间的话，可以根据备注搜索并统计。</p><p>如果想专门统计某特定分类下的活动的话，那么就给备注添加一些特殊的格式规则，便于搜索统计。</p></div></div></div><div id="outline-container-orgheadline18" class="outline-3"><h3 id="orgheadline18"><span class="section-number-3">3.3</span> 举例</h3><div class="outline-text-3" id="text-3-3"><p>分类确定之后，有些分类名称与实际内容不是特别对应的，可以添加备注来更详细一些注释，注释就是具体描述进行的是什么活动。</p><p>实际中，我们进行一项活动的时候，都是先有这个活动的描述，然后记录的时候，确定将这个描述放在哪个分类中。</p><p>若没有特殊情况，你设置了没有意义的活动描述，想要考验这个分类体系的话，那我们只能将它归为 <b>_</b> 分类。这个分类体系就是为了实用，并且便于调整而设置的，而非理想与测试的目的。其他目的，只能归类为未知的进化（即 <b>_</b> ）</p><p>下面是一些例子：</p></div><div id="outline-container-orgheadline19" class="outline-4"><h4 id="orgheadline19"><span class="section-number-4">3.3.1</span> 电影</h4><div class="outline-text-4" id="text-3-3-1"><p>首先, 是消耗性的活动——生活；</p><p>然后, 是额外的消耗（可有，可无，生活富足的时候可以有）——仪式；</p><p>最后，视“个人/亲属/圈子”情况，可以是 <b>休闲</b>, <b>家庭</b>, <b>社交</b> 分类； 甚至不确定的化属于 <b>_仪式</b> 分类。</p></div></div><div id="outline-container-orgheadline20" class="outline-4"><h4 id="orgheadline20"><span class="section-number-4">3.3.2</span> 聚餐</h4><div class="outline-text-4" id="text-3-3-2"><p>理解为朋友同事的聚餐游玩。</p><p>首先, 是消耗性的活动——生活；</p><p>然后, 是额外的消耗（可有，可无，生活富足的时候可以有）——仪式；</p><p>最后，由于与人交际，是 <b>社交</b> 分类。</p></div></div><div id="outline-container-orgheadline21" class="outline-4"><h4 id="orgheadline21"><span class="section-number-4">3.3.3</span> 图书馆</h4><div class="outline-text-4" id="text-3-3-3"><p>一般理解为看书。</p><p>首先，它属于积累性的事情，因为这样的活动，你是获取了新的知识——进修；</p><p>其次，这样的积累活动是从外界获取已有的只是到自己身上，应该归为 <b>学习</b> 。</p></div></div><div id="outline-container-orgheadline22" class="outline-4"><h4 id="orgheadline22"><span class="section-number-4">3.3.4</span> 去药店</h4><div class="outline-text-4" id="text-3-3-4"><p>首先, 是消耗性的活动（是花钱的）——生活；</p><p>然后, 范畴根据性质是生活基本消耗——规律；</p><p>最后，是有关身体方面的，应该归为 <b>健康</b> 。</p></div></div><div id="outline-container-orgheadline23" class="outline-4"><h4 id="orgheadline23"><span class="section-number-4">3.3.5</span> 看病就医</h4><div class="outline-text-4" id="text-3-3-5"><p>这个和去药店一样，是有关身体方面的，应该归为 <b>健康</b> 。</p></div></div><div id="outline-container-orgheadline24" class="outline-4"><h4 id="orgheadline24"><span class="section-number-4">3.3.6</span> 学习英语</h4><div class="outline-text-4" id="text-3-3-6"><p>首先，它属于积累性的事情，因为这样的活动，明显对你的提升有所帮助——进修；</p><p>其次，英语是一门确定的学科，是已有的学科，这样的积累活动是从外界获取已有的只是到自己身上，应该归为 <b>学习</b> 。</p></div></div><div id="outline-container-orgheadline25" class="outline-4"><h4 id="orgheadline25"><span class="section-number-4">3.3.7</span> 写作</h4><div class="outline-text-4" id="text-3-3-7"><p>这里，如果是写博客那么明显是分享性质而非创作的一个消耗活动，但这里假设的意思是创作新论文、或者著作等等。</p><p>首先，它属于积累性的事情，因为这样的活动，你是创造了新的知识，不仅对于自己，而且是别人——进修；</p><p>其次，这个活动是你主动进行的，是在有了一定知识经验的积累上，生成了一种质变、进化，创造了新的知识（有可能是新兴的），所以归类为 <b>探索</b> 。</p></div></div><div id="outline-container-orgheadline26" class="outline-4"><h4 id="orgheadline26"><span class="section-number-4">3.3.8</span> 尝试新工具</h4><div class="outline-text-4" id="text-3-3-8"><p>这里，因为重在是 “尝试”， 所以正常人的理解就是实践、探索性质的。</p><p>首先，它属于积累性的事情，因为了解这样的事物，你是想有所收获的，收获个人的经验、或者至少知道了一门好用的工具等等——进修；</p><p>其次，在确定有专门的知识可参考去了解这个新工具前，只是通过上网查询，知道它是什么，或尝试怎么使用，这是一种猎奇的新鲜的心理，归为 <b>探索</b> 。</p></div></div><div id="outline-container-orgheadline27" class="outline-4"><h4 id="orgheadline27"><span class="section-number-4">3.3.9</span> 查找某个好用的软件</h4><div class="outline-text-4" id="text-3-3-9"><p>与尝试新工具一样，归为 <b>探索</b> 。</p></div></div><div id="outline-container-orgheadline28" class="outline-4"><h4 id="orgheadline28"><span class="section-number-4">3.3.10</span> 了解奇妙的灵修</h4><div class="outline-text-4" id="text-3-3-10"><p>首先，它属于积累性的事情，因为了解这样的事物，你是想有所收获的，收获个人的经验、调节的能力等等——进修；</p><p>其次：</p><p>如果它可能是属于你处于猎奇的心理，对位置领域的一种探新（单纯的了解什么是灵修，这个几乎没有科学根据的事物），那就归为 <b>探索</b>;</p><p>如果你处于一个非常沮丧的状态，想通过这样一个方式，来舒缓自己的压力，这就属于调节状态的范畴，那就归为 <b>管理</b>;</p><p>如果真的有相应的比较著名的体系的书籍（如心理学），你用它来获取知识，那就归为 <b>学习</b> 。</p></div></div><div id="outline-container-orgheadline29" class="outline-4"><h4 id="orgheadline29"><span class="section-number-4">3.3.11</span> 参与优惠活动</h4><div class="outline-text-4" id="text-3-3-11"><p>理解成一些商家促销或者公益性的活动。</p><p>首先，它属于消耗性（生活）的事情，它们背后的目的更多是为了举办方获利，你即使获得了表面的小利也消耗了自己的精力转化为他人无形的利益——生活；</p><p>其次，它是额外的消耗（休闲性），完全可以不进行，不是必要的活动——仪式；</p><p>视情况（个人/亲属/圈子）分别属于 <b>休闲/家庭/社交</b> 分类，</p><p>如果不确定，则属于未定的，是 <b>_仪式</b> 分类。</p><p>注意：要将这样的活动与真正的积累活动区分开，积累活动是纯粹的为自己积累知识或者财富，即使没有达到，但目标是如此；而这样的活动，除非是为了专门参与这样的活动增长经验的目的（归为 <b>进修-探索</b> ），否则即使获得了短期的利益，但你的目的只是占小便宜，并没有获得什么（即使你中了500万，实质也不变）。</p></div></div><div id="outline-container-orgheadline30" class="outline-4"><h4 id="orgheadline30"><span class="section-number-4">3.3.12</span> 抽奖</h4><div class="outline-text-4" id="text-3-3-12"><p>首先，它属于消耗类的事情，因为它不是确定能一定获取收入，完全凭运气和随机参与的一项看似有所收益实则更多会被消费的活动——生活；</p><p>其次，它是额外的消耗（休闲性），完全可以不进行，不是必要的活动——仪式；</p><p>最后，是个人参与的娱乐性质活动，所以属于 <b>休闲</b> 分类。</p></div></div><div id="outline-container-orgheadline31" class="outline-4"><h4 id="orgheadline31"><span class="section-number-4">3.3.13</span> 有偿调查报告</h4><div class="outline-text-4" id="text-3-3-13"><p>首先，它属于积累性活动，为了物质（钱财）上的积累——事业；</p><p>其次，它不算是被动的事业，</p><p>如果你认为也不算主动的创业，归结为折中的 <b>职场</b> 分类；</p><p>如果你认为是主动的外快性质，就归为 <b>创业</b> 分类；</p><p>实在不确定就视为 <b>_事业</b> （即，不管是哪个子分类，它至少是属于 <b>事业</b> 分类的）。</p></div></div><div id="outline-container-orgheadline32" class="outline-4"><h4 id="orgheadline32"><span class="section-number-4">3.3.14</span> 献血</h4><div class="outline-text-4" id="text-3-3-14"><p>首先，它是一个无偿的活动，属于消耗类——生活；</p><p>再次，它是额外的消耗（你首先有富足的资源，才能奉献）——仪式；</p><p>最后，是公益性质，所以属于 <b>社交</b> 分类。</p></div></div><div id="outline-container-orgheadline33" class="outline-4"><h4 id="orgheadline33"><span class="section-number-4">3.3.15</span> 义工</h4><div class="outline-text-4" id="text-3-3-15"><p>首先，它是一个无偿的活动，属于消耗类——生活；</p><p>再次，它是额外的消耗（你首先有富足的资源，才能奉献）——仪式；</p><p>最后，它是公益性质，不是个人、家庭方面的事情，所以属于 <b>社交</b> 分类。</p><p>当然如果是有偿的，属于积累性活动，为了物质（钱财）上的积累（事业），算是主动从事的外快，所以属于 <b>创业</b> 分类。</p></div></div><div id="outline-container-orgheadline34" class="outline-4"><h4 id="orgheadline34"><span class="section-number-4">3.3.16</span> 健康卫生</h4><div class="outline-text-4" id="text-3-3-16"><p>名字上直接就可以对应到 <b>健康</b> 分类 或 <b>卫生</b> 分类。</p></div></div><div id="outline-container-orgheadline35" class="outline-4"><h4 id="orgheadline35"><span class="section-number-4">3.3.17</span> 旅游</h4><div class="outline-text-4" id="text-3-3-17"><p>首先, 是消耗性的活动——生活；</p><p>然后, 是额外的消耗（可有，可无，生活富足的时候可以有）——仪式；</p><p>最后，视“个人/亲属/圈子”情况，可以是 <b>休闲</b>, <b>家庭</b>, <b>社交</b> 分类； 甚至不确定的化属于 <b>_仪式</b> 分类。</p></div></div><div id="outline-container-orgheadline36" class="outline-4"><h4 id="orgheadline36"><span class="section-number-4">3.3.18</span> 购物</h4><div class="outline-text-4" id="text-3-3-18"><p>首先, 是消耗性的活动（购物是花钱的）——生活；</p><p>然后, 范畴根据性质是额外的消耗（如休闲场所的消费）——仪式，或者生活基本消耗（如柴米油盐）——规律；</p><p>最后，对于仪式，视“个人/亲属/环境”情况，分别是 <b>休闲</b>, <b>家庭</b>, <b>社交</b> 分类； 对于规律，可以是 <b>健康</b> (医院), <b>事务</b> (超市网购、办理公务)</p><p>不确定的话就不细分，直接属于 <b>_仪式</b> 或者 <b>_规律</b>, 甚至 <b>_生活</b> 分类。</p></div></div><div id="outline-container-orgheadline37" class="outline-4"><h4 id="orgheadline37"><span class="section-number-4">3.3.19</span> 外出</h4><div class="outline-text-4" id="text-3-3-19"><p>主要是指路上、以及外出活动。</p><p>首先它是消耗性的活动——生活</p><p>其次，视情况所属范畴可能是属于必要活动——规律，或者额外活动——仪式；</p><p>最后，在进一步视前面给出的子分类情况划分，可能属于 <b>健康*(比如看病的路上，或者锻炼), *事务</b> (比如去租房签约路上、办事情缴纳社保等), <b>休闲</b> （比如娱乐）, <b>家庭</b> （比如家庭旅游）, <b>社交</b> （比如公司组织的旅游、聚餐）。</p><p>如果不想详细划分了就属于 <b>_仪式</b>, <b>_休闲</b>, 日后再仔细思考。</p><p>另外，也可能是积累性质（比如出差），这时应当属于 <b>工作</b>, 或者个人事业定为 <b>创业</b>, 求职属于 <b>职场</b>, 实在没有确定的就是 <b>事业</b> ， 具体需备注。</p><p>其实若没有特殊情况，你可以设置了这样没有意义的活动名称，想要考验这个分类体系的话，那我们只能将它归为 <b>_</b> 分类。这个分类体系就是为了实用，并且便于调整而设置的，而非理想与测试的目的。其他目的，只能归类为未知的进化（即 <b>_</b> ）</p></div></div><div id="outline-container-orgheadline38" class="outline-4"><h4 id="orgheadline38"><span class="section-number-4">3.3.20</span> 出行</h4><div class="outline-text-4" id="text-3-3-20"><p>同前面 <code>外出</code> 。</p></div></div><div id="outline-container-orgheadline39" class="outline-4"><h4 id="orgheadline39"><span class="section-number-4">3.3.21</span> 中断</h4><div class="outline-text-4" id="text-3-3-21"><p>同前面 <code>外出</code> , 这个活动意义不明朗（是由于处理事务中断？还是聊天游戏？还是工作中的事情？）所以视情况而定，实在不行就归为未知的 <b>_</b></p></div></div><div id="outline-container-orgheadline40" class="outline-4"><h4 id="orgheadline40"><span class="section-number-4">3.3.22</span> 无所事事</h4><div class="outline-text-4" id="text-3-3-22"><p>主要是平时，发呆、无聊、无事可做。</p><p>首先，它属于消耗的事情（什么也不做，必然不是积累性质）——生活；</p><p>其次，是额外消耗（人不应当有无所事事的时候，无所事事并不一定有助于恢复精力调整状态，应该是对自己的一种放纵）——仪式；</p><p>最后，看这个无所事事，是自己发呆、上网？还是和身边的亲人闲聊、还是与身边朋友同事等的闲聊，等等都无法确定的话，就定为 <b>_仪式</b> 。</p></div></div><div id="outline-container-orgheadline41" class="outline-4"><h4 id="orgheadline41"><span class="section-number-4">3.3.23</span> 发呆</h4><div class="outline-text-4" id="text-3-3-23"><p>同前面的无所事事，一般而言是自己的状态定为 <b>休闲</b> 。</p></div></div><div id="outline-container-orgheadline42" class="outline-4"><h4 id="orgheadline42"><span class="section-number-4">3.3.24</span> 状态切换</h4><div class="outline-text-4" id="text-3-3-24"><p>主要是做一件事情之前，将状态调整成做这个事情的状态以便于更好的完成此事。</p><p>首先，是属于消耗类的活动（显然它并会积累物质精神财富）——生活；</p><p>其次，是基本的消耗（任何人做事情总是有切换不同状态的时候，无法避免）——规律；</p><p>最后，它其实是具有恢复的性质（调整/恢复自己的状态、精力），所以属于 <b>休息</b> 。</p></div></div><div id="outline-container-orgheadline43" class="outline-4"><h4 id="orgheadline43"><span class="section-number-4">3.3.25</span> 家务</h4><div class="outline-text-4" id="text-3-3-25"><p>理解成家中的事物，清洁整理、洗完拖地、洗衣收纳、做饭、餐后等等。</p><p>首先属于消耗性质（因为它明显不是积累性，不是收获性质）——生活；</p><p>其次，它属于额外的活动（不像吃饭睡觉那么必要，也不是所有人都要做家务）——仪式；</p><p>再者，因为它不是个人的事情，也不是对外的社交，是家中的事情，所以定为 <b>家庭</b> 。</p></div></div><div id="outline-container-orgheadline44" class="outline-4"><h4 id="orgheadline44"><span class="section-number-4">3.3.26</span> 微信电话</h4><div class="outline-text-4" id="text-3-3-26"><p>意义同样不是特别的明朗，可以是打电话、发微信，也可能是办理事情。上网查询，或者和人聊天。</p><p>一般而言，是与人聊天，属于生活中额外的消耗， 属于 <b>社交</b> ；</p><p>如果单单说这个活动，由于意义不明朗，或者时候整理的时候忘记了这个活动是做什么的，那只能归为 <b>_</b> 。</p></div></div><div id="outline-container-orgheadline45" class="outline-4"><h4 id="orgheadline45"><span class="section-number-4">3.3.27</span> 睡前</h4><div class="outline-text-4" id="text-3-3-27"><p>理解成睡觉前的活动，比如上网刷刷微博，或者清理一下被褥等。</p><p>首先，它属于消耗性质(因为它明显不是积累性的，是没有收获的活动)——生活；</p><p>其次，它是额外的活动(不像吃饭睡觉那么必要也不是每个人睡觉前都经历的过程)——仪式；</p><p>再者，如果是上网什么的，就定为 <b>休闲</b> ; 如果其它的子分类都不太符合，那么就当作是 <b>_仪式</b> 即可。</p></div></div><div id="outline-container-orgheadline46" class="outline-4"><h4 id="orgheadline46"><span class="section-number-4">3.3.28</span> 晨起</h4><div class="outline-text-4" id="text-3-3-28"><p>理解成起床前的活动，比如懒床，或者清醒一会。</p><p>首先，它属于消耗性质(因为它明显不是积累性的，是没有收获的活动)——生活；</p><p>其次，它是额外的活动(不像吃饭睡觉那么必要也不是每个人起床前都经历的过程)——仪式；</p><p>再者，再看下面的子分类都不太符合，那么就当作是 <b>_仪式</b> 即可。</p></div></div><div id="outline-container-orgheadline47" class="outline-4"><h4 id="orgheadline47"><span class="section-number-4">3.3.29</span> 餐前</h4><div class="outline-text-4" id="text-3-3-29"><p>就是只吃饭之前的活动，为了准备好吃饭的事项，比如做饭，或者烧水，或者其它。</p><p>首先，它属于消耗性质(因为它明显不是积累性的，是没有收获的活动)——生活；</p><p>其次，它属于基本消耗（因为吃饭之前准备工作都是可选的，比如你可以不做饭点外卖，或者反之不影响你吃饭）——规律；</p><p>再者，如果是做饭，那明显是居家性质的家务，所以定为 *事务*；</p><p>最后，如果是其它的事情，至少那也是基本消耗性质，不确定其中具体的子分类，就直接放置为 <b>_规律</b> 。</p><p>另外注意，如果是餐前的非基本活动，比如祈祷，这就不是 <b>_规律</b>, 而是 <b>_仪式</b> 了。</p></div></div><div id="outline-container-orgheadline48" class="outline-4"><h4 id="orgheadline48"><span class="section-number-4">3.3.30</span> 送宝宝上幼儿园</h4><div class="outline-text-4" id="text-3-3-30"><p>首先，它属于消耗性质(因为它明显不是积累性的，是没有收获的活动)——生活；</p><p>再者，它是属于基本的消耗（因为虽然它不影响生活是否可以继续，但是小孩子是一定要上学的，上学就要送她，太小了）——规律；</p><p>然后，仔细检查暂时没有进一步合适的子分类，保险起见，所以定为： <b>_规律</b> 。</p></div></div><div id="outline-container-orgheadline49" class="outline-4"><h4 id="orgheadline49"><span class="section-number-4">3.3.31</span> 上班</h4><div class="outline-text-4" id="text-3-3-31"><p>这里主要指的是每天上班的路上，通勤的时候。</p><p>首先，它属于消耗性质(因为它明显不是积累性的，是没有收获的活动)——生活；</p><p>再者，它是属于基本的消耗（因为没有它你能活，但是你却到达不了公司，虽然它本身不影响你工作但是你想工作之前肯定少不了它）——规律；</p><p>然后，仔细检查暂时没有进一步合适的子分类，保险起见，所以定为： <b>_规律</b> 。</p></div></div><div id="outline-container-orgheadline50" class="outline-4"><h4 id="orgheadline50"><span class="section-number-4">3.3.32</span> 到公司</h4><div class="outline-text-4" id="text-3-3-32"><p>本意是到公司后进入工作之前的一些准备性质的活动（不会很长）。</p><p>首先，它属于消耗性质(因为它明显不是积累性的，是没有收获的活动)——生活；</p><p>再者，它是基本的消耗（因为这些事情，不影响你生活，但是你到公司还是要经历这个过程，你不可能一下子就能工作）——规律；</p><p>然后，仔细检查暂时没有进一步合适的子分类（它就像吃饭前的祈祷），保险起见，所以定为： <b>_规律</b> 。</p><p>注意，但是，这个规律也是相对的，如果你消耗的过长了，那么就不是规律，而是 <b>_仪式</b> 了。</p></div></div><div id="outline-container-orgheadline51" class="outline-4"><h4 id="orgheadline51"><span class="section-number-4">3.3.33</span> 午休后</h4><div class="outline-text-4" id="text-3-3-33"><p>理解成：午休醒来，进行状态的切换，有助于进入工作状态。</p><p>首先，它属于消耗性质（因为它明显不是积累性的，是没有收获的活动)——生活；</p><p>再者，它是额外的消耗（因为这些事情，不影响你干活，你也休息完了，只是名义上想高率给自己的心理暗示，做一些准备工作，比如深呼吸等）——仪式；</p><p>然后，仔细检查暂时没有进一步合适的子分类(显然它不是娱乐，就像是吃饭前的祈祷一样)，所以定为： <b>_仪式</b> 。</p></div></div><div id="outline-container-orgheadline52" class="outline-4"><h4 id="orgheadline52"><span class="section-number-4">3.3.34</span> 撸羊毛</h4><div class="outline-text-4" id="text-3-3-34"><p>理解成：上网、微信等等，总是有一些优惠的活动。</p><p>首先，它属于消耗性质（因为它明显不是积累性的，是没有收获的活动，有便宜可占不代表有所收获)——生活；</p><p>再者，它属于额外消耗（因为它并不是生活中必须的，也不是更好维持生活的基本要素，而是一种对生活积累的挥霍/奢侈/享受）——仪式；</p><p>然后，他是和你个人喜好的事情，所以就设置为： <b>_休闲</b> 。</p></div></div><div id="outline-container-orgheadline53" class="outline-4"><h4 id="orgheadline53"><span class="section-number-4">3.3.35</span> 洗漱</h4><div class="outline-text-4" id="text-3-3-35"><p>理解成，洗脸、洗澡、刷牙、等主要在卫生间。</p><p>首先，它属于消耗性质（因为它明显不是积累性的，是没有收获的活动)——生活；</p><p>再者，它是必要的消耗（吃喝拉撒洗睡的生活事务，至少有它们才是正常生活的开端）——作息；</p><p>然后，这是清理相关事项（洗漱的活动名称含义已经很清楚了，但是要与家务中的整理收纳和洗衣拖地分开），所以定为： <b>卫生</b> 。</p></div></div><div id="outline-container-orgheadline54" class="outline-4"><h4 id="orgheadline54"><span class="section-number-4">3.3.36</span> 杂务</h4><div class="outline-text-4" id="text-3-3-36"><p>这里理解成一些闲杂无法确定的事项（可能很多事情很琐碎，无法一一记录）。</p><p>首先，它属于消耗性质（因为它明显不是积累性的，是没有收获的活动)——生活（注：如果实在不确定，就备注一下，直接定为： <b>_</b> ）；</p><p>再者，无法进一步确定属性（什么是杂务？含义不明确，所以这里就不细分析了，认为不确定），所以定为： <b>_生活</b> 。</p></div></div><div id="outline-container-orgheadline55" class="outline-4"><h4 id="orgheadline55"><span class="section-number-4">3.3.37</span> 查询信息</h4><div class="outline-text-4" id="text-3-3-37"><p>这里理解成：上网、电话、或者其它为了办理某件事情的时候从事的活动。</p><p>首先，它属于消耗性质（因为它不会为你积累物质和非物质的财富）——生活；</p><p>再者，是基本消耗（因为为了办事而进行的活动，虽然不像吃饭睡觉那样必须，但是办好事情有是为了提升生活的）——规律；</p><p>然后，它是发生在你生活中的活动(你需要消耗你的精力，高效的利用你的精力去做的生活中的基本的事情)，所以定为： <b>事务</b> 。</p></div></div><div id="outline-container-orgheadline56" class="outline-4"><h4 id="orgheadline56"><span class="section-number-4">3.3.38</span> 查询租房信息</h4><div class="outline-text-4" id="text-3-3-38"><p>与查询信息一样，定为： <b>事务</b> 。</p></div></div><div id="outline-container-orgheadline57" class="outline-4"><h4 id="orgheadline57"><span class="section-number-4">3.3.39</span> 调整时间</h4><div class="outline-text-4" id="text-3-3-39"><p>这里理解成：对自己时间记录的回顾，优化，一些错误的修正分析。</p><p>首先，它属于非物质的积累（因为它有助于增长你对时间方面经验的积累）——进修；</p><p>再者，它既非创造也非获取（折中性，你并不是创造什么经验，也不是从哪里获取经验），所以分类定为： <b>管理</b> 。</p></div></div><div id="outline-container-orgheadline58" class="outline-4"><h4 id="orgheadline58"><span class="section-number-4">3.3.40</span> 上网闲逛</h4><div class="outline-text-4" id="text-3-3-40"><p>首先，它属于消耗性质（因为它不会为你积累物质和非物质的财富）——生活；</p><p>再者，它属于额外消耗（因为它并不是生活中必须的，也不是更好维持生活的基本要素，而是一种对生活积累的挥霍/奢侈/享受）——仪式；</p><p>然后：</p><ul class="org-ul"><li>如果是个人看看新闻、浏览网页、新闻等定为： <b>休闲</b> ；</li><li>如果与人聊天就是： <b>社交</b> ；</li><li>如果和家人在一起闲聊就是： <b>家庭</b>  。</li></ul></div></div></div></div><div id="outline-container-orgheadline59" class="outline-2"><h2 id="orgheadline59"><span class="section-number-2">4</span> 其它</h2><div class="outline-text-2" id="text-4"><p>这里是对额外内容的补充。</p></div><div id="outline-container-orgheadline60" class="outline-3"><h3 id="orgheadline60"><span class="section-number-3">4.1</span> 整理进度</h3><div class="outline-text-3" id="text-4-1"><ul class="org-ul"><li>[&gt;] <a href="../../../../../../mydata/orgmode/gtd/_study.html#ID-10bdb8d4-0954-4649-b980-f19cbc696421">解决问题——第一步，事务分类</a></li><li class="off"><code>[&#xa0;]</code> <a href="../../../../../../mydata/orgmode/gtd/_study.html#ID-f487fc08-8c4e-4124-8b20-d81fe70e4515">事务的分类</a></li></ul></div></div><div id="outline-container-orgheadline61" class="outline-3"><h3 id="orgheadline61"><span class="section-number-3">4.2</span> 分类反思</h3><div class="outline-text-3" id="text-4-2"></div><div id="outline-container-orgheadline62" class="outline-4"><h4 id="orgheadline62"><span class="section-number-4">4.2.1</span> 方法源于实践</h4><div class="outline-text-4" id="text-4-2-1"><p>前面得出的方法，虽然不是绝对的，但是分类之后，基本很少变动（因为我们都生活于正与反的二元世界）；或者变动了也有能容许变动的程度（“其它”分类）。</p><p>但是在得出这个方法前，也是进行了无数的错误尝试的。有时候我们分类，常常直接从现实或者随意的抽取结果得出分类体系，这样难免会经常变动；这时候这个时候运用前面的方法来分类，能解决很多问题。</p><p>关键是：方法并非凭空产生，它源于实践。即：先通过实践探索总结方法，再通过方法解决完善实践问题。实践是鸡，方法是蛋，但这些由我们自身决定。^_^</p></div><div id="outline-container-orgheadline63" class="outline-5"><h5 id="orgheadline63"><span class="section-number-5">4.2.1.1</span> 诞生实践的方法</h5><div class="outline-text-5" id="text-4-2-1-1"><p>举个真实的例子，我个人经历之后的反思：</p><p>以前按照直观的方式，我将生活分为：学习、工作、管理、生活，四个方面。乍一看，不错，为什么呢？我也给出了一个看似很有道理的分析，因为四者的关系: </p><ul class="org-ul"><li>学习, 提升管理/工作/生活水平和经验</li><li>工作, 为学习/管理/生活提供基础</li><li>管理, 提升学习/工作/生活的效率以及水平</li><li>生活, 是学习/工作/管理的意义所在</li></ul></div></div><div id="outline-container-orgheadline64" class="outline-5"><h5 id="orgheadline64"><span class="section-number-5">4.2.1.2</span> 用理论改进实践</h5><div class="outline-text-5" id="text-4-2-1-2"><p>但是，这样我们的方法就完美了吗？经过前面比较的分类分析与得出的结论，显然这个简单确定的方式，是存在许多的漏洞的。</p><p>继续进入我们的三部曲：</p></div><ol class="org-ol"><li><a id="orgheadline93"></a>空-发现问题<br><div class="outline-text-6" id="text-4-2-1-2-1"><p>我以前的这个分类方式，随着时间的推进和更多的记录发现：</p><ul class="org-ul"><li>好处1： 有些事情还好，如 “生活”，这个大分类至少基本变动不大，有什么相关的事项至少进一步划分整理前可以存到“生活”中；</li><li>问题1： 有些事情如学习个人管理技术，这就很难抉择是管理方面的，还是学习方面的，无法抉择怎么办？于是不得不创建一个“临时”的分类来容纳失误；</li><li>问题2： 还有一些事情，整理工作资料、学习资料，是管理方面的？工作方面的？还是学习方面的？还得堆积在新创建的“临时”分类中有待将来整理。</li></ul></div></li><li><a id="orgheadline94"></a>雨-分析问题<br><div class="outline-text-6" id="text-4-2-1-2-2"><p>这样的情况很多，导致经常进行分类的调整，资料的迁移等等。直至后来，直接怀疑不是分类的问题，问题在于分类的方式。</p><p>经过反思，发现即便是分类，还是需要一些系统、逻辑、理性的思路或推断，其它事情应该类似吧。</p><p>于是，便是前面新一轮的“天空有乌云”，“看样子要下雨”，“应该打雨伞”（空、雨、伞）分析，即：发现问题、分析问题、解决问题。</p></div></li><li><a id="orgheadline95"></a>伞-解决问题<br><div class="outline-text-6" id="text-4-2-1-2-3"><p>运用前面的方式，分类，刚刚发现的问题很容易解决。</p><ul class="org-ul"><li><p>问题1</p><pre class="example">学习个人管理技术，不会直接带来收入，也不是生活的一部分，显然是属于“进修”这个范围；因为学习管理技术，是从外部获取知识，所以，属于进修中的“学习”子分类。</pre></li><li><p>问题2</p><pre class="example">整理工作资料、学习资料，显然不是能直接带来收入的活动，也不是生活的一部分，那么它只能属于“进修”这个分类。因为整理工作资料，是靠自己意愿进行的，是自己内部消化组织的过程，并没有从外面获取知识，所以，属于进修中的“管理”子分类。</pre></li><li><p>进一步</p><pre class="example">另外，不断的将东西添加到“临时”的文件夹中，待合适的时候消化组织，方法不错，这个“临时”目录的作用也是相对固定的，所以还不如改成自认为合适的名字可以一直使用下去，比如“其它”。</pre></li></ul><p>至此，答案很明显。一言难尽，简单来说又回到了前面：实践促使理论诞生，理论进一步改善实践。</p></div></li></ol></div></div><div id="outline-container-orgheadline65" class="outline-4"><h4 id="orgheadline65"><span class="section-number-4">4.2.2</span> 进一步探索</h4><div class="outline-text-4" id="text-4-2-2"><p>最好的方法不是完美的方法，而是可以进化的方法，最实用的方法不是好用的方法，而是理解方法的意义。</p><ul class="org-ul"><li>关于策略的策略</li><li>分类实质索引</li></ul></div><div id="outline-container-orgheadline66" class="outline-5"><h5 id="orgheadline66"><span class="section-number-5">4.2.2.1</span> 分类的实质是什么</h5><div class="outline-text-5" id="text-4-2-2-1"></div><ol class="org-ol"><li><a id="orgheadline96"></a>原理的思考<br><div class="outline-text-6" id="text-4-2-2-1-1"><p>分类有两个目的：一、快速查找。二、思维模型。</p><p>前者可实现在已有内容中迅速定位到当下需要的部分；后者在纳入新内容时令其有合适的归属保持整个已有知识体系的持续完善与进化。</p><p>我没有对人脑记忆有过多的研究，但印象中有看过说人脑具有“被动”回忆的特性，并针对这个特性有很多如：宫殿、桩等记忆方式。根据简短的提示，可以让人回忆起相关的大量信息。按照我的思路，把这个简单理解概况成这个意思：人脑记忆量惊人，但弱点是提取信息时需要依靠一些提示线索性提示而触发，而非主动回忆。如果没有提示信息，那么便几乎无法回忆，但内容确依旧在脑中。心理学中通过催眠等方式，让接收者不知不觉挖掘出潜意识中没有注意到的大量信息，也应是这个原理。</p></div></li><li><a id="orgheadline101"></a>分类即索引<br><div class="outline-text-6" id="text-4-2-2-1-2"><p>从前面的考虑来看，其实分类就是一种索引内容的方式。将内容的共性抽象出来。</p></div><ol class="org-ol"><li><a id="orgheadline97"></a>日常经历<br><div class="outline-text-7" id="text-4-2-2-1-2-1"><p>每个人都有自己的经历，不同时期有不同的经历。按照经历的事务，可以最直接的对自己的分类体系与生活相映射。比如：学习、工作、生活。但是，人的经历是变化的，这样的分类会过于频繁的变化。</p></div></li><li><a id="orgheadline98"></a>字母索引<br><div class="outline-text-7" id="text-4-2-2-1-2-2"><p>比如，内容的首字母，根据26个字母将一切能够用语言表述的内容归结到26个类中。但是缺点就是，同样内容，不同人不同时间描述的方式可能又不完全相同，所以这是这类索引思维的不确定性，适合辅助建立细节的分类/标签，但是经常变动。</p></div></li><li><a id="orgheadline99"></a>元的思维<br><div class="outline-text-7" id="text-4-2-2-1-2-3"><p>二元思维（阴阳），三元思维（天地人等），四元，五元等等等等，是抽象出一切事务的内在规律做为索引。它便于描述一些内容一致，但是描述因人和时间会有变化的内容，缺点就是，分类太大，如果想细化描述，就要求有足够的生活经历，足够合理的抽象，越细节，越难以抽象，层次也会很多。适合建立大体的分类框架，不经常变动。</p></div></li><li><a id="orgheadline100"></a>总结<br><div class="outline-text-7" id="text-4-2-2-1-2-4"><p>其实无论是元，还是字母顺序还是其它，这样的分类都是对内容的一种分割，简单用元来总结吧：这个世界是二元的，也可以是三元的，多少元都行，但归根结底都是——平衡的；世界的元，本质是内容的索引。</p><p>将这个思想应用到分类当中，很容易得出比较完整的互斥分类策略。(参考: <a href="../../../../../../mydata/orgmode/gtd/_study.html#ID-0342cb44-c9a6-4c3b-b8dc-3700127b01e8">基于 “元” 的分类思想</a>)</p><p>很明显，上层分类是大致确定的，细节分类变化多端。我们可以将个人经历、字母索引、与元与结合起来使用，关键是保证内容索引的确定性。</p><ul class="org-ul"><li>上层大分类用元：元的思想是确定的，但是要找对角度，上层大分类用元思维确定，做为总体框架，也能降低元思维应用的复杂度。</li><li>细节用经历，辅助用字母索引：个人经历是变化的，字母排序固定但因人表达等而异也是不确定，底层细节分类用生活经历动态确定，字母辅助索引。</li></ul></div></li></ol></li></ol></div><div id="outline-container-orgheadline67" class="outline-5"><h5 id="orgheadline67"><span class="section-number-5">4.2.2.2</span> 如何应对分类体系的不断</h5><div class="outline-text-5" id="text-4-2-2-2"><p>对自己分类体系应用一段时间后，会深有体会：随着生活境况的变化，或者概念的清晰化等等，这个体系内容也会有所变化。很可能经过一段时间之后，自己的分类体系不再适用，于是更新分类体系，这样又导致已有内容翻天覆地的变化。不断地更新分类、不断地调整原有内容的分类，是一个很耗时的过程。那么，如何能够建立一套“完美”、“不变”、“可进化”的分类体系呢？</p><p>抽身而出，观察这个进化的世界，我们很可能得到这个问题的答案是——“无”。因为，世界上不可能有完美、不变的事物，但是——答案也可以是——“有”。因为，最完美的事物就是能够不断进化，最恒久的事物就是接受变化。</p><p>我们的问题在于，没有一个完美的分类策略，但是我们上升一个维度，用更高维度的视角去控制低维度的事物，这个问题却不是那么困难：我们可以设计一个设计分类策略的策略，可不同的分类策略适应不同的状况。</p></div><ol class="org-ol"><li><a id="orgheadline102"></a>建议方式——通过时间前缀<br><div class="outline-text-6" id="text-4-2-2-2-1"><p>首先，确认我们的需求。即：建立一套可以随时更新的系统，又能保证原有数据不被丢失。</p><p>然后，进一步分析。很明显，这个问题关键的变化点在于——时间。我们希望，分类方案能够不断更新，又不用立即大量迁移数据，还能够保持原有方案，那么，当需要更新分类的时候，我们大可以在已有分类的基础上。大胆创建新的分类，在新类加版本前缀，既然时间导致一切变化，我们就用时间做为新类的版本前缀。并且，这个前缀策略本身也是可以更新进化的，比如你开始仍然用无前缀的分类体系（你最初的分类体系，也可能是你没有想过要这样用前缀标记等导致），后来用“1809&lt;新分类名&gt;”表示18年9月你更新的分类系统。我们新的内容就存放新的分类体系中，最新分类体系必在最近策略中。</p><p>最后，得出解决方式。这样，有了新分类体系后，不用立即迁移已有所有内容，原有内容仍然保留在原有的分类体系中，新分类体系的分类全都加上前缀（一般为时间前缀）。新的内容就用往新分类体系中记录即可。这也保留了历史。</p><p>总结一下，就是：将不同时期的分类体系，以前缀（如特定期间的时间前缀）标记，便于保留以前的分类历史思维，用作归档。注：</p><ul class="org-ul"><li>通过用时间前缀，来标记不同时期的分类策略，能适应不断变化的分类策略的应用，但是太过频繁并且比较小范围的分类变动不用考虑。</li><li>如果出现分类体系过多导致分类杂乱的现象，大可以将不用的旧分类隐藏，无法隐藏就归档，或者统一移动到一个被称作"旧有体系"的目录中。</li><li>如果分类名子中的前缀，让你感觉分类名难看，大可用前缀做为新分类的目录，新分类名在以时间为前缀的目录中，也就不用前缀了，自然时间方式归档。</li><li>分类前缀的长度不用过长，年+月4位就够了，（比如1811xxx表示2018年11月的规则），因为人一辈子也就100来年，分类变化的频率一般不会是一个月。</li><li>分类策略的策略是这样，策略的策略的策略就再加前缀，比如你后来用其它的方式来标记新分类体系策略，那么就201809，等等，以此类推，一般不会太多。</li></ul></div></li></ol></div></div></div><div id="outline-container-orgheadline68" class="outline-3"><h3 id="orgheadline68"><span class="section-number-3">4.3</span> 留给将来的自己</h3><div class="outline-text-3" id="text-4-3"><p>为将来可能会做的读后感，留一块地方。</p></div></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;
&amp;#x2014;
layout: posts
title: 时间管理：3.解决问题——第一步，事务分类
categories: [categories, note]
comments: true
&amp;#x2014;
#+END_HTML
&lt;/p&gt;

&lt;div id=&quot;tab
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://0.0.0.0:4000/2019/02/27/timemanage_2_how_to_start/"/>
    <id>http://0.0.0.0:4000/2019/02/27/timemanage_2_how_to_start/</id>
    <published>2019-02-26T16:00:00.000Z</published>
    <updated>2019-10-22T08:07:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2014;layout: poststitle: 时间管理：2.分析问题——如何开始categories: [categories, note]comments: true&#x2014;#+END_HTML</p><div id="table-of-contents"><h2>&#30446;&#24405;</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 类似的问题</a></li><li><a href="#orgheadline2">2. 共同的方式</a></li><li><a href="#orgheadline3">3. 确认思路</a></li><li><a href="#orgheadline4">4. 开始行动</a><ul><li><a href="#orgheadline5">4.1. 如何开始记录？——分类</a></li><li><a href="#orgheadline6">4.2. 如何进行分类？——寻找分类策略而非分类本身</a></li></ul></li></ul></div></div><p>时间总是不知不觉逝去，如何改善这种状况？——时间管理，很明显，管理好自己的时间或许是一个出路。</p><p>时间是抽象的，在提出可能能进行有效管理的方式之前，先理解一下提出该方式的思路。</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 类似的问题</h2><div class="outline-text-2" id="text-1"><p>不知道大家有没有这个体会：</p><p>逛超市时</p><pre class="example">来到超市，不知道买什么东西；最后不知不觉，买了很多没必要的东西。如果出行前对所缺失的东西都有所记录的话，到超市会更有目的性。</pre><p>理财时</p><pre class="example">消费的时候，不知道所消费的价格，最后不知不觉，花了很多没有必要的钱。如果对每一笔花销及时记录，消费的时候，会自然的衡量，状况也会好很多。</pre><p>学习时</p><pre class="example">进修的时候，不知道看些什么，最后不知不觉，什么也没有学会。如果在学习的时候先做好笔记，在进修的时候再拿出来分析、消化这些知识，最终会掌握相应的技巧。</pre><p>执行计划时</p><pre class="example">将要做某件事情的时候，却不知从何开始，不知不觉过去了很久了却什么都没有做。如果在执行任务之前，先尽可能在任何地点、时间及时收集到有关的想法，再组织整理汇集分类，最终到执行的时候，会更有目的性并最终完成。</pre></div></div><div id="outline-container-orgheadline2" class="outline-2"><h2 id="orgheadline2"><span class="section-number-2">2</span> 共同的方式</h2><div class="outline-text-2" id="text-2"><p>其实类似的事情有很多，仔细观察一下你会发现，导致这些事务成功的过程，都有一个共性，就是如下类似的三步：</p><ul class="org-ul"><li>发现（列出/记录&#x2026;）问题</li><li>分析（归纳/组织&#x2026;）问题</li><li>解决（理解/完成&#x2026;）问题</li></ul><p>这里简单借用下麦肯锡笔记法中提到的空、雨、伞来总结一下（对麦肯锡笔记了解不多，可能也不准）。</p><p>麦肯锡笔记法是一个通过笔记方式解决问题的方式：空、雨、伞，其实是对：“天空有乌云，应该要下雨，所以得打伞”的简写。</p><p>它是对解决问题的三个阶段的抽象性概述，直观点说就是：发现问题、分析问题、解决问题。</p><p>而上面例子，就像对这个思想的一个变相应用，这是一个符合一般人思考规律的过程(感觉如此，实际并未深入调查关于人的思考规律)。</p><p>正是因为经历了上面提到的过程，所以：</p><ul class="org-ul"><li>到超市前的清单是对购物内容的记录，购物前的排序是对购物目的的清晰化，有了清晰的购物清单便能轻松购物。</li><li>对每一笔花销及时的记录，日常浏览各类花销以及比例的分析，有让每次消费更合理。</li><li>学习时及时做好笔记（记录），过后的时间内对记录的内容消化（分析），最终会很好的吸收（掌握）相应知识。</li><li>执行任务前，尽可能集思广益收集一切琐项（记录），再组织整理归纳排序（分析），最终执行（行动）会更容易完成。</li></ul></div></div><div id="outline-container-orgheadline3" class="outline-2"><h2 id="orgheadline3"><span class="section-number-2">3</span> 确认思路</h2><div class="outline-text-2" id="text-3"><p>购物要先列清单、理财要先记账、学习要先笔记、任务要先规划……同理，显然对时间的管理，应当如此： <b>管理时间，要先记录时间。</b> </p><p>回归主题：时间记录——只有掌握好每时每刻，才可能管理好时间。</p><p>（仔细想想，在得出这个结论之前，我们是否也也应用了类似的三步分析过程呢^_^）</p><p>虽然结论得出的有些“突然”，却总是有一种“似乎被理论说服了，却心底不够确定”的感觉？</p><p>这样的话，我能想到的只有将这段时间以来收集的零散时刻抓住的些许体会分享，</p><p>或许将来会有更多，或许也有机会并入，但人各有不同，希望能够更坚定同道者继续的信心：</p><ul class="org-ul"><li>只有做好记录，才能为接下来的分析、与规划打好基础。</li><li>只有对自己要做的事情很清晰了之后，才会更容易记录自己做过的事情，所以要对事物分类。</li><li>深感自己如同随波逐流的一叶扁舟，一切都处于无法掌控的状态，如何掌控?不清晰则乱,乱则无法掌控！</li><li>看清自己的每时每刻，才能看见自己的未来；掌控好自己的每时每刻，才能掌握自己的一生！</li><li><p>借助规律，而非感觉。</p><pre class="example">偏好按照感觉而不按照规律做事，是因为不明白规律，根本是原因你对你所遇见的了解不够清晰。深刻的体会到，感觉只是片面的、短暂的、主观的感受，规律才是系统的、长久的、客观的事实。当足够清晰并了解掌握一切，感觉会更接近规律，从而自然而然变得按规律做事不按照感觉做事。当一切形成了规律，一切会顺理成章，一切的未知似乎已经被掌握，不再焦虑、迷茫、以及空虚。</pre></li></ul></div></div><div id="outline-container-orgheadline4" class="outline-2"><h2 id="orgheadline4"><span class="section-number-2">4</span> 开始行动</h2><div class="outline-text-2" id="text-4"><p>在前面，我们确认了一点：想要做好时间管理，首先我们需要做的，便是记录下你身上所有发生事情的所有时间信息。即： <b>时间记录</b> 。</p><p>这里重点给出第一步行动，因为有了第一步，接下来的过程就容易多了，并且这个问题也还在继续探索中。</p></div><div id="outline-container-orgheadline5" class="outline-3"><h3 id="orgheadline5"><span class="section-number-3">4.1</span> 如何开始记录？——分类</h3><div class="outline-text-3" id="text-4-1"><p>直接面对这个任务我们会发现，要记录的事情各式各样、杂乱无章，似乎根本不可能全部记录下来。如何记录才能有助于真正有意义的跟踪与分析呢？</p><p>其实，仔细想想，难以进行下去的很大一部分原因是对自己从事事务分类的不明确，</p><p>所以先对要记录的事务先做好分类，记录时再根据分类组织记录项，应该能有所改善。</p></div></div><div id="outline-container-orgheadline6" class="outline-3"><h3 id="orgheadline6"><span class="section-number-3">4.2</span> 如何进行分类？——寻找分类策略而非分类本身</h3><div class="outline-text-3" id="text-4-2"><p>需要要将所有待记录的事件分类，可是同样因待记录的数据过于庞大、繁杂、变化多端，却有种无从下手的感觉，怎么分类才能达到简明，并且保罗万象呢？</p><p>经过长时间的实践发现，分类的情况应该是因人而异的，即使是同一个人，分类的方式在不同的时间也有所不同，并且存在分类交叉的现象，这是复杂的一个关键。</p><p>问题不在于分类本身，而在于分类策略，接下来将专用针对时间记录，给出一个分类策略，特点是事务间基本互斥（同一时间只能做一件事情），这个分类并非内容/知识管理组织中的分类/标签(可以交叉从属)。</p></div></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;
&amp;#x2014;
layout: posts
title: 时间管理：2.分析问题——如何开始
categories: [categories, note]
comments: true
&amp;#x2014;
#+END_HTML
&lt;/p&gt;

&lt;div id=&quot;table-o
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://0.0.0.0:4000/2019/02/19/timemanage_1_elapsed_time/"/>
    <id>http://0.0.0.0:4000/2019/02/19/timemanage_1_elapsed_time/</id>
    <published>2019-02-18T16:00:00.000Z</published>
    <updated>2019-10-22T08:07:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2014;layout: poststitle: 时间管理：1.发现问题——时间的流逝categories: [categories, note]comments: true&#x2014;#+END_HTML</p><div id="table-of-contents"><h2>&#30446;&#24405;</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 你的一周，究竟有多少时间?</a><ul><li><a href="#orgheadline2">1.1. 1 想法</a></li><li><a href="#orgheadline3">1.2. 2 动机</a></li><li><a href="#orgheadline4">1.3. 3 准备</a></li><li><a href="#orgheadline5">1.4. 4 计算</a><ul><li><a href="#orgheadline6">1.4.1. 4.1 最初</a></li><li><a href="#orgheadline7">1.4.2. 4.2 减去必不可少的睡觉</a></li><li><a href="#orgheadline8">1.4.3. 4.3 减去不得不从事的职业</a></li><li><a href="#orgheadline9">1.4.4. 4.4 减去必不可少的饮食</a></li><li><a href="#orgheadline10">1.4.5. 4.5 减去必定要做的卫生</a></li><li><a href="#orgheadline11">1.4.6. 4.6 减去必不可少的精力恢复</a></li><li><a href="#orgheadline12">1.4.7. 4.7 减去不知不觉的移动</a></li><li><a href="#orgheadline13">1.4.8. 4.8 减去不知不觉的休闲、交际</a></li><li><a href="#orgheadline14">1.4.9. 4.9 减去不得不进行的健康医疗</a></li><li><a href="#orgheadline15">1.4.10. 4.10 减去必须要做的事务</a></li></ul></li><li><a href="#orgheadline16">1.5. 5 答案</a></li><li><a href="#orgheadline17">1.6. 6 怎样</a><ul><li><a href="#orgheadline18">1.6.1. 消耗</a></li><li><a href="#orgheadline19">1.6.2. 积累</a></li></ul></li></ul></li></ul></div></div><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 你的一周，究竟有多少时间?</h2><div class="outline-text-2" id="text-1"></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> 1 想法</h3><div class="outline-text-3" id="text-1-1"><p>我思考了好久，想要专门写一篇文章，描述下时间的宝贵，可是得知结果后，却发现专门花费时间写这样一篇文章，真是太为奢侈的浪费。</p></div></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">1.2</span> 2 动机</h3><div class="outline-text-3" id="text-1-2"><p>不写出来，又担心会忘记，尤其是现在这个信息如海，一切都让人应接不暇的世界。对比忘记这个的结果的可怕，我只好心惊胆颤，利用一切似乎没有被浪费的、欺骗自己那不是奢侈的时间，上厕所时、路上、排队等候……，总之是用一切可能无用的一点一滴的碎片，堆积出了此文章，文章表达肯定是有不足之处的，只是希望给自己一个警醒，也希望能将思想传达出来，给大家一个参考。</p></div></div><div id="outline-container-orgheadline4" class="outline-3"><h3 id="orgheadline4"><span class="section-number-3">1.3</span> 3 准备</h3><div class="outline-text-3" id="text-1-3"><p>我们中有学生、职业者、居家人员……等等，不过在本质上，结果对我们来说是一样的，就暂且以我这个职业者的角度来看看这个结果吧。</p><p>假设，你有一份不错的职业，每天工作八个小时，工作不忙，还有每周二天的双休日。钱多事少离家近，位高权重责任轻，并且自身还积极上进。</p><p>——显然，这是理想。:)</p><p>姑且就在这样理想的情况下，我们一起看一下，究竟能有多少时间吧。</p></div></div><div id="outline-container-orgheadline5" class="outline-3"><h3 id="orgheadline5"><span class="section-number-3">1.4</span> 4 计算</h3><div class="outline-text-3" id="text-1-4"><p>一个人的每天都是变化的，所以下面将用一周来做为单位（时间太短不准，时间太长太复杂），粗略的分析并计算一下。</p></div><div id="outline-container-orgheadline6" class="outline-4"><h4 id="orgheadline6"><span class="section-number-4">1.4.1</span> 4.1 最初</h4><div class="outline-text-4" id="text-1-4-1"><p>一周时长：24*7 = 168小时。</p></div></div><div id="outline-container-orgheadline7" class="outline-4"><h4 id="orgheadline7"><span class="section-number-4">1.4.2</span> 4.2 减去必不可少的睡觉</h4><div class="outline-text-4" id="text-1-4-2"><p>假设周末不睡懒觉，作息规律，平均每天睡觉22:30-6:30共需8小时。</p><p>——一周还剩：168-8*7 = 112小时。</p></div></div><div id="outline-container-orgheadline8" class="outline-4"><h4 id="orgheadline8"><span class="section-number-4">1.4.3</span> 4.3 减去不得不从事的职业</h4><div class="outline-text-4" id="text-1-4-3"><p>假设正常工作每周5天，8小时/天且，每天能忙里偷闲2小时，即你只需要工作6小时/天。</p><p>——一周还剩：112-6*5 = 82小时。</p></div></div><div id="outline-container-orgheadline9" class="outline-4"><h4 id="orgheadline9"><span class="section-number-4">1.4.4</span> 4.4 减去必不可少的饮食</h4><div class="outline-text-4" id="text-1-4-4"><p>假设一天三顿饭，每顿餐前准备+吃完饭时间30分钟，那么一天共需1.5小时。</p><p>具体这样计算：</p><ul class="org-ul"><li>根据日常经验，一顿饭的时间一般是15分钟，但是这只是纯粹的时间。</li><li>对于居家的情形，一顿饭不只如此（不是你一个人吃饭），算上餐前/餐后事项（上桌与撤桌），却可能在近一个小时！</li><li>即便是最简洁的快餐、外卖，相关的选择、到达指定地点、以及排队等也是需要时间的。</li></ul><p>这里只将餐前餐后那些家务性的事情先省略，得出这样的时间，平均起来，也应该是合理的。</p><p>——一周还剩：72-1.5*7 = 71.5小时 = 4290分钟。</p></div></div><div id="outline-container-orgheadline10" class="outline-4"><h4 id="orgheadline10"><span class="section-number-4">1.4.5</span> 4.5 减去必定要做的卫生</h4><div class="outline-text-4" id="text-1-4-5"><p>假设每天卫生间，小便（3-5次）大便（1次）算上洗手加起来共需20分钟。</p><p>——一周还剩：4290-20*7 = 4150分钟。</p></div></div><div id="outline-container-orgheadline11" class="outline-4"><h4 id="orgheadline11"><span class="section-number-4">1.4.6</span> 4.6 减去必不可少的精力恢复</h4><div class="outline-text-4" id="text-1-4-6"><p>假设你日间间歇休息的时间（发呆、恢复精力、调整状态、午休等），每天需30分钟，另外工作日午休需15分钟。</p><p>具体这样计算：</p><ul class="org-ul"><li>上午工作/活动间隙：15分钟。</li><li>下午工作/活动间隙：15分钟。</li><li>午休：15分钟。</li></ul><p>——一周还剩：4150-30*7-15*5=3865分钟。</p></div></div><div id="outline-container-orgheadline12" class="outline-4"><h4 id="orgheadline12"><span class="section-number-4">1.4.7</span> 4.7 减去不知不觉的移动</h4><div class="outline-text-4" id="text-1-4-7"><p>假设你每天行走时间（不可能一直呆在原处）只有35分钟。</p><p>具体的计算：</p><ul class="org-ul"><li>本人上班通勤，不算坐车而是走到车站的时间，每次都往往15分钟，家里和公司离车站都不远，实际一天上下班两趟应该在30分钟。</li><li>周末活动应该大于通勤的行走吧，也算成30分钟。</li><li>平时活动，拿东西，卫生间等等，怎么都是要行走的，就算5分钟。</li></ul><p>已经尽可能少的计算了，我记得以前上小学初近10年，家里到学校步行正好1000米15分钟，大概1500步，1分钟100步，如果你有记录步数的工具，会更精确。</p><p>——一周还剩：3865-35*7 = 3620分钟。</p></div></div><div id="outline-container-orgheadline13" class="outline-4"><h4 id="orgheadline13"><span class="section-number-4">1.4.8</span> 4.8 减去不知不觉的休闲、交际</h4><div class="outline-text-4" id="text-1-4-8"><p>假设你每天闲聊时间（电话、微信、网络、朋友、亲人、同僚）只有30分钟。</p><p>具体的计算：</p><ul class="org-ul"><li>上网</li><li>电话</li><li>微信</li><li>朋友圈</li><li>闲聊</li><li>等等</li></ul><p>这个也是尽量少的计算了的，我上网不是很多，电话很少，微信也很少聊，一般都是咨询或者意料外的联系与交际。我想对于一般人而言，单单刷朋友圈就不止这些时间吧？</p><p>——一周还剩：3620-30*7 = 3410分钟。</p></div></div><div id="outline-container-orgheadline14" class="outline-4"><h4 id="orgheadline14"><span class="section-number-4">1.4.9</span> 4.9 减去不得不进行的健康医疗</h4><div class="outline-text-4" id="text-1-4-9"><p>假设生病就医的时间一周平均1.5小时。</p><p>具体的计算不可能每个人都不会生病，而且每次生病对时间消耗的影响非常的大，不但生病期间状态和效率低下，而且看病也是要花费时间的如：</p><ul class="org-ul"><li>预约</li><li>排队</li><li>去医院</li><li>就医</li><li>买药</li><li>等等</li></ul><p>每次折腾下来，严重的往往几天没有精神，每年都平均有1到2次不大不小的病状。</p><p>假设每年1次，每次一天多，那一个月平均下来约2、3个小时，一周就算半个小时吧。</p><p>另外，</p><ul class="org-ul"><li>家里如果有任何一个人有生病，尤其是家里老人、小孩的体弱者的情况，受到的影响</li><li>学校中，就是走的很近的朋友/同学/舍友生病，受到的影响</li></ul><p>假设每个人身边有2个这样的人吧，按照前面计算，每人平均半个小时，两个人就是1个小时。</p><p>——一周还剩：3410-90=3320分钟。</p></div></div><div id="outline-container-orgheadline15" class="outline-4"><h4 id="orgheadline15"><span class="section-number-4">1.4.10</span> 4.10 减去必须要做的事务</h4><div class="outline-text-4" id="text-1-4-10"><p>假设家务和规划、日常琐事、意料之外事项占用的时间只有：12小时50分钟+10.5小时+6.5小时+1小时10分钟+1小时45分钟 = 32小时45分钟 = 1965分钟</p><p>具体的计算：</p><p>家务类：12小时50分钟</p><ul class="org-ul"><li>对于居家人员，换洗衣物、被褥、清洁整理是必要的事情，就算你比较邋遢、有别人为你做这些，至少平均也需要20分钟/天，一周2小时20分钟；</li><li>清洁卫生，主要是餐后清洁、扫地拖地、家具擦拭、清洗/晾晒衣物被褥等，这个时间不固定的，按照经验，一日三餐餐后的洗碗和整理一般是20分钟一次，扫地拖地家具擦拭那次都不会少于1个小时，少点算吧，减去30分钟也得是：20*3+60-30=90分钟/天，一周10.5小时；</li></ul><p>餐前准备：10.5小时</p><ul class="org-ul"><li>居家人员做饭，是我亲身实践的事情，每次饭菜做好的时间，哪怕是简单的一饭一荤一素，都远远不止1个小时，何况是不止一个人的饭菜；</li><li>若只在外面吃饭，外卖或餐饮店，点餐选餐也是需要时间的（似乎前面已经算到了），不排除个别时候的高效。</li></ul><p>所以不多算，餐前准备这一项，就以平均30分钟一顿的时间，就是30*3=90分钟/天，一周10.5小时；</p><p>日常消费：6.5小时</p><ul class="org-ul"><li>日常生活中的衣食住行，是不可少的，每隔一段时间必定会去一趟商场、超市，一次至少要2个小时的时间，即便是网购也只是选择上方便，时间实际不会少多少，而有些人甚至每天都会有一些小的消费（抽烟、饮料、零食、等等），姑且，总共我们就算一周3个小时吧；</li><li>走亲访友，相信每个人每个月至少得有，一次从头到尾怎么都要4个小时以上的时间，而如果是出远门的，甚至会更多，姑且算作一个月15个小时吧，平均下来一天0.5小时，一周3.5小时。</li></ul><p>规划排程：1小时10分钟</p><ul class="org-ul"><li>对生活中的事务，如果多或复杂的时候，总是要做一些规划的，日常我们处理的事务太多了，少算一些，假设一天就10分钟吧（实际远远不止），一周也要70分钟。</li></ul><p>意料外：1小时45分钟最后，作业、加班、客户、小孩生病，这些不想发生的事情，没有计算到的事情，相信大多数人都会经历吧，就算15分钟，很少了，一周也要105分钟。</p><p>实际上，相信大多数人，远远不止于此，然而，所剩太少了，还是到此为止吧。</p><p>——一周还剩：3320-1965=1355分钟</p></div></div></div><div id="outline-container-orgheadline16" class="outline-3"><h3 id="orgheadline16"><span class="section-number-3">1.5</span> 5 答案</h3><div class="outline-text-3" id="text-1-5"><p><b>没错，按照这样的方式计算，最后的答案就是：我们的一周，只有1355分钟。</b></p><p>可能有人会想，算了这么多的时间，正常这就是一个人的生活啊，算这些有什么意义？</p><p>首先，我们要注意，以上要做的事情，我都是刻意加上了：必须要做、不得不做、必不可少、不知不觉……之类的修饰，也就是说，这些事情，不是你能控制的。</p><p>再者，回到前面的提问，计算这些时间，是为了逐渐提取出我们真正想要的、能够控制的时间。平时被太多的事务蒙蔽了双眼的我们，以为自己有很多的时间，实际呢？我们的时间，少的可怜。</p><p>显然，显然这样计算是不准确的，有些方面也过于片面，计算的方式过于简单……等等，而且这里所做的工作是相对徒劳的，因为太多的不速之客、意外事件、中断干扰、请人帮忙、帮助别人……等等等等，我都没有计算在内，也不可能全部都想象的到，因为剩下的时间太少了，也姑且只算这么多吧。相信大家肯定还能再加入不少的类似的时间，但是，加入的越多，就意味着下面你似乎能剩下的可控时间越少了。</p><p>不过，至少这样或多或少的，应该能得到比猜想更接近真实结果的答案吧。我们至少能够稍微感知的到，我们真正拥有的时间，很少，很少，在下次计划一个事情的时候（比如我要一个月内看完一本提升自我的书籍），就会更容易仔细的斟酌而非随意决定了。</p><p>所以，至此为止还有1355分钟，不是小时，所以，折合起来我们一周的可控时间至多是：23小时不到，平均3小时多一点/天。</p></div></div><div id="outline-container-orgheadline17" class="outline-3"><h3 id="orgheadline17"><span class="section-number-3">1.6</span> 6 怎样</h3><div class="outline-text-3" id="text-1-6"><p>然后在一周仅剩的这23个小时中，我们需要做哪些事情呢？</p></div><div id="outline-container-orgheadline18" class="outline-4"><h4 id="orgheadline18"><span class="section-number-4">1.6.1</span> 消耗</h4><div class="outline-text-4" id="text-1-6-1"><p>首先，还得承认，我们倾向于享受生活，一切都是为了生活，所以有类似如下的活动。</p><p>姑且称作“娱乐休闲”吧。很多类型，朋友、亲人、同事、同学，旅游、游戏、上网、户内外活动、商场购物等等，究竟喜欢花费多久是因人而异的。</p><p>举个简单的例子：</p><ul class="org-ul"><li>比如每个周末都会出去散步、或者电视、小说等等，这些活动，每周都有而且不止一次，每次不止1个小时，算2小时吧。</li><li>时常公司还会有些聚会活动，陪家人看看电影电视，休闲娱乐……每次都不会少于2-3个小时，即便每个月只有两次那每周也得有至少1个小时的时间预留给它们。</li><li>相信每个人不可能一周不上网，甚至每天上网的时间不止半个小时……就算3个小时吧。</li></ul><p>实际远远不止，但是，少算一些，暂时先这样吧，因为时间还剩：23-2-1-3=17小时，只剩下平均每天2个多小时了。</p></div></div><div id="outline-container-orgheadline19" class="outline-4"><h4 id="orgheadline19"><span class="section-number-4">1.6.2</span> 积累</h4><div class="outline-text-4" id="text-1-6-2"><p>其次，享受生活，必然是在一定物质、非物质的积累基础之上。</p><p>有些人喜欢进取，这类活动安排的就多；反之，有些人可能完全没有这方面的安排。</p><p>姑且将这些活动，分为三个方面：</p><ul class="org-ul"><li>个人管理</li><li>学习进修</li><li>事业方面</li></ul><p>实际也远远不止，但是，还是少列出一些，因为时间不多了。一天2个多小时，一周17个小时的时间内，你要进行这些的事情，以保证生活正常进行。</p><p>那么，剩下的这些时间中，该怎么分配呢？</p></div></div></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;
&amp;#x2014;
layout: posts
title: 时间管理：1.发现问题——时间的流逝
categories: [categories, note]
comments: true
&amp;#x2014;
#+END_HTML
&lt;/p&gt;

&lt;div id=&quot;table-
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://0.0.0.0:4000/2018/03/16/schulte_table_2017/"/>
    <id>http://0.0.0.0:4000/2018/03/16/schulte_table_2017/</id>
    <published>2018-03-15T16:00:00.000Z</published>
    <updated>2019-10-22T08:07:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2014;layout: poststitle: 2017年舒尔特数字表训练总结&#x2013;挣扎在路上categories: [categories, study, misc]comments: true&#x2014;#+END_HTML</p><div id="table-of-contents"><h2>&#30446;&#24405;</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 20170301注意力训练心得</a></li><li><a href="#orgheadline2">2. 20170306注意力训练心得</a></li><li><a href="#orgheadline3">3. 20170309</a></li><li><a href="#orgheadline4">4. 20170316</a></li><li><a href="#orgheadline5">5. 20170318</a></li><li><a href="#orgheadline6">6. 20170320</a></li><li><a href="#orgheadline7">7. 20170331之前</a></li><li><a href="#orgheadline8">8. 20170401</a></li><li><a href="#orgheadline9">9. 20170402</a></li><li><a href="#orgheadline10">10. 20170407</a></li><li><a href="#orgheadline11">11. 20170405看清再点</a></li><li><a href="#orgheadline12">12. 20170407逐渐稳定、清晰的视野</a></li><li><a href="#orgheadline13">13. 20170412 （你的手指不是思考与预知的结果，而是视线扩展的进度）</a></li><li><a href="#orgheadline14">14. 20170412 （将注意力从手指和速度上转移到视野清晰范围上）</a></li><li><a href="#orgheadline15">15. 20170413 （用眼睛直接看比用脑袋去推测更快更轻松）</a></li><li><a href="#orgheadline16">16. 20170413 （训练的重点是眼睛，而非脑袋或手指）</a></li><li><a href="#orgheadline17">17. 20170413 （不要等待不要顾及，尽量延伸你的目光，手指自然不会闲的）</a></li><li><a href="#orgheadline18">18. 20170414 （重点在于看到所有的数字而非点到）</a></li><li><a href="#orgheadline19">19. 20170414 （训练的是视线而非反应）</a></li><li><a href="#orgheadline20">20. 20170416 （只要看到就应能注意到，不存在余光或焦点）</a></li><li><a href="#orgheadline21">21. 20170504 （快到一定程度后，就变成视线广度而非反应的问题了）</a></li><li><a href="#orgheadline22">22. 20170510公平</a></li><li><a href="#orgheadline23">23. 20170507凝聚</a></li><li><a href="#orgheadline24">24. 20170508 余光</a></li><li><a href="#orgheadline25">25. 20170512 替代常规</a></li><li><a href="#orgheadline26">26. 20170518 印象</a></li><li><a href="#orgheadline27">27. 20170520 训练方向-余光</a></li><li><a href="#orgheadline28">28. 20150522 训练方向-独立的数字</a></li><li><a href="#orgheadline29">29. 20170523 两个重点</a></li><li><a href="#orgheadline30">30. 20170524 规律</a></li><li><a href="#orgheadline31">31. 20170524 是看不是找</a></li><li><a href="#orgheadline32">32. 20170524 注意与记忆的容量与起点</a></li><li><a href="#orgheadline33">33. 20170524 关闭记忆的能力</a></li><li><a href="#orgheadline34">34. 20170528 行为本身就是目的</a></li><li><a href="#orgheadline35">35. 20170615 找与看</a></li><li><a href="#orgheadline36">36. 20170620 不用点的训练</a></li><li><a href="#orgheadline37">37. 20170620 只看不点</a></li><li><a href="#orgheadline38">38. 20170622 探索</a></li><li><a href="#orgheadline39">39. 20170622 放松后每次实际不只一个数字</a></li><li><a href="#orgheadline40">40. 20170622 毫无犹豫的信心</a></li><li><a href="#orgheadline41">41. 20170629 预知又好用了？</a></li><li><a href="#orgheadline42">42. 20170711 勇往直前</a></li><li><a href="#orgheadline43">43. 20170711 一轮训练，多个机会</a></li><li><a href="#orgheadline44">44. 20170711如果数字是独立的</a></li><li><a href="#orgheadline45">45. 20170712 预知与独立</a></li><li><a href="#orgheadline46">46. 20170713去除关联</a></li><li><a href="#orgheadline47">47. 20170714没有开始</a></li><li><a href="#orgheadline48">48. 20170721不要聚焦</a></li><li><a href="#orgheadline49">49. 20170721由点到面</a></li><li><a href="#orgheadline50">50. 20170816 反复的看</a></li><li><a href="#orgheadline51">51. 20170828 一视同仁</a></li><li><a href="#orgheadline52">52. 20170908 忘记</a></li><li><a href="#orgheadline53">53. 20170915 整体去看</a></li><li><a href="#orgheadline54">54. 20170915 是看不是找</a></li><li><a href="#orgheadline55">55. 28170916 宁慢勿错</a></li><li><a href="#orgheadline56">56. 20171012 看，宽</a></li><li><a href="#orgheadline57">57. 20171013视线与反应</a></li><li><a href="#orgheadline58">58. 20171013关键</a></li><li><a href="#orgheadline59">59. 20171020 切换</a></li><li><a href="#orgheadline60">60. 20171021指不从心，指随眼落</a></li><li><a href="#orgheadline61">61. 20171022 重点是视线</a></li><li><a href="#orgheadline62">62. 20171024 开始在后面</a></li><li><a href="#orgheadline63">63. 20171027 没有负担地看</a></li><li><a href="#orgheadline64">64. 20171031 相信</a></li><li><a href="#orgheadline65">65. 20171031 限制</a></li><li><a href="#orgheadline66">66. 20171106 手指在哪</a></li><li><a href="#orgheadline67">67. 20171108 点的技巧</a></li><li><a href="#orgheadline68">68. 20171110阅读的乐趣</a></li><li><a href="#orgheadline69">69. 20171110 顺序</a></li><li><a href="#orgheadline70">70. 20171115看完</a></li><li><a href="#orgheadline71">71. 20171115 忽略手指</a></li><li><a href="#orgheadline72">72. 20171123 维持完整</a></li><li><a href="#orgheadline73">73. 20171128 奇妙的状态</a></li><li><a href="#orgheadline74">74. 20171202 不断的开始</a></li><li><a href="#orgheadline75">75. 20171203 加速度</a></li><li><a href="#orgheadline76">76. 20171206 克制</a></li><li><a href="#orgheadline77">77. 20171214 关注</a></li><li><a href="#orgheadline78">78. 20171214 协调</a></li><li><a href="#orgheadline79">79. 20171215 分组</a></li><li><a href="#orgheadline80">80. 20171225 有的放矢</a></li><li><a href="#orgheadline81">81. 20171226 手速</a></li><li><a href="#orgheadline82">82. 20171226 机会与微调</a></li><li><a href="#orgheadline83">83. 20171226 精力分配</a></li><li><a href="#orgheadline84">84. 20180205 分享一下训练技巧与心得</a><ul><li><a href="#orgheadline85">84.1. 手速-单手练</a></li><li><a href="#orgheadline86">84.2. 协调-双手练</a></li><li><a href="#orgheadline87">84.3. 视幅-不用手，只用眼</a></li><li><a href="#orgheadline88">84.4. 敏感度-不用手，不用眼</a></li><li><a href="#orgheadline89">84.5. 理论值</a></li></ul></li></ul></div></div><p>汇总一下2017整年的舒尔特训练过程，每个阶段有不同的体悟。</p><p>通过不断尝试与调整新的方式和思路，在尽可能多的方向上进行探索。</p><p>所有的内容并不一定是正确的，</p><p>希望能助大家探索到正确的道路。</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 20170301注意力训练心得</h2><div class="outline-text-2" id="text-1"><p>速度：4*4稳定在6.5~7.5秒原理：目光不要移动，不要聚焦</p><p>解释：在舒尔特表中，找到目标数字后，不要将焦点集中到已找到的目标上，继续找下一个，在寻找的时候不要目光移动，目光始终停在表中间，用"余光"找，尽量克服被移动的手指，吸引你的目光焦点</p><p>技巧，可用一只眼睛练习，体验下不移动眼睛找目标的感觉，这样似乎容易些。</p><p>猜测：熟练后，下一步或许是记住看过的数字，使复杂度由o(n*n)变到o(n).</p></div></div><div id="outline-container-orgheadline2" class="outline-2"><h2 id="orgheadline2"><span class="section-number-2">2</span> 20170306注意力训练心得</h2><div class="outline-text-2" id="text-2"><p>速度：4*4稳定在5.5~6.5秒</p><p>原理：看到的先是图像，不要翻译成意义</p><p>解释：此步骤确实复杂度都变成o(n)了，但是主要不是靠回忆达成的，目光扫描且看到的都是图形，不要考虑翻译成意义，杜绝默念。而是现搜索现确定，不要考虑语义记忆因素，因为回忆的时候会下意识地使用语言，导致寻找位置的时候，会下意识地思考它的意义。其实，尽量让眼睛扫描到数字，但是，不要考虑数字的意义，也不要考虑数字，谁大谁小谁先谁后，只把它们当作图形来处理，心里，看你念着到了那个数字，眼睛看到去点就行，根本不用念到数字后再考虑数字意义，比谁大比谁小等（虽然左脑总是想翻译，不翻译的话这样也能让左脑轻松些，这时你是能感觉到速度飞快，但是却很轻松的），这样寻找的速度是也稳定不会时快时慢。目光尽量要放宽，扫描到数字，但是，数字都是图形，扫描到之后，到了那个数字手自然会点到，而不是因为心里判断的意义才去点。这样会感觉到，速度大幅提升，而且，在，训练的时候，脑袋里还能思考别的事情，感觉思考别的事情所用的精力，与训练时的精力是相互不干扰的，甚至可以尝试在训练时，脑袋里，尽量去考虑别的事情，用别的事情来占用左脑精力，使得训练精力尽少使用左脑而是用右脑。猜测：下一步才可能是记忆，不是记忆，因为如果，使用右脑图像搜索不熟练，回忆时会自然使用语言、逻辑、抽的方式，会影响，右脑的直观图像搜索功能。等右脑直观图像搜索熟练后，再考虑记忆，记忆的时候，也不要考虑意义，而是要直接图像印到脑子里，不要考虑意义。还有，左右脑结合。</p><p>技巧，想别的占用左脑，或快速点，不让左脑有默念分析的机会</p></div></div><div id="outline-container-orgheadline3" class="outline-2"><h2 id="orgheadline3"><span class="section-number-2">3</span> 20170309</h2><div class="outline-text-2" id="text-3"><p>不要只追求右脑，要尽量放宽视野。比如，从一数到十六，找每个数的同时，眼睛里其他的数也看得见，其实找十六个数相当于把每个数过了十六遍。千万不要把目光的焦点来回移动。</p></div></div><div id="outline-container-orgheadline4" class="outline-2"><h2 id="orgheadline4"><span class="section-number-2">4</span> 20170316</h2><div class="outline-text-2" id="text-4"><p>点击的时候没有相互关系，看到的图像点了就行了。不用考虑怎么读，下一个是什么上一个，有什么关系等？看到就点。</p></div></div><div id="outline-container-orgheadline5" class="outline-2"><h2 id="orgheadline5"><span class="section-number-2">5</span> 20170318</h2><div class="outline-text-2" id="text-5"><p>要的不是理解，而是尽快的看到。不管看到的是什么，要尽快看到。因为右脑的功能是输入信息，左脑是加工信息。不需要加工，只需输入。要注意，看到的意思。看到后不要去理解，那样会累，也会降低速度。这也考验你控制不用左脑的能力。</p></div></div><div id="outline-container-orgheadline6" class="outline-2"><h2 id="orgheadline6"><span class="section-number-2">6</span> 20170320</h2><div class="outline-text-2" id="text-6"><p>眼睛目光定在中心，一定不要转。习惯目光固定的点数字。</p></div></div><div id="outline-container-orgheadline7" class="outline-2"><h2 id="orgheadline7"><span class="section-number-2">7</span> 20170331之前</h2><div class="outline-text-2" id="text-7"><p>在提高手的速度之前，先把4×4练好也就是视觉的范围以及右脑思维，手的速度，靠3×3练习。然后标准练习。</p><p>让目光放宽不过于焦距的方法：在选一个数字前，先确保边缘（四角）的数字看清再选。</p><p>目的是看数字数字尽收眼底，然后赶快点，不要去想它是啥，不要去读它是啥？看到了就是为了去看。</p><p>从1到9。看着还不错，十以上，也要以1-9方式来寻找，不要去想数字的意义，还是直接整体当成图像识别。</p><p>不去预知下一步的位置就不会，移动目光了。有信心，找的东西一定在视野之内，这样的话就不会去找下一次是啥。</p><p>要明白一件事，东西都在自己的视野范围之内，那就没有必要去找下一个，直接，该点哪，就点看到的就行，肯定能看到，所以不用考虑左脑的意志了。你会感觉到不是你，预知的东西牵引着你的目光，和寻找的位置，而是你看到的东西，随着你的点中，牵着你的预知往前走。因为你点的很快，超出了你的预知速度，所以也不用担心由于预知的慢而破坏了点的节奏。预知其实就是左脑，而你看到的，已经存在的东西，根本不用费心去预知，这是右脑。而造成这种感觉逐渐形成的条件就是，你的目光一定在中间不要来回移动去寻找什么。</p><p>你到你觉得因为太快而担心会慢下来，那原因多半是因为你，开始了寻找。已经在那了，根本不用寻找。不会越来越慢，只会越来越快。要相信这一点，就更要固定你的视线，不要移动你的目光。</p></div></div><div id="outline-container-orgheadline8" class="outline-2"><h2 id="orgheadline8"><span class="section-number-2">8</span> 20170401</h2><div class="outline-text-2" id="text-8"><p>记忆力是变相扩大了视野，在小小舒尔特表前，还不需要</p><p>不要过于太意速度的快慢，要将练习时领会到非左脑的感觉控制自如</p><p>要明白数字不是你感觉轮到的时候才注意到它，要在落下手指时感觉它原本就在那里，不比后面的提前，也不比以前的落后</p></div></div><div id="outline-container-orgheadline9" class="outline-2"><h2 id="orgheadline9"><span class="section-number-2">9</span> 20170402</h2><div class="outline-text-2" id="text-9"><p>练习的时候目光固定，并且每个数字点的时候，都能够心里很明白也能同时看到其他的数字，也就是说，你不要期望下一个数字，是你预期的某个数。你要觉的下一个数字可能是随机的任何一个数字，但是，即便是任何一个数字，你也能够立即点到，这样能够防止你内心的默念以及分心寻找预测下一个究竟是什么数字？在你，数数字的时候，脑袋里却没有思考。虽然你说数字的规律是顺序的，但是脑袋里只有，在你数到了的数字上，才能知道当前到了哪里，数道之前，不要思考。</p><p>要明白舒尔特数字表示用来看数字的不是用来数数字的。不是为了能快速点到数的数字，而是点到而是看到的数字。之所以用顺序的数，那是因为我们自身无法快速随机生成无重复数字。所以，我们用快速的数，来模拟随机的生成，以便于看到。但是不要本末倒置，数的目的是为了给看一个目标。但是不要去预测看的目标。这样做，也可以有助于我们分离左脑和右脑思维。</p><p>其实用脑袋，默默的数数，容易给人造成一种误解，最好的方式应该是，能有一个跟得上你的节奏的机器，大声的发出顺序的数字。然后你的眼睛，立刻去看到那个数字，如果机器大声发出随机的数字，你也能立刻去看到。可惜没有这样的机器，我们只能用自己的脑袋顺序的模拟数字的发声，这样就给我们造成一种误解，为了能尽快的看到数字，我们提前去预知下一个要数的数字是什么？这反而摒弃了练习的目的。但是这种，方式并不与练习冲突。它恰恰训练了我们，能够善于分离左脑右脑的习惯。我们在数数字之前，尽量的看清楚每一个数字。既然都看清楚了，当然就不用预知了。数到点到，仅此而已。所以重点不是，杜绝默念，默念并非完全错误，重点在于尽量不要在没有看清楚全貌的时候去点，那样你的脑袋会不由自主的去预知，即便默念，也不是预知。每点一个数字的，都是因为你看全了所有的数字，点的越快，说明你的视觉，越稳定，也就是注意力越稳定。应该是这样的吧！</p><p>练习有了重点。首先是不要去默念，而是靠视觉看到。其次是要视线固定在中心就达到看的目前。而今，重点转移到了，要做到每点一个数字之前，保证全部的数字都清晰，再去点。这样就不用，在意什么不要默念，不要思考，等等的问题。练习中如果方式对了你会发现，其实点的慢，不是因为，反应慢的问题，而是因为你的眼睛的，范围不够。因为能尽快的看到而快，而不是因为反应快而快。这样即便你的速度降下来，你还是进步的，反之，即便你速度快了，你也只感觉是因为幸运实际并无进展。尽快找到这样的感觉。</p><p>现在的目的有两个：第一是尽快的看到那个数字，第二是在看到的那个数字时候也保证其他数字也看到了，这样才达到了目的，达到这两个目的之后再点下去。其实目的都是为了去看，尽快点完，但是大多数时候，往往，注意了第一条，忘记了第二点。说法是一样的，但是意义却不一样了。</p></div></div><div id="outline-container-orgheadline10" class="outline-2"><h2 id="orgheadline10"><span class="section-number-2">10</span> 20170407</h2><div class="outline-text-2" id="text-10"><p>并不是一直都有收获的，每次收获，可能不是最好的，甚至是错误的，但却是当前自己最好的收获，因为它毕竟让自己推进了一点，于是每次都会将这种感觉记下。可是，并不一直是这么顺利的，每次到一定程度都觉得不会再进步了，渐渐的感觉很累，很枯燥，感觉已经没有什么进展的余地了，幸运的是还能看到有很多人有更好的成绩，为什么呢？这也给了我坚持下去的信心，相信一定还有没有做到的地方，这信心就像自己在感觉前面一片黑暗的状况下，心中的一盏灯，并且，是真实的，因为确实有人拿出了更好的成绩。然后，在痛苦的坚持下，终于某时，有了柳暗花明又一村的感觉，就是在这个状态下，让我不断发现新的收获。</p></div></div><div id="outline-container-orgheadline11" class="outline-2"><h2 id="orgheadline11"><span class="section-number-2">11</span> 20170405看清再点</h2><div class="outline-text-2" id="text-11"><p>每次的目的不是点，点的时候，只看到你点的目标。而是不只你点的目标，其他的目标也同时看到这个时候再点。</p><p>先把视野广度练习稳定，先不要在意默念。点击的条件：1.看到目标数字 2.其它数字也清晰</p></div></div><div id="outline-container-orgheadline12" class="outline-2"><h2 id="orgheadline12"><span class="section-number-2">12</span> 20170407逐渐稳定、清晰的视野</h2><div class="outline-text-2" id="text-12"><p>先让视野稳定，再开始点。视野稳定的意思是，看一会，感觉全部数字看到了，并且有信心在点的时候不会停顿。这样慢也能感觉到训练达到了目的，稳定的时候点，即便快也没达到目的。关键时间要消耗在稳定视线上（其实就是注意力的集中与稳定），而非寻找的上面。毕竟我们练的重点应该是视界，而非反应。注意：视野的稳定并不是记忆数字的位置。</p><p>如果无法一次看全，可在迅速点的同时尽快拓广视野，清晰没在视野的数字，而非专注于下个数字是啥。扩展视野，不只是范围上，也包括每一个数字的清晰度上。然后你会感觉到，随着练习，每轮练习中，你的视野像洒在桌上的水，扩展的越来越快，同时也像相机调焦由模糊变清晰的过程，清晰速度的越来越快，这是整体视野的训练，而非你找的越来越快。练习时应该要格外注意这点，不要为了一时的快而本末倒置（这也是量化自己进步的一个弊端）。</p></div></div><div id="outline-container-orgheadline13" class="outline-2"><h2 id="orgheadline13"><span class="section-number-2">13</span> 20170412 （你的手指不是思考与预知的结果，而是视线扩展的进度）</h2><div class="outline-text-2" id="text-13"><p>一定要体会到，不是你的脑袋牵引着你的眼睛，再到手指，而是你的眼睛直指牵引手指，同时脑袋才反应过来。不让脑袋绊住视线的一个技巧是，忘记时间，只要尽量把看到的一下子点完，看到就点，不要去想，即可，体会越来越清晰的余光。重点不是快速的点，那样会让你为了求速度而慌张紧张，重点是快速的把所有数字同时看清，而点的动作只是附带顺便尽量快的点，点慢了也无所谓。你的手指所落最终转变为不是思考与预知的结果，而是你视线扩展的进度。</p></div></div><div id="outline-container-orgheadline14" class="outline-2"><h2 id="orgheadline14"><span class="section-number-2">14</span> 20170412 （将注意力从手指和速度上转移到视野清晰范围上）</h2><div class="outline-text-2" id="text-14"><p>不要把心思不断的花费到每次要点的数字上，要注意在让所有数字清晰上。训练的目标就是将注意力如此转移到清晰上，从最初的不由自主的想你手指头该往哪点，到最后收放自如只顾数字，而非一气呵成就能达到的。</p></div></div><div id="outline-container-orgheadline15" class="outline-2"><h2 id="orgheadline15"><span class="section-number-2">15</span> 20170413 （用眼睛直接看比用脑袋去推测更快更轻松）</h2><div class="outline-text-2" id="text-15"><p>将手指变成视线扩展的进度，比思考要顺其自然，也快，也不慢。因为毕竟最终是看到的确定了结果，而非思考的。思考只需判断数字就够了，不用去找数字，找的工作由眼睛做，而非脑袋。</p></div></div><div id="outline-container-orgheadline16" class="outline-2"><h2 id="orgheadline16"><span class="section-number-2">16</span> 20170413 （训练的重点是眼睛，而非脑袋或手指）</h2><div class="outline-text-2" id="text-16"><p>先不要顾及手指往哪里点，先用眼睛尽快的把所有数字过一遍。手指的话能跟上眼睛的速度则尽量根上，眼睛扫描后，手指没有跟上，则从手指没有跟上的地方，再尽量过一遍数字，手指再进量跟上眼睛的速度。整个过程，注意力都集中在眼睛的尽量扫描上，手指只是附带的。不要让手指来分散你眼睛扫的注意力。大不了没有跟上眼睛翻过来从头再扫。关键是用眼睛去看，这样渐渐的眼睛扫完，到再渐渐的，眼睛扫完，并且能清晰起来。越来越清晰，手指也会自然的越来越快的。</p></div></div><div id="outline-container-orgheadline17" class="outline-2"><h2 id="orgheadline17"><span class="section-number-2">17</span> 20170413 （不要等待不要顾及，尽量延伸你的目光，手指自然不会闲的）</h2><div class="outline-text-2" id="text-17"><p>其实应该不能说目光牵着手指，其实手指应比目光快，所以才能说指落处便是目光扩展处。因为手指所向就是结果，结果是本来就存在的，它只是为了让目光看到，或思考预测到，本来就存在的，比任何发现要更快，所以说到底实质是手指一定比目光快，更比思考快。但是很多时候感觉目光更快，反正目光刻意等待手指，而手指本应比目光快，却反过来又等目光去扩展下一个，反而更慢了。也就是说，本来比手指慢的目光，却还以为它太快要等待手指，反而慢了。所以，不要顾及，不要怕忘记，不要等手指，目光尽快延伸，即可。</p></div></div><div id="outline-container-orgheadline18" class="outline-2"><h2 id="orgheadline18"><span class="section-number-2">18</span> 20170414 （重点在于看到所有的数字而非点到）</h2><div class="outline-text-2" id="text-18"><p>煅炼的是眼睛，手指如同考官只是告诉你结果对错的，根本不用训练，不要想那么复杂，若让视线停止扩展，就如同考场上的考生停止答卷，等待老师告诉你答完了后是否能告诉你对错一样可笑，这是常识，不用等待。认识到这点，训练才步入正轨，当然，也是需时间的，只需记住一点：你的心思要在考卷上而非考官。</p></div></div><div id="outline-container-orgheadline19" class="outline-2"><h2 id="orgheadline19"><span class="section-number-2">19</span> 20170414 （训练的是视线而非反应）</h2><div class="outline-text-2" id="text-19"><p>要达到：变慢的原因不是因为找的慢，而是看的慢</p><p>锻炼分两个阶段，第一去掉眼睛停顿的习惯，第二，去掉眼镜停顿习惯之后，才真正开始锻炼眼睛的广度和速度。两个阶段与手指都无关系。手指只是辅助的作用。成绩说不了什么</p></div></div><div id="outline-container-orgheadline20" class="outline-2"><h2 id="orgheadline20"><span class="section-number-2">20</span> 20170416 （只要看到就应能注意到，不存在余光或焦点）</h2><div class="outline-text-2" id="text-20"><p>当目光能一下子扩展到全部数字的时候，下一步就应该是，快速地将注意力，凝聚在每个数字上。</p><p>当达到了一定的程度，目光都不用移动，就能看到全部的数字。就好像用余光在看一样。看着数字，一个一个数一点到，目光根本不用移动，非常轻松。这个时候如果注意力一分散，状态就没了。</p></div></div><div id="outline-container-orgheadline21" class="outline-2"><h2 id="orgheadline21"><span class="section-number-2">21</span> 20170504 （快到一定程度后，就变成视线广度而非反应的问题了）</h2><div class="outline-text-2" id="text-21"><p>感谢以前看过的一则评论，引用为标题，忘记了出处，但是一句点醒梦中人：用扩大视界替代寻找，不思考替代默念，轻松替代紧张，几方面结合。</p><p>（每种技巧都有背后的原因，每份领悟都基于错误的经验）最近的新领悟，在以前领悟的基础上，进一步明白为何是看，是看全，不是记，不是念，不是找，不是只看一点，知道了为什么快且轻松，为什么两只手更快的深层次原因，知道了还是可以一只手继续，也许是对的。比如：将视线线性的扩展过程（即便你迅速地"从头到尾"看清了每个数字，但有头、尾，就表示线性），变成多维的扩展（从点到线，到面，到……维数越多，越稳定，因为"线"是很容易"断"的）。再一步解释，你"点"的过程是顺序（线性）的，但事实是，那些数字却不是顺序映入你的眼中。不刻意做这种非顺序到顺序的转换，才叫顺其自然，才会轻松，且快。这也是以前所感觉的，不要想，要看，的原理。其它类似。这些行为，是需要时间来习惯的，每次的领悟是经历过一段时间煅炼才能理解的，每次的技巧，也是煅炼到一定程度才适用的，对于更慢的和更快的阶段，都是错误的。其实，任何技巧方法经验领悟，都是对锻炼了一定程度而言的，对于合适的，它能点醒，对于不合适的，如同天书。但是，对于任何阶段都有一种万能的方法，就是明白，没有捷径，不断努力，相信会有更好，不要放弃，也不要自以为是。</p></div></div><div id="outline-container-orgheadline22" class="outline-2"><h2 id="orgheadline22"><span class="section-number-2">22</span> 20170510公平</h2><div class="outline-text-2" id="text-22"><p>所有数字都是公平的而非只是你要找的那个</p></div></div><div id="outline-container-orgheadline23" class="outline-2"><h2 id="orgheadline23"><span class="section-number-2">23</span> 20170507凝聚</h2><div class="outline-text-2" id="text-23"><p>当目光能一下子扩展到全部数字的时候，下一步就应该是，快速地将注意力，凝聚在每个数字上。</p></div></div><div id="outline-container-orgheadline24" class="outline-2"><h2 id="orgheadline24"><span class="section-number-2">24</span> 20170508 余光</h2><div class="outline-text-2" id="text-24"><p>当达到了一定的程度，目光都不用移动，就能看到全部的数字。就好像用余光在看一样。看着数字，一个一个数一点到，目光根本不用移动，非常轻松。这个时候如果注意力一分散，状态就没了。</p></div></div><div id="outline-container-orgheadline25" class="outline-2"><h2 id="orgheadline25"><span class="section-number-2">25</span> 20170512 替代常规</h2><div class="outline-text-2" id="text-25"><p>用扩大视界替代寻找，不思考替代默念，轻松替代紧张，几方面结合。</p></div></div><div id="outline-container-orgheadline26" class="outline-2"><h2 id="orgheadline26"><span class="section-number-2">26</span> 20170518 印象</h2><div class="outline-text-2" id="text-26"><p>个位数比较快的看到是因为它在你的头脑里，把更多的数字放到头脑里再看，比看到了头脑再知道要快很多</p></div></div><div id="outline-container-orgheadline27" class="outline-2"><h2 id="orgheadline27"><span class="section-number-2">27</span> 20170520 训练方向-余光</h2><div class="outline-text-2" id="text-27"><p>其实训练的是余光</p></div></div><div id="outline-container-orgheadline28" class="outline-2"><h2 id="orgheadline28"><span class="section-number-2">28</span> 20150522 训练方向-独立的数字</h2><div class="outline-text-2" id="text-28"><p>切断每个数字间的联系。每个数字与前面后面的都无关系，每次点都是重新开始点，不要把顺序的附近数字当成包袱。每个数字都是独立的，不要分心记忆与注意它们的关系。当然，视线还是要放宽的。学会把每个数字做为新的开始。每个数字点完就忘记它，只在点的时候在你心中（所有数字均在眼下）</p></div></div><div id="outline-container-orgheadline29" class="outline-2"><h2 id="orgheadline29"><span class="section-number-2">29</span> 20170523 两个重点</h2><div class="outline-text-2" id="text-29"><p>总结两点：第一每个数字都是独立的，切断数字间的联系。第二视线应该是相对固定的，不是不动，是用余光找。</p></div></div><div id="outline-container-orgheadline30" class="outline-2"><h2 id="orgheadline30"><span class="section-number-2">30</span> 20170524 规律</h2><div class="outline-text-2" id="text-30"><p>有一个规律可以试试，就是点数字的时候学会放下。具体点说，点完了一个数字，那个数字就没有用了，要学会忘记点过的数字，去点下一个。不要让过去的数字占据你的精力，一个个的去点，一个个的去忘记，很多时候都是因为心里放不下，觉得点过的数字或多或少还有点用，不舍得忘，但其实它会降低你的速度。学会忘记，再往后就是尝试不去预知，不考虑下一个将会是什么数字，下一个数字在哪，因为那也会影响你对视野广度的煅炼，让你花费更多的精力在逻辑顺序和记忆上了。可能数字少或开始时不断预知下一个甚至下几个会觉得快，但是那不是根本，到一定时候就不能再快了，因为精力和记忆力，注意力是有限的，而且数字越多练习越累，时间长不练习了还容易退步，成绩很不稳定。简言之，最终要学会把每个数字的联系斩断，每个数字都是孤立的，唯一的联系就是切换的瞬间。这样，你的精力便只集中于当下，也不要耗时去想过去与未来。个人的感受，可能也因人而异。</p></div></div><div id="outline-container-orgheadline31" class="outline-2"><h2 id="orgheadline31"><span class="section-number-2">31</span> 20170524 是看不是找</h2><div class="outline-text-2" id="text-31"><p>要达到：变慢的原因不是因为找的慢，而是看的慢</p></div></div><div id="outline-container-orgheadline32" class="outline-2"><h2 id="orgheadline32"><span class="section-number-2">32</span> 20170524 注意与记忆的容量与起点</h2><div class="outline-text-2" id="text-32"><p>一般都觉得是头1-10左右很快，然后就慢下来了，其实不是1-10，是头十几个数字，一般都习惯将数字起点设置为1，若把每个数字当做新的起点，那样会明显感觉轻松快速很多。当然足够多的训练，也会将十几个提升。</p></div></div><div id="outline-container-orgheadline33" class="outline-2"><h2 id="orgheadline33"><span class="section-number-2">33</span> 20170524 关闭记忆的能力</h2><div class="outline-text-2" id="text-33"><p>带着记忆去点，总是会分心去记忆前后，或判断，不能充分的煅炼眼睛。因为总是记忆，所以不能专心。当然，记忆也有好处，但过尤不及，若记忆分了你的专心，则减少记忆的量。专心的程度，取决于保持"不"记忆状态时间的长短。3*3太少，感觉不出来，适合练习速度与记忆；4*4稍少，可以练记忆与一点专心；5*5以上则主要是专心的程度。</p><p>20170528 煅炼的是眼睛不是手速锻炼的应该是看得更快，而不是点得更快，点不点到不重要，重要的是你看没看到，切记切记切记，你锻炼的是视野，不是速度。一旦你在意点击的速度，你的速度反而慢下来了，反而忘记了快慢，才会更好，因此需要把一些干扰排除。</p></div></div><div id="outline-container-orgheadline34" class="outline-2"><h2 id="orgheadline34"><span class="section-number-2">34</span> 20170528 行为本身就是目的</h2><div class="outline-text-2" id="text-34"><p>当你已经为了某种目的而来到了这里去做的时候，一切的目的都可转换为：在做的时候把那个目的忘掉。全身心的去做，无为而至。</p></div></div><div id="outline-container-orgheadline35" class="outline-2"><h2 id="orgheadline35"><span class="section-number-2">35</span> 20170615 找与看</h2><div class="outline-text-2" id="text-35"><p>在点的时候，每个数字开始是需要寻视，然后就都是清晰的了，不会因为点而清晰，也不会因为没点而模糊</p></div></div><div id="outline-container-orgheadline36" class="outline-2"><h2 id="orgheadline36"><span class="section-number-2">36</span> 20170620 不用点的训练</h2><div class="outline-text-2" id="text-36"><p>你关注的是视线，不是手指，手指只是顺带动动，能动不动，不能动也别让它影响了你的训练，手指停滞了错误了但别让视线停滞，大不了不动手指，只看完所有数字就退出来，这至少也达到训练视线的目的了。</p></div></div><div id="outline-container-orgheadline37" class="outline-2"><h2 id="orgheadline37"><span class="section-number-2">37</span> 20170620 只看不点</h2><div class="outline-text-2" id="text-37"><p>其实每轮训练时仅训练看完就行了，看完就返回，不用点。这样能更有针对性，效率也更高些，也能大至知道看的时间。这样到一定阶段后，再用手指来实践一下训练的成果。这样想来，手指挺误导人的。</p></div></div><div id="outline-container-orgheadline38" class="outline-2"><h2 id="orgheadline38"><span class="section-number-2">38</span> 20170622 探索</h2><div class="outline-text-2" id="text-38"><p>练习到一定时间遇到了瓶颈，可换一种方式，经常换方法，找感觉最好的方法。比如，有一个阶段觉得看的慢了，可能是由于顺序"默念"的原因，这时就换个方式，杜绝默念，整体去看，并行读。新方式不一定对，但会让你的前进方向更开阔更有动力和新鲜感</p></div></div><div id="outline-container-orgheadline39" class="outline-2"><h2 id="orgheadline39"><span class="section-number-2">39</span> 20170622 放松后每次实际不只一个数字</h2><div class="outline-text-2" id="text-39"><p>同时不是看到一个，是多个，一片数字，并且当你尝试数的时候，这一片数字不一定是相邻的，而且东一个西一个的分布着，所以当你数的时候发现是在一个一个的找的时候，立即停下来，转换一下方式，视野，等等。数字本来就被看着在那等你去数到的，而不是数到了才看到。</p></div></div><div id="outline-container-orgheadline40" class="outline-2"><h2 id="orgheadline40"><span class="section-number-2">40</span> 20170622 毫无犹豫的信心</h2><div class="outline-text-2" id="text-40"><p>手指的作用是指出早已经看到的，落指前要相信自己早已看见过了。</p></div></div><div id="outline-container-orgheadline41" class="outline-2"><h2 id="orgheadline41"><span class="section-number-2">41</span> 20170629 预知又好用了？</h2></div><div id="outline-container-orgheadline42" class="outline-2"><h2 id="orgheadline42"><span class="section-number-2">42</span> 20170711 勇往直前</h2><div class="outline-text-2" id="text-42"><p>不怕点错，破斧沉舟，勇往直前。只有不怕慢，才会快！只有不在意快，才不会慢下来！</p></div></div><div id="outline-container-orgheadline43" class="outline-2"><h2 id="orgheadline43"><span class="section-number-2">43</span> 20170711 一轮训练，多个机会</h2><div class="outline-text-2" id="text-43"><p>练习的是视野，不是逻辑，所以你的任务只是当前数字，不要思前顾后，不要怕点错点慢，否则会因为你的思想，影响了扩展视野的煅炼机会，这样你每点一个数字都是一次重新开始看，点了25个数字，就等于训练了25遍，反之点完一轮也许没煅炼到眼睛，可能只煅炼了肌肉，以来因为幸运感觉的反应变快。再次强调你练的是视野，不是快慢，不是记忆，不是反应，不是寻找，所以一定要斩断联系！将是否找到，转换为是否能看到，你不是因为记住了而点到了，而是因为再次看到而点到。</p></div></div><div id="outline-container-orgheadline44" class="outline-2"><h2 id="orgheadline44"><span class="section-number-2">44</span> 20170711如果数字是独立的</h2><div class="outline-text-2" id="text-44"><p>把注意力放在当前数字上而非上一个，或下一个，或这些数字之间的联系上</p><p>小小舒尔特表，蕴含了无限深意，看似眼花缭乱，其实它给了每个人弄清自己终究将注意力分散到了哪里的机会。</p></div></div><div id="outline-container-orgheadline45" class="outline-2"><h2 id="orgheadline45"><span class="section-number-2">45</span> 20170712 预知与独立</h2><div class="outline-text-2" id="text-45"><p>可以预看与独立并存只是要懂得随时切换，每一轮也是在练习心境</p></div></div><div id="outline-container-orgheadline46" class="outline-2"><h2 id="orgheadline46"><span class="section-number-2">46</span> 20170713去除关联</h2><div class="outline-text-2" id="text-46"><p>想象着如果每点一个数字就换一幅图，这样便去除了关联</p></div></div><div id="outline-container-orgheadline47" class="outline-2"><h2 id="orgheadline47"><span class="section-number-2">47</span> 20170714没有开始</h2><div class="outline-text-2" id="text-47"><p>不用刻意分离每个数字，有时一下缓存到几个就缓存上，如1-9，有时找不到就一个数字自成一体，只要将开始放在每一段的第一个就行，不用每个数字都是开始，顺其自然地切換开始，忽快忽慢至匀速。</p></div></div><div id="outline-container-orgheadline48" class="outline-2"><h2 id="orgheadline48"><span class="section-number-2">48</span> 20170721不要聚焦</h2><div class="outline-text-2" id="text-48"><p>即便不得不寻找，也不要把视野只限制在一个点，每次搜索的单位由点变为面</p></div></div><div id="outline-container-orgheadline49" class="outline-2"><h2 id="orgheadline49"><span class="section-number-2">49</span> 20170721由点到面</h2><div class="outline-text-2" id="text-49"><p>即便不得不寻找，也不要把视野只限制在一个点，每次搜索的单位由点变为面</p></div></div><div id="outline-container-orgheadline50" class="outline-2"><h2 id="orgheadline50"><span class="section-number-2">50</span> 20170816 反复的看</h2><div class="outline-text-2" id="text-50"><p>想像着点每个数字的同时，表格也刷新不同的序列，而非不动，这样才反应出看的速度</p></div></div><div id="outline-container-orgheadline51" class="outline-2"><h2 id="orgheadline51"><span class="section-number-2">51</span> 20170828 一视同仁</h2><div class="outline-text-2" id="text-51"><p>学会不断忘记，不断重新开始，不考虑当前进度，所有数字一视同仁，比如10以内的数字，应当与其它的一样速度才对，不因为超过10而减慢，否则便是有了杂念</p></div></div><div id="outline-container-orgheadline52" class="outline-2"><h2 id="orgheadline52"><span class="section-number-2">52</span> 20170908 忘记</h2><div class="outline-text-2" id="text-52"><p>排除杂念，总是不由自主回忆点过的数字，以及想知道还有多少，所以，每个数字点完后干脆尝试停止脑中活动专心只找该点的数字。点完的已经点完了，不要再占用你的精力，还有多少也与你当下"点"的目标无关。</p></div></div><div id="outline-container-orgheadline53" class="outline-2"><h2 id="orgheadline53"><span class="section-number-2">53</span> 20170915 整体去看</h2><div class="outline-text-2" id="text-53"><p>整体看，不要记忆 快速看完不用顾及手指，手指自然会点完，意思不是顺序着快速看完同时手指紧跟着目光之后，而是一眼全部看完，再转换成手指点的顺序。你的看，绝对不是顺序的，那样就变成了训练反应而非看。看，是一个整体，既然没有了顺序，自然不会瞻前顾后考虑到底到了哪里，还有多少这样的分心之事。也给人一种似乎是余光，眼睛不动，预知，的错觉，其实早已全部映入眼帘。所以如果训练正确，不存在到哪个数字后就慢了的问题，所有数字都是一样的，即便慢也是随机的慢，因为没看清，而不是没记住。这感觉，阶数高就感觉明显。</p></div></div><div id="outline-container-orgheadline54" class="outline-2"><h2 id="orgheadline54"><span class="section-number-2">54</span> 20170915 是看不是找</h2><div class="outline-text-2" id="text-54"><p>练习的是看到，不是找到。点到的数字都是看到的，不是找到的。</p></div></div><div id="outline-container-orgheadline55" class="outline-2"><h2 id="orgheadline55"><span class="section-number-2">55</span> 28170916 宁慢勿错</h2><div class="outline-text-2" id="text-55"><p>练习的重点 宁慢勿错，还有就是，目光要广，不要被当前数字吸引了全部注意力，当前数字只是看到的数字之一，没什么特别的，这个习惯可能需要放慢速度来练习，一旦发现你的目光太聚焦于某个数字了，就赶紧纠正。</p></div></div><div id="outline-container-orgheadline56" class="outline-2"><h2 id="orgheadline56"><span class="section-number-2">56</span> 20171012 看，宽</h2><div class="outline-text-2" id="text-56"><p>除了要看不要找，还有一点就是，尽量把目光放宽</p></div></div><div id="outline-container-orgheadline57" class="outline-2"><h2 id="orgheadline57"><span class="section-number-2">57</span> 20171013视线与反应</h2><div class="outline-text-2" id="text-57"><p>要意识到视线始终是走在手和反应的前面的，不会等待它们。</p></div></div><div id="outline-container-orgheadline58" class="outline-2"><h2 id="orgheadline58"><span class="section-number-2">58</span> 20171013关键</h2><div class="outline-text-2" id="text-58"><p>记住要点，视线范围尽量放广，视线不要等待动作和反应，要靠看不靠找</p></div></div><div id="outline-container-orgheadline59" class="outline-2"><h2 id="orgheadline59"><span class="section-number-2">59</span> 20171020 切换</h2><div class="outline-text-2" id="text-59"><p>数字的敏感度，其实是脑中缓存的当前关注的数字区间的切换灵活度。大多开始时，会练习到对1-9很敏感，之后就慢了，其实，当到10后，脑中切换下当前应关注的区间，如11-19，就可提就速度，因人而异，但大多人应同时能关注到10个左右。这10个数字随着你点的进度而"滑动"，比如开始只关注1-10，到10的时候变成11-20，等等，再灵活些，到5的时候变成5-15，这应该就是数字的敏感度的根源吧？关键是要忘记掉点过的数字，你头脑中的区间才会向前，否则只能始终是1-10，之后就变成一个个的找数字了。所以可尝试在切换前停下来，想想下一批要点的数字是哪些，然后再点，逐渐减少切换的停顿时间，然后我们要做的就是看，而非找。</p></div></div><div id="outline-container-orgheadline60" class="outline-2"><h2 id="orgheadline60"><span class="section-number-2">60</span> 20171021指不从心，指随眼落</h2><div class="outline-text-2" id="text-60"><p>不要反应不怕点错 只需关注眼睛一下子看完，手指就别关注了，手指自动的尽快划完就行，看完即点完，可能点错，但没关系，看完才重要。渐渐的，看完后，手指点完的正确率会上升。这样有利于训练集中注意力在看上而非点上，如果不明白的话，举个例子，眼睛迅速看完，同时手指也似乎正确的尽量与目光一致地"乱点"一气也结束了，开始不要在意手指的精确度，可能点的正确率只有1/100（一般前几个数字的正确率较高），这也不奇怪，目光本来就是快于反应，最后一个正确点到的数字后就表示从那起目光就与反应拉开了距离，但至少全部数字都看过了。这样训练是为了避免过分关注手指点到了哪里而停滞了目光，看不见了后面的其它数字，等渐渐的适应了目光稳定的快速看完（这时目光速度已达到了可能手指即便想乱点，也还没点出第一下前就看完了；或者即便控制手指也不会影响目光的前进与扫视的范围），再稍微分出些精力控制下手指的精确度。也就是，心神的主要精力不要浪费在控制手指上，毕竟人的反应是有极限的，这样渐渐的，有种手指随眼睛自动落下的感觉，根本不用控制。</p></div></div><div id="outline-container-orgheadline61" class="outline-2"><h2 id="orgheadline61"><span class="section-number-2">61</span> 20171022 重点是视线</h2><div class="outline-text-2" id="text-61"><p>不要让手指跑在视线的前面 即使3*3一闪而过，目光也其实是在手指前面的，不要被手指打乱了视线。手指再快也无用，只有视线在手指前面才是又快又准的正确方式。一切的奇迹都应是在看的见的基础上才能可靠的出现。</p></div></div><div id="outline-container-orgheadline62" class="outline-2"><h2 id="orgheadline62"><span class="section-number-2">62</span> 20171024 开始在后面</h2><div class="outline-text-2" id="text-62"><p>先不管三七二十一把前面熟悉的迅速点完（比如1-9），然后重点熟悉和点后面的数字。将真正训练的开始定在后面，前面一带而过。</p></div></div><div id="outline-container-orgheadline63" class="outline-2"><h2 id="orgheadline63"><span class="section-number-2">63</span> 20171027 没有负担地看</h2><div class="outline-text-2" id="text-63"><p>感受看到而非找到的感觉。手自然的点在那里，不因为提前看到了而增加记忆的负担，也不因为快了一些而想更快，慢了一些而想弥补。眼睛自然的看，渐渐的会因熟练与阶数而增减转动的频率，头脑也会放松，没有了预知、记忆、寻找的负担。训练多了，感觉的至多是眼睛有些累，而非头痛。</p></div></div><div id="outline-container-orgheadline64" class="outline-2"><h2 id="orgheadline64"><span class="section-number-2">64</span> 20171031 相信</h2><div class="outline-text-2" id="text-64"><p>不断扫视，扫到即点，不要停顿到看清，因为扫视到了，就是看清了，要相信自己的视力。</p></div></div><div id="outline-container-orgheadline65" class="outline-2"><h2 id="orgheadline65"><span class="section-number-2">65</span> 20171031 限制</h2><div class="outline-text-2" id="text-65"><p>不是脑袋控制手指，而是目光，在脑袋看来，手指不由自主的随目光而动。不要控制手指，顺其自然不加以控制的练习会让你切实体会到进步乐趣，脑袋控制的是目光看，而非对手指的控制反应，这样便感觉从脑袋控制反应的限制中解脱出来的舒畅与轻松感，从而更有动力。</p></div></div><div id="outline-container-orgheadline66" class="outline-2"><h2 id="orgheadline66"><span class="section-number-2">66</span> 20171106 手指在哪</h2><div class="outline-text-2" id="text-66"><p>用眼睛尽量看，之后会发现手指不是依次快速落下，而是似乎双手指有时同时落下却不错，尽量不是依次点下，尽可能多的同时用上双手，又不必分心去控制落下的策略，自动的却无双手互抢的奇怪感觉，好像手不是自己的，自动寻找到最轻松迅速却又不阻挡视线的下落方式。</p></div></div><div id="outline-container-orgheadline67" class="outline-2"><h2 id="orgheadline67"><span class="section-number-2">67</span> 20171108 点的技巧</h2><div class="outline-text-2" id="text-67"><p>总是说看最重要，手指就是点完看过的。但是点也有一定的技巧，快点看完，不管怎么点，看完的基础上，尽快点完。就像我亲自感受过的，单手三阶难以破1.3，单手四阶难以破2.3，双手点就能很快突破。即便双手，我想，点的方式若不变，也难以破除一定的极限的。手指会自动随着顺序进行，跟本无须控制哪个手指点。点完就行，谁点不重要，看过之后，注意力只在点上，而非谁去点，怎么点。一旦你觉得你开始控制手指了那就不是这种状态了，你会感觉手腕由于过度被控制而发酸，3阶可能也能达到0.9左右，但是感觉很难寸进，你更多的精力应该控制的是目光和思想，这样手腕任其自然，不累，有游刃有余的感觉，当然，若只用单手，因为单手只有唯一个线性的策略，为了追上思想和视线，还是会有些酸，如果双手，就会自然充分利用好双手交替的优势的。</p></div></div><div id="outline-container-orgheadline68" class="outline-2"><h2 id="orgheadline68"><span class="section-number-2">68</span> 20171110阅读的乐趣</h2><div class="outline-text-2" id="text-68"><p>每一次舒尔特表，就是一篇文章。文章的意义就是数字的次序，将文章背诵下来就是将所有数字位置记住，背的过程是读，记的过程是看。将练习的过程变为阅读。每一篇文章阅读完才知其意义。虽然这里的意义比较抽象，但是，知道了这点，便与阅读一样，你可以稳步提升"阅读"的速度，而不必被无关的单字干扰，也不存在哪个数字更敏感的问题。反之，其实阅读并理解，实质就是看完文字并根据头脑中的认知按特定次序加工，与舒尔特看完数字并点完是一个道理。实质就是看，这样，便不会枯燥。所以，你今天看完50篇文章了吗？</p></div></div><div id="outline-container-orgheadline69" class="outline-2"><h2 id="orgheadline69"><span class="section-number-2">69</span> 20171110 顺序</h2><div class="outline-text-2" id="text-69"><p>阅读被打乱的是文字，意义是顺序出现的。舒尔特被打乱的是数字的意义，数字本身是自然映入的。</p></div></div><div id="outline-container-orgheadline70" class="outline-2"><h2 id="orgheadline70"><span class="section-number-2">70</span> 20171115看完</h2><div class="outline-text-2" id="text-70"><p>还是那个感觉，不管手指怎么样，一下子全看完。手指一下子全点完，不要控制它，只告诉它点完看过的，不管它怎么点。你要控制的是一下子看完，这个动作。</p></div></div><div id="outline-container-orgheadline71" class="outline-2"><h2 id="orgheadline71"><span class="section-number-2">71</span> 20171115 忽略手指</h2><div class="outline-text-2" id="text-71"><p>手指点归点，眼睛就当手指不存在，该看哪了就看哪，不要等手指也别被手指干扰到。</p></div></div><div id="outline-container-orgheadline72" class="outline-2"><h2 id="orgheadline72"><span class="section-number-2">72</span> 20171123 维持完整</h2><div class="outline-text-2" id="text-72"><p>不用的表，数字的次序本身就是表的意义，不同的表区别就在于次序，次序是每个表的唯一标识。而非要一定依次去看，而是一下子尽快看完整个表的意义，一下子确认完表的标识。因为标识是一个整体低阶中几乎视线不动，而高阶中视幅达不到全览时，就会靠不断扫视来让这个整体维持完整不会残缺（或许记忆表也行，但这便不是对视线的训练了），千万别因为寻找，而导致图像片面残缺不完整。</p></div></div><div id="outline-container-orgheadline73" class="outline-2"><h2 id="orgheadline73"><span class="section-number-2">73</span> 20171128 奇妙的状态</h2><div class="outline-text-2" id="text-73"><p>左手，右手，视线三者各自独立，各行其事，似乎毫无关系。</p></div></div><div id="outline-container-orgheadline74" class="outline-2"><h2 id="orgheadline74"><span class="section-number-2">74</span> 20171202 不断的开始</h2><div class="outline-text-2" id="text-74"><p>将每个数字看做新的轮舒尔特表的数字，而非原有的，这样便使得每个数字失去了关联，省去了预知和记忆的压力。记住，每一次点击都假想舒尔特表发生了变化，这样便不会企图上一个、下一个是什么的疑问，因为不断变化的表会让你明白数字间没有上一个、下一个的关系；也不用担心找不到下一个数字，因为找是基于不断的上面的，当你认为整个表本身都不是固定的前提下，根本没有找的机会，也不必记忆无意义的相对位置。这也是强迫你将注意力不得不只放在当下的一个技巧。</p></div></div><div id="outline-container-orgheadline75" class="outline-2"><h2 id="orgheadline75"><span class="section-number-2">75</span> 20171203 加速度</h2><div class="outline-text-2" id="text-75"><p>将前9个看做是后面的加速阶段，并且，脑袋尽量别想事了</p></div></div><div id="outline-container-orgheadline76" class="outline-2"><h2 id="orgheadline76"><span class="section-number-2">76</span> 20171206 克制</h2><div class="outline-text-2" id="text-76"><p>千万克制住控制手指的欲望，无论你反应有多快，一点控制了手指，即便速度没降低，也增加了大脑与手指的负担，失去了煅炼视觉的机会。</p></div></div><div id="outline-container-orgheadline77" class="outline-2"><h2 id="orgheadline77"><span class="section-number-2">77</span> 20171214 关注</h2><div class="outline-text-2" id="text-77"><p>即便看到了将要点的，但那不是现在点的，也不关注。</p></div></div><div id="outline-container-orgheadline78" class="outline-2"><h2 id="orgheadline78"><span class="section-number-2">78</span> 20171214 协调</h2><div class="outline-text-2" id="text-78"><p>不想前面，不想后面，只看当前，看到就点，手要配合好眼，不要反客为主眼等手。眼</p></div></div><div id="outline-container-orgheadline79" class="outline-2"><h2 id="orgheadline79"><span class="section-number-2">79</span> 20171215 分组</h2><div class="outline-text-2" id="text-79"><p>三个一组三一组个的点，这样也符合想往下看，以及记忆的规律。</p></div></div><div id="outline-container-orgheadline80" class="outline-2"><h2 id="orgheadline80"><span class="section-number-2">80</span> 20171225 有的放矢</h2><div class="outline-text-2" id="text-80"><p>为了看清每个数字，眼睛不要盲目乱转。头几个数字一样的，看清是或不是再看别的。要有的放失，即然看到那了，就要看清再走。</p></div></div><div id="outline-container-orgheadline81" class="outline-2"><h2 id="orgheadline81"><span class="section-number-2">81</span> 20171226 手速</h2><div class="outline-text-2" id="text-81"><p>两手轮流落下是提升手速的关键</p></div></div><div id="outline-container-orgheadline82" class="outline-2"><h2 id="orgheadline82"><span class="section-number-2">82</span> 20171226 机会与微调</h2><div class="outline-text-2" id="text-82"><p>手速，视幅，眼力是基础。基础练好了，就可以提前看清楚了，但能看清全部后，应立即再考虑用剩余的精力练习落指的方式，而非看清后就停下来等手指去点了。类似的，当提前考虑好落指策略，肯定还有基它方便可以调整的，以更进一步，只有时刻处在追求进取的心态中，并充分抓住并利用好每一瞬间，才能有更多的突破。</p></div></div><div id="outline-container-orgheadline83" class="outline-2"><h2 id="orgheadline83"><span class="section-number-2">83</span> 20171226 精力分配</h2><div class="outline-text-2" id="text-83"><p>只有尽快看完所有，才可能在已看清的基础上，有精力分配与练习两手配合的最优策略。手速是标，视幅是基础，眼力才是本。</p></div></div><div id="outline-container-orgheadline84" class="outline-2"><h2 id="orgheadline84"><span class="section-number-2">84</span> 20180205 分享一下训练技巧与心得</h2><div class="outline-text-2" id="text-84"></div><div id="outline-container-orgheadline85" class="outline-3"><h3 id="orgheadline85"><span class="section-number-3">84.1</span> 手速-单手练</h3><div class="outline-text-3" id="text-84-1"><p>先只左手，再只右手。</p><p>实践感觉，</p><p>3阶1.2-1.3，4阶2.3-2.4，5阶3.7-3.8</p><p>就大概是单手的极限了吧。</p><p>而6阶以上，目前感觉，单手完全可以练很久，到手不及眼的时候再换。</p></div></div><div id="outline-container-orgheadline86" class="outline-3"><h3 id="orgheadline86"><span class="section-number-3">84.2</span> 协调-双手练</h3><div class="outline-text-3" id="text-84-2"><p>也可以说是手法，有些人是左食右拇，有些人是左拇右食，或双拇指，双食指等等。</p><p>其实是注意安全的分配问题。有很多策略，比如左手尽量点左侧右手尽量点右侧以减少位移，或者尽量交错双手落指以减少抬指落指时间，等等，很明显，双手是快于单手的。</p></div></div><div id="outline-container-orgheadline87" class="outline-3"><h3 id="orgheadline87"><span class="section-number-3">84.3</span> 视幅-不用手，只用眼</h3><div class="outline-text-3" id="text-84-3"><p>手会干扰你的注意，将注意从眼转移到手，由于手慢于眼，这期间担误的多余时间又使得脑袋中不由自主去默念、思考、记忆、寻找……让精力更消耗在无用之上。所以，可以只看不点，看完一轮就退出再重看，如果不习惯，可以用儿童模式，灰显点过的数字让你只将精神集中于未点的，眼睛会不自觉的顾盼那些没点的。其实还有一点，就是，练久了手会酸，那就偷一下懒，让手休息一会吧。</p></div></div><div id="outline-container-orgheadline88" class="outline-3"><h3 id="orgheadline88"><span class="section-number-3">84.4</span> 敏感度-不用手，不用眼</h3><div class="outline-text-3" id="text-84-4"><p>尝试一下，你闭上双眼，不默念，只是依次快速、清晰的浮现完每个数字，你一次能同时浮现出几个数字？位置在哪浮现？100个数字你多久能浮现完？当数字清晰了，迅速了，你会发现，睁开眼睛后，你的眼晴会不由自由的只看你脑中的那些数字，数字在头脑中迅速切换浮现，眼睛同时就看到了，然后手就点到了，而非费劲的去一个个的找。眼随心动，指随眼落，再后来，眼力上去后，直接有指随心落的感觉，似乎是有了预知的能力。如果落实一下敏感度，还有个决窍，在自定义模式中，定义好1-10，11-20，21-30，31-40，41-50等等，先熟悉好各范围的十个数字；然后：1-25，11-35，21-45，31-55，等等，自己发挥吧。你会发现，最开始最熟悉的，往往是开始的几个数字，要是能将所有区间一视同仁就好了。</p><p>当然，视幅练久了头晕眼胀，可是却还想练习的时候，这样，的确是一个不会累，也很方便的训练方法。并且，依次在头脑中浮现数字而非数数字，也似乎有助睡眠，久了习惯了，再加上颜色，声音，变换形状，浮现文字，图像，甚至动态图像，直接能在头脑中看电影了。</p></div></div><div id="outline-container-orgheadline89" class="outline-3"><h3 id="orgheadline89"><span class="section-number-3">84.5</span> 理论值</h3><div class="outline-text-3" id="text-84-5"><p>目前我还是探索，探索到以上的方法。究竟极限是什么？是多少呢？其实只要我们练习就行了，不必在意那些，这都是因人而异的，只要自己提升，就足矣。</p><p>引用一下之前和小鹏聊天是说的吧，也算是给大家一个理论参考：</p><pre class="example">细算一下，你玩过计算器吗？我以前小时候玩过计时器，开始计时后立即停下。以最快速度的按两次。我以前最快两次按键间隔是0.05秒，这是我的极限了，我觉得拿到舒尔特上，除去反应时间，但按不同数字也是有位移的，按照以前计时器的按键速度估计，就乘2吧，舒尔特上单手一个键0.1秒应该也可以了吧，这样单手无反应理论上9个数字0.9秒，两个手的话，就减半，0.45秒。这样下来，9个键，还得0.45，还不算反应与看清所有数字的时间，所以我觉得那个人成绩不太可能，除非他确实大异常人。我这个估算应该问题不大，我记得在某处看过，人类反应理论极限0.2秒，这样双手理想为0.45+0.2=0.65还有些可能。拿到我自身上，我单手最高纪录实际1.25秒，其实其中看清与反应约0.3，纯手按9个键0.9多，也是符合这个规律。双手最高0.82，看清与反应仍然约0.3，双手0.52按9个键，也是正常的范围。所以我觉得那个0.41甚至0.3几的成绩，不太可能。要知道人的肌肉也是要休息的，按两下那么快可以，但好几个键连续都那么快，太难以想象了按照我之前的计算方式，四阶应该是反应时间，0.5以上，因为我也一下子看不完16个数字，要分两次看才能看得完，这不是熟练不熟练的问题，应该就是人类反应大概就是那样了，一下子十几个数字。4阶最好的成绩，如果比1.4少，那很有可能就是挂了。五阶以上我就不好说了。毕竟练得也不那么多。而且五阶以上反应就不是0.3那么简单了。</pre></div></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;
&amp;#x2014;
layout: posts
title: 2017年舒尔特数字表训练总结&amp;#x2013;挣扎在路上
categories: [categories, study, misc]
comments: true
&amp;#x2014;
#+END_HTML
&lt;/p&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://0.0.0.0:4000/2017/02/20/linux_system_access/"/>
    <id>http://0.0.0.0:4000/2017/02/20/linux_system_access/</id>
    <published>2017-02-19T16:00:00.000Z</published>
    <updated>2019-10-22T08:07:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2014;layout: poststitle: Linux 访问权限控制基本原理categories: [categories, study, linux]comments: true&#x2014;#+END_HTML</p><div id="table-of-contents"><h2>&#30446;&#24405;</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 安全模型</a></li><li><a href="#orgheadline2">2. <code>DAC</code> 安全模型</a><ul><li><a href="#orgheadline3">2.1. 用户和组ID信息控制</a><ul><li><a href="#orgheadline4">2.1.1. 用户、组、口令信息</a></li><li><a href="#orgheadline5">2.1.2. 举例</a></li></ul></li><li><a href="#orgheadline6">2.2. 文件权限控制信息</a><ul><li><a href="#orgheadline7">2.2.1. 文件类型</a></li><li><a href="#orgheadline8">2.2.2. 访问权限控制组</a></li><li><a href="#orgheadline9">2.2.3. 可设定的权限</a></li><li><a href="#orgheadline10">2.2.4. 举例</a></li></ul></li><li><a href="#orgheadline11">2.3. 进程权限控制信息</a><ul><li><a href="#orgheadline12">2.3.1. 进程权限</a></li><li><a href="#orgheadline13">2.3.2. 举例</a></li></ul></li><li><a href="#orgheadline14">2.4. 进程访问文件的权限控制策略</a><ul><li><a href="#orgheadline15">2.4.1. 规则</a></li><li><a href="#orgheadline16">2.4.2. 举例</a></li></ul></li></ul></li></ul></div></div><p>这里，我们主要介绍 <code>Linux</code> 系统中，权限控制的基本原理。</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 安全模型</h2><div class="outline-text-2" id="text-1"><p>在 <code>Linux</code> 系统中，我们所有的操作实质都是在进行进程访问文件的操作。我们访问文件需要先取得相应的访问权限，而访问权限是通过 <code>Linux</code> 系统中的安全模型获得的。</p><p>对于 <code>Linux</code> 系统中的安全模型，我们需要知道下面两点</p><ol class="org-ol"><li><code>Linux</code> 系统上最初的安全模型叫 <code>DAC</code>, 全称是 <code>Discretionary Access Control</code> ，翻译为自主访问控制。</li><li>后来又增加设计了一个新的安全模型叫 <code>MAC</code>, 全称是 <code>Mandatory Access Control</code>, 翻译为强制访问控制。</li></ol><p>注意, <code>MAC</code> 和 <code>DAC</code> 不是互斥的， <code>DAC</code> 是最基本的安全模型，也是通常我们最常用到的访问控制机制是 <code>Linux</code> 必须具有的功能， 而 <code>MAC</code> 是构建在 <code>DAC</code> 之上的加强安全机制，属于可选模块。访问前， Linux系统通常都是先做 <code>DAC</code> 检查， 如果没有通过则操作直接失败; 如果通过 <code>DAC</code> 检查并且系统支持 <code>MAC</code> 模块，再做 <code>MAC</code> 权限检查。</p><p>为区分两者，我们将支持 <code>MAC</code> 的 <code>Linux</code> 系统称作 <code>SELinux</code>, 表示它是针对 <code>Linux</code> 的安全加强系统。</p><p>这里，我们将讲述 <code>Linux</code> 系统中的 <code>DAC</code> 安全模型。</p></div></div><div id="outline-container-orgheadline2" class="outline-2"><h2 id="orgheadline2"><span class="section-number-2">2</span> <code>DAC</code> 安全模型</h2><div class="outline-text-2" id="text-2"><p><code>DAC</code> 的核心内容是：在 <code>Linux</code> 中，进程理论上所拥有的权限与执行它的用户的权限相同。其中涉及的一切内容，都是围绕这个核心进行的。</p></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">2.1</span> 用户和组ID信息控制</h3><div class="outline-text-3" id="text-2-1"></div><div id="outline-container-orgheadline4" class="outline-4"><h4 id="orgheadline4"><span class="section-number-4">2.1.1</span> 用户、组、口令信息</h4><div class="outline-text-4" id="text-2-1-1"><p>通过 <code>/etc/passwd</code> 和 <code>/etc/group</code> 保存用户和组信息，通过 <code>/etc/shadow</code> 保存密码口令及其变动信息， 每行一条记录。</p><p>用户和组分别用 <code>UID</code> 和 <code>GID</code> 表示，一个用户可以同时属于多个组，默认每个用户必属于一个与之 <code>UID</code> 同值同名的 <code>GID</code> 。</p><p>对于 <code>/etc/passwd</code> , 每条记录字段分别为 <code>用户名:口令（在 /etc/shadow 加密保存）：UID:GID（默认UID）:描述注释:主目录:登录shell(第一个运行的程序)</code></p><p>对于 <code>/etc/group</code> ， 每条记录字段分别为 <code>组名：口令（一般不存在组口令）：GID：组成员用户列表（逗号分割的用户UID列表）</code></p><p>对于 <code>/etc/shadow</code> ，每条记录字段分别为： <code>登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:</code></p></div></div><div id="outline-container-orgheadline5" class="outline-4"><h4 id="orgheadline5"><span class="section-number-4">2.1.2</span> 举例</h4><div class="outline-text-4" id="text-2-1-2"><p>以下是对用户和组信息的举例。 <code>/etc/shadow</code> 中的口令信息为加密存储，不举例。</p><div class="org-src-container"><pre class="src src-sh">$cat /etc/passwd |head -n 5root:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/bin/shbin:x:2:2:bin:/bin:/bin/shsys:x:3:3:sys:/dev:/bin/shsync:x:4:65534:sync:/bin:/bin/sync$cat /etc/group |head -n 5root:x:0:daemon:x:1:bin:x:2:sys:x:3:adm:x:4:miracle</pre></div></div></div></div><div id="outline-container-orgheadline6" class="outline-3"><h3 id="orgheadline6"><span class="section-number-3">2.2</span> 文件权限控制信息</h3><div class="outline-text-3" id="text-2-2"></div><div id="outline-container-orgheadline7" class="outline-4"><h4 id="orgheadline7"><span class="section-number-4">2.2.1</span> 文件类型</h4><div class="outline-text-4" id="text-2-2-1"><p><code>Linux</code> 中的文件有如下类型：</p><ul class="org-ul"><li>普通文件， 又包括文本文件和二进制文件， 可用 <code>touch</code> 创建；</li><li>套接字文件， 用于网络通讯，一般由应用程序在执行中间接创建；</li><li>管道文件是有名管道，而非无名管道， 可用 <code>mkfifo</code> 创建；</li><li>字符文件和块文件均为设备文件， 可用 <code>mknod</code> 创建；</li><li>链接文件是软链接文件，而非硬链接文件, 可用 <code>ln</code> 创建。</li></ul></div></div><div id="outline-container-orgheadline8" class="outline-4"><h4 id="orgheadline8"><span class="section-number-4">2.2.2</span> 访问权限控制组</h4><div class="outline-text-4" id="text-2-2-2"><p>分为三组进行控制：</p><ul class="org-ul"><li><code>user</code> 包含对文件属主设定的权限</li><li><code>group</code> 包含对文件属组设定的权限</li><li><code>others</code> 包含对其他者设定的权限</li></ul></div></div><div id="outline-container-orgheadline9" class="outline-4"><h4 id="orgheadline9"><span class="section-number-4">2.2.3</span> 可设定的权限</h4><div class="outline-text-4" id="text-2-2-3"><p>下面给出常见（但非全部）的权限值， 包括：</p><ul class="org-ul"><li><code>r</code> 表示具有读权限。</li><li><code>w</code> 表示具有写权限。</li><li><code>x</code> 一般针对可执行文件/目录，表示具有执行/搜索权限。</li><li><code>s</code> 一般针对可执行文件/目录，表示具有赋予文件属主权限的权限，只有 <code>user</code> 和 <code>group</code> 组可以设置该权限。</li><li><code>t</code> 一般针对目录，设置粘滞位后，有权限的用户只能写、删除自己的文件,否则可写、删除目录所有文件。旧系统还表示可执行文件运行后将text拷贝到交换区提升速度。</li></ul></div></div><div id="outline-container-orgheadline10" class="outline-4"><h4 id="orgheadline10"><span class="section-number-4">2.2.4</span> 举例</h4><div class="outline-text-4" id="text-2-2-4"><p>通过 <code>ls -l</code> 可以查看到其文件类型及权限，通过 <code>chmod</code> 修改权限。</p><p>举例来说，</p><div class="org-src-container"><pre class="src src-sh">$ ls -l /usr/bin/qemu-i386 -rwxr-xr-x 1 root root 2149080  8月 13  2014 /usr/bin/qemu-i386$ chmod 1775 test/$ ls -l |grep testdrwxrwxr-t 2 miracle video 4096  7月 20 09:31 test$ chmod 2777 test2/$ ls -l |grep test2drwxrwsrwx 2 miracle video 4096  7月 20 09:32 test2$ chmod 4777 test3/$ ls -l |grep test3drwsrwxrwx 2 miracle video 4096  7月 20 09:33 test3</pre></div><p>输出中， 第1个字符表示文件类型，其中，普通文件(<code>-</code>)、目录文件 (<code>d</code>)、套接字文件(<code>s</code>)，管道文件(<code>p</code>)，字符文件(<code>c</code>)，块文件(<code>b</code>)，链接文件(<code>l</code>)； 第2个字符开始的 <code>-rwxr-xr-x</code> 部分表示文件的权限位，共有9位。</p><p>对于文件 <code>/usr/bin/qemu-i386</code> , 这个权限控制的含义是：</p><ol class="org-ol"><li>第2~4位的 <code>rwx</code> 表示该文件可被它的 <code>owner</code> （属主）以 <code>r</code> 或 <code>w</code> 或 <code>x</code> 的权限访问。</li><li>第5~7位的 <code>r-x</code> 表示该文件可被与该文件同一属组的用户以 <code>r</code> 或 <code>x</code> 的权限访问</li><li>第8~10位的 <code>r-x</code> 表示该文件可被其它未知用户以 <code>r</code> 或 <code>x</code> 的权限访问。</li></ol><p>对于 <code>test/, test2/, test3/</code> 设定的权限：</p><ol class="org-ol"><li><code>r,w,x</code> 权限对每一权限控制组的权限用一位8进制来表示； 例如： <code>755</code> 表示 <code>rwxr-xr-x</code> 。</li><li><code>s,t</code> 权限会替代 <code>x</code> 位置显示；设定 <code>s,t</code> 权限则需在对应的、用于控制 <code>r,w,x</code> 的8进制权限控制组前追加数字； <code>s</code> 权限用于属主属组控制， <code>t</code> 用于其它控制。</li><li>设定属主 <code>s</code> 需追加 <code>4</code>, 设定属组 <code>s</code> 追加 <code>2</code>, 设定其它者 <code>t</code> 权限追加 <code>1</code> ； 例如前面对 <code>test/</code> 设定 <code>t</code>, 则用 <code>1775</code>, 表示 <code>rwxrwxr-t</code> 。</li></ol></div></div></div><div id="outline-container-orgheadline11" class="outline-3"><h3 id="orgheadline11"><span class="section-number-3">2.3</span> 进程权限控制信息</h3><div class="outline-text-3" id="text-2-3"></div><div id="outline-container-orgheadline12" class="outline-4"><h4 id="orgheadline12"><span class="section-number-4">2.3.1</span> 进程权限</h4><div class="outline-text-4" id="text-2-3-1"><p>对于进程，有如下属性与文件访问权限相关：</p><ul class="org-ul"><li><code>effective user id</code> : 进程访问文件权限相关的 <code>UID</code> （简写为 <code>euid</code> ）。</li><li><code>effective group id</code> : 进程访问文件权限相关的 <code>GID</code> （简写为 <code>egid</code> ）。</li><li><code>real user id</code> : 创建该进程的用户登录系统时的 <code>UID</code> （简写为 <code>ruid</code> ）。</li><li><code>real group id</code> :  创建该进程的用户登录系统时的 <code>GID</code> （简写为 <code>rgid</code> ）。</li><li><code>saved set user id</code> : 拷贝自 <code>euid</code> 。</li><li><code>saved set group id</code> : 拷贝自 <code>egid</code> 。</li></ul></div></div><div id="outline-container-orgheadline13" class="outline-4"><h4 id="orgheadline13"><span class="section-number-4">2.3.2</span> 举例</h4><div class="outline-text-4" id="text-2-3-2"><p>我们可以使用 <code>ps</code> 和 <code>top</code> 选择查看具有 <code>euid</code> 和 <code>ruid</code> 的进程。或者通过 <code>top</code> 来查看进程的 <code>euid</code> 和 <code>ruid</code></p><p>通过 <code>top</code> 来查看的例子：</p><ol class="org-ol"><li><p>首先输入 <code>top</code> 得到类似如下 </p><div class="org-src-container"><pre class="src src-sh">$top -d 10.10top - 15:50:39 up 9 days,  1:42,  9 users,  load average: 0.13, 0.16, 0.21Tasks: 287 total,   2 running, 284 sleeping,   0 stopped,   1 zombieCpu(s): 20.8%us,  4.6%sy,  0.0%ni, 72.5%id,  2.1%wa,  0.0%hi,  0.0%si,  0.0%stMem:   7707276k total,  7574252k used,   133024k free,   154872k buffersSwap:  1998844k total,   223744k used,  1775100k free,  3330212k cached  PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                                                                                31603 miracle   20   0 2368m 681m  52m S    6  9.1 206:07.74 firefox                                                                                 1507 root      20   0  451m 188m  97m S    2  2.5 193:49.86 Xorg  ....</pre></div><p>这里通过 <code>-d</code> 选项延长 <code>top</code> 的刷新频率便于操作。此处可见，只有 <code>USER</code> 字段，表示相应进程的 <code>effective user id</code>.</p></li><li>打开 <code>read user id</code> 的显示选项<ol class="org-ol"><li><p>在 <code>top</code> 命令运行期间，输入 <code>f</code>, 可以看见类似如下行：</p><pre class="example">c: RUSER      = Real user name</pre></li><li><p>输入 <code>c</code> 即可打开 <code>Real user name</code> 的显示开关。</p><pre class="example">* C: RUSER      = Real user name</pre></li><li><p>最后 <code>Return</code> 回车回到 <code>top</code> 中，即可看到 <code>real user id</code> 的选项</p><p>此时输入 <code>o</code>,可调整列次序</p><p>最终我们可看到包含 <code>effective user id</code> 和 <code>real user id</code> 的输出如下：</p><pre class="example">top - 15:57:58 up 9 days,  1:49,  9 users,  load average: 0.23, 0.22, 0.23Tasks: 286 total,   1 running, 284 sleeping,   0 stopped,   1 zombieCpu(s):  3.9%us,  1.4%sy,  0.0%ni, 94.6%id,  0.1%wa,  0.0%hi,  0.0%si,  0.0%stMem:   7707276k total,  7539776k used,   167500k free,   154996k buffersSwap:  1998844k total,   225132k used,  1773712k free,  3300036k cached  PID USER     RUSER     PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND                              31603 miracle  miracle   20   0 2376m 688m  52m S    4  9.2 206:24.14 firefox                     1507 root     root      20   0  451m 188m  97m S    3  2.5 194:06.27 Xorg   ....</pre><p>其中， <code>PID</code> 是对应进程， <code>USER</code> 是对应的 <code>effective user</code>, <code>RUSER</code> 是对应的 <code>real user</code> 。</p></li></ol></li></ol></div></div></div><div id="outline-container-orgheadline14" class="outline-3"><h3 id="orgheadline14"><span class="section-number-3">2.4</span> 进程访问文件的权限控制策略</h3><div class="outline-text-3" id="text-2-4"></div><div id="outline-container-orgheadline15" class="outline-4"><h4 id="orgheadline15"><span class="section-number-4">2.4.1</span> 规则</h4><div class="outline-text-4" id="text-2-4-1"></div><div id="outline-container-orgheadline17" class="outline-5"><h5 id="orgheadline17"><span class="section-number-5">2.4.1.1</span> 进程访问文件大致权限控制策略</h5><div class="outline-text-5" id="text-2-4-1-1"><p>对于进程访问文件而言，最重要的是 <code>euid</code>, 所以其权限属性均以 <code>euid</code> 为 "中心"。</p><ul class="org-ul"><li>进程的 <code>euid</code> 一般默认即为 其 <code>ruid</code> 值</li><li>若可执行文件的可执行权限位为 <code>s</code> ，进程对其调用 <code>exec</code> 后，其 <code>euid</code> 被设置为该可执行文件的 <code>user id</code></li><li>进程的 <code>saved set user id</code> 拷贝自 <code>euid</code>.</li><li>当进程的 <code>euid</code> 与文件的 <code>user id</code> 匹配时，进程才具有文件 <code>user</code> 权限位所设定的权限</li><li>组权限 <code>egid</code> 的控制规则类似。</li></ul></div></div><div id="outline-container-orgheadline18" class="outline-5"><h5 id="orgheadline18"><span class="section-number-5">2.4.1.2</span> 通过 <code>exec</code> 执行文件修改权限属性</h5><div class="outline-text-5" id="text-2-4-1-2"><p>通过 <code>exec</code> 调用可执行文件之时：</p><ul class="org-ul"><li>进程 <code>ruid</code> 值始终不变；</li><li><code>saved set-user ID</code> 始终来自 <code>euid</code> ；</li><li><code>euid</code> 值取决于文件的 <code>set-user-ID</code> 位是否被设置。</li></ul><p>如下：</p><table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"><colgroup><col class="org-left"><col class="org-left"><col class="org-left"></colgroup><thead><tr><th scope="col" class="org-left">ID</th><th scope="col" class="org-left">set-user-ID bit off</th><th scope="col" class="org-left">set-user-ID bit on</th></tr></thead><tbody><tr><td class="org-left">real user ID</td><td class="org-left">unchanged</td><td class="org-left">unchanged</td></tr></tbody><tbody><tr><td class="org-left">effective user ID</td><td class="org-left">unchanged</td><td class="org-left">set from userID of program file</td></tr></tbody><tbody><tr><td class="org-left">saved set-user ID</td><td class="org-left">copied from effective user ID</td><td class="org-left">copied from effective user ID</td></tr></tbody></table></div></div><div id="outline-container-orgheadline19" class="outline-5"><h5 id="orgheadline19"><span class="section-number-5">2.4.1.3</span> 通过 <code>setuid(uid)</code> 系统调用修改权限属性</h5><div class="outline-text-5" id="text-2-4-1-3"><p>通过 <code>setuid(uid)</code> 修改权限属性之时： </p><ul class="org-ul"><li><code>superuser</code> 可顺利修改 <code>ruid</code>, <code>euid</code>, <code>saved set-user ID</code> ；</li><li><code>unprivileged user</code> 只能在 <code>uid</code> 与 <code>ruid</code> 或 <code>saved set-user ID</code> 相等时可修改 <code>euid</code>, 其它无法修改。</li></ul><p>如下：</p><table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"><colgroup><col class="org-left"><col class="org-left"><col class="org-left"></colgroup><thead><tr><th scope="col" class="org-left">ID</th><th scope="col" class="org-left">superuser</th><th scope="col" class="org-left">unprivileged user</th></tr></thead><tbody><tr><td class="org-left">real user ID</td><td class="org-left">set to uid</td><td class="org-left">unchanged</td></tr></tbody><tbody><tr><td class="org-left">effective user ID</td><td class="org-left">set to uid</td><td class="org-left">set to uid</td></tr></tbody><tbody><tr><td class="org-left">saved set-user ID</td><td class="org-left">set to uid</td><td class="org-left">unchanged</td></tr></tbody></table></div></div></div><div id="outline-container-orgheadline16" class="outline-4"><h4 id="orgheadline16"><span class="section-number-4">2.4.2</span> 举例</h4><div class="outline-text-4" id="text-2-4-2"><p>再举几个比较特别的例子：</p></div><div id="outline-container-orgheadline20" class="outline-5"><h5 id="orgheadline20"><span class="section-number-5">2.4.2.1</span> 设置了 <code>set-user-id</code></h5><div class="outline-text-5" id="text-2-4-2-1"><div class="org-src-container"><pre class="src src-sh">$ ls -l /usr/bin/sudo-rwsr-xr-x 1 root root 71288  2月 28  2013 /usr/bin/sudo</pre></div><p>如前所述，这个输出的含义是，对于 <code>/usr/bin/sudo</code> 文件，</p><ul class="org-ul"><li>第1~3位的 <code>rws</code> 表示该文件可被它的owner（属主）以 <code>r</code> 或 <code>w</code> 或 <code>s</code> 的权限访问</li><li>第4~6位的 <code>r-x</code> 表示该文件可被与该文件同一属组的用户以 <code>r</code> 或 <code>x</code> 的权限访问。</li><li>第7~9位的 <code>r-x</code> 表示该文件可被其它未知用户以 <code>r</code> 或 <code>x</code> 的权限访问。</li></ul><p>这样设置之后，对于owner，具有读、写、执行权限，这一点没有什么不同。但是对于不属于 <code>root</code> 组的普通用户进程来说，却大不相同。</p><p>普通用户进程执行 <code>sudo</code> 命令时通过其 <code>others</code> 中的 <code>x</code> 获得执行权限，再通过 <code>user</code> 中的 <code>s</code> 使得普通用户进程临时具有了 <code>sudo</code> 可执行文件属主( <code>root</code> )的权限，即超级权限。</p><p>这也是为什么通过 <code>sudo</code> 命令就可以让普通用户执行许多管理员权限的命令的原因。</p></div></div><div id="outline-container-orgheadline21" class="outline-5"><h5 id="orgheadline21"><span class="section-number-5">2.4.2.2</span> 设置了 <code>stick-bit</code></h5><div class="outline-text-5" id="text-2-4-2-2"><div class="org-src-container"><pre class="src src-sh">$ ls -l / |grep tmpdrwxrwxrwt  25 root root 12288  7月 20 09:09 tmp</pre></div><p>这样设置之后，对于 <code>/tmp</code> 目录，任何人都具有读、写、执行权限，这一点没有什么不同。但是对于 <code>others</code> 部分设置了粘滞位 <code>t</code>, 其功能却大不相同。</p><p>若目录没设置粘滞位，任何对目录有写权限者都则可删除其中任何文件和子目录，即使他不是相应文件的所有者，也没有读或写许可; 设置粘滞位后，用户就只能写或删除属于他的文件和子目录。</p><p>这也是为什么任何人都能向 <code>/tmp</code> 目录写文件、目录，却只能写和删除自己拥有的文件或目录的原因。</p></div></div><div id="outline-container-orgheadline22" class="outline-5"><h5 id="orgheadline22"><span class="section-number-5">2.4.2.3</span> 举一个 <code>man</code> 程序的应用片断，描述 <code>set-user-id</code> 和 <code>saved set-user-id</code> 的使用</h5><div class="outline-text-5" id="text-2-4-2-3"><p><code>man</code> 程序可以用来显示在线帮助手册， <code>man</code> 程序可以被安装指定 <code>set-user-ID</code> 或者 <code>set-group-ID</code> 为一个指定的用户或者组。 </p><p><code>man</code> 程序可以读取或者覆盖某些位置的文件，这一般由一个配置文件(通常是 <code>/etc/man.config</code> 或者 <code>/etc/manpath.config</code> )或者命令行选项来进行配置。</p><p><code>man</code> 程序可能会执行一些其它的命令来处理包含显示的 <code>man</code> 手册页的文件。</p><p>为防止处理出错， <code>man</code> 会从两个特权之间进行切换：运行 <code>man</code> 命令的用户特权，以及 <code>man</code> 程序的拥有者的特权。</p><p>需要抓住的主线：当只执行 <code>man</code> 之时，进程特权就是 <code>man</code> 用户的特权， 当通过 <code>man</code> 执行子进程（如通过 <code>!bash</code> 引出shell命令）时，用户切换为当前用户，执行完又切换回去。</p><p>过程如下：</p><ol class="org-ol"><li>假设 <code>man</code> 程序文件被用户 <code>man</code> 所拥有，并且已经被设置了它的 <code>set-user-ID</code> 位，当我们 <code>exec</code> 它的时候，我们有如下情况：<ul class="org-ul"><li><code>real user ID</code> = 我们的用户UID</li><li><code>effective user ID</code> = man用户UID</li><li><code>saved set-user-ID</code> = man用户UID</li></ul></li><li><code>man</code> 程序会访问需要的配置文件和 <code>man</code> 手册页。这些文件由 <code>man</code> 用户所拥有，但是由于 <code>effective user ID</code> 是 <code>man</code>,文件的访问就被允许了。</li><li><p>在 <code>man</code> 为我们运行任何命令的时候，它会调用 <code>setuid(getuid()))</code> (<code>getuid()</code> 返回的是 <code>real user id</code>).</p><p>因为我们不是 <code>superuser</code> 进程，这个变化只能改变 <code>effective user ID</code>. 我们会有如下情况：</p><ul class="org-ul"><li><code>real user ID</code> = 我们的用户UID(不会被改变)</li><li><code>effective user ID</code> = 我们的用户UID</li><li><code>saved set-user-ID</code> = man 的用户UID(不会被改变)</li></ul><p>现在 <code>man</code> 进程运行的时候把我们得UID作为它的 <code>effective user ID</code>.这也就是说，我们只能访问我们拥有自己权限的文件。也就是说，它能够代表我们安全地执行任何 <code>filter</code>.</p></li><li><p>当 <code>filter</code> 做完了的时候， <code>man</code> 会调用 <code>setuid(euid)</code>.</p><p>这里， <code>euid</code> 是 <code>man</code> 用户的UID.(这个ID是通过 <code>man</code> 调用 <code>geteuid</code> 来保存的)这个调用是可以的，因为 <code>setuid</code> 的参数和 <code>saved set-user-ID</code> 是相等的。(这也就是为什么我们需要 <code>saved set-user-ID</code>).这时候我们会有如下情况：</p><ul class="org-ul"><li><code>real user ID</code> = 我们的用户UID(不会被改变)</li><li><code>effective user ID</code> = man的UID</li><li><code>saved set-user-ID</code> = man 的用户UID(不会被改变)</li></ul></li><li><p>由于 <code>effective user ID</code> 是 <code>man</code>,现在 <code>man</code> 程序可以操作它自己的文件了。</p><p>通过这样使用 <code>saved set-user-ID</code>,我们可以在进程开始和结束的时候通过程序文件的 <code>set-user-ID</code> 来使用额外的权限。然而，期间我们却是以我们自己的权限运行的。如果我们无法在最后切换回 <code>saved set-user-ID</code>,我们就可能会在我们运行的时候保留额外的权限。</p></li></ol><p>下面我们来看看如果 <code>man</code> 启动一个 <code>shell</code> 的时候会发生什么： </p><ul class="org-ul"><li>这里的 <code>shell</code> 是 <code>man</code> 使用 <code>fork</code> 和 <code>exec</code> 来启动的。</li><li>因为这时 <code>real user ID</code> 和 <code>effective user ID</code> 都是我们的普通用户UID(参见step3)， 所以 <code>shell</code> 没有其它额外的权限.</li><li>启动的 <code>shell</code> 无法访问 <code>man</code> 的 <code>saved set-user-ID(man)</code> ,因为 <code>shell</code> 的 <code>saved set-user-ID</code> 是由 <code>exec</code> 从 <code>effective user ID</code> 拷贝过来的。</li><li>在执行 <code>exec</code> 的子进程( <code>shell</code> )中，所有的 <code>user ID</code> 都是我们的普通用户ID.</li></ul><p>实际上，我们描述 <code>man</code> 使用 <code>setuid</code> 函数的方法不是特别正确，因为程序可能会 <code>set-user-ID</code> 为 <code>root</code> .这时候， <code>setuid</code> 会把所有三种uid都变成你设置的id，但是我们只需要设置 <code>effective user ID</code>.</p></div></div></div></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;
&amp;#x2014;
layout: posts
title: Linux 访问权限控制基本原理
categories: [categories, study, linux]
comments: true
&amp;#x2014;
#+END_HTML
&lt;/p&gt;
&lt;div id=&quot;t
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://0.0.0.0:4000/2016/02/18/linux_time_timezone/"/>
    <id>http://0.0.0.0:4000/2016/02/18/linux_time_timezone/</id>
    <published>2016-02-17T16:00:00.000Z</published>
    <updated>2019-10-22T08:07:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2014;layout: poststitle: 关于linux中的时间和时区categories: [categories, study, linux, misc]comments: true&#x2014;#+END_HTML</p><div id="table-of-contents"><h2>&#30446;&#24405;</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 基本概念</a><ul><li><a href="#orgheadline2">1.1. 系统时钟和硬件时钟</a></li><li><a href="#orgheadline3">1.2. 硬件时间和系统时间的同步</a></li><li><a href="#orgheadline4">1.3. 时间和时区</a></li></ul></li><li><a href="#orgheadline5">2. 常用命令</a></li><li><a href="#orgheadline6">3. 配置文件与环境变量</a></li><li><a href="#orgheadline7">4. 库函数</a></li><li><a href="#orgheadline8">5. 应用举例</a><ul><li><a href="#orgheadline9">5.1. 在单一进程中修改时区的方法</a></li><li><a href="#orgheadline10">5.2. 时间同步校准</a></li></ul></li><li><a href="#orgheadline11">6. 其它</a><ul><li><a href="#orgheadline12">6.1. 参考</a></li></ul></li></ul></div></div><p>这里主要讲述linux中时间和时区相关的原理。包括设置方法、配置、环境变量、以及库函数，及应用举例。</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 基本概念</h2><div class="outline-text-2" id="text-1"></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> 系统时钟和硬件时钟</h3><div class="outline-text-3" id="text-1-1"><p>Linux时钟分为系统时钟 （System Clock）和硬件（Real Time Clock，简称RTC）时钟。系统时钟是指当前Linux Kernel中的时钟，而硬件时钟则是主板上由电池供电的时钟，这个硬件时钟可以在BIOS中进行设置。当Linux启动时，硬件时钟会去读取系统时钟的设置，然后系统时钟就会独立于硬件运作。</p></div></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">1.2</span> 硬件时间和系统时间的同步</h3><div class="outline-text-3" id="text-1-2"><p>重新启动系统，硬件时间会读取系统时间，实现同步，但是在不重新启动的时候，需要用hwclock或clock命令实现同步。</p></div></div><div id="outline-container-orgheadline4" class="outline-3"><h3 id="orgheadline4"><span class="section-number-3">1.3</span> 时间和时区</h3><div class="outline-text-3" id="text-1-3"><p>UTC：协调世界时，又称世界标准时间，简称UTC，从英文国际时间/法文协调时间”Universal Time/Temps Cordonné”而来。</p><p>时区：反映与UTC的时差问题，中国大陆、香港、澳门、台湾、蒙古国、新加坡、马来西亚、菲律宾、澳洲西部的时间与UTC的时差均为+8，也就是UTC+8。各个地区的时间都是UTC结合地区的时区信息得到的。</p><p>整个地球分为二十四时区，每个时区都有自己的本地时间，他们的关系如下：</p><ol class="org-ol"><li><p>UTC时间 与 GMT时间</p><p>我们可以认为格林威治时间就是时间协调时间（GMT = UTC），格林威治时间和UTC时间都用秒数来计算的。</p></li><li><p>UTC时间与本地时间</p><p>UTC + 时区差 = 本地时间</p><p>时区差东为正，西为负。</p></li><li><p>UTC与Unix时间戳</p><p>在计算机中看到的UTC时间都是从（1970年01月01日 0:00:00)开始计算秒数的。所看到的UTC时间那就是从1970年这个时间点起到具体时间共有多少秒。 这个秒数就是Unix时间戳。</p></li></ol><p>例如： </p><pre class="example">本地（北京）在东八区， 东八区时区差记为 +0800，则：本地（北京）时间 = UTC + (+0800)</pre><p>所以，不同地区， 其本地时间各不相同。</p><p>再如， 对于中国和格林，这两个地区的时区不同，得到的时间也不同。分别如下：</p><pre class="example">CST：中国标准时间（China Standard Time），与UTC时差为8,这个解释可能是针对RedHat Linux。GMT：格林尼治标准时间（旧译格林威治平均时间或格林威治标准时间；英语：Greenwich Mean Time，GMT）是指位于英国伦敦郊区的皇家格林尼治天文台的标准时间，因为本初子午线被定义在通过那里的经线。</pre></div></div></div><div id="outline-container-orgheadline5" class="outline-2"><h2 id="orgheadline5"><span class="section-number-2">2</span> 常用命令</h2><div class="outline-text-2" id="text-2"><p>下面给出的是常见的命令，不同系统可能有不同的命令。</p><p>有关系统时间的命令: data,ntpupdate</p><p>有关硬件时钟的命令: hwclock/clock</p><p>时区相关命令: tzselect</p></div></div><div id="outline-container-orgheadline6" class="outline-2"><h2 id="orgheadline6"><span class="section-number-2">3</span> 配置文件与环境变量</h2><div class="outline-text-2" id="text-3"><p>时区信息一般首先从环境变量中去读，如果没有再从 <code>/etc/TZ</code> 等配置文件中去读。</p><p>所涉及的配置文件和环境变量可能会根据系统有所不同，一般情况如下：</p><ol class="org-ol"><li>时区的配置文件: <i>etc/localtime (可以是/usr/share/zoneinfo</i>&#x2026;的软链接), /etc/TZ, /etc/sysconfig/clock</li><li><p>环境变量： <code>TZ</code>, 使用举例如下:</p><pre class="example">bash中   export TZ="Europe/Moscow"        date -u -s "2011-10-29 21:55:00"cshell中 setenv TZ Europe/Moscow</pre></li></ol></div></div><div id="outline-container-orgheadline7" class="outline-2"><h2 id="orgheadline7"><span class="section-number-2">4</span> 库函数</h2><div class="outline-text-2" id="text-4"><p>这些为有关时间时区的常见系统库函数。</p><ul class="org-ul"><li><p>time_t time(time_t *t)</p><p>返回 <code>time_t</code> 类型，值为UTC时间从0时0分0秒算起到现在所经过的秒数。</p></li><li><p>struct tm*gmtime(const time_t*timep)</p><p>根据传入的 <code>time_t</code> 返回类型为 <code>struct tm</code> 结构，包含时、分、秒、日、周、月、年、日光节约时间标记等信息的时间表示，该时间为GMT时间，未经时区转换。</p></li><li><p>struct tm *localtime(const time_t * timep)</p><p>根据传入的 <code>time_t</code> 返回类型为 <code>struct tm</code> 结构，包含时、分、秒、日、周、月、年、日光节约时间标记等信息的时间表示，该时间为当地时间，已经时区转换。</p></li><li><p>time_t mktime(struct tm * timeptr)</p><p>将 <code>struct tm</code> 类型的时间转换为  <code>time_t</code> 类型，值为UTC时间从0时0分0秒算起到现在所经过的秒数。</p></li><li><p>char *ctime(const time_t *timep)</p><p>将传入的 <code>time_t</code> 类型时间转化为现实世界中的字符串表示形式，例如： <code>Fri, 16 Oct 2015 23:12:18 +0800</code></p></li><li><p>char * asctime(const struct tm * timeptr)</p><p>将传入的 <code>struct tm</code> 结构类型时间转化为现实世界中的字符串表示形式，例如： <code>Fri Oct 16 15:15:54 2015</code></p></li><li><p>int gettimeofday ( struct timeval * tv , struct timezone * tz )</p><p>返回当前时间信息， <code>struct timeval *tv</code> 存放秒和微秒信息， <code>struct timezone *tz</code> 存放时区信息。</p></li><li><p>int settimeofday ( const struct timeval *tv,const struct timezone *tz)</p><p>根据传入的时间信息 <code>struct timeval *tv</code>, 和时区信息 <code>struct timezone *tz</code> 设置当前时间。</p></li></ul><p>总之，time_t 是用秒数表示时间一般在系统时间戳中使用（一般就是UTC时间）；struct tm 使用结构体表示时间，在程序中使用（不同时区可能会有不同值）；而现实中使用字符串来表示时间，字符串格式可以定制。时区信息一般首先从环境变量中去读，如果没有再从 <code>/etc/TZ</code> 等配置文件中去读。</p></div></div><div id="outline-container-orgheadline8" class="outline-2"><h2 id="orgheadline8"><span class="section-number-2">5</span> 应用举例</h2><div class="outline-text-2" id="text-5"></div><div id="outline-container-orgheadline9" class="outline-3"><h3 id="orgheadline9"><span class="section-number-3">5.1</span> 在单一进程中修改时区的方法</h3><div class="outline-text-3" id="text-5-1"><pre class="example">setenv("TZ","Europe/Moscow",1);tzset();</pre></div></div><div id="outline-container-orgheadline10" class="outline-3"><h3 id="orgheadline10"><span class="section-number-3">5.2</span> 时间同步校准</h3><div class="outline-text-3" id="text-5-2"><p>假设安装完系统发现时间与现实时间相差8小时。</p><p>一般是如下原因：安装系统时选择的时区是上海，而系统启动后把bios时间认为是utc时间，再根据上海所处时区，将时间+8小时给我们。这个时候的bios的时间和软件的时间便出现不一致的情况。一个代表 utc 一个代表我们设置的cst（+8时区）。</p><p>可做如下调整（例如系统为center os 6）：</p><ol class="org-ol"><li><p>修改配置文件，将默认环境变量更正为上海所在时区，不使用UTC时间</p><div class="org-src-container"><pre class="src src-sh">$ vi /etc/sysconfig/clock  ZONE="Asia/Shanghai"UTC=false                          ARC=false</pre></div><p>这个文件影响系统启动后默认的时间相关环境变量值，这里主要是 <code>UTC=false</code> 这个选项，设置硬件时钟不是跟utc一致。</p></li><li><p>将linux的时区设置为 上海</p><div class="org-src-container"><pre class="src src-sh">$ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</pre></div><p>加载配置时间环境变量的文件之前，需要指定好该文件的软链接位置，通过这个可在各个时区配置文件下通用的 <code>/etc/localtime</code> 软链接，可使系统能够找到刚刚设置的时区配置文件，并设置好相应的环境变量。</p></li><li><p>对准时间ntp</p><div class="org-src-container"><pre class="src src-sh">$ntpdate 192.43.244.18</pre></div><p>系统启动之后，系统时间通过 <code>ntpdate</code> 工具在网络上获取到。</p></li><li><p>设置硬件时间和软件时间的一致并校准</p><div class="org-src-container"><pre class="src src-sh">/sbin/hwclock -systohc</pre></div><p>通过这个命令，将系统时间同步至硬件始终上，这样我们的linux软件和计算机硬件都是cst时间了－－并且是我们设置的上海时区。</p></li></ol></div></div></div><div id="outline-container-orgheadline11" class="outline-2"><h2 id="orgheadline11"><span class="section-number-2">6</span> 其它</h2><div class="outline-text-2" id="text-6"></div><div id="outline-container-orgheadline12" class="outline-3"><h3 id="orgheadline12"><span class="section-number-3">6.1</span> 参考</h3><div class="outline-text-3" id="text-6-1"><p><code>man 3 tzset</code></p><p><a href="http://www.linuxidc.com/Linux/2015-09/122979.htm" target="_blank" rel="noopener">解决嵌入式Linux中的时区问题</a></p><p><a href="http://bbs.csdn.net/topics/390023846" target="_blank" rel="noopener">linux调整系统时间和时区的方法</a></p><p><a href="http://www.cnblogs.com/dongzhiquan/archive/2012/01/09/2317633.html" target="_blank" rel="noopener">Linux下设置时区（通过shell设置和程序中设置）及程序中设置环境变量</a></p><p><a href="http://blog.chinaunix.net/uid-26495963-id-3198728.html" target="_blank" rel="noopener">linux时区时间问题ntp</a></p><p><a href="http://www.linuxidc.com/Linux/2015-10/124249.htm" target="_blank" rel="noopener">Linux时间时区详解与常用时间函数</a></p><p><a href="http://www.jb51.net/LINUXjishu/158824.html" target="_blank" rel="noopener">linux修改系统时间和linux查看时区、修改时区的方法</a></p></div></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;
&amp;#x2014;
layout: posts
title: 关于linux中的时间和时区
categories: [categories, study, linux, misc]
comments: true
&amp;#x2014;
#+END_HTML
&lt;/p&gt;
&lt;div i
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://0.0.0.0:4000/2016/02/16/net_articles201602/"/>
    <id>http://0.0.0.0:4000/2016/02/16/net_articles201602/</id>
    <published>2016-02-15T16:00:00.000Z</published>
    <updated>2019-10-22T08:07:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2014;layout: poststitle: 网文收集201602categories: [categories, others]comments: true&#x2014;#+END_HTML</p><div id="table-of-contents"><h2>&#30446;&#24405;</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 网文列表</a><ul><li><a href="#orgheadline2">1.1. <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-02-16 二 17:34&gt; </span></span> pkg-config的用法</a></li><li><a href="#orgheadline3">1.2. <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-02-17 三 15:00&gt; </span></span> Scientific Toolworks Understand for linux 的下载</a></li><li><a href="#orgheadline4">1.3. <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-03-02 三 20:00&gt; </span></span> Git Submodule 使用完整教程</a></li><li><a href="#orgheadline5">1.4. <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-05-24 二 14:11&gt; </span></span> Linux内存泄漏查询方法proc/status解释</a></li><li><a href="#orgheadline6">1.5. <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-08-12 五 16:11&gt; </span></span> CMake 入门实战</a></li><li><a href="#orgheadline7">1.6. <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-09-12 一 14:41&gt; </span></span> Android Native/Tombstone Crash Log 详细分析</a></li><li><a href="#orgheadline8">1.7. <span class="timestamp-wrapper"><span class="timestamp">&lt;2017-08-24 四 18:16&gt;  </span></span>  动态库的链接和链接选项-L，-rpath-link，-rpath</a></li><li><a href="#orgheadline9">1.8. <span class="timestamp-wrapper"><span class="timestamp">&lt;2017-08-24 四 18:19&gt; </span></span> 动态库加载路径之RPATH与RUNPATH(小记)</a></li><li><a href="#orgheadline10">1.9. <span class="timestamp-wrapper"><span class="timestamp">&lt;2017-08-24 四 18:24&gt; </span></span> RPATH与RUNPATH</a></li><li><a href="#orgheadline11">1.10. <span class="timestamp-wrapper"><span class="timestamp">&lt;2017-09-15 五 10:00&gt; </span></span> rpath添加依赖库搜索路径</a></li><li><a href="#orgheadline12">1.11. <span class="timestamp-wrapper"><span class="timestamp">&lt;2017-12-11 一 12:13&gt; </span></span> 数字签名是什么？</a></li></ul></li><li><a href="#orgheadline13">2. 其它</a><ul><li><a href="#orgheadline14">2.1. maff存档格式</a></li><li><a href="#orgheadline15">2.2. 分类管理</a></li></ul></li></ul></div></div><p>这里列出任何时候任何内容下收集的感觉有用的网文。</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 网文列表</h2><div class="outline-text-2" id="text-1"></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-02-16 二 17:34&gt; </span></span> <a href="http://blog.sina.com.cn/s/blog_8af6bbd10101hfdj.html" target="_blank" rel="noopener">pkg-config的用法</a></h3><div class="outline-text-3" id="text-1-1"><p>站内链接：<a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2016-02-16-net_articles201602.files/pkg-config_usage.html" target="_blank" rel="noopener">pkg-config_usage.html</a></p><p>存档：<a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2016-02-16-net_articles201602.files/pkg-config_usage.html.maff" target="_blank" rel="noopener">pkg-config_usage.html.maff</a></p></div></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">1.2</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-02-17 三 15:00&gt; </span></span> <a href="http://blog.csdn.net/look85/article/details/7988332" target="_blank" rel="noopener">Scientific Toolworks Understand for linux 的下载</a></h3><div class="outline-text-3" id="text-1-2"><p>站内链接: <a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2016-02-16-net_articles201602.files/scitools_understand_for_linux.html" target="_blank" rel="noopener">scitools_understand_for_linux.html</a></p><p>存档: <a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2016-02-16-net_articles201602.files/scitools_understand_for_linux.html.maff" target="_blank" rel="noopener">scitools_understand_for_linux.html.maff</a></p></div></div><div id="outline-container-orgheadline4" class="outline-3"><h3 id="orgheadline4"><span class="section-number-3">1.3</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-03-02 三 20:00&gt; </span></span> <a href="http://www.kafeitu.me/git/2012/03/27/git-submodule.html" target="_blank" rel="noopener">Git Submodule 使用完整教程</a></h3><div class="outline-text-3" id="text-1-3"><p>站内链接：<a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2016-02-16-net_articles201602.files/Git_Submodule_tutor-HenryYan.html" target="_blank" rel="noopener">Git_Submodule_tutor-HenryYan.html</a> </p><p>存档：<a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2016-02-16-net_articles201602.files/Git_Submodule_tutor-HenryYan.html.maff" target="_blank" rel="noopener">Git_Submodule_tutor-HenryYan.html.maff</a></p></div></div><div id="outline-container-orgheadline5" class="outline-3"><h3 id="orgheadline5"><span class="section-number-3">1.4</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-05-24 二 14:11&gt; </span></span> <a href="http://www.360doc.com/content/15/1118/13/17283_514054063.shtml#" target="_blank" rel="noopener">Linux内存泄漏查询方法proc/status解释</a></h3><div class="outline-text-3" id="text-1-4"><p>站内链接：<a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2016-02-16-net_articles201602.files/Linux_memory_leak_proc_status.shtml" target="_blank" rel="noopener">Linux_memory_leak_proc_status</a></p><p>存档：<a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2016-02-16-net_articles201602.files/Linux_memory_leak_proc_status.shtml.maff" target="_blank" rel="noopener">Linux_memory_leak_proc_status.shtml.maff</a></p><p>注意：可使用 <code>$ ulimit -s</code> 设定栈限制。</p></div></div><div id="outline-container-orgheadline6" class="outline-3"><h3 id="orgheadline6"><span class="section-number-3">1.5</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-08-12 五 16:11&gt; </span></span> <a href="http://www.hahack.com/codes/cmake/" target="_blank" rel="noopener">CMake 入门实战</a></h3><div class="outline-text-3" id="text-1-5"><p>站内链接：<a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/jekyll/data/2016-02-16-net_articles201602.files/CMake_usage" target="_blank" rel="noopener">CMake_usage</a></p><p>存档：<a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/jekyll/data/2016-02-16-net_articles201602.files/CMake_usage.maff" target="_blank" rel="noopener">CMake_usage.maff</a></p></div></div><div id="outline-container-orgheadline7" class="outline-3"><h3 id="orgheadline7"><span class="section-number-3">1.6</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-09-12 一 14:41&gt; </span></span> <a href="http://blog.sina.com.cn/s/blog_702c2db50102vc2h.html" target="_blank" rel="noopener">Android Native/Tombstone Crash Log 详细分析</a></h3><div class="outline-text-3" id="text-1-6"><p>站内链接：<a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/jekyll/data/2016-02-16-net_articles201602.files/Android_Tombstone_Crash%C2%A0Log_analyzing.html/" target="_blank" rel="noopener">Android_Tombstone_Crash Log_analyzing</a></p><p>存档：<a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/jekyll/data/2016-02-16-net_articles201602.files/Android_Tombstone_Crash%C2%A0Log_analyzing.html.maff" target="_blank" rel="noopener">Android_Tombstone_Crash Log_analyzing.html.maff</a></p></div></div><div id="outline-container-orgheadline8" class="outline-3"><h3 id="orgheadline8"><span class="section-number-3">1.7</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2017-08-24 四 18:16&gt;  </span></span>  <a href="http://blog.csdn.net/xph23/article/details/38157491" target="_blank" rel="noopener">动态库的链接和链接选项-L，-rpath-link，-rpath</a></h3><div class="outline-text-3" id="text-1-7"><p>站内链接： <a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/jekyll/data/2016-02-16-net_articles201602.files/gcc_options_rpath_libraries" target="_blank" rel="noopener">gcc_options_rpath_libraries</a></p><p>存档： <a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/jekyll/data/2016-02-16-net_articles201602.files/gcc_options_rpath_libraries.maff" target="_blank" rel="noopener">gcc_options_rpath_libraries.maff</a></p></div></div><div id="outline-container-orgheadline9" class="outline-3"><h3 id="orgheadline9"><span class="section-number-3">1.8</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2017-08-24 四 18:19&gt; </span></span> <a href="http://blog.csdn.net/dbzhang800/article/details/6918413" target="_blank" rel="noopener">动态库加载路径之RPATH与RUNPATH(小记)</a></h3><div class="outline-text-3" id="text-1-8"><p>站内链接： <a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/jekyll/data/2016-02-16-net_articles201602.files/rpath_runpath_for_library" target="_blank" rel="noopener">rpath_runpath_for_library</a></p><p>存档：<a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/jekyll/data/2016-02-16-net_articles201602.files/rpath_runpath_for_library.maff" target="_blank" rel="noopener">rpath_runpath_for_library.maff</a></p></div></div><div id="outline-container-orgheadline10" class="outline-3"><h3 id="orgheadline10"><span class="section-number-3">1.9</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2017-08-24 四 18:24&gt; </span></span> <a href="http://www.cnblogs.com/LiuYanYGZ/p/5548991.html" target="_blank" rel="noopener">RPATH与RUNPATH</a></h3><div class="outline-text-3" id="text-1-9"><p>站内链接： <a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/jekyll/data/2016-02-16-net_articles201602.files/rpath_runpath" target="_blank" rel="noopener">rpath_runpath</a></p><p>存档： <a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/jekyll/data/2016-02-16-net_articles201602.files/rpath_runpath.maff" target="_blank" rel="noopener">rpath_runpath.maff</a></p></div></div><div id="outline-container-orgheadline11" class="outline-3"><h3 id="orgheadline11"><span class="section-number-3">1.10</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2017-09-15 五 10:00&gt; </span></span> <a href="http://blog.csdn.net/ibingow/article/details/7882098" target="_blank" rel="noopener">rpath添加依赖库搜索路径</a></h3><div class="outline-text-3" id="text-1-10"><p>站内链接： <a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/jekyll/data/2016-02-16-net_articles201602.files/rpath_search" target="_blank" rel="noopener">rpath_search</a></p><p>存档： <a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/jekyll/data/2016-02-16-net_articles201602.files/rpath_search.maff" target="_blank" rel="noopener">rpath_search.maff</a></p></div></div><div id="outline-container-orgheadline12" class="outline-3"><h3 id="orgheadline12"><span class="section-number-3">1.11</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2017-12-11 一 12:13&gt; </span></span> <a href="http://www.ruanyifeng.com/blog/2011/08/what_is_a_digital_signature.html" target="_blank" rel="noopener">数字签名是什么？</a></h3><div class="outline-text-3" id="text-1-11"><p>站内链接： <a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/jekyll/data/2016-02-16-net_articles201602.files/whatis_digital_sign.html" target="_blank" rel="noopener">whatis_digital_sign.html</a></p><p>存档： <a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/jekyll/data/2016-02-16-net_articles201602.files/whatis_digital_sign.html.maff" target="_blank" rel="noopener">whatis_digital_sign.html.maff</a></p></div></div></div><div id="outline-container-orgheadline13" class="outline-2"><h2 id="orgheadline13"><span class="section-number-2">2</span> 其它</h2><div class="outline-text-2" id="text-2"></div><div id="outline-container-orgheadline14" class="outline-3"><h3 id="orgheadline14"><span class="section-number-3">2.1</span> maff存档格式</h3><div class="outline-text-3" id="text-2-1"><p>为基于zip格式的maff文档，maff类似微软的mht都是将当前网页保存成单一离线文件的格式.</p><p>firefox下的MAFF Archive Format插件可以实现保存网页为maff，并且能直接查看对应文件格式.</p><p>另外maff文件格式实质是zip压缩文件,可以将文件解压之后用普通浏览器打开其中的内容(与直接打开maff格式的区别是普通方式打开的网页缺少了源网址来源的信息提示),亦可将解压后的文件夹重新用zip压缩,重命名为xxx.maff用firefox的MAFF Archive Format插件浏览.</p><p>当前存放外部引用网页的方式,可以采取maff方式保存(这要求我们只有使用firefox浏览网页),为便于随时浏览,可将保存的文件用zip解压. 需要时再用zip压缩\重命名为maff再打开.</p></div></div><div id="outline-container-orgheadline15" class="outline-3"><h3 id="orgheadline15"><span class="section-number-3">2.2</span> 分类管理</h3><div class="outline-text-3" id="text-2-2"><p>每个月或几个月整理一次，或者追加文章，将原来的文章整理至特定分类。</p></div></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;
&amp;#x2014;
layout: posts
title: 网文收集201602
categories: [categories, others]
comments: true
&amp;#x2014;
#+END_HTML
&lt;/p&gt;
&lt;div id=&quot;table-of-cont
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://0.0.0.0:4000/2016/02/11/template_file/"/>
    <id>http://0.0.0.0:4000/2016/02/11/template_file/</id>
    <published>2016-02-10T16:00:00.000Z</published>
    <updated>2019-10-22T08:07:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2014;layout: poststitle: 模板文件categories: [categories, others]comments: true&#x2014;#+END_HTML</p><div id="table-of-contents"><h2>&#30446;&#24405;</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 介绍</a><ul><li><a href="#orgheadline2">1.1. 子标题1</a></li><li><a href="#orgheadline3">1.2. 子标题2：</a></li></ul></li><li><a href="#orgheadline4">2. 内容1</a></li><li><a href="#orgheadline5">3. 内容2</a></li><li><a href="#orgheadline6">4. 其它</a></li><li><a href="#orgheadline7">5. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[0/4]</code>(<code>[0%]</code>)</a><ul><li><a href="#orgheadline8">5.1. <span class="todo nilNEXT">NEXT</span> 问题1？</a></li><li><a href="#orgheadline9">5.2. <span class="todo nilNEXT">NEXT</span> 问题2？</a></li></ul></li></ul></div></div><p>本文主要描述orgmode导出到jekyll文件的文章的常见格式。</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 介绍</h2><div class="outline-text-2" id="text-1"><p>文章可以以二级标题开始,便于将来父级追加,这一点不知道是否必要.</p></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> 子标题1</h3><div class="outline-text-3" id="text-1-1"><p>子标题内容</p><ol class="org-ol"><li>列表项目1。</li><li>列表项目2。</li></ol></div></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">1.2</span> 子标题2：</h3><div class="outline-text-3" id="text-1-2"><p>子标题2的内容</p></div></div></div><div id="outline-container-orgheadline4" class="outline-2"><h2 id="orgheadline4"><span class="section-number-2">2</span> 内容1</h2><div class="outline-text-2" id="text-2"><p>规整好的内容1</p></div></div><div id="outline-container-orgheadline5" class="outline-2"><h2 id="orgheadline5"><span class="section-number-2">3</span> 内容2</h2><div class="outline-text-2" id="text-3"><p>规整好的内容2</p></div></div><div id="outline-container-orgheadline6" class="outline-2"><h2 id="orgheadline6"><span class="section-number-2">4</span> 其它</h2><div class="outline-text-2" id="text-4"><p>介绍没有明确规整的内容.</p></div></div><div id="outline-container-orgheadline7" class="outline-2"><h2 id="orgheadline7"><span class="section-number-2">5</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[0/4]</code>(<code>[0%]</code>)</h2><div class="outline-text-2" id="text-5"><p>描述该文章中遗留的问题,有待将来解决.</p></div><div id="outline-container-orgheadline8" class="outline-3"><h3 id="orgheadline8"><span class="section-number-3">5.1</span> <span class="todo NEXT">NEXT</span> 问题1？</h3><div class="outline-text-3" id="text-5-1"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-02-01 一 15:39]</span></span></li></ul></div></div><div id="outline-container-orgheadline9" class="outline-3"><h3 id="orgheadline9"><span class="section-number-3">5.2</span> <span class="todo NEXT">NEXT</span> 问题2？</h3><div class="outline-text-3" id="text-5-2"><ul class="org-ul"><li>State "NEXT"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-02-01 一 15:40]</span></span></li></ul></div></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;
&amp;#x2014;
layout: posts
title: 模板文件
categories: [categories, others]
comments: true
&amp;#x2014;
#+END_HTML
&lt;/p&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://0.0.0.0:4000/2016/02/09/useful_tools/"/>
    <id>http://0.0.0.0:4000/2016/02/09/useful_tools/</id>
    <published>2016-02-08T16:00:00.000Z</published>
    <updated>2019-10-22T08:07:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2014;layout: poststitle: 实用工具categories: [categories,study,kits]comments: true&#x2014;#+END_HTML</p><div id="table-of-contents"><h2>&#30446;&#24405;</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[0/3]</code>(<code>[0%]</code>)</a><ul><li><a href="#orgheadline2">1.1. <span class="todo nilLATER">LATER</span> encfs</a></li><li><a href="#orgheadline3">1.2. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> ccache 增加编译速度</a></li><li><a href="#orgheadline4">1.3. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> 比较好的中文终端 fbterm</a></li></ul></li></ul></div></div><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[0/3]</code>(<code>[0%]</code>)</h2><div class="outline-text-2" id="text-1"></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> <span class="todo LATER">LATER</span> encfs</h3><div class="outline-text-3" id="text-1-1"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 10:05]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-01-25 一 18:08]</span></span></p><hr><p>加密文件系统，可以对特定的目录和目录中的文件进行加密。实现方式是通过encfs进行。</p><dl class="org-dl"><dt>安装</dt><dd><code>sudo apt-get install encfs</code></dd><dt>挂载加密目录</dt><dd><code>encfs ~/crypt_dir ~/normal_dir</code></dd><dt>卸载加密目录</dt><dd><code>fusermount -u ~/normal_dir</code></dd><dt>修改密码</dt><dd><code>encfsctl</code></dd></dl><p>参考：<a href="https://linux.cn/article-2234-1.html" target="_blank" rel="noopener">https://linux.cn/article-2234-1.html</a></p></div></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">1.2</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> ccache 增加编译速度</h3><div class="outline-text-3" id="text-1-2"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 10:15]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-01-26 二 11:43]</span></span></p><hr></div></div><div id="outline-container-orgheadline4" class="outline-3"><h3 id="orgheadline4"><span class="section-number-3">1.3</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> 比较好的中文终端 fbterm</h3><div class="outline-text-3" id="text-1-3"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-24 三 10:53]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-06-03 五 13:44]</span></span></p><hr></div></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;
&amp;#x2014;
layout: posts
title: 实用工具
categories: [categories,study,kits]
comments: true
&amp;#x2014;
#+END_HTML
&lt;/p&gt;
&lt;div id=&quot;table-of-content
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://0.0.0.0:4000/2016/02/09/linux_misc_notes/"/>
    <id>http://0.0.0.0:4000/2016/02/09/linux_misc_notes/</id>
    <published>2016-02-08T16:00:00.000Z</published>
    <updated>2019-10-22T08:07:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2014;layout: poststitle: Linux杂乱记录categories: [categories,study,linux,misc]comments: true&#x2014;#+END_HTML</p><div id="table-of-contents"><h2>&#30446;&#24405;</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 介绍</a><ul><li><a href="#orgheadline2">1.1. 子标题1</a></li><li><a href="#orgheadline3">1.2. 子标题2：</a></li></ul></li><li><a href="#orgheadline4">2. 内容1</a></li><li><a href="#orgheadline5">3. 内容2</a></li><li><a href="#orgheadline6">4. Miscellaneous</a><ul><li><a href="#orgheadline7">4.1. &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2015-10-28 三 11:32] </span></span> Cscope 没有文件的错误------</a></li><li><a href="#orgheadline8">4.2. &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2016-01-31 日 11:12] </span></span> top再H即可list by thread------</a></li><li><a href="#orgheadline9">4.3. &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2016-01-31 日 14:42] </span></span> Linux进程状态机与ps关联------</a></li><li><a href="#orgheadline10">4.4. <span class="done nilDONE">DONE</span> ubuntu无线热点供android使用</a><ul><li><a href="#orgheadline11">4.4.1. 安装所需工具</a></li><li><a href="#orgheadline12">4.4.2. 修改配置文件</a></li><li><a href="#orgheadline13">4.4.3. 运行相关内容</a></li><li><a href="#orgheadline14">4.4.4. 参考网址</a></li><li><a href="#orgheadline15">4.4.5. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> Ubuntu wifi(hostapd+udhcpd)</a></li></ul></li><li><a href="#orgheadline16">4.5. <span class="done nilDONE">DONE</span> 结合coredump调试</a><ul><li><a href="#orgheadline17">4.5.1. 杂乱</a></li></ul></li><li><a href="#orgheadline18">4.6. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 添加超级用户权限 <code>sudo adduser xxx sudo</code></a></li><li><a href="#orgheadline19">4.7. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> ssh配置文件简化登录过程</a></li><li><a href="#orgheadline20">4.8. &gt;&gt;&gt;&gt;&gt; <span class="timestamp-wrapper"><span class="timestamp">[2017-03-22 三 09:28] </span></span> 查看一个进程的环境变量</a></li><li><a href="#orgheadline21">4.9. Linux系统管理杂技</a><ul><li><a href="#orgheadline22">4.9.1. Linux如何查看当前占用CPU或内存最多的几个进程</a></li><li><a href="#orgheadline23">4.9.2. 踢出特定终端的用户</a></li><li><a href="#orgheadline24">4.9.3. 限制占用资源过多的进程</a></li><li><a href="#orgheadline25">4.9.4. 局域网间文件互传</a></li></ul></li><li><a href="#orgheadline26">4.10. 意外发现</a></li><li><a href="#orgheadline27">4.11. <span class="done nilREFERENCE">REFERENCE</span> 一个便于调试的源码编译软件安装技巧</a><ul><li><a href="#orgheadline28">4.11.1. 问题</a></li><li><a href="#orgheadline29">4.11.2. 整体思想</a></li><li><a href="#orgheadline30">4.11.3. 执行过程</a></li></ul></li></ul></li><li><a href="#orgheadline31">5. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[0/8]</code>(<code>[0%]</code>)</a><ul><li><a href="#orgheadline32">5.1. <span class="todo nilNEXT">NEXT</span> 问题1？</a></li><li><a href="#orgheadline33">5.2. <span class="todo nilNEXT">NEXT</span> 问题2？</a></li><li><a href="#orgheadline34">5.3. <span class="todo nilLATER">LATER</span> screen如何将剪切内容与x剪切板关联？</a></li><li><a href="#orgheadline35">5.4. <span class="todo nilLATER">LATER</span> screenkey</a></li><li><a href="#orgheadline36">5.5. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> sudo apt-get install screenlets-pack-all screenlets</a></li><li><a href="#orgheadline37">5.6. <span class="todo nilLATER">LATER</span> 如何打开.msg格式的邮件文件</a></li><li><a href="#orgheadline38">5.7. <span class="todo nilLATER">LATER</span> sshfs用目录的方式来挂载ssh主机</a></li><li><a href="#orgheadline39">5.8. <span class="todo nilLATER">LATER</span> vimdot</a></li><li><a href="#orgheadline40">5.9. <span class="todo nilLATER">LATER</span> 跨网传输</a></li><li><a href="#orgheadline41">5.10. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> Thunderbird+DavMail 支持Exchange</a><ul><li><a href="#orgheadline42">5.10.1. DavMail configuration</a></li><li><a href="#orgheadline43">5.10.2. Thunder bird</a></li><li><a href="#orgheadline44">5.10.3. 问题</a></li></ul></li><li><a href="#orgheadline45">5.11. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> lua geany</a></li><li><a href="#orgheadline46">5.12. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> haroopad</a></li><li><a href="#orgheadline47">5.13. <span class="todo nilLATER">LATER</span> 常用linux命令的源码</a></li><li><a href="#orgheadline48">5.14. <span class="todo nilLATER">LATER</span> mount等linux源码</a></li><li><a href="#orgheadline49">5.15. <span class="todo nilLATER">LATER</span> shell操作技巧,自动补全上下搜索的技巧</a></li><li><a href="#orgheadline50">5.16. <span class="todo nilLATER">LATER</span> shell输入实用技巧</a></li><li><a href="#orgheadline51">5.17. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> 关于 <code>configure</code> 系列体系的交叉编译</a></li><li><a href="#orgheadline52">5.18. <span class="todo nilLATER">LATER</span> 设置coredump的格式</a></li><li><a href="#orgheadline53">5.19. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> ssh远程解压</a></li><li><a href="#orgheadline54">5.20. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 每次启动vim或者ssh的时候都会提示错误</a></li><li><a href="#orgheadline55">5.21. emacs dot绘图出现错误</a><ul><li><a href="#orgheadline56">5.21.1. 实践</a></li><li><a href="#orgheadline57">5.21.2. 参考</a></li></ul></li><li><a href="#orgheadline58">5.22. <code>/proc/pid/maps</code> 查看动态链接的库</a></li><li><a href="#orgheadline59">5.23. <code>/proc/pid/environ</code> 查看进程的环境变量</a></li><li><a href="#orgheadline60">5.24. 批量重命名文件的技巧</a></li><li><a href="#orgheadline61">5.25. 链接选项 <code>-rpath</code> 和 <code>-rpath-link</code></a></li><li><a href="#orgheadline62">5.26. <code>di</code> 命令替代 <code>du</code> 命令</a></li><li><a href="#orgheadline63">5.27. 使用shell数组来实现cut类似功能的技巧</a></li></ul></li></ul></div></div><p>本文主要记录使用linux过程中记录的杂乱问题,适时可能会整理至特定的地方.</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 介绍</h2><div class="outline-text-2" id="text-1"><p>文章可以以二级标题开始,便于将来父级追加,这一点不知道是否必要.</p></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> 子标题1</h3><div class="outline-text-3" id="text-1-1"><p>子标题内容</p><ol class="org-ol"><li>列表项目1。</li><li>列表项目2。</li></ol></div></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">1.2</span> 子标题2：</h3><div class="outline-text-3" id="text-1-2"><p>子标题2的内容</p></div></div></div><div id="outline-container-orgheadline4" class="outline-2"><h2 id="orgheadline4"><span class="section-number-2">2</span> 内容1</h2><div class="outline-text-2" id="text-2"><p>规整好的内容1</p></div></div><div id="outline-container-orgheadline5" class="outline-2"><h2 id="orgheadline5"><span class="section-number-2">3</span> 内容2</h2><div class="outline-text-2" id="text-3"><p>规整好的内容2</p></div></div><div id="outline-container-orgheadline6" class="outline-2"><h2 id="orgheadline6"><span class="section-number-2">4</span> Miscellaneous</h2><div class="outline-text-2" id="text-4"><p>介绍没有明确规整，或有待规整的内容.</p></div><div id="outline-container-orgheadline7" class="outline-3"><h3 id="orgheadline7"><span class="section-number-3">4.1</span> &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2015-10-28 三 11:32] </span></span> Cscope 没有文件的错误------</h3><div class="outline-text-3" id="text-4-1"><p>From:/home/miracle/mydata/orgmode/gtd/next.org</p><p>参考：<a href="http://www.21qa.net/questions/2699/2699" target="_blank" rel="noopener">http://www.21qa.net/questions/2699/2699</a>Error detected while processing ~/.vimrc:cs_read_prompt EOF: No such file or directoryE609: Cscope error: cscope: cannot read trailer offset from file cscope.outc</p><p>使用cscope查看程序代码遇到一个问题，就是在配置vim中默认打开cscope.out文件出现如上错误，经google后发现的问题是代码所放的文件夹命名中存在了“空格 ”，解决办法就是将文件夹重命名，用‘-’或英文等符号替代空格。</p></div></div><div id="outline-container-orgheadline8" class="outline-3"><h3 id="orgheadline8"><span class="section-number-3">4.2</span> &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2016-01-31 日 11:12] </span></span> top再H即可list by thread------</h3><div class="outline-text-3" id="text-4-2"><p>From:/home/miracle/mydata/orgmode/gtd/_next.org</p></div></div><div id="outline-container-orgheadline9" class="outline-3"><h3 id="orgheadline9"><span class="section-number-3">4.3</span> &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2016-01-31 日 14:42] </span></span> Linux进程状态机与ps关联------</h3><div class="outline-text-3" id="text-4-3"><p>From:/home/miracle/mydata/orgmode/gtd/_next.org</p><p>参考：<a href="http://www.cnblogs.com/zhaoyl/archive/2012/09/04/2671156.html" target="_blank" rel="noopener">http://www.cnblogs.com/zhaoyl/archive/2012/09/04/2671156.html</a></p><p>进程是通过fork系列的系统调用（fork、clone、vfork）来创建的，内核（或内核模块）也可以通过kernel_thread函数创建内核进程。这些创建子进程的函数本质上都完成了相同的功能——将调用进程复制一份，得到子进程。（可以通过选项参数来决定各种资源是共享、还是私有。）那么既然调用进程处于TASK_RUNNING状态（否则，它若不是正在运行，又怎么进行调用？），则子进程默认也处于TASK_RUNNING状态。另外，在系统调用clone和内核函数kernel_thread也接受CLONE_STOPPED选项，从而将子进程的初始状态置为 TASK_STOPPED。</p><p>　　进程创建后，状态可能发生一系列的变化，直到进程退出。而尽管进程状态有好几种，但是进程状态的变迁却只有两个方向——从TASK_RUNNING状态变为非TASK_RUNNING状态、或者从非TASK_RUNNING状态变为TASK_RUNNING状态。总之，TASK_RUNNING是必经之路，不可能两个非RUN状态直接转换。</p><p>也就是说，如果给一个TASK_INTERRUPTIBLE状态的进程发送SIGKILL信号，这个进程将先被唤醒（进入TASK_RUNNING状态），然后再响应SIGKILL信号而退出（变为TASK_DEAD状态）。并不会从TASK_INTERRUPTIBLE状态直接退出。</p><p>　　进程从非TASK_RUNNING状态变为TASK_RUNNING状态，是由别的进程（也可能是中断处理程序）执行唤醒操作来实现的。执行唤醒的进程设置被唤醒进程的状态为TASK_RUNNING，然后将其task_struct结构加入到某个CPU的可执行队列中。于是被唤醒的进程将有机会被调度执行。</p><p>　　而进程从TASK_RUNNING状态变为非TASK_RUNNING状态，则有两种途径：</p><p>　　1、响应信号而进入TASK_STOPED状态、或TASK_DEAD状态；　　2、执行系统调用主动进入TASK_INTERRUPTIBLE状态（如nanosleep系统调用）、或TASK_DEAD状态（如exit系统调用）；或由于执行系统调用需要的资源得不到满　　　　 足，而进入TASK_INTERRUPTIBLE状态或TASK_UNINTERRUPTIBLE状态（如select系统调用）。　　显然，这两种情况都只能发生在进程正在CPU上执行的情况下。</p><p>通过ps命令我们能够查看到系统中存在的进程，以及它们的状态：</p><p>R(TASK_RUNNING)，可执行状态。</p><p>只有在该状态的进程才可能在CPU上运行。而同一时刻可能有多个进程处于可执行状态，这些进程的task_struct结构（进程控制块）被放入对应CPU的可执行队列中（一个进程最多只能出现在一个CPU的可执行队列中）。进程调度器的任务就是从各个CPU的可执行队列中分别选择一个进程在该CPU上运行。只要可执行队列不为空，其对应的CPU就不能偷懒，就要执行其中某个进程。一般称此时的CPU“忙碌”。对应的，CPU“空闲”就是指其对应的可执行队列为空，以致于CPU无事可做。有人问，为什么死循环程序会导致CPU占用高呢？因为死循环程序基本上总是处于TASK_RUNNING状态（进程处于可执行队列中）。除非一些非常极端情况（比如系统内存严重紧缺，导致进程的某些需要使用的页面被换出，并且在页面需要换入时又无法分配到内存……），否则这个进程不会睡眠。所以CPU的可执行队列总是不为空（至少有这么个进程存在），CPU也就不会“空闲”。</p><p>很多操作系统教科书将正在CPU上执行的进程定义为RUNNING状态、而将可执行但是尚未被调度执行的进程定义为READY状态，这两种状态在linux下统一为 TASK_RUNNING状态。</p><p>S(TASK_INTERRUPTIBLE)，可中断的睡眠状态。</p><p>处于这个状态的进程因为等待某某事件的发生（比如等待socket连接、等待信号量），而被挂起。这些进程的task_struct结构被放入对应事件的等待队列中。当这些事件发生时（由外部中断触发、或由其他进程触发），对应的等待队列中的一个或多个进程将被唤醒。</p><p>通过ps命令我们会看到，一般情况下，进程列表中的绝大多数进程都处于TASK_INTERRUPTIBLE状态（除非机器的负载很高）。毕竟CPU就这么一两个，进程动辄几十上百个，如果不是绝大多数进程都在睡眠，CPU又怎么响应得过来。</p><p>D(TASK_UNINTERRUPTIBLE)，不可中断的睡眠状态。</p><p>与TASK_INTERRUPTIBLE状态类似，进程处于睡眠状态，但是此刻进程是不可中断的。不可中断，指的并不是CPU不响应外部硬件的中断，而是指进程不响应异步信号。绝大多数情况下，进程处在睡眠状态时，总是应该能够响应异步信号的。否则你将惊奇的发现，kill -9竟然杀不死一个正在睡眠的进程了！于是我们也很好理解，为什么ps命令看到的进程几乎不会出现TASK_UNINTERRUPTIBLE状态，而总是TASK_INTERRUPTIBLE状态。</p><p>而TASK_UNINTERRUPTIBLE状态存在的意义就在于，内核的某些处理流程是不能被打断的。如果响应异步信号，程序的执行流程中就会被插入一段用于处理异步信号的流程（这个插入的流程可能只存在于内核态，也可能延伸到用户态），于是原有的流程就被中断了（参见《linux异步信号handle浅析》）。在进程对某些硬件进行操作时（比如进程调用read系统调用对某个设备文件进行读操作，而read系统调用最终执行到对应设备驱动的代码，并与对应的物理设备进行交互），可能需要使用TASK_UNINTERRUPTIBLE状态对进程进行保护，以避免进程与设备交互的过程被打断，造成设备陷入不可控的状态。（比如read系统调用触发了一次磁盘到用户空间的内存的DMA，如果DMA进行过程中，进程由于响应信号而退出了，那么DMA正在访问的内存可能就要被释放了。）这种情况下的TASK_UNINTERRUPTIBLE状态总是非常短暂的，通过ps命令基本上不可能捕捉到。</p><p>linux系统中也存在容易捕捉的TASK_UNINTERRUPTIBLE状态。执行vfork系统调用后，父进程将进入TASK_UNINTERRUPTIBLE状态，直到子进程调用exit或exec。通过下面的代码就能得到处于TASK_UNINTERRUPTIBLE状态的进程：#include &lt;unistd.h&gt;void main() {if (!vfork()) sleep(100);}编译运行，然后ps一下：kouu@kouu-one:~/test$ ps -ax | grep a\.out4371 pts/0 D+ 0:00 ./a.out4372 pts/0 S+ 0:00 ./a.out4374 pts/1 S+ 0:00 grep a.out然后我们可以试验一下TASK_UNINTERRUPTIBLE状态的威力。不管kill还是kill -9，这个TASK_UNINTERRUPTIBLE状态的父进程依然屹立不倒。</p><p>T(TASK_STOPPED or TASK_TRACED)，暂停状态或跟踪状态。</p><p>向进程发送一个SIGSTOP信号，它就会因响应该信号而进入TASK_STOPPED状态（除非该进程本身处于TASK_UNINTERRUPTIBLE状态而不响应信号）。（SIGSTOP与SIGKILL信号一样，是非常强制的。不允许用户进程通过signal系列的系统调用重新设置对应的信号处理函数。）向进程发送一个SIGCONT信号，可以让其从TASK_STOPPED状态恢复到TASK_RUNNING状态。</p><p>当进程正在被跟踪时，它处于TASK_TRACED这个特殊的状态。“正在被跟踪”指的是进程暂停下来，等待跟踪它的进程对它进行操作。比如在gdb中对被跟踪的进程下一个断点，进程在断点处停下来的时候就处于TASK_TRACED状态。而在其他时候，被跟踪的进程还是处于前面提到的那些状态。对于进程本身来说，TASK_STOPPED和TASK_TRACED状态很类似，都是表示进程暂停下来。而TASK_TRACED状态相当于在TASK_STOPPED之上多了一层保护，处于TASK_TRACED状态的进程不能响应SIGCONT信号而被唤醒。只能等到调试进程通过ptrace系统调用执行PTRACE_CONT、PTRACE_DETACH等操作（通过ptrace系统调用的参数指定操作），或调试进程退出，被调试的进程才能恢复TASK_RUNNING状态。</p><p>Z(TASK_DEAD - EXIT_ZOMBIE)，退出状态，进程成为僵尸进程。</p><p>进程在退出的过程中，处于TASK_DEAD状态。</p><p>在这个退出过程中，进程占有的所有资源将被回收，除了task_struct结构（以及少数资源）以外。于是进程就只剩下task_struct这么个空壳，故称为僵尸。之所以保留task_struct，是因为task_struct里面保存了进程的退出码、以及一些统计信息。而其父进程很可能会关心这些信息。比如在shell中，$?变量就保存了最后一个退出的前台进程的退出码，而这个退出码往往被作为if语句的判断条件。当然，内核也可以将这些信息保存在别的地方，而将task_struct结构释放掉，以节省一些空间。但是使用task_struct结构更为方便，因为在内核中已经建立了从pid到task_struct查找关系，还有进程间的父子关系。释放掉task_struct，则需要建立一些新的数据结构，以便让父进程找到它的子进程的退出信息。</p><p>父进程可以通过wait系列的系统调用（如wait4、waitid）来等待某个或某些子进程的退出，并获取它的退出信息。然后wait系列的系统调用会顺便将子进程的尸体（task_struct）也释放掉。子进程在退出的过程中，内核会给其父进程发送一个信号，通知父进程来“收尸”。这个信号默认是SIGCHLD，但是在通过clone系统调用创建子进程时，可以设置这个信号。</p><p>通过下面的代码能够制造一个EXIT_ZOMBIE状态的进程：#include &lt;unistd.h&gt;void main() {if (fork())while(1) sleep(100);}编译运行，然后ps一下：kouu@kouu-one:~/test$ ps -ax | grep a\.out10410 pts/0 S+ 0:00 ./a.out10411 pts/0 Z+ 0:00 [a.out] &lt;defunct&gt;10413 pts/1 S+ 0:00 grep a.out</p><p>只要父进程不退出，这个僵尸状态的子进程就一直存在。那么如果父进程退出了呢，谁又来给子进程“收尸”？当进程退出的时候，会将它的所有子进程都托管给别的进程（使之成为别的进程的子进程）。托管给谁呢？可能是退出进程所在进程组的下一个进程（如果存在的话），或者是1号进程。所以每个进程、每时每刻都有父进程存在。除非它是1号进程。</p><p>1号进程，pid为1的进程，又称init进程。linux系统启动后，第一个被创建的用户态进程就是init进程。它有两项使命：1、执行系统初始化脚本，创建一系列的进程（它们都是init进程的子孙）；2、在一个死循环中等待其子进程的退出事件，并调用waitid系统调用来完成“收尸”工作；init进程不会被暂停、也不会被杀死（这是由内核来保证的）。它在等待子进程退出的过程中处于TASK_INTERRUPTIBLE状态，“收尸”过程中则处于TASK_RUNNING状态。</p><p>X(TASK_DEAD - EXIT_DEAD)，退出状态，进程即将被销毁。</p><p>而进程在退出过程中也可能不会保留它的task_struct。比如这个进程是多线程程序中被detach过的进程（进程？线程？参见《linux线程浅析》）。或者父进程通过设置SIGCHLD信号的handler为SIG_IGN，显式的忽略了SIGCHLD信号。（这是posix的规定，尽管子进程的退出信号可以被设置为SIGCHLD以外的其他信号。）此时，进程将被置于EXIT_DEAD退出状态，这意味着接下来的代码立即就会将该进程彻底释放。所以EXIT_DEAD状态是非常短暂的，几乎不可能通过ps命令捕捉到。</p></div></div><div id="outline-container-orgheadline10" class="outline-3"><h3 id="orgheadline10"><span class="section-number-3">4.4</span> <span class="done DONE">DONE</span> ubuntu无线热点供android使用</h3><div class="outline-text-3" id="text-4-4"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-04-16 六 16:47]</span></span></li><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-03-15 二 12:15] </span></span> <br>等待整理</li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-03-15 二 11:33]</span></span></p><hr><p>使用Ubuntu自带的wifi热点设置，一般android无法联网，因为一般android不支持ad-hoc模式。可借助如下方式实现ubuntu共享wifi热点。</p><p>系统：Ubuntu 12.04</p></div><div id="outline-container-orgheadline11" class="outline-4"><h4 id="orgheadline11"><span class="section-number-4">4.4.1</span> 安装所需工具</h4><div class="outline-text-4" id="text-4-4-1"><pre class="example">$sudo apt-get install hostapd dnsmasq</pre></div></div><div id="outline-container-orgheadline12" class="outline-4"><h4 id="orgheadline12"><span class="section-number-4">4.4.2</span> 修改配置文件</h4><div class="outline-text-4" id="text-4-4-2"><p>修改配置： <code>/etc/hostapd.conf</code>, <code>/etc/dnsmasq.conf</code>, <code>/etc/sysctl.conf</code></p><p><code>/etc/hostapd.conf</code> 编辑如下：</p><pre class="example">interface=wlan0driver=nl80211ssid=CMCC_QUIEThw_mode=gchannel=11dtim_period=1rts_threshold=2347fragm_threshold=2346macaddr_acl=0auth_algs=3ieee80211n=0wpa=3wpa_passphrase=12345678wpa_key_mgmt=WPA-PSKwpa_pairwise=TKIPrsn_pairwise=CCMP</pre><p><code>/etc/dnsmasq.conf</code> 加入如下：</p><pre class="example">interface=wlan0#这个是只监听wlan0，没有之会检测所有卡bind-interfacesexcept-interface=lo#设置dhcp地址范围，即租借时间6小时dhcp-range=192.168.1.100,192.168.1.254,12h#address=/#/10.0.0.1#如果你的配置中有这个，请注释掉，应为这个会把#(代表所有网址)的dns到10.1.1.1这个地址#为手机配置网关，要和dhcp-arange对应，这涉及网络的知识，不详细介绍。dhcp-option=3,192.168.1.1#为手机配置dns，你可以根据实际情况去修改dhcp-option=6,202.114.128.2</pre><p><code>/etc/sysctl.conf</code> 修改如下：为了确保打开了转发的功能，还要修改文件 <code>/etc/sysctl.conf</code> 。打开文件 <code>/etc/sysctl.conf</code> ,找到 <code>net.ipv4.ip_forward=1</code> ，如果被注释了，要将其前面的注释去掉，以便使其生效。</p></div></div><div id="outline-container-orgheadline13" class="outline-4"><h4 id="orgheadline13"><span class="section-number-4">4.4.3</span> 运行相关内容</h4><div class="outline-text-4" id="text-4-4-3"><p>首先创建 <code>myap.sh</code> 脚本用于端口转发。 <code>myap.sh</code> 内容如下：</p><div class="org-src-container"><pre class="src src-sh">#!/bin/sh#为无线添加路由规则iptables -Fiptables -Xiptables -t nat -Fiptables -t nat -Xiptables -t nat -APOSTROUTING -s 192.168.1.0/24 -o eth0 -jMASQUERADEiptables -A FORWARD -s 192.168.1.0/24 -o eth0 -jACCEPTiptables -A FORWARD -d 192.168.1.0/24 -m conntrack --ctstate ESTABLISHED,RELATED -i eth0 -jACCEPT</pre></div><p>依次运行如下命令：</p><div class="org-src-container"><pre class="src src-sh">$sudo killall named  #一般情况下bind的named会占了53端口，从而导致dnsmasq启动不了，所以要用killallnamed来杀了named再启动dnsmasq。$sudo killall hostapd$sudo ifconfig wlan0 192.168.1.1 #由于上面我们将dhcp-range设置为192.168.1.100,192.168.1.254，所以这里我们要将wlan0的ip设置为同一网段的ip。$sudo hostapd -B /etc/hostapd.conf$sudo /etc/init.d/dnsmasq restart #使用静态ip的朋友注意了，dnsmasq启动后会出现电脑突然上不了网，因为dnsmasq更了/etc/resolv.conf的原因。可以在/etc/resolv.conf加一行，执行命令echo"nameserver202.114.128.2"&gt;&gt;/etc/resolv.conf即可。202.114.128.2是dns服务器，你可以根据你的当地的实际情况去修改。#echo 1 &gt;/proc/sys/net/ipv4/ip_forward #启动转发功能。$sudo ./myap#如果你的myap不在当前路径下，要加路径/</pre></div></div><div id="outline-container-orgheadline64" class="outline-5"><h5 id="orgheadline64"><span class="section-number-5">4.4.3.1</span> 总结</h5><div class="outline-text-5" id="text-4-4-3-1"><p>给出一个脚本, <code>mywifi.sh</code>, 运行之时只需要： <code>sudo ./mywifi.sh start</code> 即可。</p><div class="org-src-container"><pre class="src src-sh">#!/bin/sh#you must install hostapd, and dnsmasqdo_start(){        ifconfig wlan0 10.1.1.1 netmask 255.255.255.0        ifconfig wlan0 up        killall named        killall hostapd        ifconfig wlan0 10.1.1.1        hostapd -B /etc/hostapd.conf        /etc/init.d/dnsmasq restart        echo 1 &gt;/proc/sys/net/ipv4/ip_forward        #sysctl  -w net.ipv4.ip_forward=1        iptables -F        iptables -X        iptables -t nat -F        iptables -t nat -X        iptables -t nat -APOSTROUTING -s 10.1.1.0/24 -o eth0 -jMASQUERADE        iptables -A FORWARD -s 10.1.1.0/24 -o eth0 -jACCEPT        iptables -A FORWARD -d 10.1.1.0/24 -m conntrack --ctstate ESTABLISHED,RELATED -i eth0 -jACCEPT}do_stop(){        iptables -X        iptables -F        echo 0 &gt;/proc/sys/net/ipv4/ip_forward        #/etc/init.d/dnsmasq stop        #killall named        killall hostapd        ifconfig wlan0 down}show_help(){        echo "usage: $0 [start |stop]"}case $1 in"start")        do_start $*        ;;"stop")        do_stop $*        ;;*)        show_help        ;;esac__tmp_return=$?exit $__tmp_return</pre></div></div></div></div><div id="outline-container-orgheadline14" class="outline-4"><h4 id="orgheadline14"><span class="section-number-4">4.4.4</span> 参考网址</h4><div class="outline-text-4" id="text-4-4-4"><p><a href="http://xgwdy06.blog.163.com/blog/static/190718352201223093522365/" target="_blank" rel="noopener">http://xgwdy06.blog.163.com/blog/static/190718352201223093522365/</a></p><p><a href="http://www.360doc.com/content/14/0108/11/13232598_343535168.shtml" target="_blank" rel="noopener">http://www.360doc.com/content/14/0108/11/13232598_343535168.shtml</a></p><p><a href="http://www.devba.com/index.php/archives/2289.html" target="_blank" rel="noopener">http://www.devba.com/index.php/archives/2289.html</a></p></div></div><div id="outline-container-orgheadline15" class="outline-4"><h4 id="orgheadline15"><span class="section-number-4">4.4.5</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> Ubuntu wifi(hostapd+udhcpd)</h4><div class="outline-text-4" id="text-4-4-5"><ul class="org-ul"><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-16 二 16:37] </span></span> <br>wait for arranged.</li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-08-16 二 16:01]</span></span></p><hr><ol class="org-ol"><li><p>hostapd</p><div class="org-src-container"><pre class="src src-sh">$sudo apt-get install hostapd</pre></div></li><li><p>udhcpd</p><div class="org-src-container"><pre class="src src-sh">$sudo apt-get install udhcpd</pre></div></li><li><p>hostapd config</p><div class="org-src-container"><pre class="src src-sh">$vim hostapd.confinterface=wlan0driver=nl80211ssid=&lt;your ssid name&gt;hw_mode=gchannel=11dtim_period=1rts_threshold=2347fragm_threshold=2346macaddr_acl=0auth_algs=3ieee80211n=0wpa=3wpa_passphrase=&lt;your password&gt;wpa_key_mgmt=WPA-PSKwpa_pairwise=TKIPrsn_pairwise=CCMP</pre></div></li><li><p>udhcpd config</p><div class="org-src-container"><pre class="src src-sh">$vim /etc/udhcpd.conf...start                10.1.1.100      #default: 192.168.0.20end          10.1.1.200      #default: 192.168.0.254...# The interface that udhcpd will useinterface    wlan0           #default: eth0...opt  dns     10.1.1.1 114.114.114.114option       subnet  255.255.255.0opt  router  10.1.1.1opt  wins    10.1.1.1option       dns     129.219.13.81   # appened to above DNS servers for a total of 3option       domain  localoption       lease   864000          # 10 days of seconds...$vim /etc/default/udhcpd...#DHCPD_ENABLED="no"...</pre></div></li><li><p><code>start/stop</code></p><div class="org-src-container"><pre class="src src-sh">$vim mywifi.sh#!/bin/sh#you must install hostapd, and dnsmasqdo_start(){     ifconfig wlan0 10.1.1.1 netmask 255.255.255.0     ifconfig wlan0 up     killall named     killall hostapd     ifconfig wlan0 10.1.1.1     hostapd -B /etc/hostapd.conf     /etc/init.d/udhcpd start     echo 1 &gt;/proc/sys/net/ipv4/ip_forward     #sysctl  -w net.ipv4.ip_forward=1     iptables -F     iptables -X     iptables -t nat -F     iptables -t nat -X     iptables -t nat -APOSTROUTING -s 10.1.1.0/24 -o eth0 -jMASQUERADE     iptables -A FORWARD -s 10.1.1.0/24 -o eth0 -jACCEPT     iptables -A FORWARD -d 10.1.1.0/24 -m conntrack --ctstate ESTABLISHED,RELATED -i eth0 -jACCEPT}do_stop(){     #iptables -D FORWARD -d 10.1.1.0/24 -m conntrack --ctstate ESTABLISHED,RELATED -i eth0 -jACCEPT     #iptables -D FORWARD -s 10.1.1.0/24 -o eth0 -jACCEPT     iptables -t nat -DPOSTROUTING -s 10.1.1.0/24 -o eth0 -jMASQUERADE     iptables -X     iptables -F     echo 0 &gt;/proc/sys/net/ipv4/ip_forward     /etc/init.d/udhcpd stop     #killall named     killall hostapd     ifconfig wlan0 down}show_help(){     echo "usage: $0 [start |stop]"}case $1 in"start")     do_start $*     ;;"stop")     do_stop $*     ;;* )     show_help     ;;esac__tmp_return=$?exit $__tmp_return</pre></div><p>有时候无法联网，可以尝试一下如下：</p><div class="org-src-container"><pre class="src src-sh">$sudo ip route del 10.1.1.0/24$sudo ip route add 10.1.1.0/24 via 10.1.1.1 dev wlan0 src 10.1.1.1</pre></div></li></ol></div></div></div><div id="outline-container-orgheadline16" class="outline-3"><h3 id="orgheadline16"><span class="section-number-3">4.5</span> <span class="done DONE">DONE</span> 结合coredump调试</h3><div class="outline-text-3" id="text-4-5"><ul class="org-ul"><li>State "DONE"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-08-24 三 10:52]</span></span></li></ul><p>关于coredump, 具体可参见 <a href="http://vaqeteart.iteye.com/blog/1013397" target="_blank" rel="noopener"><a href="http://vaqeteart.iteye.com/blog/1013397" target="_blank" rel="noopener">http://vaqeteart.iteye.com/blog/1013397</a></a></p><p>大致注意如下:</p><ol class="org-ol"><li>coredump 是程序崩溃前系统为其生成的内存快照.</li><li>coredump 默认存放在当前进程工作路径,也有些系统会生成到特定的目录中,需要自己确认.</li><li><p>需要打开系统coredump开关,才可令系统在程序崩溃前生成coredump.</p><div class="org-src-container"><pre class="src src-sh"># ulimit -c unlimited</pre></div></li><li>coredump的读取<ul class="org-ul"><li><p>确认coredump类型用file,例如</p><div class="org-src-container"><pre class="src src-sh">$file core.pid core.pid: ELF 32-bit LSB core file ARM, version 1 (SYSV), SVR4-style, from 'nt_'</pre></div></li><li><p>查看基本信息用 <code>readelf</code> 或者 <code>objump</code> 结合相应选项,例如:</p><div class="org-src-container"><pre class="src src-sh">$ readelf -h core.pid ELF Header:Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 Class:                             ELF32Data:                              2's complement, little endianVersion:                           1 (current)OS/ABI:                            UNIX - System VABI Version:                       0Type:                              CORE (Core file)Machine:                           ARMVersion:                           0x1...$objdump -x -C core.pidcore.pid:     file format elf32-littlecore.pidarchitecture: UNKNOWN!, flags 0x00000000:start address 0x00000000Program Header: NOTE off    0x000012d4 vaddr 0x00000000 paddr 0x00000000 align 2**0      filesz 0x0000198c memsz 0x00000000 flags --- LOAD off    0x00003000 vaddr 0x7f555000 paddr 0x00000000 align 2**12      filesz 0x00000000 memsz 0x00005000 flags r-x LOAD off    0x00003000 vaddr 0x7f55a000 paddr 0x00000000 align 2**12      filesz 0x00001000 memsz 0x00001000 flags r-- LOAD off    0x00004000 vaddr 0x7f55b000 paddr 0x00000000 align 2**12      filesz 0x00001000 memsz 0x00001000 flags rw-...Sections:Idx Name          Size      VMA       LMA       File off  Algn0 note0         0000198c  00000000  00000000  000012d4  2**0                 CONTENTS, READONLY1 .auxv         00000090  00000000  00000000  000014b8  2**2                 CONTENTS2 .reg2/0       00000074  00000000  00000000  000023fc  2**2...SYMBOL TABLE:no symbols</pre></div></li></ul></li><li><p>gdb结合coredump调试,有助于迅速找到程序发生崩溃的位置.</p><div class="org-src-container"><pre class="src src-sh">$gdb a.out core.pid</pre></div></li></ol></div><div id="outline-container-orgheadline17" class="outline-4"><h4 id="orgheadline17"><span class="section-number-4">4.5.1</span> 杂乱</h4><div class="outline-text-4" id="text-4-5-1"></div><div id="outline-container-orgheadline65" class="outline-5"><h5 id="orgheadline65"><span class="section-number-5">4.5.1.1</span> 在特定的位置生成coredump</h5><div class="outline-text-5" id="text-4-5-1-1"><pre class="example">5596L TV coredump 的命令如下：1. cd /tmp2. chmod –R 777 mnt3. ulimit -c unlimited4. echo 1 &gt; /proc/sys/kernel/core_uses_pid5. echo /mnt/usb/sda1/core_%e_sig%s_pid%p &gt; /proc/sys/kernel/core_pattern这样可以抓到browser.out crash时的coredump.</pre></div></div></div></div><div id="outline-container-orgheadline18" class="outline-3"><h3 id="orgheadline18"><span class="section-number-3">4.6</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 添加超级用户权限 <code>sudo adduser xxx sudo</code></h3><div class="outline-text-3" id="text-4-6"><ul class="org-ul"><li>State "WAIT/FORWARD" from              <span class="timestamp-wrapper"><span class="timestamp">[2016-10-24 一 10:51] </span></span> <br>wait for more organize.</li></ul><p>或者直接修改 <code>/etc/sudoers</code> 文件</p><pre class="example">## This file MUST be edited with the 'visudo' command as root.## Please consider adding local content in /etc/sudoers.d/ instead of# directly modifying this file.## See the man page for details on how to write a sudoers file.#Defaultsenv_resetDefaultsmail_badpassDefaultssecure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"# Host alias specification# User alias specification# Cmnd alias specification# User privilege specification 对单个用户的权限设置rootALL=(ALL:ALL) ALL# Members of the admin group may gain root privileges 对admin组的权限设置%admin ALL=(ALL) ALL# Allow members of group sudo to execute any command 对sudo组的权限设置%sudoALL=(ALL:ALL) ALL# See sudoers(5) for more information on "#include" directives:#includedir /etc/sudoers.d</pre><p>所以前面的 <code>adduser xxx sudo</code> 会将 <code>xxx</code> 添加到sudo组中，具有了相应的权限(需要重新login)。</p></div></div><div id="outline-container-orgheadline19" class="outline-3"><h3 id="orgheadline19"><span class="section-number-3">4.7</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> ssh配置文件简化登录过程</h3><div class="outline-text-3" id="text-4-7"><ul class="org-ul"><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-08 一 12:03] </span></span> <br>wait for more</li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-08-08 一 11:56]</span></span></p><hr><ul class="org-ul"><li><p>生成密钥对儿</p><div class="org-src-container"><pre class="src src-sh">$ssh-keygen</pre></div><p>会自动生成公钥密钥对，生成位置是 <code>~/.ssh</code></p></li><li><p>免密</p><div class="org-src-container"><pre class="src src-sh">$ssh-copy-id &lt;ip&gt;</pre></div><p>将本地公钥拷贝到远端服务器，使之被远端被登录主机信任本地机，从而实现免密登录。即登录的时候不用输入密码。</p><p>需要远端主机对ssh服务端也进行相应的配置，使之激活免密。</p></li><li><p>免输入用户名密码</p><p>在客户端为被主机配置好别名和端口：</p><div class="org-src-container"><pre class="src src-sh">$vim ~/.ssh/config#Myname1Host myname1HostName &lt;host ip&gt;User &lt;username&gt;Port &lt;ssh port, default 22&gt;IdentityFile ~/.ssh/id_rsa</pre></div><p>登录：</p><div class="org-src-container"><pre class="src src-sh">$ssh myname1</pre></div></li></ul><p>另外，设置免密之后，scp命令也支持tab远程补全了，拷贝远程文件很方便。</p></div></div><div id="outline-container-orgheadline20" class="outline-3"><h3 id="orgheadline20"><span class="section-number-3">4.8</span> &gt;&gt;&gt;&gt;&gt; <span class="timestamp-wrapper"><span class="timestamp">[2017-03-22 三 09:28] </span></span> 查看一个进程的环境变量</h3><div class="outline-text-3" id="text-4-8"><p>From:/home/miracle/mydata/orgmode/gtd/output/prosody_src_study.org</p><p>进程运行的环境变量在:</p><div class="org-src-container"><pre class="src src-sh">$cat /proc/pid/environ</pre></div><p>默认没有换行的话可以:</p><div class="org-src-container"><pre class="src src-sh">$cat /proc/pid/environ |tr -s '\x0' '\n'</pre></div><p>效果类似</p><div class="org-src-container"><pre class="src src-sh">$cat /proc/pid/environ |sed -e 's/\x0/\n/g'</pre></div><p>最简单的方法：</p><div class="org-src-container"><pre class="src src-sh">$strings /proc/pid/environ</pre></div><p>注意，这个环境变量的值是静态的。如果进程在运行期间用setenv等修改了环境变量，虽然进程实际环境变量变化了，但是这个文件的内容是不变的。可以这样检测：</p><ol class="org-ol"><li><code>tty</code> 确认当前bash 终端</li><li><code>ps</code> 查看当前bash的pid，假设为 <code>bashpid</code></li><li><code>cd /proc/&lt;bashpid&gt;</code></li><li>查看 <code>string environ</code></li><li>设置一个bash环境变量TEST=test</li><li>再次查看 <code>string =environ</code></li></ol></div></div><div id="outline-container-orgheadline21" class="outline-3"><h3 id="orgheadline21"><span class="section-number-3">4.9</span> Linux系统管理杂技</h3><div class="outline-text-3" id="text-4-9"></div><div id="outline-container-orgheadline22" class="outline-4"><h4 id="orgheadline22"><span class="section-number-4">4.9.1</span> Linux如何查看当前占用CPU或内存最多的几个进程</h4><div class="outline-text-4" id="text-4-9-1"></div><div id="outline-container-orgheadline66" class="outline-5"><h5 id="orgheadline66"><span class="section-number-5">4.9.1.1</span> ps</h5><div class="outline-text-5" id="text-4-9-1-1"><div class="org-src-container"><pre class="src src-sh">$ps -aux | sort -k4nr | head -N</pre></div><p><code>ps aux</code> 输出类似：</p><div class="org-src-container"><pre class="src src-sh">$ ps aux |head -n 10USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMANDroot         1  0.0  0.0  40448  3076 ?        Ss   Jun19   0:01 /sbin/initroot         2  0.0  0.0      0     0 ?        S    Jun19   0:00 [kthreadd]root         3  0.0  0.0      0     0 ?        S    Jun19   0:09 [ksoftirqd/0]root         5  0.0  0.0      0     0 ?        S&lt;   Jun19   0:00 [kworker/0:0H]root         7  0.0  0.0      0     0 ?        S    Jun19   0:00 [migration/0]root         8  0.0  0.0      0     0 ?        S    Jun19   0:00 [rcu_bh]root         9  0.0  0.0      0     0 ?        S    Jun19   0:00 [rcuob/0]root        10  0.0  0.0      0     0 ?        S    Jun19   0:00 [rcuob/1]root        11  0.0  0.0      0     0 ?        S    Jun19   0:00 [rcuob/2]...</pre></div><p>参数 <code>a</code> 指代all——所有的进程， <code>u</code> 指代userid——执行该进程的用户id， <code>x</code> 指代显示所有程序，不以终端机来区分。</p><p><code>sort -k4nr</code> 中（ <code>k</code> 代表从根据哪一个关键词排序，后面的数字4表示按照第四列排序； <code>n</code> 指代numberic sort，根据其数值排序； <code>r</code> 指代reverse，这里是指反向比较结果，输出时默认从小到大，反向后从大到小。）。本例中，可以看到%MEM在第4个位置，根据%MEM的数值进行由大到小的排序。 <code>-k3</code> 表示按照cpu占用率排序。</p></div></div><div id="outline-container-orgheadline67" class="outline-5"><h5 id="orgheadline67"><span class="section-number-5">4.9.1.2</span> top</h5><div class="outline-text-5" id="text-4-9-1-2"><p>命令行输入 <code>top</code> 回车，然后按下大写 <code>M</code> 按照memory排序，按下大写 <code>P</code> 按照CPU排序。</p><p>参考：<a href="http://blog.csdn.net/u013181648/article/details/68941971" target="_blank" rel="noopener">http://blog.csdn.net/u013181648/article/details/68941971</a></p></div></div></div><div id="outline-container-orgheadline23" class="outline-4"><h4 id="orgheadline23"><span class="section-number-4">4.9.2</span> 踢出特定终端的用户</h4><div class="outline-text-4" id="text-4-9-2"><p>结合 <code>who</code> 命令， 使用 <code>pkill -KILL -t tty1</code>, 需要超级用户权限。</p></div></div><div id="outline-container-orgheadline24" class="outline-4"><h4 id="orgheadline24"><span class="section-number-4">4.9.3</span> 限制占用资源过多的进程</h4><div class="outline-text-4" id="text-4-9-3"><p>发现CPU占用率超过某个限制的用户进程，然后将该进程杀死，这种做法很暴力，而且用户发现他的进程被杀以后很可能又启动进程，这样恶性循环。 有一种折中的方法，不是将目标进程杀死，而是适当调整其nice值。例如：</p><div class="org-src-container"><pre class="src src-sh">$renice +10 `ps aux | awk '{ if ($3 &gt; 0.8 &amp;&amp; id -u $1 &gt; 500) print $2}'`</pre></div><p>可结合 <code>ps aux</code> 输出分析该命令：可知这里 <code>$1</code> 是用户名，将 <code>&gt;500</code> 修改，可以直接限制某用户。比如：</p><div class="org-src-container"><pre class="src src-sh">$renice +10 `ps aux | awk '{ if ($3 &gt; 0.8 &amp;&amp; id -u $1 == id -u xxx) print $2}'`</pre></div><p>其实实践发现：</p><div class="org-src-container"><pre class="src src-sh">#renice -n 10 -u miracle</pre></div><p>会将 miracle 的nice值增加10</p></div></div><div id="outline-container-orgheadline25" class="outline-4"><h4 id="orgheadline25"><span class="section-number-4">4.9.4</span> 局域网间文件互传</h4><div class="outline-text-4" id="text-4-9-4"></div><div id="outline-container-orgheadline68" class="outline-5"><h5 id="orgheadline68"><span class="section-number-5">4.9.4.1</span> 通过nc</h5><div class="outline-text-5" id="text-4-9-4-1"><p>client on windows(cygwin):</p><div class="org-src-container"><pre class="src src-sh">$nc -l 55555 | tar xzvf -</pre></div><p>server:</p><div class="org-src-container"><pre class="src src-sh">$tar czvf - &lt;your dir/file&gt; | nc 172.16.246.210 55555</pre></div></div></div><div id="outline-container-orgheadline69" class="outline-5"><h5 id="orgheadline69"><span class="section-number-5">4.9.4.2</span> 其它</h5><div class="outline-text-5" id="text-4-9-4-2"><p>通过scp/winscp/rsync/rcp/smb/ftp/sftp/ssh/tftp</p></div></div></div></div><div id="outline-container-orgheadline26" class="outline-3"><h3 id="orgheadline26"><span class="section-number-3">4.10</span> 意外发现</h3><div class="outline-text-3" id="text-4-10"><p>在 <code>gnome-terminal</code> 应用中，切换各个 <code>tab</code> 除了可以用 <code>Alt-1, Alt-2, ...</code> 之外，还可以用 <code>C-PgUp, C-PgDn</code>.</p></div></div><div id="outline-container-orgheadline27" class="outline-3"><h3 id="orgheadline27"><a id="ID-dd5ff563-8720-41e8-be0f-23c4c0a81b4d"></a><span class="section-number-3">4.11</span> <span class="done REFERENCE">REFERENCE</span> 一个便于调试的源码编译软件安装技巧</h3><div class="outline-text-3" id="text-4-11"></div><div id="outline-container-orgheadline28" class="outline-4"><h4 id="orgheadline28"><span class="section-number-4">4.11.1</span> 问题</h4><div class="outline-text-4" id="text-4-11-1"><p>假设源代码编译安装的路径prefix为 <code>/usr/local/develop</code>, </p><p>如果所有软件安装都用这个目录，那么如果某个软件安装中出现失误，很难回滚包含了很多之前软件安装的 <code>/usr/loca/develop</code> 目录。</p></div></div><div id="outline-container-orgheadline29" class="outline-4"><h4 id="orgheadline29"><a id="ID-0f7dfdf6-cbdf-43e9-8faa-ac06efb3c8af"></a><span class="section-number-4">4.11.2</span> 整体思想</h4><div class="outline-text-4" id="text-4-11-2"><ul class="org-ul"><li>安装每一个安装包的时候，先将原来的 <code>/usr/local/develop</code> 备份，</li><li>然后将新的软件安装到空的 <code>/usr/local/develop</code> , 安装之后，重命名为 <code>/usr/local/develop.xxx</code>,</li><li>然后恢复原来那个备份的 <code>/usr/local/develop</code> ，再将新备份的 <code>/usr/local/develop.xxx</code> 用 <code>cp -af xxx</code> 或 <code>ln -s xxx</code> 的方式合并到原来的 <code>/usr/local/develop</code> .</li></ul><p>当软件安装出现问题的时候（即 <code>/usr/local/develop</code> 目录会混乱掉），这个时候只需要简单删除掉合并的 <code>/usr/local/develop</code>, 重新建立总合并的目录，然后把没有问题的软件合并到干净的 <code>/usr/local/develop</code> 中去。</p></div></div><div id="outline-container-orgheadline30" class="outline-4"><h4 id="orgheadline30"><span class="section-number-4">4.11.3</span> 执行过程</h4><div class="outline-text-4" id="text-4-11-3"><p>如下，最开始路径：</p><div class="org-src-container"><pre class="src src-sh">$sudo mkdir -p /usr/local/backup_installs$sudo mkdir -p /usr/local/backup_installs/develop.all #所有的软件安装最终实际合并到这里$sudo ln -s /usr/local/backup_installs/develop.all /usr/local/develop #对外表现为一个路径：/usr/local/develop</pre></div><p>安装xxx软件的时候</p><div class="org-src-container"><pre class="src src-sh">$sudo mv /usr/local/develop /usr/local/develop.bak #备份原有目录链接$cd xxx$./configure --prefix=/usr/local/develop/ xxxxx$make$sudo make install #安装源码编译的软件$sudo mv /usr/local/develop /usr/local/backup_installs/develop.xxx #将软件安装目录重命名备份$sudo mv /usr/local/develop.bak /usr/local/develop #恢复原有所有安装集合链接$cd /usr/local/backup_installs$cp -af develop.xxx/* develop.all/ #将新安装的软件合并到安装集合目录中</pre></div></div></div></div></div><div id="outline-container-orgheadline31" class="outline-2"><h2 id="orgheadline31"><span class="section-number-2">5</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[0/8]</code>(<code>[0%]</code>)</h2><div class="outline-text-2" id="text-5"><p>描述该文章中遗留的问题,有待将来解决.</p></div><div id="outline-container-orgheadline32" class="outline-3"><h3 id="orgheadline32"><span class="section-number-3">5.1</span> <span class="todo NEXT">NEXT</span> 问题1？</h3><div class="outline-text-3" id="text-5-1"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-02-01 一 15:39]</span></span></li></ul></div></div><div id="outline-container-orgheadline33" class="outline-3"><h3 id="orgheadline33"><span class="section-number-3">5.2</span> <span class="todo NEXT">NEXT</span> 问题2？</h3><div class="outline-text-3" id="text-5-2"><ul class="org-ul"><li>State "NEXT"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-02-01 一 15:40]</span></span></li></ul></div></div><div id="outline-container-orgheadline34" class="outline-3"><h3 id="orgheadline34"><span class="section-number-3">5.3</span> <span class="todo LATER">LATER</span> screen如何将剪切内容与x剪切板关联？</h3><div class="outline-text-3" id="text-5-3"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-24 三 10:50]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-05-25 三 10:25]</span></span></p><hr></div></div><div id="outline-container-orgheadline35" class="outline-3"><h3 id="orgheadline35"><span class="section-number-3">5.4</span> <span class="todo LATER">LATER</span> screenkey</h3><div class="outline-text-3" id="text-5-4"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-12-15 四 17:22]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-12-15 四 17:06]</span></span></p></div></div><div id="outline-container-orgheadline36" class="outline-3"><h3 id="orgheadline36"><span class="section-number-3">5.5</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> sudo apt-get install screenlets-pack-all screenlets</h3><div class="outline-text-3" id="text-5-5"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-12-15 四 17:22]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-12-15 四 16:11]</span></span></p></div></div><div id="outline-container-orgheadline37" class="outline-3"><h3 id="orgheadline37"><span class="section-number-3">5.6</span> <span class="todo LATER">LATER</span> 如何打开.msg格式的邮件文件</h3><div class="outline-text-3" id="text-5-6"><ul class="org-ul"><li>State "LATER"      from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-12-15 四 17:23]</span></span></li><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-12-15 四 17:23]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-08-29 一 17:07]</span></span></p><hr></div></div><div id="outline-container-orgheadline38" class="outline-3"><h3 id="orgheadline38"><span class="section-number-3">5.7</span> <span class="todo LATER">LATER</span> sshfs用目录的方式来挂载ssh主机</h3><div class="outline-text-3" id="text-5-7"><ul class="org-ul"><li>State "LATER"      from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-12-15 四 17:23]</span></span></li><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-12-15 四 17:23]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-11-17 四 12:11]</span></span></p><pre class="example">NAME       SSHFS - filesystem client based on sshSYNOPSIS   mounting       sshfs [user@]host:[dir] mountpoint [options]   unmounting       fusermount -u mountpoint...</pre></div></div><div id="outline-container-orgheadline39" class="outline-3"><h3 id="orgheadline39"><span class="section-number-3">5.8</span> <span class="todo LATER">LATER</span> vimdot</h3><div class="outline-text-3" id="text-5-8"><ul class="org-ul"><li>State "LATER"      from              <span class="timestamp-wrapper"><span class="timestamp">[2017-01-06 五 09:29]</span></span></li></ul><p>可以用dot语言绘制图形的同时，进行预览。</p></div></div><div id="outline-container-orgheadline40" class="outline-3"><h3 id="orgheadline40"><span class="section-number-3">5.9</span> <span class="todo LATER">LATER</span> 跨网传输</h3><div class="outline-text-3" id="text-5-9"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2017-04-07 五 16:18]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2017-02-22 三 14:22]</span></span></p><p>直接通过非加密压缩方式，快速传输文件的方式：1.client on windows(cygwin):nc -l 55555 | tar xzvf -</p><p>2.server:tar czvf - &lt;your dir/file&gt; | nc 172.16.246.210 55555</p><p>将220上的 <code>test.tgz</code> 直接解压到 215上直接通过非加密压缩方式，快速传输文件的方式：1.215nc -l 55555 | tar xzvf -</p><p>2.220cat test.tgz | nc 172.16.246.215 55555</p></div></div><div id="outline-container-orgheadline41" class="outline-3"><h3 id="orgheadline41"><a id="ID-f49b02bb-64ef-469a-8870-2abf1d7848f7"></a><span class="section-number-3">5.10</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> Thunderbird+DavMail 支持Exchange</h3><div class="outline-text-3" id="text-5-10"><ul class="org-ul"><li>State "WAIT/FORWARD" from              <span class="timestamp-wrapper"><span class="timestamp">[2017-02-27 一 17:20] </span></span> <br>有待整理</li></ul><p>为 <code>Thunderbird</code> 添加 <code>DavMail</code> 支持的方法。另外一种是使用 <code>Exquilla</code> 插件。</p><p>缺点是，每次需要先启动 <code>DavMail</code> 才能使用支持 <code>Exchange</code> 的 <code>Thunderbird</code> 。</p><p>refer to: <a href="http://karuppuswamy.com/wordpress/2010/05/13/how-to-integrate-thunderbird-with-ms-exchange-to-replace-ms-outlook/" target="_blank" rel="noopener">http://karuppuswamy.com/wordpress/2010/05/13/how-to-integrate-thunderbird-with-ms-exchange-to-replace-ms-outlook/</a></p></div><div id="outline-container-orgheadline42" class="outline-4"><h4 id="orgheadline42"><a id="ID-6eb280cb-112b-47bb-8a6b-0b0ca265a046"></a><span class="section-number-4">5.10.1</span> DavMail configuration</h4><div class="outline-text-4" id="text-5-10-1"></div><div id="outline-container-orgheadline70" class="outline-5"><h5 id="orgheadline70"><span class="section-number-5">5.10.1.1</span> 下载</h5><div class="outline-text-5" id="text-5-10-1-1"><p>官网： <a href="http://davmail.sourceforge.net/download.html" target="_blank" rel="noopener">http://davmail.sourceforge.net/download.html</a></p><p>如下命令下载</p><div class="org-src-container"><pre class="src src-sh">$wget --no-check-certificate -c https://downloads.sourceforge.net/project/davmail/davmail/4.7.3/davmail_4.7.3-2438-1_all.deb?r=https%3A%2F%2Fsourceforge.net%2Fprojects%2Fdavmail%2Ffiles%2Fdavmail%2F&amp;ts=1488180063&amp;use_mirror=excellmedia</pre></div><div class="org-src-container"><pre class="src src-sh">$wget -c --no-check-certificate https://excellmedia.dl.sourceforge.net/project/davmail/davmail/4.7.3/davmail_4.7.3-2438-1_all.deb</pre></div><p>已下载如下：<a href="file:///home/miracle/mydata/orgmode/data/6ef480dc-678c-4972-b09c-28d524c6ccb4/davmail_4.7.3-2438-1_all.deb" target="_blank" rel="noopener">davmail_4.7.3-2438-1_all.deb</a></p></div></div><div id="outline-container-orgheadline71" class="outline-5"><h5 id="orgheadline71"><span class="section-number-5">5.10.1.2</span> 安装配置</h5><div class="outline-text-5" id="text-5-10-1-2"><p>安装版本为： <code>davmail_4.7.3-2438-1_all.deb</code></p><p>在系统菜单中打开 <code>davmail</code>, 配置项</p><pre class="example">Exchange Protocol: EWSOWA(Exchange) URL: https://hqmx.tpvaoc.com/EWS/Exchange.asmx</pre></div></div><div id="outline-container-orgheadline72" class="outline-5"><h5 id="orgheadline72"><span class="section-number-5">5.10.1.3</span> 相关端口</h5><div class="outline-text-5" id="text-5-10-1-3"><ul class="org-ul"><li><p>POP Port: 1110 </p><p>从 <code>Exchange</code> 接收 <code>emails</code> (这里的情况we use this method in our case)</p></li><li><p>IMAP Port: 1143 </p><p>从 <code>Exchange</code> 接收 <code>emails</code> (这里不使用)</p></li><li><p>SMTP Port: 1025</p><p>通过 <code>Exchange</code> 发送 <code>emals</code></p></li><li><p>Caldav HTTP Port: 1080</p><p>与 <code>Exchange server</code> 同步 <code>calendar</code>.</p></li><li><p>LDAP Port: 1389 </p><p>从 <code>Exchange server</code> 获取 <code>address book</code> ( <code>Thunderbird</code> 可以使用这个，在我们编辑邮件的时候自动匹配 <code>email</code> 地址)</p></li></ul></div></div><div id="outline-container-orgheadline74" class="outline-5"><h5 id="orgheadline74"><span class="section-number-5">5.10.1.4</span> 操作</h5><div class="outline-text-5" id="text-5-10-1-4"></div><ol class="org-ol"><li><a id="orgheadline73"></a><a id="ID-efcadb69-dada-4b94-b915-366d3d8cfe29"></a>关闭<br><div class="outline-text-6" id="text-5-10-1-4-1"><div class="org-src-container"><pre class="src src-sh">$cat /usr/bin/davmail #!/bin/sh## Usage: davmail [&lt;/path/to/davmail.properties&gt;]#export LD_LIBRARY_PATH=/usr/lib/jnifor i in /usr/share/davmail/lib/*; do export CLASSPATH=$CLASSPATH:$i; doneexec java -Xmx512M -Dsun.net.inetaddr.ttl=60 -cp /usr/share/davmail/davmail.jar:/usr/share/java/swt.jar:$CLASSPATH davmail.DavGateway "$@" $ps aux |grep davmailmiracle  11780  1.1  1.4 4191188 111672 ?      Sl   11:52   0:08 java -Xmx512M -Dsun.net.inetaddr.ttl=60 -cp /usr/share/davmail/davmail.jar:/usr/share/java/swt.jar::/usr/share/davmail/lib/activation-1.1.1.jar:/usr/share/davmail/lib/commons-codec-1.3.jar:/usr/share/davmail/lib/commons-collections-3.1.jar:/usr/share/davmail/lib/commons-httpclient-3.1.jar:/usr/share/davmail/lib/commons-logging-1.0.4.jar:/usr/share/davmail/lib/htmlcleaner-2.2.jar:/usr/share/davmail/lib/jackrabbit-webdav-2.4.3.jar:/usr/share/davmail/lib/jcharset-1.3.jar:/usr/share/davmail/lib/jcifs-1.3.14.jar:/usr/share/davmail/lib/jdom-1.0.jar:/usr/share/davmail/lib/junit-3.8.1.jar:/usr/share/davmail/lib/log4j-1.2.16.jar:/usr/share/davmail/lib/mail-1.4.3.jar:/usr/share/davmail/lib/slf4j-api-1.3.1.jar:/usr/share/davmail/lib/slf4j-log4j12-1.3.1.jar:/usr/share/davmail/lib/stax-api-1.0.1.jar:/usr/share/davmail/lib/stax2-api-3.1.1.jar:/usr/share/davmail/lib/woodstox-core-asl-4.1.2.jar:/usr/share/davmail/lib/xercesImpl-2.8.1.jar davmail.DavGatewaymiracle  11961  1.6  0.8 3645736 67540 ?       Sl   12:03   0:01 java -Xmx512M -Dsun.net.inetaddr.ttl=60 -cp /usr/share/davmail/davmail.jar:/usr/share/java/swt.jar::/usr/share/davmail/lib/activation-1.1.1.jar:/usr/share/davmail/lib/commons-codec-1.3.jar:/usr/share/davmail/lib/commons-collections-3.1.jar:/usr/share/davmail/lib/commons-httpclient-3.1.jar:/usr/share/davmail/lib/commons-logging-1.0.4.jar:/usr/share/davmail/lib/htmlcleaner-2.2.jar:/usr/share/davmail/lib/jackrabbit-webdav-2.4.3.jar:/usr/share/davmail/lib/jcharset-1.3.jar:/usr/share/davmail/lib/jcifs-1.3.14.jar:/usr/share/davmail/lib/jdom-1.0.jar:/usr/share/davmail/lib/junit-3.8.1.jar:/usr/share/davmail/lib/log4j-1.2.16.jar:/usr/share/davmail/lib/mail-1.4.3.jar:/usr/share/davmail/lib/slf4j-api-1.3.1.jar:/usr/share/davmail/lib/slf4j-log4j12-1.3.1.jar:/usr/share/davmail/lib/stax-api-1.0.1.jar:/usr/share/davmail/lib/stax2-api-3.1.1.jar:/usr/share/davmail/lib/woodstox-core-asl-4.1.2.jar:/usr/share/davmail/lib/xercesImpl-2.8.1.jar davmail.DavGatewaymiracle  12127  0.0  0.0  11116   940 pts/1    S+   12:05   0:00 grep --color=auto davmailmiracle@xmnb4003210:~$ ps aux |grep davmail |awk '{print $2}'117801196112130$kill 11780$kill 11961</pre></div></div></li></ol></div><div id="outline-container-orgheadline76" class="outline-5"><h5 id="orgheadline76"><span class="section-number-5">5.10.1.5</span> 其它</h5><div class="outline-text-5" id="text-5-10-1-5"></div><ol class="org-ol"><li><a id="orgheadline75"></a>How to run multiple instances of DavMail ?<br><div class="outline-text-6" id="text-5-10-1-5-1"><p>Just create multiple configuration files and provide them as a command line option, see previous question:</p><pre class="example">davmail server1.propertiesdavmail server2.properties</pre></div></li></ol></div><div id="outline-container-orgheadline77" class="outline-5"><h5 id="orgheadline77"><span class="section-number-5">5.10.1.6</span> 参考</h5><div class="outline-text-5" id="text-5-10-1-6"><p><a href="http://davmail.sourceforge.net/" target="_blank" rel="noopener">http://davmail.sourceforge.net/</a></p><p><a href="http://davmail.sourceforge.net/serversetup.html" target="_blank" rel="noopener">http://davmail.sourceforge.net/serversetup.html</a></p></div></div></div><div id="outline-container-orgheadline43" class="outline-4"><h4 id="orgheadline43"><a id="ID-6ef480dc-678c-4972-b09c-28d524c6ccb4"></a><span class="section-number-4">5.10.2</span> Thunder bird</h4><div class="outline-text-4" id="text-5-10-2"></div><div id="outline-container-orgheadline78" class="outline-5"><h5 id="orgheadline78"><span class="section-number-5">5.10.2.1</span> 账户设置</h5><div class="outline-text-5" id="text-5-10-2-1"><p>新建账户，然后停止自动配置，手动配置如下：</p><div class="figure"><p><img src="file:///home/miracle/mydata/orgmode/data/6ef480dc-678c-4972-b09c-28d524c6ccb4/account_thunderbird.png" alt="account_thunderbird.png"></p></div><p>pop: <img src="file:///home/miracle/mydata/orgmode/data/6ef480dc-678c-4972-b09c-28d524c6ccb4/pop_thunder.png" alt="pop_thunder.png"></p><p>smtp: <img src="file:///home/miracle/mydata/orgmode/data/6ef480dc-678c-4972-b09c-28d524c6ccb4/smtp_thunder.png" alt="smtp_thunder.png"></p></div></div><div id="outline-container-orgheadline79" class="outline-5"><h5 id="orgheadline79"><span class="section-number-5">5.10.2.2</span> 文件夹设置</h5><div class="outline-text-5" id="text-5-10-2-2"><p>如下： <img src="file:///home/miracle/mydata/orgmode/data/6ef480dc-678c-4972-b09c-28d524c6ccb4/folder_thunderbird.png" alt="folder_thunderbird.png"></p></div></div><div id="outline-container-orgheadline80" class="outline-5"><h5 id="orgheadline80"><span class="section-number-5">5.10.2.3</span> 地址配置</h5><div class="outline-text-5" id="text-5-10-2-3"><p>参见： <img src="file:///home/miracle/mydata/orgmode/data/6ef480dc-678c-4972-b09c-28d524c6ccb4/address_thunderbird.png" alt="address_thunderbird.png"></p></div></div><div id="outline-container-orgheadline81" class="outline-5"><h5 id="orgheadline81"><span class="section-number-5">5.10.2.4</span> 通讯录相关</h5><div class="outline-text-5" id="text-5-10-2-4"><p>可地址自动补全等。</p><p>参见： <img src="file:///home/miracle/mydata/orgmode/data/6ef480dc-678c-4972-b09c-28d524c6ccb4/address_list_thunder.png" alt="address_list_thunder.png"></p></div></div><div id="outline-container-orgheadline82" class="outline-5"><h5 id="orgheadline82"><a id="ID-04c1c67a-7029-42f3-b431-fb2153e02974"></a><span class="section-number-5">5.10.2.5</span> 日历相关</h5><div class="outline-text-5" id="text-5-10-2-5"><p>可创建时间等。</p><p>安装 <code>Lightning</code>, 这里是 <code>Lightning 3.3.3</code></p><p>文件-&gt;新建-&gt;日历，选中保存在网络上</p><p>-&gt;下一步,格式选中 <code>CalDAV</code>, 位置写： <code>http://localhost:1080/users/miracle.lv@tpv-tech.com/calendar</code> </p><p>-&gt;下一步，名字是： <code>Works Calendar</code>, Email: <code>Import Identity</code>. </p><p>分别参见如下：</p><div class="figure"><p><img src="file:///home/miracle/mydata/orgmode/data/6ef480dc-678c-4972-b09c-28d524c6ccb4/calendar1_thunderbird.png" alt="calendar1_thunderbird.png"></p></div><div class="figure"><p><img src="file:///home/miracle/mydata/orgmode/data/6ef480dc-678c-4972-b09c-28d524c6ccb4/calendar2_thunderbird.png" alt="calendar2_thunderbird.png"></p></div><p><a href="file:///home/miracle/mydata/orgmode/data/6ef480dc-678c-4972-b09c-28d524c6ccb4/calendar3_thunderbird.png" target="_blank" rel="noopener">/home/miracle/mydata/orgmode/data/6ef480dc-678c-4972-b09c-28d524c6ccb4/calendar3_thunderbird.png</a></p></div></div></div><div id="outline-container-orgheadline44" class="outline-4"><h4 id="orgheadline44"><span class="section-number-4">5.10.3</span> 问题</h4><div class="outline-text-4" id="text-5-10-3"></div><div id="outline-container-orgheadline89" class="outline-5"><h5 id="orgheadline89"><span class="section-number-5">5.10.3.1</span> 总是弹出不信任网站是否接受。可以尝试如下：</h5><div class="outline-text-5" id="text-5-10-3-1"></div><ol class="org-ol"><li><a id="orgheadline86"></a>尝试1( <b>不好用?</b>)<br><ol class="org-ol"><li><a id="orgheadline83"></a>导出证书<br><div class="outline-text-7" id="text-5-10-3-1-1-1"><p>方法比较多,</p><p>比如,登录 <code>https://hqmx.tpvaoc.com/EWS/Exchange.asmx</code>, 在firefox提示的添加例外中,找到导出的菜单,导出相应的证书,文件名假设为 <code>hqmx.tpvaoc.com</code></p><p>导出的时候,分别尝试导出 chain的方式,以及直接pem的方式.</p></div></li><li><a id="orgheadline84"></a>添加个人信任证书<br><div class="outline-text-7" id="text-5-10-3-1-1-2"><p>输入如下命令:</p><div class="org-src-container"><pre class="src src-sh">$keytool -import -alias mytpvaoc -keystore /etc/ssl/certs/java/cacerts -trustcacerts -file /home/miracle/work/davcert/hqmx.tpvaoc.com -storepass changeit -noprompt</pre></div></div></li><li><a id="orgheadline85"></a>参考: <a href="http://davmail.sourceforge.net/sslsetup.html" target="_blank" rel="noopener">http://davmail.sourceforge.net/sslsetup.html</a><br><div class="outline-text-7" id="text-5-10-3-1-1-3"><pre class="example">Most users rely on the interactive accept certificate dialog to handle non public certificate authorities. However, this will not work with an Exchange server cluster with a different certificate on each server. In this case, you need to update global Java truststore with the custom certificate authority:keytool -import -alias root -keystore /path/to/jre/lib/security/cacerts -trustcacerts -file rootca.crt -storepass changeit -noprompt</pre></div></li></ol></li><li><a id="orgheadline87"></a>尝试2(<b>不好用</b>)<br><div class="outline-text-6" id="text-5-10-3-1-2"><ol class="org-ol"><li>在firefox中访问相关网址： <code>https://tpmail.tpvaoc.com/owa/</code> 在弹出的安全提示中，添加例外并导出证书。</li><li>在thunderbird， 编辑-&gt;首选-&gt;高级-&gt;证书-&gt;查看证书-&gt;服务器，导入刚刚的内容。以及添加例外： <a href="https://hqmx.tpvaoc.com/EWS/Exchange.asmx" target="_blank" rel="noopener">https://hqmx.tpvaoc.com/EWS/Exchange.asmx</a></li></ol><p>参见： <img src="file:///home/miracle/mydata/orgmode/data/6ef480dc-678c-4972-b09c-28d524c6ccb4/cert_thunderbird.png" alt="cert_thunderbird.png"></p></div></li><li><a id="orgheadline88"></a>尝试3(<b>不好用</b>)<br><div class="outline-text-6" id="text-5-10-3-1-3"><ol class="org-ol"><li>导出证书</li></ol><p>在thunderbird， 编辑-&gt;首选-&gt;高级-&gt;证书-&gt;查看证书-&gt;服务器，将的证书导出到 tmpTrans/davmail/如下： <img src="file:///home/miracle/mydata/orgmode/data/6ef480dc-678c-4972-b09c-28d524c6ccb4/cafile_thunderbird.png" alt="cafile_thunderbird.png"></p><ol class="org-ol"><li>配置文件 <code>~/.davmail.properties</code> 修改如下：</li></ol><pre class="example">...davmail.ssl.clientKeystoreFile=/home/miracle/tmpTrans/davcert/hqmx.tpvaoc.comdavmail.ssl.clientKeystorePass=davmail.ssl.clientKeystoreType=PKCS11...</pre><ol class="org-ol"><li>重启 <code>davmail</code>, 类似如下，除了最后一个，都kill</li></ol><div class="org-src-container"><pre class="src src-sh">$ ps aux |grep davmail |awk '{print $2}'117801196112130$kill 11780$kill 11961$davmail (可图形启动)</pre></div></div></li></ol></div></div></div><div id="outline-container-orgheadline45" class="outline-3"><h3 id="orgheadline45"><span class="section-number-3">5.11</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> lua geany</h3><div class="outline-text-3" id="text-5-11"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2017-04-07 五 16:10]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-12-27 二 17:05]</span></span></p><p>sudo apt-get install geany-plugin-lua</p></div></div><div id="outline-container-orgheadline46" class="outline-3"><h3 id="orgheadline46"><span class="section-number-3">5.12</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> haroopad</h3><div class="outline-text-3" id="text-5-12"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2017-04-07 五 16:17]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2017-02-20 一 19:35]</span></span></p><p>markdown 编辑预览。</p></div></div><div id="outline-container-orgheadline47" class="outline-3"><h3 id="orgheadline47"><span class="section-number-3">5.13</span> <span class="todo LATER">LATER</span> 常用linux命令的源码</h3><div class="outline-text-3" id="text-5-13"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2017-04-07 五 16:26]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2017-03-02 四 09:55]</span></span></p><ol class="org-ol"><li>busybox</li><li>coreutils</li></ol></div></div><div id="outline-container-orgheadline48" class="outline-3"><h3 id="orgheadline48"><span class="section-number-3">5.14</span> <span class="todo LATER">LATER</span> mount等linux源码</h3><div class="outline-text-3" id="text-5-14"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2017-04-07 五 16:26]</span></span></li><li>State "INBOX"      from              <span class="timestamp-wrapper"><span class="timestamp">[2017-03-02 四 09:55]</span></span></li><li>busybox</li><li>util-linux: <a href="https://www.kernel.org/pub/linux/utils/util-linux/" target="_blank" rel="noopener">https://www.kernel.org/pub/linux/utils/util-linux/</a></li></ul></div></div><div id="outline-container-orgheadline49" class="outline-3"><h3 id="orgheadline49"><span class="section-number-3">5.15</span> <span class="todo LATER">LATER</span> shell操作技巧,自动补全上下搜索的技巧</h3><div class="outline-text-3" id="text-5-15"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2017-04-07 五 16:26]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2017-03-03 五 09:39]</span></span></p></div></div><div id="outline-container-orgheadline50" class="outline-3"><h3 id="orgheadline50"><span class="section-number-3">5.16</span> <span class="todo LATER">LATER</span> shell输入实用技巧</h3><div class="outline-text-3" id="text-5-16"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2017-04-07 五 16:26]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2017-03-03 五 09:58]</span></span></p><p>Ctrl+Y 粘贴最近的文本 粘贴最近剪切的文本</p><p>Alt+Y 粘贴早期的文本 轮回到先前剪切的文本并粘贴它</p><p>Ctrl+C 删除整行 删除一整行</p><p>ctrl + s      锁住终端</p><p>ctrl + q      解锁终端</p><p>Ctrl+R 反向渐进搜索 按下这些键后，输入一个搜索字符串进行反向搜索。输入此字符串后，匹配的命令行即会出现，可以运行或编辑它</p><p>Ctrl+S 前向渐进搜索 与前一个功能相似，只不过是前向搜索(与锁住终端冲突?)</p><p>Alt+P 反向搜索 按下这些键后，输入一个字符串进行反向搜索。输入一个字符串并且按Enter键可看到包含该字符串的最近已用命令</p><p>Alt+N 前向搜索 与前一个功能类似，只不过是前向搜索</p><p>Keyboard Macros    start-kbd-macro (C-x ()           Begin saving the characters typed into the current keyboard macro.    end-kbd-macro (C-x ))           Stop saving the characters typed into the current keyboard macro and store the definition.    call-last-kbd-macro (C-x e)           Re-execute the last keyboard macro defined, by making the characters in the macro appear as if typed at the keyboard.</p><p>shell上:0表示标准输入1表示标准输出2表示标准错误输出&gt; 默认为标准输出重定向，与 1&gt; 相同2&gt;&amp;1 意思是把 标准错误输出 重定向到 标准输出.&amp;&gt;file 意思是把 标准输出 和 标准错误输出 都重定向到文件file中</p><p>参考: <a href="http://blog.chinaunix.net/uid-361890-id-342066.html" target="_blank" rel="noopener">http://blog.chinaunix.net/uid-361890-id-342066.html</a></p><p>更多信息,参考比较权威的参考：</p><div class="org-src-container"><pre class="src src-sh">$man 1 bash$man history</pre></div></div></div><div id="outline-container-orgheadline51" class="outline-3"><h3 id="orgheadline51"><span class="section-number-3">5.17</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> 关于 <code>configure</code> 系列体系的交叉编译</h3><div class="outline-text-3" id="text-5-17"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2017-04-07 五 16:27]</span></span></li><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2017-04-07 五 16:27]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2017-03-09 四 10:37]</span></span>./configure &#x2013;prefix=/home/miracle.lv/test/sysroot/usr/local &#x2013;host=armv7a-mediatek482_001_neon-linux-gnueabi CC=armv7a-mediatek482_001_neon-linux-gnueabi-gcc</p></div></div><div id="outline-container-orgheadline52" class="outline-3"><h3 id="orgheadline52"><span class="section-number-3">5.18</span> <span class="todo LATER">LATER</span> 设置coredump的格式</h3><div class="outline-text-3" id="text-5-18"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2017-04-07 五 16:27]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2017-03-10 五 14:44]</span></span></p><p>在masf fvp 系统中:</p><div class="org-src-container"><pre class="src src-sh">$echo  /data/coredump/core_%e_sig%s_pid%p &gt; /proc/sys/kernel/core_pattern$ulimit -c unlimited</pre></div></div></div><div id="outline-container-orgheadline53" class="outline-3"><h3 id="orgheadline53"><span class="section-number-3">5.19</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> ssh远程解压</h3><div class="outline-text-3" id="text-5-19"><ul class="org-ul"><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2017-04-07 五 16:29] </span></span> <br>wait for arranged.</li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2017-04-01 六 10:52]</span></span></p><div class="org-src-container"><pre class="src src-sh">$ssh &lt;yourname&gt;@172.16.246.220 cat /home/share/miracle/masf_integer_base/masf/fvp_branch_for_sync/_repo_fvp_latest.tgz |tar -xzvf -</pre></div></div></div><div id="outline-container-orgheadline54" class="outline-3"><h3 id="orgheadline54"><span class="section-number-3">5.20</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 每次启动vim或者ssh的时候都会提示错误</h3><div class="outline-text-3" id="text-5-20"><ul class="org-ul"><li>State "WAIT/FORWARD" from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2017-04-07 五 18:48] </span></span> <br>wait for arrange.</li><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2017-04-07 五 16:32]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2017-03-31 五 09:30]</span></span></p><pre class="example">vim: /usr/local/develop/lib/libcrypto.so.1.0.0: no version information available (required by /usr/lib/libpython2.7.so.1.0)vim: /usr/local/develop/lib/libssl.so.1.0.0: no version information available (required by /usr/lib/libpython2.7.so.1.0)</pre><pre class="example">ssh: /usr/local/develop/lib/libcrypto.so.1.0.0: no version information available (required by ssh)</pre><p>参考： <a href="https://www.oschina.net/question/936758_87431" target="_blank" rel="noopener">https://www.oschina.net/question/936758_87431</a></p><p><a href="http://stackoverflow.com/questions/18390833/no-version-information-available" target="_blank" rel="noopener">http://stackoverflow.com/questions/18390833/no-version-information-available</a></p><div class="org-src-container"><pre class="src src-sh">$vim openssl.ld$cat openssl.ld OPENSSL_1.0.0 {             global:                    *; };$./config --prefix=/usr/local/develop/ --openssldir=/usr/local/develop/openssl shared -Wl,--version-script=$(pwd)/openssl.ld -Wl,-Bsymbolic-functions</pre></div></div></div><div id="outline-container-orgheadline55" class="outline-3"><h3 id="orgheadline55"><span class="section-number-3">5.21</span> emacs dot绘图出现错误</h3><div class="outline-text-3" id="text-5-21"><p>使用emacs的dot绘图时， <code>C-c C-c</code> 出现如下错误：</p><pre class="example">Fontconfig warning: "/etc/fonts/conf.d/25-wqy-zenhei.conf", line 11: Having multiple values in &lt;test&gt; isn't supported and may not work as expectedFontconfig warning: "/etc/fonts/conf.d/41-arphic-ukai.conf", line 16: Having multiple &lt;family&gt; in &lt;alias&gt; isn't supported and may not work as expectedFontconfig warning: "/etc/fonts/conf.d/41-arphic-ukai.conf", line 16: Having multiple &lt;family&gt; in &lt;alias&gt; isn't supported and may not work as expected....</pre></div><div id="outline-container-orgheadline56" class="outline-4"><h4 id="orgheadline56"><span class="section-number-4">5.21.1</span> 实践</h4><div class="outline-text-4" id="text-5-21-1"><p>直接将相关的字体.conf文件删掉。</p></div></div><div id="outline-container-orgheadline57" class="outline-4"><h4 id="orgheadline57"><span class="section-number-4">5.21.2</span> 参考</h4><div class="outline-text-4" id="text-5-21-2"><p><a href="http://tieba.baidu.com/p/1849187273" target="_blank" rel="noopener">http://tieba.baidu.com/p/1849187273</a></p><p>关键点：</p><pre class="example">安装了最新的fontconfig以后会出现如下警告（如果你安装了wqy字体）：updating font cache... Fontconfig warning: "/etc/fonts/conf.d/44-wqy-microhei.conf", line 6: Having multiple values in &lt;test&gt; isn't supported and may not works as expectedFontconfig warning: "/etc/fonts/conf.d/65-wqy-zenhei.conf", line 11: Having multiple values in &lt;test&gt; isn't supported and may not works as expectedFontconfig warning: "/etc/fonts/conf.d/85-wqy-bitmapsong.conf", line 33: Having multiple values in &lt;test&gt; isn't supported and may not works as expectedFontconfig warning: "/etc/fonts/conf.d/85-wqy-bitmapsong.conf", line 55: Having multiple values in &lt;test&gt; isn't supported and may not works as expecteddone.Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 9: reading configurations from ~/.fonts.conf is deprecated.更正方法是把：&lt;test qual=”any” name=”family”&gt;&lt;string&gt;WenQuanYi Micro Hei&lt;/string&gt;&lt;string&gt;文泉驿微米黑&lt;/string&gt;&lt;string&gt;文泉驿微米黑&lt;/string&gt;&lt;/test&gt;改成&lt;test qual=”any” name=”family”&gt;&lt;string&gt;WenQuanYi Micro Hei&lt;/string&gt;&lt;/test&gt;&lt;test qual=”any” name=”family”&gt;&lt;string&gt;文泉驿微米黑&lt;/string&gt;&lt;/test&gt;&lt;test qual=”any” name=”family”&gt;&lt;string&gt;文泉驿微米黑&lt;/string&gt;&lt;/test&gt;这种形式。关于Fontconfig warning: “/etc/fonts/conf.d/50-user.conf”, line 9: reading configurations from ~/.fonts.conf is deprecated.把50-user.conf里第九行的deprecated对应的“yes”改成“no”。</pre><pre class="example">静·是一种态度: 研究了两天字体才发现，sudo rm最管用！</pre><pre class="example">Fontconfig warning: "/etc/fonts/conf.d/50-user.conf", line 9: reading configurations from ~/.fonts.conf is deprecated.解决方法：mkdir $XDG_CONFIG_HOME/fontconfigmv .fonts.conf $XDG_CONFIG_HOME/fontconfig/fonts.conf($XDG_CONFIG_HOME = ~/.config)神马意思呢，fontconfig2 告诉你，它的配置文件路径是符合 XDG 标准的，$HOME 下的 .fonts.conf 快快移到 $XDG_CONFIG_HOME 下吧。 necomancer: 回复 realasking :cat一下/etc/fonts/conf.d/50-user.conf就会看到的，下面指向~/.fonts.conf的两节是“will be removed in future”</pre><p><a href="https://bbs.archlinux.org/viewtopic.php?pid=1157957#p1157957" target="_blank" rel="noopener">https://bbs.archlinux.org/viewtopic.php?pid=1157957#p1157957</a></p><pre class="example">Create a $XDG_CONFIG_HOME/fontconfig directory (if not existing already) and move your ~/.fonts.conf there as fonts.conf.Usually $XDG_CONFIG_HOME is ~/.configThe warning should then not appear any more.</pre></div></div></div><div id="outline-container-orgheadline58" class="outline-3"><h3 id="orgheadline58"><span class="section-number-3">5.22</span> <code>/proc/pid/maps</code> 查看动态链接的库</h3><div class="outline-text-3" id="text-5-22"><p>参考： <a href="http://blog.csdn.net/mldxs/article/details/16993315" target="_blank" rel="noopener">http://blog.csdn.net/mldxs/article/details/16993315</a></p></div></div><div id="outline-container-orgheadline59" class="outline-3"><h3 id="orgheadline59"><span class="section-number-3">5.23</span> <code>/proc/pid/environ</code> 查看进程的环境变量</h3></div><div id="outline-container-orgheadline60" class="outline-3"><h3 id="orgheadline60"><span class="section-number-3">5.24</span> 批量重命名文件的技巧</h3><div class="outline-text-3" id="text-5-24"><p>尝试了半天，终于找到了几种批量重命名文件的方法，记录下来以备后用^_^</p><p>[quietheart@lv-k temp]\( touch {1,2,3,4,5}.cpp[quietheart@lv-k temp]\) touch [1-5][quietheart@lv-k temp]\( ls[1-5]  1.cpp  2.cpp  3.cpp  4.cpp  5.cpp[quietheart@lv-k temp]\) rm \[1-5\]rm：是否删除 一般空文件 “[1-5]”? y[quietheart@lv-k temp]\( ls1.cpp  2.cpp  3.cpp  4.cpp  5.cpp[quietheart@lv-k temp]\) rename .cpp .c *.cpp[quietheart@lv-k temp]\( ls1.c  2.c  3.c  4.c  5.c[quietheart@lv-k temp]\) ls *.c |awk '{sub(<i>.c$</i>,"")}{print $1}'|awk '{printf "mv %s.c %s.cpp\n",$1,\(1}' |sh[quietheart@lv-k temp]\) ls1.cpp  2.cpp  3.cpp  4.cpp  5.cpp[quietheart@lv-k temp]\( ls *.cpp |sed 's/\(.*\).cpp/mv & \1.c/' |sh[quietheart@lv-k temp]\) ls1.c  2.c  3.c  4.c  5.c</p><p>以上过程大致是：先把所有".cpp"文件的后缀修改成".c"后缀，再把".c"修改回".cpp"，再把".cpp"修改成".c"。原理分别用到了：使用rename、使用awk+sh、使用sed+正则+sh，三种方式。</p></div></div><div id="outline-container-orgheadline61" class="outline-3"><h3 id="orgheadline61"><span class="section-number-3">5.25</span> 链接选项 <code>-rpath</code> 和 <code>-rpath-link</code></h3><div class="outline-text-3" id="text-5-25"><pre class="example">链接动态库如何程序在连接时使用了共享库，就必须在运行的时候能够找到共享库的位置。linux的可执行程序在执行的时候默认是先搜索/lib和/usr/lib这两个目录，然后按照/etc/ld.so.conf里面的配置搜索绝对路径。同时，Linux也提供了环境变量LD_LIBRARY_PATH供用户选择使用，用户可以通过设定它来查找除默认路径之外的其他路径，如查找/work/lib路径,你可以在/etc/rc.d/rc.local或其他系统启动后即可执行到的脚本添加如下语句：LD_LIBRARY_PATH =/work/lib:$(LD_LIBRARY_PATH)。并且LD_LIBRARY_PATH路径优先于系统默认路径之前查找（详细参考《使用LD_LIBRARY_PATH》）。不过LD_LIBRARY_PATH的设定作用是全局的，过多的使用可能会影响到其他应用程序的运行，所以多用在调试。（LD_LIBRARY_PATH的缺陷和使用准则，可以参考《Why LD_LIBRARY_PATH is bad》 ）。通常情况下推荐还是使用gcc的-R或-rpath选项来在编译时就指定库的查找路径，并且该库的路径信息保存在可执行文件中，运行时它会直接到该路径查找库，避免了使用LD_LIBRARY_PATH环境变量查找。链接选项和路径现代连接器在处理动态库时将链接时路径（Link-time path）和运行时路径（Run-time path）分开,用户可以通过-L指定连接时库的路径，通过-R（或-rpath）指定程序运行时库的路径，大大提高了库应用的灵活性。比如我们做嵌入式移植时#arm-linux-gcc $(CFLAGS) –o target –L/work/lib/zlib/ -llibz-1.2.3 (work/lib/zlib下是交叉编译好的zlib库)，将target编译好后我们只要把zlib库拷贝到开发板的系统默认路径下即可。或者通过-rpath（或-R ）、LD_LIBRARY_PATH指定查找路径。链接器ld的选项有 -L，-rpath 和 -rpath-link，看了下 man ld，大致是这个意思：-L: “链接”的时候，去找的目录，也就是所有的 -lFOO 选项里的库，都会先从 -L 指定的目录去找，然后是默认的地方。编译时的-L选项并不影响环境变量LD_LIBRARY_PATH，-L只是指定了程序编译连接时库的路径，并不影响程序执行时库的路径，系统还是会到默认路径下查找该程序所需要的库，如果找不到，还是会报错，类似cannot open shared object file。-rpath-link：这个也是用于“链接”的时候的，例如你显示指定的需要 FOO.so，但是 FOO.so 本身是需要 BAR.so 的，后者你并没有指定，而是 FOO.so 引用到它，这个时候，会先从 -rpath-link 给的路径里找。-rpath: “运行”的时候，去找的目录。运行的时候，要找 .so 文件，会从这个选项里指定的地方去找。对于交叉编译，交叉编译链接器需已经配置 –with-sysroot 选项才能起作用。也就是说，-rpath指定的路径会被记录在生成的可执行程序中，用于运行时查找需要加载的动态库。-rpath-link 则只用于链接时查找。链接搜索顺序直接man ld。gcc和链接选项的使用在gcc中使用ld链接选项时，需要在选项前面加上前缀-Wl(是字母l，不是1，我曾多次弄错），以区别不是编译器的选项。</pre><p>参考： <a href="http://blog.csdn.net/xph23/article/details/38157491" target="_blank" rel="noopener">http://blog.csdn.net/xph23/article/details/38157491</a></p></div></div><div id="outline-container-orgheadline62" class="outline-3"><h3 id="orgheadline62"><span class="section-number-3">5.26</span> <code>di</code> 命令替代 <code>du</code> 命令</h3></div><div id="outline-container-orgheadline63" class="outline-3"><h3 id="orgheadline63"><span class="section-number-3">5.27</span> 使用shell数组来实现cut类似功能的技巧</h3><div class="outline-text-3" id="text-5-27"><p>修改一个目录下文件的权限使之和另一个目录文件一样<code>/3rd/browser_engine</code> 和 <code>/data/3rd/browser_engine</code></p><pre class="example">cd /3rd/browser_enginefor file in `find . -type f`; do atrr_file=$(ls -Z "$file"); array=($atrr_file); chcon ${array[0]} /data/3rd/browser_engine/${array[1]}; done</pre></div></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;
&amp;#x2014;
layout: posts
title: Linux杂乱记录
categories: [categories,study,linux,misc]
comments: true
&amp;#x2014;
#+END_HTML
&lt;/p&gt;
&lt;div id=&quot;table
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://0.0.0.0:4000/2016/02/09/misc_notes/"/>
    <id>http://0.0.0.0:4000/2016/02/09/misc_notes/</id>
    <published>2016-02-08T16:00:00.000Z</published>
    <updated>2019-10-22T08:07:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2014;layout: poststitle: 杂乱记录categories: [categories,study]comments: true&#x2014;#+END_HTML</p><div id="table-of-contents"><h2>&#30446;&#24405;</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. Miscellaneous</a><ul><li><a href="#orgheadline2">1.1. &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2015-11-06 五 11:27] </span></span> CSS&amp;html&amp;javascript tips------</a><ul><li><a href="#orgheadline3">1.1.1. margin/padding等</a></li><li><a href="#orgheadline4">1.1.2. css float属性，</a></li><li><a href="#orgheadline5">1.1.3. css 选择器</a></li></ul></li><li><a href="#orgheadline6">1.2. &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2016-01-16 六 15:14] </span></span> 阅读代码的技巧1-单个函数------</a></li><li><a href="#orgheadline7">1.3. &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2016-02-02 二 10:04] </span></span> 阅读代码的技巧2-单个文件------</a></li><li><a href="#orgheadline8">1.4. &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2016-02-02 二 10:05] </span></span> 阅读代码的技巧3-模块关系------</a></li><li><a href="#orgheadline9">1.5. <span class="done nilDONE">DONE</span> 编辑器</a></li><li><a href="#orgheadline10">1.6. <span class="todo nilLATER">LATER</span> lisp编码风格</a></li><li><a href="#orgheadline11">1.7. <span class="todo nilLATER">LATER</span> 好书：APUE,UNP</a></li><li><a href="#orgheadline12">1.8. <span class="done nilDONE">DONE</span> Window域201如何linux访问</a><ul><li><a href="#orgheadline13">1.8.1. 尝试</a></li><li><a href="#orgheadline14">1.8.2. 参考</a></li></ul></li></ul></li><li><a href="#orgheadline15">2. FAQ</a><ul><li><a href="#orgheadline16">2.1. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> 考虑下载一个图形化的svn工具</a></li><li><a href="#orgheadline17">2.2. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> 寻找曾经做mock的unit test和scenario test的相关文档</a></li></ul></li></ul></div></div><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> Miscellaneous</h2><div class="outline-text-2" id="text-1"></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><a id="ID-2941853c-cae5-4d85-b2b9-bb80cbcd5154"></a><span class="section-number-3">1.1</span> &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2015-11-06 五 11:27] </span></span> CSS&amp;html&amp;javascript tips------</h3><div class="outline-text-3" id="text-1-1"><p>From:/home/miracle/mygitrepo/quietheart/mydoc/prepub/jekyll/assets/css/common_green_black.css</p></div><div id="outline-container-orgheadline3" class="outline-4"><h4 id="orgheadline3"><span class="section-number-4">1.1.1</span> margin/padding等</h4><div class="outline-text-4" id="text-1-1-1"><p>参考：<a href="http://blog.sina.com.cn/s/blog_8224735501013gx5.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_8224735501013gx5.html</a></p></div></div><div id="outline-container-orgheadline4" class="outline-4"><h4 id="orgheadline4"><span class="section-number-4">1.1.2</span> css float属性，</h4><div class="outline-text-4" id="text-1-1-2"><p>参考：<a href="http://blog.sina.com.cn/s/blog_6a3c6f810100yj1k.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_6a3c6f810100yj1k.html</a></p><p><a href="http://www.w3school.com.cn/cssref/pr_class_float.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/cssref/pr_class_float.asp</a></p><p><a href="http://blog.163.com/wangming_cn/blog/static/1464109320096611441538/" target="_blank" rel="noopener">http://blog.163.com/wangming_cn/blog/static/1464109320096611441538/</a></p><p><a href="http://www.jb51.net/css/33740.html" target="_blank" rel="noopener">http://www.jb51.net/css/33740.html</a></p></div></div><div id="outline-container-orgheadline5" class="outline-4"><h4 id="orgheadline5"><span class="section-number-4">1.1.3</span> css 选择器</h4><div class="outline-text-4" id="text-1-1-3"><p>参考：<a href="http://www.cnblogs.com/iloveyoucc/archive/2012/09/06/2673003.html" target="_blank" rel="noopener">http://www.cnblogs.com/iloveyoucc/archive/2012/09/06/2673003.html</a></p></div></div></div><div id="outline-container-orgheadline6" class="outline-3"><h3 id="orgheadline6"><a id="ID-5ec3c792-9ea5-475a-ae6d-eedee981ed9e"></a><span class="section-number-3">1.2</span> &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2016-01-16 六 15:14] </span></span> 阅读代码的技巧1-单个函数------</h3><div class="outline-text-3" id="text-1-2"><p>From:/home/miracle/mydata/orgmode/gtd/_next.org</p><p>对于具体某个函数的阅读：</p><ol class="org-ol"><li>不要太过深入递归，尽量不要超过调用的两层</li><li>分层次阅读代码而非顺序，比如，先将所有的if/else/while/try等分支折叠，浏览好全局之后，再一次递归展开。</li></ol></div></div><div id="outline-container-orgheadline7" class="outline-3"><h3 id="orgheadline7"><span class="section-number-3">1.3</span> &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2016-02-02 二 10:04] </span></span> 阅读代码的技巧2-单个文件------</h3><div class="outline-text-3" id="text-1-3"><p>From:/home/miracle/mydata/orgmode/gtd/_inbox.org</p><p>一个文件中的诸多函数中，总有那么几个函数是关键的，比如初始化、入口、消息处理循环等等，先浏览各个函数名字，找到这样的函数重点阅读。</p></div></div><div id="outline-container-orgheadline8" class="outline-3"><h3 id="orgheadline8"><span class="section-number-3">1.4</span> &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2016-02-02 二 10:05] </span></span> 阅读代码的技巧3-模块关系------</h3><div class="outline-text-3" id="text-1-4"><p>From:/home/miracle/mydata/orgmode/gtd/_inbox.org</p><p>关键两个：寻找调用该模块的模块、和该模块调用的模块。技巧两个：寻找该模块调用的模块时，每个函数不用完全阅读，直接跳跃到函数中调用其他模块的代码，或者看头文件看看用到哪些模块；寻找调用该模块的模块时，首先找到入口，比如main，或者你关注的模块的初始化部分;然后分别按照类似思路寻找调用该函数或者模块的调用者，以及模块中由初始化深入进去所涉及到的被调用者。</p></div></div><div id="outline-container-orgheadline9" class="outline-3"><h3 id="orgheadline9"><span class="section-number-3">1.5</span> <span class="done DONE">DONE</span> 编辑器</h3><div class="outline-text-3" id="text-1-5"><ul class="org-ul"><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-04-16 六 16:49]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-04-07 四 15:58]</span></span></p><hr><p>编辑用vim</p><p>工作和记录用emacs</p><p>阅读用sourceinsight/understand</p><p>集成开发有集成开发的工具，任何一个都不是万能的。</p><p>所谓vim/emacs之流有两点可能导致其让人崇拜：1、异常的熟练 2、不是很熟的话，也能勉强完成工作。</p></div></div><div id="outline-container-orgheadline10" class="outline-3"><h3 id="orgheadline10"><span class="section-number-3">1.6</span> <span class="todo LATER">LATER</span> lisp编码风格</h3><div class="outline-text-3" id="text-1-6"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-24 三 10:59]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-07-15 五 10:03]</span></span></p><hr><p>每一句一个结尾括号，结尾括号不能单独占行。</p><p>如果一句中，结尾括号是多个，说明这一句是某个语句块的结尾。</p></div></div><div id="outline-container-orgheadline11" class="outline-3"><h3 id="orgheadline11"><span class="section-number-3">1.7</span> <span class="todo LATER">LATER</span> 好书：APUE,UNP</h3><div class="outline-text-3" id="text-1-7"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-24 三 10:59]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-07-25 一 18:47]</span></span></p><hr></div></div><div id="outline-container-orgheadline12" class="outline-3"><h3 id="orgheadline12"><span class="section-number-3">1.8</span> <span class="done DONE">DONE</span> Window域201如何linux访问</h3><div class="outline-text-3" id="text-1-8"><ul class="org-ul"><li>State "DONE"       from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2017-04-18 二 15:20]</span></span></li><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-24 三 10:38]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-05-20 五 08:36]</span></span></p><p>实践结论不确定后面尝试的过程有没有起作用，但是访问的时候如下进行：</p><p>smb://172.16.246.201</p><p>用户名：邮箱名称(miracle.lv@tpv-tech.com)</p><p>域名： TPVAOC.COM（一定要大写）</p><p>密码： 邮箱密码。</p></div><div id="outline-container-orgheadline13" class="outline-4"><h4 id="orgheadline13"><span class="section-number-4">1.8.1</span> 尝试</h4><div class="outline-text-4" id="text-1-8-1"><p>windows下，computer的域信息：computer name为 "XMNB4003210"， domain name为 "tpvaoc.com"</p><pre class="example">sudo apt-get install likewise-opensudo hostname XMNB4003210sudo domainjoin-cli join tpvaoc.com miracle.lv@tpv-tech.com</pre></div></div><div id="outline-container-orgheadline14" class="outline-4"><h4 id="orgheadline14"><span class="section-number-4">1.8.2</span> 参考</h4><div class="outline-text-4" id="text-1-8-2"><p>Ubuntu 13.04 登录Windows域</p><p><a href="http://www.linuxidc.com/Linux/2013-09/89578.htm" target="_blank" rel="noopener">http://www.linuxidc.com/Linux/2013-09/89578.htm</a></p></div></div></div></div><div id="outline-container-orgheadline15" class="outline-2"><h2 id="orgheadline15"><span class="section-number-2">2</span> FAQ</h2><div class="outline-text-2" id="text-2"></div><div id="outline-container-orgheadline16" class="outline-3"><h3 id="orgheadline16"><span class="section-number-3">2.1</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> 考虑下载一个图形化的svn工具</h3><div class="outline-text-3" id="text-2-1"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-24 三 10:37]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-04-25 一 11:18]</span></span></p><hr></div></div><div id="outline-container-orgheadline17" class="outline-3"><h3 id="orgheadline17"><span class="section-number-3">2.2</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> 寻找曾经做mock的unit test和scenario test的相关文档</h3><div class="outline-text-3" id="text-2-2"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-24 三 10:58]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-06-03 五 12:06]</span></span></p><hr></div></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;
&amp;#x2014;
layout: posts
title: 杂乱记录
categories: [categories,study]
comments: true
&amp;#x2014;
#+END_HTML
&lt;/p&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;
&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://0.0.0.0:4000/2016/02/01/linux_schedule_priority/"/>
    <id>http://0.0.0.0:4000/2016/02/01/linux_schedule_priority/</id>
    <published>2016-01-31T16:00:00.000Z</published>
    <updated>2019-10-22T08:07:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2014;layout: poststitle: Linux进程和线程的调度与优先级categories: [categories, study, os]comments: true&#x2014;#+END_HTML</p><div id="table-of-contents"><h2>&#30446;&#24405;</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 总述</a><ul><li><a href="#orgheadline2">1.1. 概念：</a></li><li><a href="#orgheadline3">1.2. 方法：</a></li><li><a href="#orgheadline4">1.3. 原理：</a></li></ul></li><li><a href="#orgheadline5">2. 进程优先级概念</a></li><li><a href="#orgheadline6">3. 进程优先级与变动影响因素与原理</a></li><li><a href="#orgheadline7">4. 查看与设置优先级与进程线程信息等的方法</a></li><li><a href="#orgheadline8">5. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[0/4]</code>(<code>[0%]</code>)</a><ul><li><a href="#orgheadline9">5.1. <span class="todo nilNEXT">NEXT</span> 线程优先级是否继承父线程优先级？是否继承父进程优先级？</a></li><li><a href="#orgheadline10">5.2. <span class="todo nilNEXT">NEXT</span> <code>chrt</code> 修改进程优先级，那么该进程的子线程优先级是否改变？</a></li><li><a href="#orgheadline11">5.3. <span class="todo nilNEXT">NEXT</span> <code>chrt</code>, <code>ps</code>, <code>top</code>, <code>pthread_attr_setschedpolicy()</code>, <code>sched_setscheduler()</code> 中的优先级值和含义有什么关系？</a></li><li><a href="#orgheadline12">5.4. <span class="todo nilNEXT">NEXT</span> 考虑将引文中的链接下载到本地</a></li></ul></li></ul></div></div><p>本文主要概述Linux下进程与线程的调度算法和优先级相关内容。</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> 总述</h2><div class="outline-text-2" id="text-1"><p>为便于快速了解和复习，本节先给出结论性的大致概述，后面再详细介绍相关内容。关于进程优先级和调度策略的大致信息如下。</p></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> 概念：</h3><div class="outline-text-3" id="text-1-1"><ol class="org-ol"><li>进程优先级值越小，优先级越大。</li><li>进程优先级是PRI值不是Nice值，但是Nice值会影响优先级。</li><li>三类调度策略：RR调度和FIFO调度的进程属于实时进程，以分时调度(OTHER)的进程是非实时进程</li><li>实时进程优先级高于普通进程，实时进程使用静态优先级调度、非实时进程使用动态优先级调度，非实时进程动态优先级通过nice调整、可能受bonus影响。</li></ol></div></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">1.2</span> 方法：</h3><div class="outline-text-3" id="text-1-2"><p>命令行/脚本中可以通过 <code>ps</code>, <code>top</code>, <code>chrt</code> 来查看和修改调度和优先级属性。通过 <code>sched_setscheduler()</code> 设置进程调度和优先级属性。通过 <code>pthread_attr_setschedpolicy()</code> 设置线程调度和优先级属性。</p></div></div><div id="outline-container-orgheadline4" class="outline-3"><h3 id="orgheadline4"><span class="section-number-3">1.3</span> 原理：</h3><div class="outline-text-3" id="text-1-3"><p>一般子进程会继承父进程的调度策略，在Linux  2.6.32之后，可以使用 <code>SCHED_RESET_ON_FORK</code> 按位与参数的方式调用 <code>sched_setscheduler()</code>, 使用之后效果是：如果调用进程使用 <code>SCHED_FIFO</code> 或 <code>SCHED_RR</code> 调度策略，使用 <code>SCHED_RESET_ON_FORK</code> 后fork创建的子进程创建时将会自动重置为 <code>SCHED_OTHER</code> 调度策略；如果调用进程使用负值nice，那么使用  <code>SCHED_RESET_ON_FORK</code> 后fork创建的子进程创建时将会自动将其nice重置为0。 这个标记激活时只有当进程具有 <code>CAP_SYS_NICE</code> 标记时才能被重置，而这个 <code>CAP_SYS_NICE</code> 标记在使用fork()创建子进程后，在子进程中被禁止。</p></div></div></div><div id="outline-container-orgheadline5" class="outline-2"><h2 id="orgheadline5"><span class="section-number-2">2</span> 进程优先级概念</h2><div class="outline-text-2" id="text-2"><ol class="org-ol"><li><p>进程优先级值越小，优先级越大。</p><p>linux下的进程调度优先级是从-20到19，一共40个级别，数字越大，表示进程的优先级越低。默认时候，进程的优先级是0。</p><p>如果不是root权限,则侄只能降调度优先级而不能提高，即使是自己用户的进程，自己把它调高了后，优先级也不能再被调会原来的值了，除非使用root用户来调回去。</p><p>系统重启后，对进程优先级的调整全部失效，所有进程的调度回到默认的初始级别。</p><p>参考：<a href="http://blog.chinaunix.net/uid-25940826-id-2888088.html" target="_blank" rel="noopener">Linux进程优先级的调整方法</a></p></li><li><p>进程优先级是PRI值不是Nice值，但是Nice值会影响优先级</p><p>PRI也还是比较好理解的，即进程的优先级，或者通俗点说就是程序被CPU执行的先后顺序，此值越小进程的优先级别越高。那NI呢？就是我们所要说的nice值了，其表示进程可被执行的优先级的修正数值。如前面所说，PRI值越小越快被执行，那么加入nice值后，将会使得PRI变为：PRI(new)=PRI(old)+nice。</p><p>到目前为止，更需要强调一点的是，进程的nice值不是进程的优先级，他们不是一个概念，但是进程nice值会影响到进程的优先级变化。</p><p>通过调整nice值，更改进程优先级，nice调整范围是 -20~19。</p><p>参考：<a href="http://blog.csdn.net/codestinity/article/details/7496962" target="_blank" rel="noopener">linux进程优先级、进程nice值</a></p></li></ol></div></div><div id="outline-container-orgheadline6" class="outline-2"><h2 id="orgheadline6"><span class="section-number-2">3</span> 进程优先级与变动影响因素与原理</h2><div class="outline-text-2" id="text-3"><ol class="org-ol"><li><p>调度策略：RR调度和FIFO调度的进程属于实时进程，以分时调度(OTHER)的进程是非实时进程。</p><p>FIFO（先进先出）和RR（时间片轮转）用于实时进程，OTHER（分时调度）用于非实时进程；实时进程会抢占普通进程;FIFO会导致同优先级实时进程始终占用CPU，RR会保证同优先级实时进程按时间片轮流执行。</p><p>参考：<a href="http://blog.chinaunix.net/uid-7187477-id-5593.html" target="_blank" rel="noopener">SCHED_OTHER,SCHED_FIFO,SCHED_RR</a></p></li><li><p>实时进程优先级高于普通进程，实时进程使用静态优先级调度、非实时进程使用动态优先级调度，非实时进程动态优先级通过nice调整、可能受bonus影响。</p><p>Linux进程有两种优先级：普通进程优先级（使用SCHED_NORMAL调度策略），以及实时进程优先级（使用SCHED_FIFO或SCHED_RR调度策略）</p><p>不同调度策略的实时进程只有在相同优先级时才有可比性，任何时候，实时进程的优先级都高于普通进程</p><p>Linux对实时进程使用静态优先级调度，对普通的进程（非实时进程），根据动态优先级进行调度。</p><p>实时进程，只有静态优先级(在0~MAX_RT_PRIO-1间，默认MAX_RT_PRIO为100）, 内核不会再根据休眠等因素对其静态优先级做调整； </p><p>实时进程0-99号优先级每一个优先级对应一个优先级队列（链表），先执行数值高的对应的链表（0号最低），可由后面所述的 <code>chrt</code> 以及 相应函数修改该优先级；</p><p>非实时进程静态优先级可通过nice值（-20~19）调整：static_prio=MAX_RT_PRIO + nice + 20。</p><p>nice只影响非实时进程(静态优先级在100~139之间)，nice越大静态优先级值越大，优先级越低。</p><p>非实时进程动态优先级根据静态优先级和bonus计算:dynamic_prio = max (100, min (static_prio - bonus + 5, 139))</p><p>bonus反映进程平均睡眠时间（范围0~10），睡眠时间越多越可能是交互进程，每次轮到它运行时它就越可能不会使用完时间片再释放cpu。</p><p>参考：<a href="http://www.cnblogs.com/zhaoyl/archive/2012/09/04/2671156.html" target="_blank" rel="noopener">Linux进程调度原理</a> 以及 <a href="http://sunnyshineboy.blog.163.com/blog/static/20281511820130664616543/" target="_blank" rel="noopener">给进程设置实时优先级</a></p></li></ol></div></div><div id="outline-container-orgheadline7" class="outline-2"><h2 id="orgheadline7"><span class="section-number-2">4</span> 查看与设置优先级与进程线程信息等的方法</h2><div class="outline-text-2" id="text-4"><ol class="org-ol"><li><p>通过 <code>ps</code> 查看进程信息</p><p><code>ps -el</code> 可查看进程优先级和nice值,命令执行结果：NI列显示的每个进程的nice值（主要针对非实时进程），PRI是进程的优先级（如果是实时进程就是静态优先级，如果是非实时进程，就是动态优先级）。</p><p>参考：<a href="http://www.cnblogs.com/zhaoyl/archive/2012/09/04/2671156.html" target="_blank" rel="noopener">Linux进程调度原理</a></p></li><li><p>通过 <code>top</code> 查看进程信息</p><p>其中的优先级和ps的pri不一样，ps中一般为0的进程，在top中为20，这个优先级应该对应于前面所说的实时进程优先级，实时进程只使用1-99号优先级队列，序号越大优先级越高，0号留给普通进程使用。</p></li><li><p><code>chrt -p &lt;pid&gt;</code> 查看进程属性</p><p>通过 <code>chrt</code> 查看和修改进程调度和优先级属性，它一般也是调用后面的 <code>sched_setscheduler()</code> 实现的。  </p><p>注意： <code>char -o pri command</code> 设置为SCHED_OTHER调度方式优先级别值只能是0表示比任何实时优先级都低，非实时进程不使用该值决定调度行为，普通进程使用自己的调度策略。</p><p>参考： <code>man chrt</code> </p></li><li><p>通过 <code>sched_setscheduler()</code> 设置进程调度和优先级属性</p><p>效果类似 <code>chrt</code>, </p><p>关于priority的注意：这里参数中的pri不是ps的nice也不是priority,而是代码中的sched_priority，用于表示一系列可执行进程列表。实时进程中该值范围为1-99越大表示优先级越高, 非实时只能是0表示始终比实时进程低，并且非实时进程的优先级不由此值确定而是由其内部动态优先级确定。chrt中的pri应该也类似含义，例如： <code>chrt -f -p 10 pid</code> 则ps中pri为-11， <code>chrt -f -p 1 pid</code> 则ps中pri为-2）为0，进程命令为command，其它可以根据选项参数设置。</p><p>关于prioriti的注意：一般子进程会继承父进程的调度策略，在Linux  2.6.32之后，可以使用 <code>SCHED_RESET_ON_FORK</code> 按位与参数的方式调用 <code>sched_setscheduler()</code>, 使用之后效果是：如果调用进程使用 <code>SCHED_FIFO</code> 或 <code>SCHED_RR</code> 调度策略，使用 <code>SCHED_RESET_ON_FORK</code> 后fork创建的子进程创建时将会自动重置为 <code>SCHED_OTHER</code> 调度策略；如果调用进程使用负值nice，那么使用  <code>SCHED_RESET_ON_FORK</code> 后fork创建的子进程创建时将会自动将其nice重置为0。 这个标记激活时只有当进程具有 <code>CAP_SYS_NICE</code> 标记时才能被重置，而这个 <code>CAP_SYS_NICE</code> 标记在使用fork()创建子进程后，在子进程中被禁止。</p><p>参考： <code>man sched_setscheduler</code> 和 <a href="http://blog.chinaunix.net/xmlrpc.php?r=blog/article&amp;uid=20205875&amp;id=3028468" target="_blank" rel="noopener">线程优先级设置</a></p></li><li><p>通过 <code>pthread_attr_setschedpolicy()</code> 设置线程调度和优先级属性</p><p>效果类似 <code>sched_setscheduler()</code>, 但是用于线程而非进程。</p><p>参考： <code>man pthread_attr_setschedpolicy</code></p></li></ol></div></div><div id="outline-container-orgheadline8" class="outline-2"><h2 id="orgheadline8"><span class="section-number-2">5</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[0/4]</code>(<code>[0%]</code>)</h2><div class="outline-text-2" id="text-5"></div><div id="outline-container-orgheadline9" class="outline-3"><h3 id="orgheadline9"><span class="section-number-3">5.1</span> <span class="todo NEXT">NEXT</span> 线程优先级是否继承父线程优先级？是否继承父进程优先级？</h3><div class="outline-text-3" id="text-5-1"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-02-01 一 15:39]</span></span></li></ul></div></div><div id="outline-container-orgheadline10" class="outline-3"><h3 id="orgheadline10"><span class="section-number-3">5.2</span> <span class="todo NEXT">NEXT</span> <code>chrt</code> 修改进程优先级，那么该进程的子线程优先级是否改变？</h3><div class="outline-text-3" id="text-5-2"><ul class="org-ul"><li>State "NEXT"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-02-01 一 15:40]</span></span></li></ul></div></div><div id="outline-container-orgheadline11" class="outline-3"><h3 id="orgheadline11"><span class="section-number-3">5.3</span> <span class="todo NEXT">NEXT</span> <code>chrt</code>, <code>ps</code>, <code>top</code>, <code>pthread_attr_setschedpolicy()</code>, <code>sched_setscheduler()</code> 中的优先级值和含义有什么关系？</h3><div class="outline-text-3" id="text-5-3"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-02-01 一 15:40]</span></span></li></ul></div></div><div id="outline-container-orgheadline12" class="outline-3"><h3 id="orgheadline12"><span class="section-number-3">5.4</span> <span class="todo NEXT">NEXT</span> 考虑将引文中的链接下载到本地</h3><div class="outline-text-3" id="text-5-4"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-02-01 一 15:50]</span></span></li></ul></div></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;
&amp;#x2014;
layout: posts
title: Linux进程和线程的调度与优先级
categories: [categories, study, os]
comments: true
&amp;#x2014;
#+END_HTML
&lt;/p&gt;
&lt;div id=&quot;tab
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://0.0.0.0:4000/2015/12/17/testexport/"/>
    <id>http://0.0.0.0:4000/2015/12/17/testexport/</id>
    <published>2015-12-16T16:00:00.000Z</published>
    <updated>2019-10-22T08:07:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2014;layout: poststitle: 测试orgmode文章导出categories: [categories, others]comments: true&#x2014;#+END_HTML</p><div id="table-of-contents"><h2>&#30446;&#24405;</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. FAQ <code>[3/8]</code>(<code>[37%]</code>)</a><ul><li><a href="#orgheadline2">1.1. <span class="todo nilINBOX">INBOX</span> 如何设置style文件链接使之在所有文件中可以公用？</a></li><li><a href="#orgheadline3">1.2. <span class="done nilDONE">DONE</span> 如何设置文内引用链接保持在文件路径变化时文件内容不变？</a><ul><li><a href="#orgheadline4">1.2.1. 链接引用文件存放地</a></li><li><a href="#orgheadline5">1.2.2. org文件中引用链接到jekyll导出文件链接的转换</a></li><li><a href="#orgheadline6">1.2.3. 转换实现</a></li></ul></li><li><a href="#orgheadline7">1.3. <span class="done nilDONE">DONE</span> 如何设置图片链接在文件路径变化时保持不变？</a></li><li><a href="#orgheadline8">1.4. <span class="todo nilNEXT">NEXT</span> 如何设置文件中的签名信息？</a></li><li><a href="#orgheadline9">1.5. <span class="done nilDONE">DONE</span> 如何设置文件中jekyll文章的引用位置？</a></li><li><a href="#orgheadline10">1.6. <span class="todo nilNEXT">NEXT</span> 如何为每次更新文章追加设置记录时间戳？</a></li><li><a href="#orgheadline11">1.7. <span class="todo nilNEXT">NEXT</span> 如何放置引用文章链接在文章路径改变时的失效情况发生？</a></li><li><a href="#orgheadline12">1.8. <span class="todo nilNEXT">NEXT</span> 如何为本地orgmode导出文件设置导出引用链接？</a></li></ul></li></ul></div></div><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> FAQ <code>[3/8]</code>(<code>[37%]</code>)</h2><div class="outline-text-2" id="text-1"></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> <span class="todo INBOX">INBOX</span> 如何设置style文件链接使之在所有文件中可以公用？</h3></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><a id="ID-7c5f6554-f86c-4353-8fd6-211896588fd9"></a><span class="section-number-3">1.2</span> <span class="done DONE">DONE</span> 如何设置文内引用链接保持在文件路径变化时文件内容不变？</h3><div class="outline-text-3" id="text-1-2"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2016-01-11 一 17:08]</span></span></li><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-01-08 五 17:41] </span></span> <br>等待整理</li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-12-17 四 17:42]</span></span></li></ul></div><div id="outline-container-orgheadline4" class="outline-4"><h4 id="orgheadline4"><span class="section-number-4">1.2.1</span> 链接引用文件存放地</h4><div class="outline-text-4" id="text-1-2-1"><p>文章引用的文件，存放在jekyll中data目录的，名为对应文章所在文件扩展名替换为 <code>.files</code> 的目录中。</p><p>假设引用的是一个图片文件， 引用的文章文件名称是 <code>2015-12-17-testexport.org</code>, 导出到jekyll系统中的名称是 <code>2015-12-17-testexport.html</code>, 那么其文章所有被引用的文件都存放在 <code>data/2015-12-17-testexport.files</code> 。</p></div></div><div id="outline-container-orgheadline5" class="outline-4"><h4 id="orgheadline5"><span class="section-number-4">1.2.2</span> org文件中引用链接到jekyll导出文件链接的转换</h4><div class="outline-text-4" id="text-1-2-2"><p>org文件中的引用链接，在导出到jekyll的html需要进行转换才能正确显示，转换方式如下</p></div><div id="outline-container-orgheadline13" class="outline-5"><h5 id="orgheadline13"><span class="section-number-5">1.2.2.1</span> org文章使用链接的方式</h5><div class="outline-text-5" id="text-1-2-2-1"><p>org文章中引用本地外部文件和普通orgmode语法一样，如下</p><pre class="example">[[file:~/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2015-12-17-testexport.files/2015-12-17-editor_study_line.jpg][image file]]</pre></div></div><div id="outline-container-orgheadline14" class="outline-5"><h5 id="orgheadline14"><span class="section-number-5">1.2.2.2</span> 导出的html链接</h5><div class="outline-text-5" id="text-1-2-2-2"><p>导出结果到jekyll对应的html文件后，对应链接变成</p><pre class="example">&lt;a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2015-12-17-testexport.files/2015-12-17-editor_study_line.jpg"&gt;image file&lt;/a&gt;</pre></div></div><div id="outline-container-orgheadline15" class="outline-5"><h5 id="orgheadline15"><span class="section-number-5">1.2.2.3</span> 对导出的html链接进行转换</h5><div class="outline-text-5" id="text-1-2-2-3"><p>这样的结果在jekyll中是无法直接正确显示链接的，需要在导出为html之后，再对相应html文件中相应的链接处进行处理，处理成jekyll可以显示的方式，这里为：</p><pre class="example">&lt;a href="/data/2015-12-17-testexport.files/2015-12-17-editor_study_line.jpg"&gt;image file&lt;/a&gt;</pre><p>处理成功的效果：</p><p><a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2015-12-17-testexport.files/2015-12-17-editor_study_line.jpg" target="_blank" rel="noopener">image file</a></p></div></div></div><div id="outline-container-orgheadline6" class="outline-4"><h4 id="orgheadline6"><span class="section-number-4">1.2.3</span> 转换实现</h4><div class="outline-text-4" id="text-1-2-3"><p>这里实现上述转换的方法是定义一个替换链接的函数，把它做为hook添加到 <code>org-publish-after-publishing-hook</code> 中。</p><p>大致如下：</p><div class="org-src-container"><pre class="src src-elisp">(defun my-update-jekyll-html-link (htmlfile);;replace the local file link to site relative link in jekyll.;;open    (setq htmlbuffer (find-file-existing htmlfile));;search    (goto-char (point-min));;TODO the xxx.files, xxx is better to be replaced by the html file name.    (while (re-search-forward "\\(&lt;a href=.*?\\)\\(file:.*?quietheart/mydoc/prepub/jekyll\\)\\(/data/[0-9]\\{4\\}-[0-1][0-9]-[0-3][0-9]-.*?\.files\\)" nil t)         (replace-match "\\1\\3" nil nil));;save and close    (save-buffer)    (kill-buffer htmlbuffer)))(defun my_after_pub_html_hook (orgfile htmlfile)     (my-update-jekyll-html-link htmlfile))(add-hook 'org-publish-after-publishing-hook 'my_after_pub_html_hook)))</pre></div></div></div></div><div id="outline-container-orgheadline7" class="outline-3"><h3 id="orgheadline7"><span class="section-number-3">1.3</span> <span class="done DONE">DONE</span> 如何设置图片链接在文件路径变化时保持不变？</h3><div class="outline-text-3" id="text-1-3"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-01-11 一 17:55]</span></span></li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-01-11 一 17:40]</span></span></li></ul><p>类似文件链接的转换，<a href="#orgheadline3">如何设置文内引用链接保持在文件路径变化时文件内容不变？</a></p><p>关键添加如下：</p><div class="org-src-container"><pre class="src src-elisp">;;image reference link convert.;;TODO the xxx.files, xxx is better to be replaced by the html file name.(while (re-search-forward "\\(&lt;img .*?src=.*?\\)\\(file:.*?quietheart/mydoc/prepub/orgmode\\)\\(/data/[0-9]\\{4\\}-[0-1][0-9]-[0-3][0-9]-.*?\.files\\)" nil t) (replace-match "\\1\\3" nil nil))</pre></div><p>效果：</p><div class="figure"><p><img src="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2015-12-17-testexport.files/2015-12-17-editor_study_line.jpg" alt="2015-12-17-editor_study_line.jpg"></p></div></div></div><div id="outline-container-orgheadline8" class="outline-3"><h3 id="orgheadline8"><span class="section-number-3">1.4</span> <span class="todo NEXT">NEXT</span> 如何设置文件中的签名信息？</h3><div class="outline-text-3" id="text-1-4"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-12-17 四 17:42]</span></span></li></ul></div></div><div id="outline-container-orgheadline9" class="outline-3"><h3 id="orgheadline9"><span class="section-number-3">1.5</span> <span class="done DONE">DONE</span> 如何设置文件中jekyll文章的引用位置？</h3><div class="outline-text-3" id="text-1-5"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-01-11 一 17:39]</span></span></li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-12-17 四 17:42]</span></span></li></ul><p>类似上面导出文件链接的转换，<a href="#orgheadline3">如何设置文内引用链接保持在文件路径变化时文件内容不变？</a></p><p>关键如下：</p><div class="org-src-container"><pre class="src src-elisp">(while (re-search-forward "\\(&lt;a href=.*?\\)\\(file:.*?quietheart/mydoc/prepub/orgmode\\)\\(/.*?\\)\\(_posts/[0-9]\\{4\\}-[0-1][0-9]-[0-3][0-9]-\\)\\(.*?\.html\\)" nil t) (replace-match "\\1\\3\\5" nil nil))</pre></div><p>效果<a href="/categories/note/gtd_with_orgmode.html">gtd method</a></p></div></div><div id="outline-container-orgheadline10" class="outline-3"><h3 id="orgheadline10"><span class="section-number-3">1.6</span> <span class="todo NEXT">NEXT</span> 如何为每次更新文章追加设置记录时间戳？</h3><div class="outline-text-3" id="text-1-6"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-12-17 四 17:42]</span></span></li></ul></div></div><div id="outline-container-orgheadline11" class="outline-3"><h3 id="orgheadline11"><span class="section-number-3">1.7</span> <span class="todo NEXT">NEXT</span> 如何放置引用文章链接在文章路径改变时的失效情况发生？</h3><div class="outline-text-3" id="text-1-7"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-01-11 一 18:00]</span></span></li></ul></div></div><div id="outline-container-orgheadline12" class="outline-3"><h3 id="orgheadline12"><span class="section-number-3">1.8</span> <span class="todo NEXT">NEXT</span> 如何为本地orgmode导出文件设置导出引用链接？</h3><div class="outline-text-3" id="text-1-8"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-01-18 一 18:28]</span></span></li></ul><p>这个和发布不同，日常orgmode管理之时，一般都会将相关文章放到一个目录中，引用的文件也属于该目录的子目录。这种情况下，使用 <code>elisp:</code> 链接的方式来自定义链接的引用。</p><p><a href="(my-link-org-file%20" data image 2010-04-02-editor_study_line.jpg")">imagefile</a></p><div class="org-src-container"><pre class="src src-elisp">;; custom link function for export.(defun my-link-org-file (file_path)  (setq org-file-prefix org-directory)  (find-file (concat org-file-prefix file_path)))(defun my-link-org-img (imgfile_path)  (setq org-file-prefix org-directory)  (find-file (concat org-file-prefix imgfile_path)))</pre></div><pre class="example">[[elisp:(my-link-org-file%20"data/image/2010-04-02-editor_study_line.jpg")][normalfile]][[elisp:(my-link-org-img%20"data/image/2010-04-02-editor_study_line.jpg")][imagefile]]</pre><pre class="example">&lt;a href="(my-link-org-file%20"data/image/2010-04-02-editor_study_line.jpg")"&gt;normalfile&lt;/a&gt;&lt;a href="(my-link-org-img%20"data/image/2010-04-02-editor_study_line.jpg")"&gt;imagefile&lt;/a&gt;</pre></div></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;
&amp;#x2014;
layout: posts
title: 测试orgmode文章导出
categories: [categories, others]
comments: true
&amp;#x2014;
#+END_HTML
&lt;/p&gt;

&lt;div id=&quot;table-of-
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://0.0.0.0:4000/2015/12/01/test_orglink/"/>
    <id>http://0.0.0.0:4000/2015/12/01/test_orglink/</id>
    <published>2015-11-30T16:00:00.000Z</published>
    <updated>2019-10-22T08:07:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2014;layout: poststitle: 测试orgmode链接categories: [categories, others]comments: true&#x2014;#+END_HTML</p><div id="table-of-contents"><h2>&#30446;&#24405;</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. image links</a></li><li><a href="#orgheadline2">2. audio links</a></li></ul></div></div><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><span class="section-number-2">1</span> image links</h2><div class="outline-text-2" id="text-1"><p><a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2015-12-01-test_orglink.files/image/2015-12-01-test_image.jpg" target="_blank" rel="noopener">2015-12-01-test_image.jpg</a></p></div></div><div id="outline-container-orgheadline2" class="outline-2"><h2 id="orgheadline2"><span class="section-number-2">2</span> audio links</h2><div class="outline-text-2" id="text-2"><p><a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2015-12-01-test_orglink.files/audio/msgcrsky.wav" target="_blank" rel="noopener">msgcrsky</a></p><p><a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2015-12-01-test_orglink.files/audio/songForEver.mp3" target="_blank" rel="noopener">songForEver.mp3</a></p></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;
&amp;#x2014;
layout: posts
title: 测试orgmode链接
categories: [categories, others]
comments: true
&amp;#x2014;
#+END_HTML
&lt;/p&gt;

&lt;div id=&quot;table-of-co
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://0.0.0.0:4000/2015/12/01/Content_Manage_Method/"/>
    <id>http://0.0.0.0:4000/2015/12/01/Content_Manage_Method/</id>
    <published>2015-11-30T16:00:00.000Z</published>
    <updated>2019-10-22T08:07:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2014;layout: poststitle: 内容管理方法categories: [categories,note]comments: true&#x2014;#+END_HTML</p><div id="table-of-contents"><h2>&#30446;&#24405;</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 其它</a><ul><li><a href="#orgheadline2">1.1. 杂乱</a></li><li><a href="#orgheadline3">1.2. 其实这些东西本质上真的可以理解成为内容管理方面的东西。</a></li><li><a href="#orgheadline4">1.3. 知识管理使用git的原则</a></li><li><a href="#orgheadline5">1.4. 参考资料</a></li></ul></li><li><a href="#orgheadline6">2. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[1/25]</code>(<code>[4%]</code>)</a><ul><li><a href="#orgheadline7">2.1. <span class="todo nilNEXT">NEXT</span> 使用orgmode组织内容管理体系，如何处理大文件、附件的问题？</a></li><li><a href="#orgheadline8">2.2. <span class="todo nilNEXT">NEXT</span> 如何处理整理好的文档，以及导出的内容？以及内容的更新？以及版本控制？</a></li><li><a href="#orgheadline9">2.3. <span class="todo nilNEXT">NEXT</span> &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2015-12-01 二 11:54] </span></span> 图片和文件等引用链接处理的方式------</a><ul><li><a href="#orgheadline10">2.3.1. <span class="timestamp-wrapper"><span class="timestamp">&lt;2015-12-14 一 09:38&gt; </span></span> 与文章同名的目录存放相应的参考资料</a></li><li><a href="#orgheadline11">2.3.2. <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-01-04 一 09:39&gt; </span></span> 三种路径</a></li></ul></li><li><a href="#orgheadline12">2.4. <span class="todo nilLATER">LATER</span> 使用kindle代替pocket，标签也是gtd标签来阅读网页。</a></li><li><a href="#orgheadline13">2.5. <span class="todo nilNEXT">NEXT</span> 若orgmode导出功能能将每次的update时间戳都添加到html文件中就好了，不知道是否有必要。</a></li><li><a href="#orgheadline14">2.6. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 最初如何将某方面的内容纳入内容管理系统</a></li><li><a href="#orgheadline15">2.7. <span class="todo nilLATER">LATER</span> 如何处理jekyll引文链接的问题，以及链接失效之时如何更新被引用文章？</a></li><li><a href="#orgheadline16">2.8. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 转移资料之时，为备份可以将原来位置增加一个 "_to_xxx" 的目录。</a></li><li><a href="#orgheadline17">2.9. <span class="todo nilLATER">LATER</span> 云存储策略</a><ul><li><a href="#orgheadline18">2.9.1. 公有云</a></li><li><a href="#orgheadline19">2.9.2. 私有云</a></li></ul></li><li><a href="#orgheadline20">2.10. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 本地同步工具</a></li><li><a href="#orgheadline21">2.11. <span class="todo nilLATER">LATER</span> 如何收藏好的网页文章而非链接以便脱机查看？</a></li><li><a href="#orgheadline22">2.12. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 使用maff和mht格式离线保存网页</a></li><li><a href="#orgheadline23">2.13. <span class="todo nilINBOX">INBOX</span> Content jekyll 文章org发布方式</a></li><li><a href="#orgheadline24">2.14. <span class="todo nilLATER">LATER</span> 云路由</a></li><li><a href="#orgheadline25">2.15. <span class="done nilDONE">DONE</span> 考虑用elisp链接实现平时日常工作中文档的引用，资料输出html时链接转换为html链接。</a></li><li><a href="#orgheadline26">2.16. <span class="todo nilINBOX">INBOX</span> scrap book and git backup scheme for cloud.</a></li><li><a href="#orgheadline27">2.17. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 优惠、保险信息可以集中到一个地方记录，免得经常忘记这些琐碎的事情</a></li><li><a href="#orgheadline28">2.18. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> git内容管理方式</a></li><li><a href="#orgheadline29">2.19. <span class="todo nilMAYBE_FUTURE">MAYBE/FUTURE</span> emacs中写一个方便的创建网摘的工具</a></li><li><a href="#orgheadline30">2.20. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 云存储</a><ul><li><a href="#orgheadline31">2.20.1. kodexplorer</a></li><li><a href="#orgheadline32">2.20.2. dzzoffice</a></li></ul></li><li><a href="#orgheadline33">2.21. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 本地搭建owncloud存放大文件，搭建git存放文档与源码，搭建webdavfs将本地目录与owncloud挂接</a></li><li><a href="#orgheadline34">2.22. <span class="todo nilLATER">LATER</span> 为orgmode网站添加文件的过程比较麻烦，如何简化？</a></li><li><a href="#orgheadline35">2.23. <span class="todo nilLATER">LATER</span> 考虑使用原生orgmode来生成网站，而不依赖jekyll环境。</a></li><li><a href="#orgheadline36">2.24. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> mygit repo</a></li><li><a href="#orgheadline37">2.25. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> 考虑将xiaomi做为第一个最新的提交库，而其它库如github,bitbucket等都尽量不要直接使用，而是用xiaomi来更新。</a></li><li><a href="#orgheadline38">2.26. <span class="todo nilLATER">LATER</span> orgmode的管理策略</a></li><li><a href="#orgheadline39">2.27. <span class="todo nilLATER">LATER</span> 关于data数据越来越大的考虑</a></li></ul></li></ul></div></div><p>本文主要考虑内容管理方面的内容。</p><p>和本文类似的一篇文章中，讲述了GTD管理的方式，参见：</p><p>这里主要讲述内容管理的方式。</p><p>内容管理本文并没有给出一个系统的、官方的方式，只是给出实践中使用的一种方法，或者说是策略。因为这里所说的内容管理，涉及的方面比较杂乱，所以文章结构也有些杂乱，会随着实践的深入和改进而更新。</p><p>文档、书签、文件、</p><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><a id="ID-3a8bab47-c781-4dda-97db-e350d49b8e53"></a><span class="section-number-2">1</span> 其它</h2><div class="outline-text-2" id="text-1"><p>非问题的，待整理的内容。</p></div><div id="outline-container-orgheadline2" class="outline-3"><h3 id="orgheadline2"><span class="section-number-3">1.1</span> 杂乱</h3><div class="outline-text-3" id="text-1-1"><p>为知笔记可以目录无限分级，但是大多还是只能两级，所以内容管理的分类"_xxx"。</p></div></div><div id="outline-container-orgheadline3" class="outline-3"><h3 id="orgheadline3"><span class="section-number-3">1.2</span> 其实这些东西本质上真的可以理解成为内容管理方面的东西。</h3><div class="outline-text-3" id="text-1-2"><p>我现在也不太清楚要做什么，最好能多了解一些相关的东西，可能会让将来的目标更清晰。</p><p>我尝试过很多方法和工具，给你推荐几个你可以参考一下，也可以用用它们。1.DGT GTD。在Android上面，关于时间管理方面的(GTD)，工具，但是这个需要知道一些GTD相关的知识，才能理解它的便利，并且存储方面也能让数据掌握在自己手中。不足的是，存储格式和同步方式有限，但是基本的功能都有了。2.aTimeLogger在Android上面的时间记录和统计工具，可以将自己日常任何的、适合自己的、各个方面的事情所消耗的时间记录下来，并且统计，还能设定目标，同步，操作非常简单。3.为知笔记/云笔记将自己所有日常文档都归结到一个云端的笔记上，手机、电脑上都能查看，随意导出，脱机浏览。个人感觉比较全面的是为知，易用，扩展强。4.Git/Emacs+Orgmode这个是在电脑上，使用方式比较复杂，但是它们能把工作、生活、学习中的一切事情用文本的方式表达出来，并且集中管理、分布存储、既能充分利用网络的便利性，又不会受限于网络，完全可以脱机存储。搜索、统计、查询、导出各种格式等等都完全能够依据个人需要自行定制和扩展，工具的功能取决于你的思维方法。工具很强大，但是不太容易普及，可以看看相关的介绍。</p><p>这几个文档可以参考：<a href="http://www.mifengtd.cn/categories/time-management/" target="_blank" rel="noopener">http://www.mifengtd.cn/categories/time-management/</a><a href="http://vaqeteart.github.io/categories/note/GTD_Manage_Method.html" target="_blank" rel="noopener">http://vaqeteart.github.io/categories/note/GTD_Manage_Method.html</a><a href="http://orgmode.org/" target="_blank" rel="noopener">http://orgmode.org/</a></p></div></div><div id="outline-container-orgheadline4" class="outline-3"><h3 id="orgheadline4"><span class="section-number-3">1.3</span> 知识管理使用git的原则</h3><div class="outline-text-3" id="text-1-3"><ol class="org-ol"><li>提交的时候，是做比较关键修改的时候，便于历史备份。</li><li>提交的时候，可以是改动了很多的时候。</li></ol><p>平时的操作，不用每次都要更新。</p></div></div><div id="outline-container-orgheadline5" class="outline-3"><h3 id="orgheadline5"><span class="section-number-3">1.4</span> 参考资料</h3><div class="outline-text-3" id="text-1-4"><p>emacs,orgmode,jekyll,owncloud</p></div></div></div><div id="outline-container-orgheadline6" class="outline-2"><h2 id="orgheadline6"><span class="section-number-2">2</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[1/25]</code>(<code>[4%]</code>)</h2><div class="outline-text-2" id="text-2"><p>问题形式的，待整理的内容。</p></div><div id="outline-container-orgheadline7" class="outline-3"><h3 id="orgheadline7"><span class="section-number-3">2.1</span> <span class="todo NEXT">NEXT</span> 使用orgmode组织内容管理体系，如何处理大文件、附件的问题？</h3><div class="outline-text-3" id="text-2-1"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:21]</span></span></li></ul></div></div><div id="outline-container-orgheadline8" class="outline-3"><h3 id="orgheadline8"><span class="section-number-3">2.2</span> <span class="todo NEXT">NEXT</span> 如何处理整理好的文档，以及导出的内容？以及内容的更新？以及版本控制？</h3><div class="outline-text-3" id="text-2-2"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-03 四 16:21]</span></span></li></ul></div></div><div id="outline-container-orgheadline9" class="outline-3"><h3 id="orgheadline9"><a id="ID-e27c6b8e-4029-49e9-84d9-b5b6b97ddeca"></a><span class="section-number-3">2.3</span> <span class="todo NEXT">NEXT</span> &#x2014;&#x2014; <span class="timestamp-wrapper"><span class="timestamp">[2015-12-01 二 11:54] </span></span> 图片和文件等引用链接处理的方式------</h3><div class="outline-text-3" id="text-2-3"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-01-04 一 09:38]</span></span></li></ul><p>From:/home/miracle/mydata/orgmode/gtd/output/Content_Manage_Method.org</p></div><div id="outline-container-orgheadline10" class="outline-4"><h4 id="orgheadline10"><span class="section-number-4">2.3.1</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2015-12-14 一 09:38&gt; </span></span> 与文章同名的目录存放相应的参考资料</h4><div class="outline-text-4" id="text-2-3-1"><p>当前图片等链接文件都采用相对链接的方式，但是内容放在data目录下，随着文章的位置变化，可能会修改文章内部的链接。这样不便于移植。</p><p>不可能通过配置的方式指定这种相对链接，以便文章转移时不用修改文章内容，所以干脆，在文章目录的父目录中，也就是文章所在_posts目录建立。</p><p>方式是：文章名为xxx在yyy/zzz/_posts中，其对应引用的文件所处位置为：yyy/zzz/post_files/xxx/data档转移文章xxx到其它_posts目录时，将对应的post_files/xxx目录也转移到对应于_posts的同级目录下即可，不需要修改文章内容，文章中引用的方式是："../post_files/xxx/data/&#x2026;"</p><p>貌似不行，这样会导致orgmode中的引用路径和html中的引用路径不一样。如何解决orgmode中引用路径和转换之后引用路径不一致的问题？</p></div></div><div id="outline-container-orgheadline11" class="outline-4"><h4 id="orgheadline11"><span class="section-number-4">2.3.2</span> <span class="timestamp-wrapper"><span class="timestamp">&lt;2016-01-04 一 09:39&gt; </span></span> 三种路径</h4><div class="outline-text-4" id="text-2-3-2"><p>原则，修改内容之时，不应该修改内容之内的链接。</p></div><div id="outline-container-orgheadline40" class="outline-5"><h5 id="orgheadline40"><span class="section-number-5">2.3.2.1</span> 相对路径</h5><div class="outline-text-5" id="text-2-3-2-1"><p>即，被引用文件存放在一个目录中，这个目录的名称和文章的名称一样，这个目录的路径和文章在同样的目录中。例如：文章 <code>2015-10-16-test.org</code> 中的引用文件，存放在同样目录下的 <code>2015-10-16-test.files</code> 中，引用之时，只需要使用链接 <code>file://./2015-10-16-test.files/xxx</code> 即可，迁移文章之时，文章和目录一并迁移。</p><p>这种方式文章和目录同名（扩展名除外），并且路径相同，适合于文章做为一个整体而存在，其中的内容迁移之时的范围在于当前文章，不会被转移到其他文章中。</p></div></div><div id="outline-container-orgheadline41" class="outline-5"><h5 id="orgheadline41"><span class="section-number-5">2.3.2.2</span> 绝对路径</h5><div class="outline-text-5" id="text-2-3-2-2"><p>即，所有被引用的文件放在一个固定的目录中。系统不变即可，但是系统变了，可能需要修改配置。使用与文章内的内容迁移之时，可能会迁移出文章之外。</p></div></div><div id="outline-container-orgheadline49" class="outline-5"><h5 id="orgheadline49"><span class="section-number-5">2.3.2.3</span> 相对绝对路径</h5><div class="outline-text-5" id="text-2-3-2-3"><p>属于前两者的折衷。即，所有文章以及引用文件路径都在一个文件系统子目录中，该子目录有自己的层次结构。该目录的父级目录路径在系统中是相对路径，而文章的引用文件是以该目录为“根”，期内引用链接相对该目录本身是“绝对路径”。该方式，文章内的引用文件路径相对文件系统某子目录固定，文章路径视文章所处位置而定，由于引用文件和文章不是在同一目录，如果文章名称不能保证唯一性那么可能会有些问题。下面是例子：</p></div><ol class="org-ol"><li><a id="orgheadline48"></a><a id="ID-12c4a2e7-8ae9-4852-b4cd-ba34e8c84656"></a><span class="todo WAIT_FORWARD">WAIT/FORWARD</span> -&#x2014;设置Jekyll中文内引用链接保持在文件路径变化时文件内容不变的方式<br><div class="outline-text-6" id="text-2-3-2-3-1"><ul class="org-ul"><li>State "WAIT/FORWARD" from              <span class="timestamp-wrapper"><span class="timestamp">[2016-01-08 五 17:26] </span></span> <br>等待进一步整理</li></ul><p>对于像jekyll中的文章有如下特点：</p><ol class="org-ol"><li><p>内容迁移的时候基本上是文章整体做迁移</p><p>即，其文章内的内容和标题的迁移范围相对固定，不会迁移到其它文章文件中。</p></li><li><p>文章对应的文件名称全局基本唯一</p><p>文章名称是以日期做为前缀，只要在每次写文之时，保证每个日期中没有重复的文章文件名（事实上，一天也很难写出很多文章，并且这些文章中有重名的情况），即可保证文章全局唯一。</p></li></ol><p>所以大致的思路是采用上面提到的相对绝对路径方法。</p><p>大致描述如下：</p></div><ol class="org-ol"><li><a id="orgheadline42"></a>链接引用文件存放地<br><div class="outline-text-7" id="text-2-3-2-3-1-1"><p>文章引用的文件，存放在jekyll中data目录的，名为对应文章所在文件扩展名替换为 <code>.files</code> 的目录中。</p><p>假设引用的是一个图片文件， 引用的文章文件名称是 <code>2015-12-17-testexport.org</code>, 导出到jekyll系统中的名称是 <code>2015-12-17-testexport.html</code>, 那么其文章所有被引用的文件都存放在 =data/2015-12-17-testexport.files=。</p></div></li><li><a id="orgheadline46"></a>org文件中引用链接到jekyll导出文件链接的转换<br><div class="outline-text-7" id="text-2-3-2-3-1-2"><p>org文件中的引用链接，在导出到jekyll的html需要进行转换才能正确显示。这里给出了文件、图片、导出到jekyll的org文章在引用时链接的转换方式，如下</p></div><ol class="org-ol"><li><a id="orgheadline43"></a>org文章使用链接的方式<br><div class="outline-text-8" id="text-2-3-2-3-1-2-1"><p>org文章中引用本地外部文件和普通orgmode语法一样，如下</p><pre class="example">[[file:~/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2015-12-17-testexport.files/2015-12-17-editor_study_line.jpg][image file]]</pre><p>图片的语法</p><pre class="example">[[file:~/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2015-12-17-testexport.files/2015-12-17-editor_study_line.jpg]]</pre><p>org文章中引用其他org文章的语法类似</p><pre class="example">[[file:~/mygitrepo/quietheart/mydoc/prepub/orgmode/categories/note/_posts/2015-11-27-gtd_with_orgmode.org][gtd method]]</pre></div></li><li><a id="orgheadline44"></a>导出的html链接<br><div class="outline-text-8" id="text-2-3-2-3-1-2-2"><p>导出结果到jekyll对应的html文件后，对应链接变成</p><pre class="example">&lt;a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2015-12-17-testexport.files/2015-12-17-editor_study_line.jpg"&gt;image file&lt;/a&gt;</pre><p>图片如下</p><pre class="example">&lt;img src="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2015-12-17-testexport.files/2015-12-17-editor_study_line.jpg" alt="2015-12-17-editor_study_line.jpg" /&gt;</pre><p>org文章如下</p><pre class="example">&lt;a href="file:///home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/categories/note/_posts/2015-11-27-gtd_with_orgmode.org"&gt;gtd method&lt;/a&gt;</pre></div></li><li><a id="orgheadline45"></a>对导出的html链接进行转换<br><div class="outline-text-8" id="text-2-3-2-3-1-2-3"><p>这样的结果在jekyll中是无法直接正确显示链接的，需要在导出为html之后，再对相应html文件中相应的链接处进行处理，处理成jekyll可以显示的方式，这里为：</p><pre class="example">&lt;a href="/data/2015-12-17-testexport.files/2015-12-17-editor_study_line.jpg"&gt;image file&lt;/a&gt;</pre><p>图片链接转换成</p><pre class="example">&lt;img src="/data/2015-12-17-testexport.files/2015-12-17-editor_study_line.jpg" alt="2015-12-17-editor_study_line.jpg" /&gt;</pre><p>org文章转换成</p><pre class="example">&lt;a href="/categories/note/gtd_with_orgmode.html"&gt;gtd method&lt;/a&gt;</pre></div></li></ol></li><li><a id="orgheadline47"></a>转换实现<br><div class="outline-text-7" id="text-2-3-2-3-1-3"><p>这里实现上述转换的方法是定义一个替换链接的函数，把它做为hook添加到 <code>org-publish-after-publishing-hook</code> 中。</p><p>大致如下：</p><div class="org-src-container"><pre class="src src-elisp">(defun my-update-jekyll-html-link (htmlfile);;replace the local file link to site relative link in jekyll.;;open(setq htmlbuffer (find-file-existing htmlfile));;search(goto-char (point-min));;file reference link convert.;;TODO the xxx.files, xxx is better to be replaced by the html file name.(while (re-search-forward "\\(&lt;a href=.*?\\)\\(file:.*?quietheart/mydoc/prepub/orgmode\\)\\(/data/[0-9]\\{4\\}-[0-1][0-9]-[0-3][0-9]-.*?\.files\\)" nil t) (replace-match "\\1\\3" nil nil));;image reference link convert.;;TODO the xxx.files, xxx is better to be replaced by the html file name.(while (re-search-forward "\\(&lt;img .*?src=.*?\\)\\(file:.*?quietheart/mydoc/prepub/orgmode\\)\\(/data/[0-9]\\{4\\}-[0-1][0-9]-[0-3][0-9]-.*?\.files\\)" nil t) (replace-match "\\1\\3" nil nil));;article reference link convert, we don't convert articles in "/_posts" that is not specify categories from file structure.;;TODO the xxx.files, xxx is better to be replaced by the html file name.(while (re-search-forward "\\(&lt;a href=.*?\\)\\(file:.*?quietheart/mydoc/prepub/orgmode\\)\\(/.*?\\)\\(_posts/[0-9]\\{4\\}-[0-1][0-9]-[0-3][0-9]-\\)\\(.*?\.html\\)" nil t) (replace-match "\\1\\3\\5" nil nil));;save and close(save-buffer)(kill-buffer htmlbuffer)))(defun my_after_pub_html_hook (orgfile htmlfile) (my-update-jekyll-html-link htmlfile))(add-hook 'org-publish-after-publishing-hook 'my_after_pub_html_hook)))</pre></div><p>关键在于如下三句：</p><div class="org-src-container"><pre class="src src-elisp">;;file reference link convert.;;TODO the xxx.files, xxx is better to be replaced by the html file name.(while (re-search-forward "\\(&lt;a href=.*?\\)\\(file:.*?quietheart/mydoc/prepub/orgmode\\)\\(/data/[0-9]\\{4\\}-[0-1][0-9]-[0-3][0-9]-.*?\.files\\)" nil t) (replace-match "\\1\\3" nil nil));;image reference link convert.;;TODO the xxx.files, xxx is better to be replaced by the html file name.(while (re-search-forward "\\(&lt;img .*?src=.*?\\)\\(file:.*?quietheart/mydoc/prepub/orgmode\\)\\(/data/[0-9]\\{4\\}-[0-1][0-9]-[0-3][0-9]-.*?\.files\\)" nil t) (replace-match "\\1\\3" nil nil));;article reference link convert, we don't convert articles in "/_posts" that is not specify categories from file structure.;;TODO the xxx.files, xxx is better to be replaced by the html file name.(while (re-search-forward "\\(&lt;a href=.*?\\)\\(file:.*?quietheart/mydoc/prepub/orgmode\\)\\(/.*?\\)\\(_posts/[0-9]\\{4\\}-[0-1][0-9]-[0-3][0-9]-\\)\\(.*?\.html\\)" nil t) (replace-match "\\1\\3\\5" nil nil))</pre></div></div></li></ol></li></ol></div></div></div><div id="outline-container-orgheadline12" class="outline-3"><h3 id="orgheadline12"><a id="ID-ef720674-2e89-463e-b881-1fe606eeba8f"></a><span class="section-number-3">2.4</span> <span class="todo LATER">LATER</span> 使用kindle代替pocket，标签也是gtd标签来阅读网页。</h3><div class="outline-text-3" id="text-2-4"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-12-23 三 13:53]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-23 三 11:29]</span></span></p><hr><p>稍后阅读网页可以借助:<a href="http://fivefilters.org" target="_blank" rel="noopener">http://fivefilters.org</a>中的"send to kindle"功能，可以做为火狐插件。</p><p>不一定只有网页，文本、pocket中的内容等等，只要在浏览器中打开之后，即可使用该插件推送到kindle中， 然后用kindle中的收藏夹代替pocket中的标签。期间一些内容如果无法在推送时候预览到，可以借助 <a href="http://pastepad.fivefilters.org/" target="_blank" rel="noopener">http://pastepad.fivefilters.org/</a>, pocket中的有些内容就是无法直接预览出来。</p></div></div><div id="outline-container-orgheadline13" class="outline-3"><h3 id="orgheadline13"><span class="section-number-3">2.5</span> <span class="todo NEXT">NEXT</span> 若orgmode导出功能能将每次的update时间戳都添加到html文件中就好了，不知道是否有必要。</h3><div class="outline-text-3" id="text-2-5"><ul class="org-ul"><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-01-05 二 15:39]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2015-12-30 三 09:45]</span></span></p><hr><p>update之前的如果可以备份就好了。这样结合git可以看到这些更新中，被提交的更新修改了什么，如果为时间戳加上链接，就可不借助git访问每次修改的内容，当然，每次备份的时候也可以为备份加上一个“old”标记，以及指向最新的文章的标记。</p></div></div><div id="outline-container-orgheadline14" class="outline-3"><h3 id="orgheadline14"><span class="section-number-3">2.6</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 最初如何将某方面的内容纳入内容管理系统</h3><div class="outline-text-3" id="text-2-6"><ul class="org-ul"><li>State "WAIT/FORWARD" from              <span class="timestamp-wrapper"><span class="timestamp">[2016-01-08 五 17:54] </span></span> <br>等待整理</li></ul><p>以jekyll建站过程为例，其中形成的文档或者文章的诞生过程大致如下：</p><ol class="org-ol"><li>由于对jekyll建站并无专门的学习和研究，所以该文章内容开始还不够系统。</li><li><p>文中大多内容是这样产生的</p><p>在jekyll的建站过程中首先遇到某些问题，然后将改问题放于FAQ中，通过orgmode结合GTD方法来管理，FAQ中的问题有些解决，有些没有解决，解决的问题或许会整理到更合适的文章章节中。</p></li><li>如上方式会快速形成一个jekyll建站文档的雏形，虽然不够系统，也反映了在建站经历的真实过程，便于有兴趣的朋友参考。</li><li>随着实践的增多，和文章内容的丰富，在更为熟悉之时会将所有FAQ相应内容归纳到合适的章节，该文章会逐渐形成一篇系统的文章。</li></ol></div></div><div id="outline-container-orgheadline15" class="outline-3"><h3 id="orgheadline15"><a id="ID-f917ab81-3883-4c0c-a259-c7e43163f7d1"></a><span class="section-number-3">2.7</span> <span class="todo LATER">LATER</span> 如何处理jekyll引文链接的问题，以及链接失效之时如何更新被引用文章？</h3><div class="outline-text-3" id="text-2-7"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-01-11 一 10:31]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-01-09 六 17:07]</span></span></p><hr><p>被引用文章中，列出引用它的所有文章。!被引用文章链接更新之时，更新引用它的文章链接。引用文章更新之时，更新它的被引用文章中相关的链接。</p></div></div><div id="outline-container-orgheadline16" class="outline-3"><h3 id="orgheadline16"><span class="section-number-3">2.8</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 转移资料之时，为备份可以将原来位置增加一个 "_to_xxx" 的目录。</h3><div class="outline-text-3" id="text-2-8"><ul class="org-ul"><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 10:01] </span></span> <br>wait for more confirm.</li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 10:01]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-01-18 一 13:52]</span></span></p><hr><p>比如将wiz中的内容转移至git，那么原来wiz的位置增加一个 "_to_git", 然后转移后，将原来wiz中的内容移动到这个"_to_git"目录中，而非删除。这样可以备份，也可了解这些内容集中到了哪里。</p><p>再如baidu中的文件转移至megasync，那么将原来baidu中的内容放到一个 "_to_mega"的目录中。</p></div></div><div id="outline-container-orgheadline17" class="outline-3"><h3 id="orgheadline17"><span class="section-number-3">2.9</span> <span class="todo LATER">LATER</span> 云存储策略</h3><div class="outline-text-3" id="text-2-9"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 10:04]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-01-18 一 13:56]</span></span></p><hr></div><div id="outline-container-orgheadline18" class="outline-4"><h4 id="orgheadline18"><span class="section-number-4">2.9.1</span> 公有云</h4><div class="outline-text-4" id="text-2-9-1"><p>baidu/weiyun/box/megasync</p><p>暂时用megasync存放相对重要的内容。</p><p>公有云敏感数据应该考虑安全问题，可考虑encfs做为加密手段。</p></div></div><div id="outline-container-orgheadline19" class="outline-4"><h4 id="orgheadline19"><span class="section-number-4">2.9.2</span> 私有云</h4><div class="outline-text-4" id="text-2-9-2"><p>考虑 NAS/智能路由 搭建个人云站</p></div></div></div><div id="outline-container-orgheadline20" class="outline-3"><h3 id="orgheadline20"><span class="section-number-3">2.10</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 本地同步工具</h3><div class="outline-text-3" id="text-2-10"><ul class="org-ul"><li>State "WAIT/FORWARD" from "CANCEL"     <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 10:04] </span></span> <br>how to decide.</li><li>State "CANCEL"     from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 09:57] </span></span> <br>It may no good than git.</li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-01-21 四 10:25]</span></span></p><hr><p>定期将一个目录的内容同步到另外一个目录中，以便备份</p><p>为防止数据丢失，可以设置两个备份，第二个备份备份周期要长一些，并且是手动的。</p><p>考虑用git版本控制？可是如何管理二进制文件？</p></div></div><div id="outline-container-orgheadline21" class="outline-3"><h3 id="orgheadline21"><span class="section-number-3">2.11</span> <span class="todo LATER">LATER</span> 如何收藏好的网页文章而非链接以便脱机查看？</h3><div class="outline-text-3" id="text-2-11"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-02-09 二 10:15]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-01-31 日 12:40]</span></span></p><hr></div></div><div id="outline-container-orgheadline22" class="outline-3"><h3 id="orgheadline22"><span class="section-number-3">2.12</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 使用maff和mht格式离线保存网页</h3><div class="outline-text-3" id="text-2-12"><ul class="org-ul"><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-02-25 四 15:44] </span></span> <br>wait for more.</li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-02-11 四 13:50]</span></span></p><hr><p>maff和mht都是将当前网页保存成单一离线文件的格式.</p><p>firefox下的MAFF Archive Format插件可以实现这一点,并且能直接查看对应文件格式.</p><p>另外maff文件格式实质是zip压缩文件,可以将文件解压之后用普通浏览器打开其中的内容(与直接打开maff格式的区别是普通方式打开的网页缺少了源网址来源的信息提示),亦可将解压后的文件夹重新用zip压缩,重命名为xxx.maff用firefox的MAFF Archive Format插件浏览.</p><p>当前存放外部引用网页的方式,可以采取maff方式保存(这要求我们只有使用firefox浏览网页),为便于随时浏览,可将保存的文件用zip解压. 需要时再用zip压缩\重命名为maff再打开.</p><p>还有一个问题是:如何随意选取网页的部分并且离线保存?</p></div></div><div id="outline-container-orgheadline23" class="outline-3"><h3 id="orgheadline23"><span class="section-number-3">2.13</span> <span class="todo INBOX">INBOX</span> Content jekyll 文章org发布方式</h3><div class="outline-text-3" id="text-2-13"><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-02-11 四 16:49]</span></span></p><hr><p>org目录中存放待发布到jekyll的文章,包含草稿性质的文章,但是如果是没有被export到jekyll的文章,就暂时放在根目录_posts中否则放到/categories相应子目录中.</p></div></div><div id="outline-container-orgheadline24" class="outline-3"><h3 id="orgheadline24"><span class="section-number-3">2.14</span> <span class="todo LATER">LATER</span> 云路由</h3><div class="outline-text-3" id="text-2-14"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-02-25 四 15:44]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-02-16 二 14:08]</span></span></p><hr><p>友讯（D-Link）DAP-1160L 150M云分享USB接口直立式云AP</p></div></div><div id="outline-container-orgheadline25" class="outline-3"><h3 id="orgheadline25"><span class="section-number-3">2.15</span> <span class="done DONE">DONE</span> 考虑用elisp链接实现平时日常工作中文档的引用，资料输出html时链接转换为html链接。</h3><div class="outline-text-3" id="text-2-15"><ul class="org-ul"><li>State "DONE"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-06-14 二 15:18]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-02-26 五 17:50]</span></span></p><hr><p>参考 <a href="http://orgmode.org/manual/Advanced-configuration.html" target="_blank" rel="noopener">http://orgmode.org/manual/Advanced-configuration.html</a> </p><p>借助 <code>hook</code> 和 <code>filter</code>, 对 link 类型的文档元素进行 <code>filter</code> 。相应的函数定义类似如下： </p><div class="org-src-container"><pre class="src src-elisp">;; custom link function for export.(defun my-link-convert-elisp (file_path)  (setq org-file-prefix org-directory)  (concat org-file-prefix file_path))(defun my-link-org-file (file_path)  (setq org-file-prefix org-directory)  (find-file (my-link-convert-elisp file_path)));;In orgmode file, it is like: [[elisp:(my-link-org-file%20"/home/miracle/mydata/orgmode/gtd/readme.org")][test]];;After export to html, it is like: &lt;a href="(my-link-org-file%20"/home/miracle/mydata/orgmode/gtd/readme.org")"&gt;test&lt;/a&gt;;;With this link filter, it replace links like &lt;a href="(my-link-org-file%20"/home/miracle/mydata/orgmode/gtd/readme.org")"&gt;test&lt;/a&gt;;;to &lt;a href="/home/miracle/mydata/orgmode/gtd/readme.org"&gt;test&lt;/a&gt;(defun my-link-elisp-html(link backend info)  (when (org-export-derived-backend-p backend 'html)    ;;(print (concat "@@@" link "@@@") t)        (replace-regexp-in-string "\\(&lt;a \s*href=\\).*my-link-org-file.*?\\(\".*\\)\")\\(.*\\)" "\\1\\2\\3" link)    ))(add-to-list 'org-export-filter-link-functions 'my-link-elisp-html)</pre></div><p>声明之后，假设文档中的链接定义为类似如下方式：</p><pre class="example">[[elisp:(my-link-org-file%20"/home/miracle/mydata/orgmode/gtd/readme.org")][test]]</pre><p>导出之时，会将其转换为：</p><pre class="example">&lt;a href="/home/miracle/mydata/orgmode/gtd/readme.org"&gt;test&lt;/a&gt;</pre></div></div><div id="outline-container-orgheadline26" class="outline-3"><h3 id="orgheadline26"><span class="section-number-3">2.16</span> <span class="todo INBOX">INBOX</span> scrap book and git backup scheme for cloud.</h3><div class="outline-text-3" id="text-2-16"><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-04-25 一 10:31]</span></span></p><hr></div></div><div id="outline-container-orgheadline27" class="outline-3"><h3 id="orgheadline27"><span class="section-number-3">2.17</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 优惠、保险信息可以集中到一个地方记录，免得经常忘记这些琐碎的事情</h3><div class="outline-text-3" id="text-2-17"><ul class="org-ul"><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-24 三 11:11] </span></span> <br>目前用gtddgt和带标记的微信收藏管理。</li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-07-25 一 11:24]</span></span></p><hr></div></div><div id="outline-container-orgheadline28" class="outline-3"><h3 id="orgheadline28"><span class="section-number-3">2.18</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> git内容管理方式</h3><div class="outline-text-3" id="text-2-18"><ul class="org-ul"><li>State "WAIT/FORWARD" from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-24 三 11:04] </span></span> <br>已有实践，有待进一步整理。</li><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-24 三 11:04]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-08-17 三 16:34]</span></span></p><hr><p>个人文档，工作项目，等资料用ｇｉｔ保存。各个git库创建一个链接到一个同一的路径中，如 <code>~/mygitrepo</code>, 便于集中访问和云管理。</p></div></div><div id="outline-container-orgheadline29" class="outline-3"><h3 id="orgheadline29"><span class="section-number-3">2.19</span> <span class="todo MAYBE_FUTURE">MAYBE/FUTURE</span> emacs中写一个方便的创建网摘的工具</h3><div class="outline-text-3" id="text-2-19"><ul class="org-ul"><li>State "MAYBE/FUTURE" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-24 三 11:04]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-08-17 三 16:42]</span></span></p><hr><p>当前网摘都是保存成maff格式，然后手动在 <code>netarticles</code> 文章中追加相应内容，并拷贝相应的文件到对应附件目录。</p><p>例如：</p><pre class="example">**&lt;2016-08-12 五 16:11&gt; [[http://www.hahack.com/codes/cmake/][CMake 入门实战]]站内链接：[[/home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2016-02-16-net_articles201602.files/CMake_usage][CMake_usage]]存档：[[/home/miracle/mygitrepo/quietheart/mydoc/prepub/orgmode/data/2016-02-16-net_articles201602.files/CMake_usage.maff][CMake_usage.maff]]</pre><p>考虑用一种简单的方式来实现这个重复的过程。</p></div></div><div id="outline-container-orgheadline30" class="outline-3"><h3 id="orgheadline30"><span class="section-number-3">2.20</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 云存储</h3><div class="outline-text-3" id="text-2-20"><ul class="org-ul"><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-24 三 11:04] </span></span> <br>已经实践，功能上传不佳。kodexplorer还行，可以通过web访问全盘。</li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-08-18 四 11:33]</span></span></p><hr></div><div id="outline-container-orgheadline31" class="outline-4"><h4 id="orgheadline31"><span class="section-number-4">2.20.1</span> kodexplorer</h4><div class="outline-text-4" id="text-2-20-1"><p><a href="http://www.oschina.net/p/kodexplorer?fromerr=45mzBoOt" target="_blank" rel="noopener">http://www.oschina.net/p/kodexplorer?fromerr=45mzBoOt</a></p><p><a href="http://kalcaddle.com/download.html" target="_blank" rel="noopener">http://kalcaddle.com/download.html</a></p><div class="org-src-container"><pre class="src src-sh">$wget "https://github.com/kalcaddle/KODExplorer/archive/3.22.zip"</pre></div><p>解压到www目录下</p></div><div id="outline-container-orgheadline50" class="outline-5"><h5 id="orgheadline50"><span class="section-number-5">2.20.1.1</span> nginx配置</h5><div class="outline-text-5" id="text-2-20-1-1"><pre class="example">#KODExplorerserver {    listen       80;    server_name  112.74.19.38;    location / {            root /home/webspace/www/KODExplorer;            index  index.php;    }    location ~ \.php$ {            fastcgi_pass   127.0.0.1:9000;            fastcgi_index  index.php;            fastcgi_param  SCRIPT_FILENAME  /home/webspace/www/KODExplorer$fastcgi_script_name;            include        fastcgi_params;    }}</pre></div></div></div><div id="outline-container-orgheadline32" class="outline-4"><h4 id="orgheadline32"><span class="section-number-4">2.20.2</span> dzzoffice</h4><div class="outline-text-4" id="text-2-20-2"><p><a href="http://www.oschina.net/p/dzzoffice?fromerr=GntHHDjl" target="_blank" rel="noopener">http://www.oschina.net/p/dzzoffice?fromerr=GntHHDjl</a></p><p><a href="http://www.dzzoffice.com/download.html" target="_blank" rel="noopener">http://www.dzzoffice.com/download.html</a></p></div><div id="outline-container-orgheadline51" class="outline-5"><h5 id="orgheadline51"><span class="section-number-5">2.20.2.1</span> 部署</h5></div><div id="outline-container-orgheadline52" class="outline-5"><h5 id="orgheadline52"><span class="section-number-5">2.20.2.2</span> 配置</h5><div class="outline-text-5" id="text-2-20-2-2"><p><code>nginx.conf</code></p><pre class="example"># another virtual host using mix of IP-, name-, and port-based configuration#server {    listen       80;    server_name  112.74.19.38;    location / {            root /home/webspace/www/dzzoffice/upload;            index  index.php;    }    location /install {            alias /home/webspace/www/dzzoffice/upload/install;            index  index.php;    }    location ~ \.php$ {            fastcgi_pass   127.0.0.1:9000;            fastcgi_index  index.php;            fastcgi_param  SCRIPT_FILENAME  /home/webspace/www/dzzoffice/upload$fastcgi_script_name;            include        fastcgi_params;    }}</pre></div></div><div id="outline-container-orgheadline53" class="outline-5"><h5 id="orgheadline53"><span class="section-number-5">2.20.2.3</span> 安装</h5><div class="outline-text-5" id="text-2-20-2-3"><pre class="example">+----------------------------------+ DzzOffice安装方法+----------------------------------+1. 上传 upload 目录中的文件到服务器2. 设置目录属性（windows 服务器可忽略这一步）以下这些目录需要可读写权限./core/config./data 含子目录3. 执行安装脚本 /install/   请在浏览器中运行 install 程序，即访问 http://您的域名/install/4. 参照页面提示，进行安装，直至安装完毕5.进入桌面，在开始面板中打开“系统工具”应用，更新系统缓存。</pre></div></div></div></div><div id="outline-container-orgheadline33" class="outline-3"><h3 id="orgheadline33"><span class="section-number-3">2.21</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 本地搭建owncloud存放大文件，搭建git存放文档与源码，搭建webdavfs将本地目录与owncloud挂接</h3><div class="outline-text-3" id="text-2-21"><ul class="org-ul"><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-24 三 11:13] </span></span> <br>已经实践，过程需要进一步整理。</li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-08-23 二 11:04]</span></span></p><hr><p>CenterOS上，nginx+php+owncloud.</p><div class="org-src-container"><pre class="src src-sh">#yum install davfs2$sudo mount -t davfs https://localhost/remote.php/webdav/ owncloud_webdav/Please enter the username to authenticate with serverhttps://localhost/remote.php/webdav/ or hit enter for none.  Username: publicPlease enter the password to authenticate user public with serverhttps://localhost/remote.php/webdav/ or hit enter for none.  Password:  /sbin/mount.davfs: the server certificate does not match the server name/sbin/mount.davfs: the server certificate is not trusted  issuer:      Public, QCY, SZ, GD, CN  subject:     Public, QCY, SZ, GD, CN  identity:    QuietHeart  fingerprint: 45:39:d4:81:81:35:c1:a0:35:ad:74:ca:8a:ee:84:55:d3:d0:74:70You only should accept this certificate, if you canverify the fingerprint! The server might be fakedor there might be a man-in-the-middle-attack.Accept certificate for this session? [y,N] y/sbin/mount.davfs: warning: the server does not support locks/sbin/mount.davfs: Warning: can't write entry into mtab, but will mount the file system anyway</pre></div></div></div><div id="outline-container-orgheadline34" class="outline-3"><h3 id="orgheadline34"><span class="section-number-3">2.22</span> <span class="todo LATER">LATER</span> 为orgmode网站添加文件的过程比较麻烦，如何简化？</h3><div class="outline-text-3" id="text-2-22"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-24 三 11:17]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-08-23 二 14:58]</span></span></p><hr><p>目前都是，复制文章到 <code>prepub/orgmode</code>, 创建附件目录结构，复制附件，修改文章链接，&#x2026;</p></div></div><div id="outline-container-orgheadline35" class="outline-3"><h3 id="orgheadline35"><span class="section-number-3">2.23</span> <span class="todo LATER">LATER</span> 考虑使用原生orgmode来生成网站，而不依赖jekyll环境。</h3><div class="outline-text-3" id="text-2-23"><ul class="org-ul"><li>State "LATER"      from              <span class="timestamp-wrapper"><span class="timestamp">[2016-08-24 三 11:15]</span></span></li></ul></div></div><div id="outline-container-orgheadline36" class="outline-3"><h3 id="orgheadline36"><span class="section-number-3">2.24</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> mygit repo</h3><div class="outline-text-3" id="text-2-24"><ul class="org-ul"><li>State "WAIT/FORWARD" from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2016-08-24 三 11:16] </span></span> <br>私有内容，加入到jekyll之时，慎重。</li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-08-23 二 15:14]</span></span></p><hr><p>mygitrepo with xiaomi center.</p><p>in local pc, <code>quietheart</code> for example:</p><div class="org-src-container"><pre class="src src-sh">$cat .git/config[core]        repositoryformatversion = 0        filemode = true        bare = false        logallrefupdates = true[remote "origin"]        fetch = +refs/heads/*:refs/remotes/origin/*        url = https://vaqeteart@bitbucket.org/vaqeteart/quietheart.git #config for bitbucket        #url = https://github.com/vaqeteart/quietheart.git[remote "xiaomi"]        fetch = +refs/heads/*:refs/remotes/origin/*        url = xiaomi:/userdisk/data/mygitrepo/quietheart #config for xiaomi        #url = https://github.com/vaqeteart/quietheart.git[branch "master"]        remote = origin        merge = refs/heads/master[branch "gh-pages"]        remote = origin        merge = refs/heads/gh-pages</pre></div><p>you do </p><div class="org-src-container"><pre class="src src-sh">$git add .$git commit -m 'xxx'$git push</pre></div><p>then for sync to xiaomi, you can do:</p><div class="org-src-container"><pre class="src src-sh">$git push xiaomi</pre></div><p>or, you can also do on xiaomi:</p><div class="org-src-container"><pre class="src src-sh">$git pull</pre></div></div></div><div id="outline-container-orgheadline37" class="outline-3"><h3 id="orgheadline37"><span class="section-number-3">2.25</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> 考虑将xiaomi做为第一个最新的提交库，而其它库如github,bitbucket等都尽量不要直接使用，而是用xiaomi来更新。</h3><div class="outline-text-3" id="text-2-25"><ul class="org-ul"><li>State "WAIT/FORWARD" from "DONE"       <span class="timestamp-wrapper"><span class="timestamp">[2016-10-19 三 16:56] </span></span> <br>wait for more arrange with configure.</li><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2016-10-19 三 16:56]</span></span></li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-10-19 三 16:36]</span></span></li></ul><p>考虑将所有远端用自编写的类 <code>repo</code> 程序，即 <code>rgits</code> 管理，并且，所有其它项目中的内容远端都设置为 <code>rgits</code> 端，即 <code>xiaomi://xxx</code>, 例如，远端为 <code>bitbucket</code> 的quietheart, 在xiaomi上可以知道是 bitbucket的了，所以本地管理的时候，远端只需要是xiaomi即可，每次都更新xiaomi，偶尔会定期到xiaomi路由上进行reset &#x2013;hard 和 push，使得github或者bitbucket更新。最新的提交都是提交到xiaomi上。</p><pre class="example">//xiaomixxx/quietheart.git/config:origin is bitbucket.//bitbucketxxx.bigbucket/quietheart//localxxx/.git/config:origin is xiaomi,and another remote bitbucket.</pre><p>work:</p><pre class="example">1. local changegit add/commit/push -&gt; to xiaomi2. xiaomi git push -&gt; to bitbucketalso in step1, we can:git push bitbucket -&gt; to bitbucket</pre></div></div><div id="outline-container-orgheadline38" class="outline-3"><h3 id="orgheadline38"><span class="section-number-3">2.26</span> <span class="todo LATER">LATER</span> orgmode的管理策略</h3><div class="outline-text-3" id="text-2-26"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2017-04-07 五 16:10]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2016-12-28 三 10:40]</span></span></p><p>不更新orgmode_with_gtd文档，更新到个人content管理文档中</p><p>状态冠以前缀： <code>1_inbox.org</code>, <code>2_next.org</code>, &#x2026;全都是org文件。</p><p>项目暂时划分为： <code>_work.org</code>, <code>_life.org</code>, <code>_study.org</code>, <code>_others.org</code>, <code>_active.org</code></p></div></div><div id="outline-container-orgheadline39" class="outline-3"><h3 id="orgheadline39"><span class="section-number-3">2.27</span> <span class="todo LATER">LATER</span> 关于data数据越来越大的考虑</h3><div class="outline-text-3" id="text-2-27"><ul class="org-ul"><li>State "LATER"      from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2017-04-07 五 16:11]</span></span></li></ul><p>Capture Time:<span class="timestamp-wrapper"><span class="timestamp">[2017-01-05 四 15:23]</span></span></p><p>orgmode中所有标题的引用文件都用data目录管理。data本身再次使用git管理，并且不是repo方式，而是单一的data目录做为git库。这样会越来越大。</p><p>目前暂无处理，或者临时建立几个子目录。日后可以考虑用软链接方式实现，将所有标题移到特定的目录集合，不同的集合用类似repo方式同一管理数据，并且，会自动建立一个data目录，将所有的子目录软链接到这个data，这个data并不用git管理。</p></div></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;
&amp;#x2014;
layout: posts
title: 内容管理方法
categories: [categories,note]
comments: true
&amp;#x2014;
#+END_HTML
&lt;/p&gt;
&lt;div id=&quot;table-of-contents&quot;&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://0.0.0.0:4000/2015/11/27/gtd_with_orgmode/"/>
    <id>http://0.0.0.0:4000/2015/11/27/gtd_with_orgmode/</id>
    <published>2015-11-26T16:00:00.000Z</published>
    <updated>2019-10-22T08:07:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>&#x2014;layout: poststitle: 使用orgmode进行GTD管理categories: [categories, note]comments: true&#x2014;#+END_HTML</p><div id="table-of-contents"><h2>&#30446;&#24405;</h2><div id="text-table-of-contents"><ul><li><a href="#orgheadline1">1. 任务状态</a></li><li><a href="#orgheadline2">2. 划分文件</a></li><li><a href="#orgheadline3">3. 管理方式:</a><ul><li><a href="#orgheadline4">3.1. 大致思路：</a></li><li><a href="#orgheadline5">3.2. 回顾</a><ul><li><a href="#orgheadline6">3.2.1. 回顾种类</a></li><li><a href="#orgheadline7">3.2.2. 回顾内容：</a></li></ul></li></ul></li><li><a href="#orgheadline8">4. 实现方式</a><ul><li><a href="#orgheadline9">4.1. 实现基本Orgmode任务管理</a><ul><li><a href="#orgheadline10">4.1.1. <span class="todo nilTODO">TODO</span> 标题表示任务</a></li><li><a href="#orgheadline11">4.1.2. 按照实现策略进行配置</a></li><li><a href="#orgheadline12">4.1.3. 常用操作</a></li></ul></li><li><a href="#orgheadline13">4.2. 交叉引用</a></li><li><a href="#orgheadline14">4.3. 设置优先级别</a><ul><li><a href="#orgheadline15">4.3.1. 可采用四象限法则，将事情按照重要和紧急两个不同的程度进行划分，分为四个“象限”。</a></li><li><a href="#orgheadline16">4.3.2. 设置优先级</a></li><li><a href="#orgheadline17">4.3.3. 切换优先级</a></li></ul></li><li><a href="#orgheadline18">4.4. Capture-Refile-Archive</a><ul><li><a href="#orgheadline19">4.4.1. 概念</a></li><li><a href="#orgheadline20">4.4.2. 配置</a></li><li><a href="#orgheadline21">4.4.3. 操作</a></li></ul></li><li><a href="#orgheadline22">4.5. 归档</a><ul><li><a href="#orgheadline23">4.5.1. 配置归档位置和归档后附带信息</a></li><li><a href="#orgheadline24">4.5.2. 归档命令</a></li><li><a href="#orgheadline25">4.5.3. 举例</a></li></ul></li><li><a href="#orgheadline26">4.6. 便于整理周报的记录技巧</a></li><li><a href="#orgheadline27">4.7. orgmode与mobile org整合</a><ul><li><a href="#orgheadline28">4.7.1. 配置</a></li><li><a href="#orgheadline29">4.7.2. 原理</a></li><li><a href="#orgheadline30">4.7.3. 同步操作</a></li><li><a href="#orgheadline31">4.7.4. 使用举例</a></li><li><a href="#orgheadline32">4.7.5. 其它</a></li></ul></li></ul></li><li><a href="#orgheadline33">5. <span class="todo nilWAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[8/11]</code>(<code>[72%]</code>)</a><ul><li><a href="#orgheadline34">5.1. <span class="done nilDONE">DONE</span> 如何划分任务状态以及存放的文件？</a></li><li><a href="#orgheadline35">5.2. <span class="done nilDONE">DONE</span> 如何实现任务管理的基本管理？</a></li><li><a href="#orgheadline36">5.3. <span class="done nilDONE">DONE</span> 如何设置交叉引用?</a></li><li><a href="#orgheadline37">5.4. <span class="done nilDONE">DONE</span> 如何设置优先级别?</a></li><li><a href="#orgheadline38">5.5. <span class="done nilDONE">DONE</span> 如何迅速捕获临时产生的任务，以及将各个任务标题在状态文件中进行转移？</a></li><li><a href="#orgheadline39">5.6. <span class="done nilDONE">DONE</span> 如何设置归档?</a></li><li><a href="#orgheadline40">5.7. <span class="done nilDONE">DONE</span> 便于整理周回顾?</a></li><li><a href="#orgheadline41">5.8. <span class="done nilDONE">DONE</span> 如何将PC与移动端的orgmode整合?</a></li><li><a href="#orgheadline42">5.9. <span class="todo nilLATER">LATER</span> 杂乱问题</a></li><li><a href="#orgheadline43">5.10. <span class="todo nilNEXT">NEXT</span> 改善归档与done/cancel策略</a></li><li><a href="#orgheadline44">5.11. <span class="todo nilNEXT">NEXT</span> 改善refile的配置方式</a></li></ul></li></ul></div></div><p>这里给出采用orgmode进行gtd管理的策略。</p><pre class="example">注：orgmode工作目录说明文件(orgmode/gtd/readme.org)即此文的副本,此文定期更新同步到orgmode工作目录的说明文件。</pre><div id="outline-container-orgheadline1" class="outline-2"><h2 id="orgheadline1"><a id="ID-d9cb9aee-183f-4ff1-a54c-5e0ee730d7bd"></a><span class="section-number-2">1</span> 任务状态</h2><div class="outline-text-2" id="text-1"><p>状态含义同一般GTD系统，这里先不做深入介绍。主要设置如下任务状态：</p><dl class="org-dl"><dt>INBOX</dt><dd>任何未经处理的任务。</dd><dt>NEXT</dt><dd>正在处理的任务。</dd><dt>LATER</dt><dd>被暂缓延迟的任务。</dd><dt>WAIT/FORWARD</dt><dd>等待能够继续处理的条件。</dd><dt>MAYBE/FUTURE</dt><dd>可能会处理，可能不处理的任务。</dd><dt>CANCEL</dt><dd>被取消的任务。</dd><dt>DONE</dt><dd>已完成的任务。</dd></dl></div></div><div id="outline-container-orgheadline2" class="outline-2"><h2 id="orgheadline2"><a id="ID-b12234fe-8e89-4eb0-bbf9-912a4df82c15"></a><span class="section-number-2">2</span> 划分文件</h2><div class="outline-text-2" id="text-2"><p>主要设置如下目录和文件来存放数据：</p><dl class="org-dl"><dt>inbox.org</dt><dd><p>整个体系的输入，产生的任何任务、灵感、想法都会通过快速捕捉命令（例如 <code>C-c c</code> ）默认收集到这里。</p><p>单个文件，因为进入其中的任务迟早会被清空，不会积累。这里的内容是最原始的、迅速捕捉到的内容，待处理，甚至都没有任务状态关键字。每次回顾后，这里的内容要么被移动到相应位置，要么被直接处理，要么归档。</p></dd><dt>next.org</dt><dd><p>这里内容主要存放当前处理的任务。</p><p>单个文件，因为进入其中的任务迟早会被清空，不会积累。处理任务之时，集中在next.org中进行处理，处理之时相应的任务可能会被切换成各种状态，每次经过定期回顾处理后，这个文件其它状态的内容被移动到合适的位置，导致仅包含 <code>NEXT</code> 状态的任务。</p></dd><dt>later.org</dt><dd><p>这里的内容存放 <code>LATER</code> 状态的任务。</p><p>单个文件，因为进入其中的任务迟早会被清空，不会积累。每次回顾之后，可能会有一些新的任务切换成 <code>LATER</code> 状态并进入这个文件；也可能有一些任务被切换至其它状态并移出到对应文件。</p></dd><dt>wait_forward.org</dt><dd><p>这里的内容存放 <code>WAIT/FORWARD</code> 状态的任务。</p><p>单个文件，因为进入其中的任务迟早会被清空，不会积累。每次回顾之后，可能会有一些新的任务切换成 <code>WAIT/FORWARD</code> 状态并进入其中；也可能有一些任务被切换至其它状态并移出这里到对应目录。</p></dd><dt>maybe_future.org</dt><dd><p>这里的内容存放 <code>MAYBE/FUTURE</code> 状态的任务。</p><p>建议为目录，因为其中内容可能会积累。每次回顾之后，可能会有一些新的任务被切换成 <code>MAYBE/FUTURE</code> 状态并进入其中；也可能有一些任务被切换至其它状态并移出这里到对应目录。</p></dd><dt>cancel.org</dt><dd><p>这里的内容存放 <code>CANCEL</code> 状态的任务。</p><p>建议为目录，其中内容可能会积累。每次回顾之后，可能会有一些新的任务切换成 <code>CANCEL</code> 状态并进入其中；也可能有一些任务被切换至其它状态并移出这里到对应目录。</p></dd><dt>done.org</dt><dd><p>这里的内容存放 <code>DONE</code> 状态的任务。</p><p>建议为目录，其中内容可能会积累。每次回顾之后，可能会有一些新的任务切换成 <code>DONE</code> 状态并进入其中；也可能有一些任务被移至其他回顾目录、归档目录、或者加入特定关联信息等。</p></dd><dt>output</dt><dd><p>将处理好的任务转化为文档的地方。</p><p>建议为目录，其中内容可能会积累。主要存放将要整理成笔记的内容，整理好的内容存放到这里，在合适的时候（如回顾之时）会被转移至其它笔记系统；另外为了借助orgmode环境方便集中访问和refile，有些草稿性质的文档，也可为之做成一个软链接，将软链接放在这里，源文档仍在其初始目录。</p></dd><dt>_review</dt><dd><p>存放与任务关联的项目。</p><p>建议为目录，其中内容可能会积累。主要存放之前整理过的、或者不活跃的回顾项目。项目其实是对任务的一种“分类”，每个项目包含多个任务，由gtd系统管理，回顾之时会将相关联的任务组织整理，将其概要信息归结为一条项目，存放在这里。</p></dd><dt>_active</dt><dd><p>存放与任务关联的当前活跃项目。</p><p>建议为目录，其中内容可能会积累。主要存放当前正在整理或者进行的、或者活跃的回顾项目。项目条目的含义同上，是多个相关联的任务的概要索引，便于日后查找参考等，也使得整个gtd中被处理的任务更为有序。</p></dd><dt>_archive</dt><dd><p>归档已完成任务。</p><p>建议为目录，其中内容可能会积累。主要将一些任务归档，减少Agenda视图的冗余，以及备份，具体依实际情况待定。</p></dd></dl></div></div><div id="outline-container-orgheadline3" class="outline-2"><h2 id="orgheadline3"><a id="ID-0c3b1560-a649-4d5a-b914-c6ddd1b43c36"></a><span class="section-number-2">3</span> 管理方式:</h2><div class="outline-text-2" id="text-3"></div><div id="outline-container-orgheadline4" class="outline-3"><h3 id="orgheadline4"><span class="section-number-3">3.1</span> 大致思路：</h3><div class="outline-text-3" id="text-3-1"><dl class="org-dl"><dt>两种划分状态的方式</dt><dd><p>任务的状态既通过其所在的 <b>状态文件名</b> 表示，也通过 <b>TODO关键字标记</b> 表示。</p><p>两种“划分”得到的状态含义大致相同，并且一一对应。</p></dd><dt>回顾阶段与处理阶段</dt><dd><p>为方便信息检索，以及避免信息重复，采用“分阶段”（处理阶段和回顾阶段）方式管理。</p><p>虽然我们划分任务状态的采用的文件名和TODO状态标记两种方式，通过如下方式对处理阶段划分，并不会造成混乱。</p><dl class="org-dl"><dt>处理阶段</dt><dd>在任务处理时进行，将任务切换至合适的TODO关键字标记。</dd><dt>回顾阶段</dt><dd>在系统回顾时进行，将相关TODO关键字标记的任务转移到对应的状态文件中集中存放。</dd></dl></dd></dl></div></div><div id="outline-container-orgheadline5" class="outline-3"><h3 id="orgheadline5"><a id="ID-8d821c98-4d17-4bf3-a5e1-c08916eefbc6"></a><span class="section-number-3">3.2</span> 回顾</h3><div class="outline-text-3" id="text-3-2"></div><div id="outline-container-orgheadline6" class="outline-4"><h4 id="orgheadline6"><span class="section-number-4">3.2.1</span> 回顾种类</h4><div class="outline-text-4" id="text-3-2-1"><dl class="org-dl"><dt>短期回顾</dt><dd><p>比较频繁的，例如“日”回顾，主要用来清理inbox中的内容，以及切换状态。</p><p>对于inbox状态文件，将其中的任务和内容切换到合适状态并refile；对于其它文件的任务，只需切换其状态即可；为简化频繁的文件操作，操作可在orgmode的agenda view下进行。</p></dd><dt>中期回顾</dt><dd><p>根据项目情况定期的，例如“周”回顾，主要用来梳理当前任务的状态和关系。</p><p>主要涉及对任务的refile，以及文档生成等。</p></dd><dt>长期回顾</dt><dd>便于总结复习整理的，例如“月”、“年”回顾，主要用来梳理任务状态、复习曾经整理的内容、归档等等。</dd></dl></div></div><div id="outline-container-orgheadline7" class="outline-4"><h4 id="orgheadline7"><span class="section-number-4">3.2.2</span> 回顾内容：</h4><div class="outline-text-4" id="text-3-2-2"></div><div id="outline-container-orgheadline45" class="outline-5"><h5 id="orgheadline45"><span class="section-number-5">3.2.2.1</span> 短期回顾</h5><div class="outline-text-5" id="text-3-2-2-1"><p>在"短期回顾"中，定期处理inbox中的内容使得收集状态的内容及时被处理。根据情况，可能有如下类型：</p><dl class="org-dl"><dt>立即处理</dt><dd>一般处理过程仅需1-2分钟，直接处理完，让其归结为done状态。</dd><dt>做为任务处理</dt><dd>转移到对应的gtd任务状态中开始对其进行gtd管理，如果任务复杂，可考虑为其创建项目（回顾）来管理相关任务。</dd><dt>不需要处理</dt><dd>直接删除。</dd><dt>归档与笔记</dt><dd>从gtd输出（例如到out目录），或直接转移到对应的笔记系统。</dd></dl><p>对其他状态任务的处理，只需切换相应任务状态，直接在orgmode中的AgendaView中进行可以避免频繁的文件切换。</p></div></div><div id="outline-container-orgheadline46" class="outline-5"><h5 id="orgheadline46"><span class="section-number-5">3.2.2.2</span> 中期回顾</h5><div class="outline-text-5" id="text-3-2-2-2"><p>在"周"回顾中，梳理各种任务状态中的内容，将相关的内容关联起来，将相应的状态内容移动到对应的文件等等。处理方式类似对于inbox的处理，可能有如下类型：</p><dl class="org-dl"><dt>立即处理</dt><dd>将已完成的任务梳理，并且从其它文件中移动到"done"，需要添加项目回顾关联的，则添加相应的关联信息。</dd><dt>做为任务处理</dt><dd>没有完成的任务，视情况将其放置到合适的状态和位置，必要时可能会追加更详细的任务属性（如优先级、截止日期、重复间隔等等）。</dd><dt>不需要处理</dt><dd>将不需要继续进行的任务，放置到cancel状态中，将其取消。</dd><dt>归档与笔记</dt><dd>将一些有必要归档的内容归档（减少agenda的负担），以及将特定内容移动到特定的笔记系统（内容管理）。</dd></dl></div></div></div></div></div><div id="outline-container-orgheadline8" class="outline-2"><h2 id="orgheadline8"><span class="section-number-2">4</span> 实现方式</h2><div class="outline-text-2" id="text-4"><p>下面给出实现上述管理主要需要注意的几个部分。</p></div><div id="outline-container-orgheadline9" class="outline-3"><h3 id="orgheadline9"><a id="ID-2d674513-e8de-4e33-8d44-95296d9c18f0"></a><span class="section-number-3">4.1</span> 实现基本Orgmode任务管理</h3><div class="outline-text-3" id="text-4-1"></div><div id="outline-container-orgheadline10" class="outline-4"><h4 id="orgheadline10"><span class="section-number-4">4.1.1</span> <span class="todo TODO">TODO</span> 标题表示任务</h4><div class="outline-text-4" id="text-4-1-1"><dl class="org-dl"><dt>TODO标题是一种包含状态的特殊标题</dt><dd><p>在标题标记后面加上相应状态名，便成为TODO项目。状态默认为TODO和DONE，可以自行配置。</p><pre class="example">* TODO 这是一个TODO项目** TODO 这是TODO的子项目</pre></dd><dt>带有统计子项目的TODO项目</dt><dd><p>在一个待办标题中添加子待办标题，然后在待办标题中添加 <code>[%]</code> 或者 <code>[%]</code> 。 每当子标题更新时，父标题上面的相应比例会自动统计变化，如果强制刷新，则在父标题相应的比例标记上输入 <code>C-c C-c</code> 。</p><pre class="example">* TODO 这是一个统计子项的TODO项目 [0/2]** TODO 这是TODO的子项目1** TODO 这是TODO的子项目2</pre><p>当然这样也行：</p><pre class="example">* TODO 这是一个统计子项的TODO项目 [0/2] ([0%])** TODO 这是TODO的子项目1** TODO 这是TODO的子项目2</pre></dd></dl></div></div><div id="outline-container-orgheadline11" class="outline-4"><h4 id="orgheadline11"><span class="section-number-4">4.1.2</span> 按照实现策略进行配置</h4><div class="outline-text-4" id="text-4-1-2"><ul class="org-ul"><li><p>增加TODO状态在配置文件中加入类似如下代码：</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;set status for TODO.(setq org-todo-keywords     '((sequence "INBOX" "NEXT" "LATER" "WAIT/FORWARD" "MAYBE/FUTURE" "|" "CANCEL" "DONE")))</pre></div></li><li><p>配置状态颜色通过org-todo-keyword-faces的设置实现，添加内容如下</p><div class="org-src-container"><pre class="src src-emacs-lisp">;; color for todo keywords(setq org-todo-keyword-faces '(("INBOX" . (:foreground "blue" :weight bold)) ("NEXT" . org-warning)("LATER" . "yellow")("WAIT/FORWARD" . "blue")("MAYBE/FUTURE" . "purple")("DONE" . "green")("CANCEL" . "grey")))</pre></div></li><li><p>配置状态快捷切换键通过定义状态时将快捷按键放在状态后面，用‘（）’括起来，添加内容如下：</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;set status for TODO.(setq org-todo-keywords '((sequence                          "INBOX"                         "NEXT(n)"                         "LATER(l)"                         "WAIT/FORWARD(w)"                         "MAYBE/FUTURE(m)"                         "|" "CANCEL(c)" "DONE(d)"                         )) )</pre></div></li><li><p>配置状态切换的跟踪时间戳当TODO列表切换到结束状态时，会自动为其添加一个结束时候的时间戳（转变为非结束状态时会将其移除）。</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;add timestamp when todo change to done.(setq org-log-done 'time)</pre></div></li></ul></div></div><div id="outline-container-orgheadline12" class="outline-4"><h4 id="orgheadline12"><span class="section-number-4">4.1.3</span> 常用操作</h4><div class="outline-text-4" id="text-4-1-3"><p>TODO项目相关操作：</p><ul class="org-ul"><li><code>M-S-Ret</code> 当前位置插入TODO项目，默认状态和上一条统计TODO状态一样</li><li><code>C-S-Ret</code> 当前级别子树后面插入TODO项目</li><li><code>C-c C-t</code> 当前所在TODO项目状态切换(不一定要在TODO标题上面)</li></ul><p>默认状态下，循环切换次序是TODO-&gt;Done-&gt;普通标题（只有*）。</p><ul class="org-ul"><li><code>S-RIGHT/S-LEFT</code> 当前所处TODO标题上进行状态切换，默认状态下，循环切换次序是：TODO-&gt;DONE-&gt;普通标题</li><li><code>C-c</code> , 修改优先级（包括A,B,C三个级别，不一定在TODO标题上面）</li><li><code>S-UP/S-DOWN</code> 切换优先级，默认次序是A-&gt;B-&gt;C-&gt;无。</li><li><code>C-u C-c C-t</code> 快捷切换状态，输入后会提示你要输入的状态，可以支持Tab补全，可以用快捷按键替代。</li><li id="刷新子项目完成情况统计">光标停留在 <code>[%]</code> 或者 <code>[%]</code> 之上，输入 <code>C-c C-c</code></li></ul></div></div></div><div id="outline-container-orgheadline13" class="outline-3"><h3 id="orgheadline13"><a id="ID-47112c75-8f88-4bc4-8a4e-ab596d340d2f"></a><span class="section-number-3">4.2</span> 交叉引用</h3><div class="outline-text-3" id="text-4-2"><p>因任务可能会在不同的文件与标题间迁移，所以需要为每一条目采用与文件与位置无关的id，即采用全局唯一id链接的方式实现交叉引用。</p><ol class="org-ol"><li><p>首先配置全局链接</p><p>类似如下：</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;Settings for global id link.(require 'org-id)(setq org-id-link-to-org-use-id t)</pre></div></li><li><p>为被引用标题创建全局链接id保存链接内容的同时也创建了相应的链接。当然，这需要事先配置好保存链接快捷键</p><div class="org-src-container"><pre class="src src-emacs-lisp">(global-set-key "\C-cl" 'org-store-link)</pre></div><p>输入 <code>C-c l</code> 之后便创建好了相应的全局链接，类似如下：</p><pre class="example">* 子树标题   :PROPERTIES: :ID:       60b13787-86e8-43a3-9a33-73d3eb7e6f58 :END:</pre></li><li><p>引用链接像正常插入链接一样，输入 <code>C-c C-l</code> 即可，默认插入最近一次保存的链接。</p><p>引用的格式举例 </p><pre class="example">[[id:60b13787-86e8-43a3-9a33-73d3eb7e6f58][子树标题]]</pre></li></ol></div></div><div id="outline-container-orgheadline14" class="outline-3"><h3 id="orgheadline14"><a id="ID-8d069a29-a8c1-440b-bfa5-5f1faad9accc"></a><span class="section-number-3">4.3</span> 设置优先级别</h3><div class="outline-text-3" id="text-4-3"></div><div id="outline-container-orgheadline15" class="outline-4"><h4 id="orgheadline15"><span class="section-number-4">4.3.1</span> 可采用四象限法则，将事情按照重要和紧急两个不同的程度进行划分，分为四个“象限”。</h4><div class="outline-text-4" id="text-4-3-1"><dl class="org-dl"><dt>第一象限</dt><dd><p>重要但不紧急的事。</p><p>法则重点，这才是最需要做的事。需要制定计划，按时完成。可以让你进入良性循环的做法！</p></dd><dt>第二象限</dt><dd><p>重要并紧急的事。</p><p>需要优先解决，这也是没有计划的做法，无休止地一直在“瞎忙”。</p></dd><dt>第三象限</dt><dd><p>不重要但紧急的事。</p><p>会让我们产生“这事很重要”的错觉。实际上就算重要也是对别人而言。我们花很多时间在这个里面打转。自以为是在第一象限，其实不过是在满足 别人的期望与标准。</p></dd><dt>第四象限</dt><dd><p>不紧急也不重要的事。</p><p>浪费时间，或者完全对自己完全无意义的事。如果有可能，交给别人去做。</p></dd></dl><p>我们把事项进行一些梳理，就会清楚自己的时间和精力主要应该用在什么地方了。</p></div></div><div id="outline-container-orgheadline16" class="outline-4"><h4 id="orgheadline16"><span class="section-number-4">4.3.2</span> 设置优先级</h4><div class="outline-text-4" id="text-4-3-2"><p>通过如下方式：</p><div class="org-src-container"><pre class="src src-elisp">;;set priority(setq org-highest-priority ?A)(setq org-lowest-priority ?D)(setq org-default-priority ?A)(setq org-priority-faces '(                           (?A . org-warning)                           (?B . (:background "DodgerBlue" :foreground "black" :weight bold))                            (?C . (:foreground "SkyBlue" :weight bold))                           (?D . (:foreground "DodgerBlue" :weight bold))                            ))</pre></div></div></div><div id="outline-container-orgheadline17" class="outline-4"><h4 id="orgheadline17"><span class="section-number-4">4.3.3</span> 切换优先级</h4><div class="outline-text-4" id="text-4-3-3"><p>在标题上输入 <code>S-&lt;up&gt;/&lt;down&gt;</code> </p><p>5w1h分析</p></div></div></div><div id="outline-container-orgheadline18" class="outline-3"><h3 id="orgheadline18"><a id="ID-ac3797e8-b3ec-41de-bf6b-79f3cfbb636d"></a><span class="section-number-3">4.4</span> Capture-Refile-Archive</h3><div class="outline-text-3" id="text-4-4"></div><div id="outline-container-orgheadline19" class="outline-4"><h4 id="orgheadline19"><span class="section-number-4">4.4.1</span> 概念</h4><div class="outline-text-4" id="text-4-4-1"><p>Capture用来迅速收集一些临时产生的想法，尽可能少的打断当前的工作状态。通过指定好快捷方式和相应的Capture目标位置后，在任意时间运行捕获命令会将这些临时的记录存放在一个指定的位置，空闲之时再做进一步整理。</p><p>Refile以特定的命令，用来将之前Capture的内容直接转移到特定的地方，避免了手动剪切（复制）和粘帖。</p></div></div><div id="outline-container-orgheadline20" class="outline-4"><h4 id="orgheadline20"><span class="section-number-4">4.4.2</span> 配置</h4><div class="outline-text-4" id="text-4-4-2"></div><div id="outline-container-orgheadline47" class="outline-5"><h5 id="orgheadline47"><span class="section-number-5">4.4.2.1</span> Capture的配置</h5><div class="outline-text-5" id="text-4-4-2-1"><p>不同的管理方式可能会导致不同的配置，但是一般都包含两个方面：首先设置好一个启动Capture的快捷方式，再配置用于存储Capture信息的目的地。这里以gtd管理为例给出一个配置例子：</p><pre class="example">;;Setting for gtd captures;;Directory for capture files.(setq org-directory "~/mydata/orgmode/");;Default capture files.(setq org-default-notes-file (concat org-directory "gtd/inbox.org"));;Capture template(setq org-capture-templates '(      ("t" "Tasks" entry (file+headline "gtd/inbox.org" "Tasks") "* INBOX %?\nTime:%T\nFrom:%F\n")      ("p" "Projects" entry (file+headline "gtd/inbox.org" "Projects")  "* %?\nTime:%U\nFrom:%F\n")      ("i" "Item notes" item (file+headline "gtd/inbox.org" "Items")  "+ %?\n  Time:%U\n  From:%F\n")      ("m" "Misc notes" plain (file+headline "misc.org" "Notes")  "-----------------------------------------------------\nTime:%U\n %?")     )) ;;set tags;;where?(h/o/w),what?(c/l/s),when?(gtd|immeiately,wait,action),who?(my gtd,others),why?how?(delete/archieve/schedule)(setq org-tag-alist '(                    (:startgroup . nil)                         ("home" . ?r) ("office" . ?o) ("way" . ?w)                    (:endgroup . nil)                    ("职业" . ?c)                    ("生活" . ?l)                     ("学习" . ?s)                    ))</pre></div></div><div id="outline-container-orgheadline48" class="outline-5"><h5 id="orgheadline48"><span class="section-number-5">4.4.2.2</span> Refile的配置</h5><div class="outline-text-5" id="text-4-4-2-2"><p>主要配置两个方面的内容：Refile的目标（org-refile-targets），以及Refile时选择目标的策略(org-refile-use-outline-path会自动补全文件名以及标题，目标的格式类似文件路径的格式，包含文件和标题)。org-refile-targets对应的可以是路径可以是列表，具体参考其中的文档，需要注意的是：</p><dl class="org-dl"><dt>如果是列表</dt><dd>该变量中的文件路径需要是全路径；文件中需要有一个标题才能在做 <code>C-c C-w</code> 补全的时候显示出来，空文件不行。</dd><dt>如果是一个文件路径</dt><dd>如果org-refile-targets是一个文件，则：这个文件可以是一个文件列表，使用这个列表的文件做为refile目标; 每个文件项占一行（不要有""），文件项可以是对于org-directory的相对路径; 这样文件内容变化之后，不用重新载入配置也能在 <code>C-c C-w</code> 中显示出新增的文件; 如果有一项是文件目录，那么不要再次包含该目录下的文件，因为这样会在agenda view中导致重复显示。</dd></dl><div class="org-src-container"><pre class="src src-emacs-lisp">;;targets for refile(setq org-refile-targets (quote (                                 (nil :maxlevel . 9)                                 (org-agenda-files :maxlevel . 9)                                )                         ));;outline path for refile(setq org-refile-use-outline-path 'full-file-path);;org-outline-path-complete-in-steps(setq org-outline-path-complete-in-steps t);;create new parents while refile(setq org-refile-allow-creating-parent-nodes 'confirm)</pre></div></div></div></div><div id="outline-container-orgheadline21" class="outline-4"><h4 id="orgheadline21"><span class="section-number-4">4.4.3</span> 操作</h4><div class="outline-text-4" id="text-4-4-3"><p>基于以上配置，我们可以操作如下：</p><ul class="org-ul"><li>启动Capture输入 <code>C-c c</code>输入之后会提示选择捕获何种类型的信息，提示信息和选择命令取决于之前设置的配置变量 <code>org-capture-templates</code> 。</li><li>选择将待捕获的信息存于"Tasks"标题之下输入 <code>t</code>具体如何输入取决之前的配置如何，这里输入之后会打开一个Capture Buffer，用于输入将要被记录的信息，其中按照预先配置好的模板，已经预先插入了一些基本信息（如时间、捕获信息时所处位置等等）。</li><li>完成Capture输入 <code>C-c C-c</code>输入之后，会将buffer中相应的信息插入到之前配置好的位置（例如某个文件中的某个标题之下），然后回到之前被中断的工作状态。</li><li>取消Capture输入 <code>C-c C-k</code>取消捕获的动作，回到之前被中断的工作状态。</li><li>访问存放Capture的文件Buffer输入 <code>C-u C-c c</code>输入之后，会提示和 <code>C-c c</code> 一样的信息，选择相应的捕获类型后，会直接打开相关的文件，具体是何文件，取决于事先设置的信息。</li><li>访问上次捕获所处的文件Buffer输入 <code>C-u C-u C-c c</code>类似前面，捕获访问的是记录上次捕获的文件Buffer，并自动定位到其中上次捕获的信息之上。</li><li>以剪切方式Refile输入 <code>C-c C-w</code>输入之后，会提示Refile的目标位置（在org-agenda-files中列出），支持Tab补全，选择好相应的文件之后，可以继续将文件内的标题也类似路径的方式输入（也支持TAB补全），选择好之后，回车会将相应的内容移动到对应的目标位置。注意：移动的内容可以是用Mark方式选择的区域，或者当前光标所在的子树，在执行 <code>C-c C-w</code> 之后有提示。</li><li>以复制方式Refile输入 <code>C-c M-w</code>输入之后，会提示Refile的目标位置（在org-agenda-files中列出），支持Tab补全，选择好相应的文件之后，可以继续将文件内的标题也类似路径的方式输入（也支持TAB补全），选择好之后，回车会将相应的内容复制到对应的目标位置。注意：复制的内容可以是用Mark方式选择的区域，或者当前光标所在的子树，在执行 <code>C-c C-w</code> 之后有提示。</li><li>访问Refile的目标对应Buffer输入 <code>C-u C-c C-w</code>输入之后，会提示和 <code>C-c C-w</code> 一样的信息，选择相应的位置后，会直接打开相关的文件。</li><li>访问上次Refile所处的文件Buffer输入 <code>C-u C-u C-c C-w</code>类似前面，访问的是记录上次Refile的文件Buffer，并自动定位到上次Refile目标的信息之上。</li></ul></div></div></div><div id="outline-container-orgheadline22" class="outline-3"><h3 id="orgheadline22"><a id="ID-feb83282-6a52-4123-81fc-8ab19a5978e2"></a><span class="section-number-3">4.5</span> 归档</h3><div class="outline-text-3" id="text-4-5"><p>具体配置方式可以参见： <code>C-h v org-archive-default-command</code>, <code>C-h v org-archive-location</code>, <code>C-h v org-archive-save-context-info</code></p></div><div id="outline-container-orgheadline23" class="outline-4"><h4 id="orgheadline23"><span class="section-number-4">4.5.1</span> 配置归档位置和归档后附带信息</h4><div class="outline-text-4" id="text-4-5-1"><p>将内容根据“年-月-日-包含文件名的标题-被归档的标题”的层次，归档在指定的_archive/session&lt;年月&gt;_archive.org文件中，归档之后，被归档节点属性包含：时间、文件、标签、todo状态、分类、节点在归档前的路径等信息。</p><div class="org-src-container"><pre class="src src-elisp">;;location for archive(setq org-archive-location (concat org-directory "gtd/_archive/" (format-time-string "%Y%m") "_archive.org::datetree/* Archive from %s"));;information added to property when a subtree is moved(setq org-archive-save-context-info '(time file ltags itags todo category olpath))</pre></div><p>注意，以上归档文件名为类似 <code>session201511_archive.org</code> ，这里的时间应该是启动Emacs会话的时间并非归档操作的时间。</p></div></div><div id="outline-container-orgheadline24" class="outline-4"><h4 id="orgheadline24"><span class="section-number-4">4.5.2</span> 归档命令</h4><div class="outline-text-4" id="text-4-5-2"><p>输入 <code>C-c C-x C-s</code></p></div></div><div id="outline-container-orgheadline25" class="outline-4"><h4 id="orgheadline25"><span class="section-number-4">4.5.3</span> 举例</h4><div class="outline-text-4" id="text-4-5-3"><p>如上配置之后，例如</p><pre class="example">*Title1**DONE sub title1 CLOSED: [2015-11-27 五 14:17]- State "DONE"       from              [2015-11-27 五 14:17]***subsub title1****DONE subsubsub title1CLOSED: [2015-11-27 五 14:18]- State "DONE"       from              [2015-11-27 五 14:18]****subsubsub title2****subsubsub title3***subsub title2**sub title2</pre><p>注意以上格式中，标题前面应该和'*' 之间有一个空格。执行 <code>C-c C-x C-s</code> 之后，会在相应路径生成一个201510_archive.org文件，追加了如下内容：</p><pre class="example">*2015**2015-11 十一月***2015-11-27 星期五****Archive from orgmodetest.org*****DONE subsubsub title1CLOSED: [2015-11-27 五 14:18]:PROPERTIES::ARCHIVE_TIME: 2015-11-27 五 14:23:ARCHIVE_FILE: ~/test/emacs/orgmodetest.org:ARCHIVE_TODO: DONE:ARCHIVE_CATEGORY: orgmodetest:ARCHIVE_OLPATH: Title1/sub title1/subsub title1:END:- State "DONE"       from              [2015-11-27 五 14:18]</pre></div></div></div><div id="outline-container-orgheadline26" class="outline-3"><h3 id="orgheadline26"><a id="ID-ef89e6de-7e65-4aec-b99f-55ae6adba1bb"></a><span class="section-number-3">4.6</span> 便于整理周报的记录技巧</h3><div class="outline-text-3" id="text-4-6"><ul class="org-ul"><li>按照时间列出处理情况</li></ul><p>为便于整理工作周报，可以将每天的记录工作首先按日期时间在每个TODO项目上创建子标题。每个子标题下记录详细工作日记日志。</p><p>例如：</p><pre class="example">*[2015-10-30 五 09:43] xxxxxx</pre><p>如果需要在agenda中列出时间，那么使用激活的时间戳即可。标题尽量简单叙述当前的工作情况。写周报的时候只看这个地方就行了。</p><p>另外，每个TODO任务中如果设置了状态切换的日志，这样可能会和处理进度的子标题有些意义冲突，目前对此不做过多考虑，不会在状态切换日志中记录过多信息，并且状态切换日志仅在wait和cancel中记录。</p><p>经过以上方式之后，做周报时，大致可以按照每个TODO项的日期时间标题来进行搜集。</p></div></div><div id="outline-container-orgheadline27" class="outline-3"><h3 id="orgheadline27"><a id="ID-7bbee725-6c9a-443d-8d85-c85e8cca6075"></a><span class="section-number-3">4.7</span> orgmode与mobile org整合</h3><div class="outline-text-3" id="text-4-7"><p>MobileOrg是Mobile端的一个应用程序，运行在Android（也有IOS的MobileOrg）;Org是PC端Emacs的一个插件应用，对应其Orgmode模式。</p><p>对其具体操作方式在orgmode的文档中有专门的介绍，并且不断更新，这里讲述相对固定的管理方式方面的内容。描述如何用Org创建可以通过MobileOrg显示的文档格式，以及如何将Mobile端的MobileOrg中修改和捕获的笔记，集成到PC端的“主” Org mode系统中（即Org与MobileOrg的同步），不涉及Agenda相关的操作。</p></div><div id="outline-container-orgheadline28" class="outline-4"><h4 id="orgheadline28"><span class="section-number-4">4.7.1</span> 配置</h4><div class="outline-text-4" id="text-4-7-1"><p>为了在MobileOrg中能够修改tags和TODO状态，你应该在PC端设置好自定义变量： <code>org-todo-keywords</code> 和 <code>org-tag-alist</code> ，使它们包含所有需要修改的重要的tags和TODO keywords，哪怕每个文件只使用其中的部分内容。MobileOrg也能通过in-buffer settings来为你提供TODO和tags设置，但是它只能读懂这些变量中的那些设置好的TODO状态集合以及tags。</p><p>假设我们想要使PC上的Org与移动设备上的MobileOrg保持内容同步（底层通过git机制，也可以是云存储、ssh、ftp等机制）。这里给出为实现这个目的，在PC需要做的配置工作(移动端的MobileOrg做为辅助工具，其配置和操作非常简单，在适当的时候会提及)。</p></div><div id="outline-container-orgheadline49" class="outline-5"><h5 id="orgheadline49"><span class="section-number-5">4.7.1.1</span> 在PC上添加使用MobileOrg的emacs配置</h5><div class="outline-text-5" id="text-4-7-1-1"><p>主要包括对Emacs中org-mode模块的加载以及与MobileOrg同步的路径。例如:</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;Sync with mobileorg(require 'org-mobile);;mobile stage(setq org-mobile-directory "/home/miracle/mygitrepo/pocket/MobileOrg")</pre></div><p>另外，可以通过 <code>org-mobile-encryption-password</code> 设置加密方面的内容。<br>在后面我们可知，在PC上的orgmode中有特定的命令将相关内容推送到这个目录中。</p></div></div><div id="outline-container-orgheadline53" class="outline-5"><h5 id="orgheadline53"><span class="section-number-5">4.7.1.2</span> 在PC上添加同步orgmode和MobileOrg的emacs配置</h5><div class="outline-text-5" id="text-4-7-1-2"><p>主要包括PC端和MobileOrg端状态与标记的设置，PC上被推送orgmode内容的源文件路径，以及PC上接收MobileOrg修改的缓存路径设置。</p></div><ol class="org-ol"><li><a id="orgheadline50"></a>为被推送文件定义只属于该文件的状态和标记<br><div class="outline-text-6" id="text-4-7-1-2-1"><p>被推送的文件可使用文件选项定义相关的状态和标签（实践发现不用定义文件的状态和标签也行），定义内容最好和PC上的相关状态变量(即 <code>setq org-todo-keywords</code> )一致，或者是其子集。如果使用文件定义状态，那么可以将用于push到MobileOrg的文件中的状态设置选项如下：</p><pre class="example">#+TODO: INBOX(i!) NEXT(n!) LATER(l!) WAIT/FORWARD(w@/!) MAYBE/FUTURE(m!) | CANCEL(c!) DONE(d!)</pre><p>标记的设置类似。</p></div></li><li><a id="orgheadline51"></a>设置状态关键字和被推送至MobileOrg的文件列表路径<br><div class="outline-text-6" id="text-4-7-1-2-2"><p>如下</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;set status for TODO.(setq org-todo-keywords '((sequence "INBOX(i!)""NEXT(n!)""LATER(l!)""WAIT/FORWARD(w@/!)""MAYBE/FUTURE(m!)""|" "CANCEL(c!)" "DONE(d!)")))   ;;mobile push(setq org-mobile-files (list (concat org-directory "gtd/mobile_org")))</pre></div></div></li><li><a id="orgheadline52"></a>设置接收来自MobileOrg内容的“缓存”目标文件路径<br><div class="outline-text-6" id="text-4-7-1-2-3"><p>如下</p><div class="org-src-container"><pre class="src src-emacs-lisp">;;mobile pull(setq org-mobile-inbox-for-pull (concat org-directory "gtd/from_mobile.org"))</pre></div></div></li></ol></div></div><div id="outline-container-orgheadline29" class="outline-4"><h4 id="orgheadline29"><span class="section-number-4">4.7.2</span> 原理</h4><div class="outline-text-4" id="text-4-7-2"></div><div id="outline-container-orgheadline54" class="outline-5"><h5 id="orgheadline54"><span class="section-number-5">4.7.2.1</span> Mobile端的Mobile Org与PC端的Org同步</h5><div class="outline-text-5" id="text-4-7-2-1"><p>当我们在MobileOrg中与PC端的Org同步时，需要知道它不仅仅是从PC端获取（mobile端的pull）相应org文件用于浏览，同时也会追加(mobile端的push)被captured的entries，并且指向被标记和修改的entries，这些内容被汇总在同步目录( <code>org-mobile-directory</code> )中的 <code>mobileorg.org</code> 文件里。</p></div></div><div id="outline-container-orgheadline57" class="outline-5"><h5 id="orgheadline57"><span class="section-number-5">4.7.2.2</span> PC端的Org与Mobile端的MobileOrg同步</h5><div class="outline-text-5" id="text-4-7-2-2"></div><ol class="org-ol"><li><a id="orgheadline55"></a>PC端的Pull<br><div class="outline-text-6" id="text-4-7-2-2-1"><p>获取MobileOrg修改内容(PC端的pull)的时候，会将这些信息从 <code>mobileorg.org</code> 先转移到到 <code>org-mobile-inbox-for-pull</code> 对应的文件中，并对指向的被标记的内容进行进一步操作，进而将能够自动处理内容同步到对应的文件中。Pull的过程大致过程如下:</p><ol class="org-ol"><li>Org将会将 <code>mobileorg.org</code> 中的所有entries移动到 <code>org-mobile-inbox-for-pull</code> 所指向的文件（假设为mobileinbox），每个被捕获的entry和编辑事件都会被做为这个mobileinbox中的顶级entry而存在。（进行操作之后， <code>mobileorg.org</code> 将会被清空）</li><li>当将entries移动到 <code>org-mobile-inbox-for-pull</code> 指向的文件之后，Org将会开始执行在MobileOrg进行的修改。有些修改直接就会被应用了不需要额外的用户交互（例如修改tag、TODO状态、标题、正文文本可以被简单的应用）。而需要额外动作的entries会接收到一个:FLAGGED:的tag，这样它们才会很容易地被找到。当应用修改或者寻找一个entry之时出现了问题，目标entry将会保持在 <code>org-mobile-inbox-for-pull</code> 中，并且被标记一个错误信息，我们需要之后手动解决这些问题，并将对应内容(entry)转移到期望的位置。</li><li>(不熟悉)Org之后会生成一个包含所有flagged的entries的agenda view，用户可以遍历这些entries来做一些必要的动作。如果在对MobileOrg中的entry进行标记的时候一个note已经存储了，那么这个note会在光标处于对应agenda line的时候在回显区域显示出来。<br>关于 ?<br>在哪个特定的agenda中按下 <code>?</code> 将会在另外一个windows中显示整个被标记的笔记(flagging note)，也会将它push到kill ring中。所以，你可以在这个entry中使用 <code>?z C-y C-c C-c</code> 保存哪个标记笔记为普通笔记。连续键入 <code>?</code> 两次将会体同将 :FLAGGED:标签联通记录的标记笔记（flagging note）（在一个属性中被保存）一起被移走。这样，你可以用此来表示这个 flagged entry的处理已经完成。如果你不能够直接处理所有的flagged entries，你可以通过 <code>C-c a</code> 回到这个agenda view。</li></ol></div></li><li><a id="orgheadline56"></a>PC端的Push<br><div class="outline-text-6" id="text-4-7-2-2-2"><p>推送内容到MobileOrg端(PC端的push)的时候，会推送PC上设置的 <code>org-mobile-files</code> 对应的文件，该变量对应的文件路径是相对 <code>org-directory</code> 的路径，默认使用 <code>org-agenda-files</code> ,被退送的目标是 <code>org-mobile-directory</code> 设定的位置。Push的过程大致如下：</p><ol class="org-ol"><li>拷贝 <code>org-mobile-files</code> 中的内容到同步目录 <code>org-mobile-directory</code> 中，文档中提到，如果待推送的文件是一个链接文件，那么链接文件名称需要和源名称一致。</li><li>创建特定的agendas.org文件，这些文件可以是用户自定义的agenda view，由 <code>org-mobile-agendas</code> 来设定。</li><li>最后，orgmode会写一个 <code>index.org</code> 文件，这个文件包含所有到其他文件的链接，Mobile首先在Server中读取这个文件，然后把这个文件中列出的所有agendas文件和org文件下载下来，为了加速下载过程，MobileOrg只读取checksums3被改变的文件。</li></ol></div></li></ol></div><div id="outline-container-orgheadline58" class="outline-5"><h5 id="orgheadline58"><span class="section-number-5">4.7.2.3</span> Org与MobileOrg的同步目录</h5><div class="outline-text-5" id="text-4-7-2-3"><p>我们需要注意，在前面的讲述中所涉及到的同步，其实暗含了两种同步：</p><ol class="org-ol"><li>Mobile端的MobileOrg与PC端的Org之间的同步（通过设定一个同步目录做为中转）这个前面也讲到，主要是Mobile端的Sync（包含Push/Pull）操作，以及PC端的Push/Pull操作。</li><li><p>同步目录在云端与PC/Mobile端的同步前面MobileOrg和Org同步之时，需要经过它们之间的一个共通的“同步目录”。这个目录在Mobile端和PC端的内容和结构需要首先保持一致，才能保证后续MobileOrg和Org之间数据的同步一致。所以，我们在同步PC端的Org与Mobile端的MobileOrg之前，先将PC端和Mobile端的目录通过某种方式进行同步。</p><p>这里同步目录的方式使用用git进行，PC端和Mobile端之间的同步目录用某个git托管服务器进行管理（例如github、bitbucket、或者自己的服务器），任意端的同步目录中数据发生变化后都要推送到托管服务器中，而任意端要读取最新数据都需要从托管服务器中拉取数据，同步目录中的数据更新之后，再进行后续MobileOrg和Org的数据更新。我们也可使用其它方式管理同步目录，比如云存储（百度云、DropBox等）、或者ftp、webdav、ssh等。</p><p>另外，Mobile端的git可以使用pocketgit工具。</p></li></ol></div></div></div><div id="outline-container-orgheadline30" class="outline-4"><h4 id="orgheadline30"><span class="section-number-4">4.7.3</span> 同步操作</h4><div class="outline-text-4" id="text-4-7-3"></div><div id="outline-container-orgheadline59" class="outline-5"><h5 id="orgheadline59"><span class="section-number-5">4.7.3.1</span> PC端的Org推送（Pull）</h5><div class="outline-text-5" id="text-4-7-3-1"><p>命令如下：<br><code>M-x org-mobile-push</code> <br>推送之后，会在同步目录（即 <code>org-mobile-directory</code> 对应的路径）中建立 <code>org-mobile-files</code> 对应文件列表的路径结构，并拷贝相应文件到其中。</p></div></div><div id="outline-container-orgheadline60" class="outline-5"><h5 id="orgheadline60"><span class="section-number-5">4.7.3.2</span> PC端的Org拉取（Push）</h5><div class="outline-text-5" id="text-4-7-3-2"><p>命令如下：<br><code>M-x org-mobile-pull</code> <br>运行之后，其对应的 <code>org-mobile-files</code> 便包含了和MobileOrg同步的内容。</p></div></div><div id="outline-container-orgheadline61" class="outline-5"><h5 id="orgheadline61"><span class="section-number-5">4.7.3.3</span> Mobile端的MobileOrg同步（Sync）</h5><div class="outline-text-5" id="text-4-7-3-3"><p>这里使用Android版本的MobileOrg，大致如下：<br>首先设置好同步目录，然后选择软件界面中的"Sync"按钮，即可完成同步（包含Pull和Push）。</p></div></div></div><div id="outline-container-orgheadline31" class="outline-4"><h4 id="orgheadline31"><span class="section-number-4">4.7.4</span> 使用举例</h4><div class="outline-text-4" id="text-4-7-4"><ol class="org-ol"><li>PC上配置好相关变量和目录</li><li>手机上安装好MobileOrg也设置好同步目录</li><li>将PC和手机上的同步目录用github/bitbucket管理</li><li>PC上同步目录更新： <code>git/pull</code></li><li>PC上记录之前运行： <code>org-mobile-pull</code> 可以看到手机上修改的内容。</li><li>PC上记录，记录之后运行： <code>org-mobile-push</code></li><li>PC上的git同步目录上传修改： <code>git add/commit/push</code></li><li>手机上的git同步目录下载更新： <code>git pull</code></li><li>手机上的MobileOrg同步(点击Sync)</li><li>手机上看到PC修改的内容</li><li>手机上修改并同步（点击Sync）</li><li>手机上更新同步目录： <code>git add/commit/push</code></li><li>回到步骤4。</li></ol></div></div><div id="outline-container-orgheadline32" class="outline-4"><h4 id="orgheadline32"><span class="section-number-4">4.7.5</span> 其它</h4><div class="outline-text-4" id="text-4-7-5"><p>目前发现，该功能列表中的段落，无法识别断行？对复杂的管理不是非常实用，相对而言，mobile org中Capture功能相对实用一些，可以将片段捕捉下来，同步到电脑上(但是同步的过程也比较繁琐)。</p><p>参考相关文档：<a href="http://orgmode.org/manual/MobileOrg.html#MobileOrg" target="_blank" rel="noopener">MobileOrg</a></p></div><div id="outline-container-orgheadline62" class="outline-5"><h5 id="orgheadline62"><span class="section-number-5">4.7.5.1</span> 改进</h5><div class="outline-text-5" id="text-4-7-5-1"><ul class="org-ul"><li>已经将状态文件冠以 <code>_</code> 前缀，便于在Agenda View中集中浏览，例如: <code>_inbox.org</code>, <code>_next.org</code> &#x2026;。</li><li><p>每一步处理中，处理子项的步骤可以按照层次冠以 <code>----</code> 前缀， n层子处理步骤冠以n个 =-&#x2014;=前缀。例如：</p><pre class="example">**NEXT test1***----&lt;2015-12-21 一 16:17&gt; xxx1***----&lt;2015-12-21 一 16:17&gt; xxx2****--------&lt;2015-12-21 一 16:17&gt;xxx2.1****--------&lt;2015-12-21 一 16:17&gt;xxx2.2</pre><p>这样显示便于在Agenda中一目了然哪些是子待办事项，以4个为单位因为4个字符比较容易输入。</p></li><li>回顾的细化：短期回顾简单处理时，会将特定状态关键字的任务从状态文件间迁移，稍复杂的处理会将任务直接迁移至特定文档中（在该文档中做为属于该文档的任务）；中期处理之时，除了对应状态关键字和状态文件，也对状态关键字的任务必要时迁出状态文件进入特定文档中。</li></ul></div></div></div></div></div><div id="outline-container-orgheadline33" class="outline-2"><h2 id="orgheadline33"><span class="section-number-2">5</span> <span class="todo WAIT_FORWARD">WAIT/FORWARD</span> FAQ <code>[8/11]</code>(<code>[72%]</code>)</h2><div class="outline-text-2" id="text-5"><ul class="org-ul"><li>State "WAIT/FORWARD" from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 15:07] </span></span> <br>Wait for all done.</li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 15:07]</span></span></li></ul></div><div id="outline-container-orgheadline34" class="outline-3"><h3 id="orgheadline34"><span class="section-number-3">5.1</span> <span class="done DONE">DONE</span> 如何划分任务状态以及存放的文件？</h3><div class="outline-text-3" id="text-5-1"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-10-08 四 10:23]</span></span></li></ul><p>参见: <a href="#orgheadline1">任务状态</a> 和 <a href="#orgheadline2">划分文件</a></p></div></div><div id="outline-container-orgheadline35" class="outline-3"><h3 id="orgheadline35"><span class="section-number-3">5.2</span> <span class="done DONE">DONE</span> 如何实现任务管理的基本管理？</h3><div class="outline-text-3" id="text-5-2"><ul class="org-ul"><li>State "DONE"       from "WAIT/FORWARD" <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 16:13]</span></span></li><li>State "WAIT/FORWARD" from "LATER"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 16:13] </span></span> <br>wait for more</li><li>State "LATER"      from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 16:13]</span></span></li><li>State "NEXT"       from "INBOX"      <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 16:13]</span></span></li></ul><p>参见:<a href="#orgheadline9">实现Orgmode任务管理的基本管理</a></p></div></div><div id="outline-container-orgheadline36" class="outline-3"><h3 id="orgheadline36"><span class="section-number-3">5.3</span> <span class="done DONE">DONE</span> 如何设置交叉引用?</h3><div class="outline-text-3" id="text-5-3"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-26 四 17:51]</span></span></li></ul><p>参考：<a href="#orgheadline13">交叉引用</a></p></div></div><div id="outline-container-orgheadline37" class="outline-3"><h3 id="orgheadline37"><span class="section-number-3">5.4</span> <span class="done DONE">DONE</span> 如何设置优先级别?</h3><div class="outline-text-3" id="text-5-4"><ul class="org-ul"><li>State "DONE"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-26 四 18:00]</span></span></li></ul><p>参考：<a href="#orgheadline14">设置优先级别</a></p></div></div><div id="outline-container-orgheadline38" class="outline-3"><h3 id="orgheadline38"><span class="section-number-3">5.5</span> <span class="done DONE">DONE</span> 如何迅速捕获临时产生的任务，以及将各个任务标题在状态文件中进行转移？</h3><div class="outline-text-3" id="text-5-5"><ul class="org-ul"><li>State "DONE"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-30 一 10:38]</span></span></li></ul><p>参见：<a href="#orgheadline18">Capture-Refile-Archive</a></p></div></div><div id="outline-container-orgheadline39" class="outline-3"><h3 id="orgheadline39"><span class="section-number-3">5.6</span> <span class="done DONE">DONE</span> 如何设置归档?</h3><div class="outline-text-3" id="text-5-6"><ul class="org-ul"><li>State "DONE"       from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 14:54]</span></span></li></ul><p>参见：<a href="#orgheadline22">归档</a></p></div></div><div id="outline-container-orgheadline40" class="outline-3"><h3 id="orgheadline40"><span class="section-number-3">5.7</span> <span class="done DONE">DONE</span> 便于整理周回顾?</h3><div class="outline-text-3" id="text-5-7"><ul class="org-ul"><li>State "DONE"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 10:35]</span></span></li></ul><p>参见：<a href="#orgheadline26">便于整理周报的记录技巧</a></p></div></div><div id="outline-container-orgheadline41" class="outline-3"><h3 id="orgheadline41"><span class="section-number-3">5.8</span> <span class="done DONE">DONE</span> 如何将PC与移动端的orgmode整合?</h3><div class="outline-text-3" id="text-5-8"><ul class="org-ul"><li>State "DONE"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 11:02]</span></span></li></ul><p>参见：<a href="#orgheadline27">orgmode与mobile org整合</a></p></div></div><div id="outline-container-orgheadline42" class="outline-3"><h3 id="orgheadline42"><span class="section-number-3">5.9</span> <span class="todo LATER">LATER</span> 杂乱问题</h3><div class="outline-text-3" id="text-5-9"><ul class="org-ul"><li>State "LATER"      from "NEXT"       <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 16:13]</span></span></li><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2015-11-27 五 15:29]</span></span></li></ul><p>这里描述一些无法分类是杂乱问题。</p><ul class="org-ul"><li><p>进入 inbox.org的 <code>INBOX</code> 的任务，在回顾的时候，首先切换其状态，然后再refile到对应的状态文件？</p><p>目前是对于到状态文件的任务，是先切换，再refile；对应其它特殊文档内部的TODO任务，refile与切换次序随意。</p></li><li><p>每个状态，工作日志记录到有状态切换的日志中，还是也可能根据自己情况记录工作日志？</p><p>不用都加note，也可每个状态切换都加详细的note。折衷起见，主要处理信息还是列在后面。状态切换的列表中，可以添加每次关键的一些步骤。比如NEXT状态中，又获取到一些新的信息，可以切换状态增加NEXT-&gt;NEXT的时间戳，然后附上一个简短笔记“xxx发生了”。</p></li></ul></div></div><div id="outline-container-orgheadline43" class="outline-3"><h3 id="orgheadline43"><span class="section-number-3">5.10</span> <span class="todo NEXT">NEXT</span> 改善归档与done/cancel策略</h3><div class="outline-text-3" id="text-5-10"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-02-03 三 09:43]</span></span></li></ul><p>之前都是将done和cancel状态的内容放置目录中，按照月份存放相应状态内容，原因是相应状态的内容是属于不断积累增多的，不可能只放在一个文件中。</p><p>考虑到归档的功能，其实将done/cancel内容放置在一个文件也可，只需要定期进行归档即可，积累的内容会不断地移动到归档中，而归档又可根据日期来进行划分。</p><p>而wait/forward中的内容，需要再考虑如何进行，目前暂不设定归档， 设置的方式也仍然采用目录的方式，以便学习时能够知道目录目标的设置方式。</p></div></div><div id="outline-container-orgheadline44" class="outline-3"><h3 id="orgheadline44"><span class="section-number-3">5.11</span> <span class="todo NEXT">NEXT</span> 改善refile的配置方式</h3><div class="outline-text-3" id="text-5-11"><ul class="org-ul"><li>State "NEXT"       from              <span class="timestamp-wrapper"><span class="timestamp">[2016-02-03 三 09:46]</span></span></li></ul><p>将refile目标放置到一个文件中，有时候会出现问题，目前不再使用这个方法。直接将refile的目标配置到配置文件中，这样更为保险。</p><div class="org-src-container"><pre class="src src-elisp">;;set agenda files(setq org-agenda-files (list                         (concat org-directory "gtd/_next.org")                         (concat org-directory "gtd/_later.org")                         (concat org-directory "gtd/_wait_forward.org")                         (concat org-directory "gtd/_maybe_future/")                         (concat org-directory "gtd/_cancel.org")                        (concat org-directory "gtd/_done.org")                         (concat org-directory "gtd/mobile_org/_mobile_inbox.org")                         (concat org-directory "gtd/_active")                         (concat org-directory "gtd/_review")                         (concat org-directory "gtd/output/")                       ))</pre></div></div></div></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;
&amp;#x2014;
layout: posts
title: 使用orgmode进行GTD管理
categories: [categories, note]
comments: true
&amp;#x2014;
#+END_HTML
&lt;/p&gt;
&lt;div id=&quot;table-of-
      
    
    </summary>
    
    
  </entry>
  
</feed>
